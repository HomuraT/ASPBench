{"id":"symtex_dict_fact_query_60_6_8_6_8_0.5_1.0_3_3_4","seed":60,"num_facts":8,"num_rules":9,"num_related_predicates":17,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"P8(\"Patricia\", \"Dean\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P9(\"Patricia\", \"Dean\", \"Kelsey\").","- P10(\"Dean\", \"Kelsey\", \"Dennis\").","- P11(\"Dean\", \"Kelsey\", \"Dennis\").","P12(\"Dean\", \"Kelsey\", \"Dennis\").","P13(\"Patricia\", \"Dean\", \"Kelsey\").","P14(\"Patricia\", \"Dean\", \"Kelsey\").","P15(\"Dennis\").","P16(\"Brandon\", \"Patricia\", \"Kelsey\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- P9(\"Patricia\", \"Dean\", \"Kelsey\").","- P10(\"Dean\", \"Kelsey\", \"Dennis\").","- P11(\"Dean\", \"Kelsey\", \"Dennis\")."],"noiseless_rules":["P8(V1, V2) :- P0(V0, V2), P1(V3, V4), - P9(V1, V2, V3).","P0(V0, V2) :- - P4(V3, V4), P5(V0, V1, V2), not -P16(V0, V1, V3).","P1(V3, V4) :- - P3(V0, V2), P6(V0, V2, V4), - P11(V2, V3, V4).","P2(V4) :- - P3(V0, V2), P6(V0, V2, V4), - P11(V2, V3, V4).","- P3(V2, V2) :- - P9(V1, V2, V3), not -P13(V1, V2, V3), not -P14(V1, V2, V3).","- P4(V4, V4) :- P2(V4), not -P7(V4), not -P15(V4).","P5(V2, V4, V2) :- - P10(V2, V3, V4), not P11(V2, V3, V4), not -P12(V2, V3, V4).","P6(V2, V2, V4) :- - P10(V2, V3, V4), not P11(V2, V3, V4), not -P12(V2, V3, V4).","P7(V4) :- - P10(V2, V3, V4), not P11(V2, V3, V4), not -P12(V2, V3, V4)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_8_10_12_9_10_0.5_1.0_3_3_4","seed":8,"num_facts":13,"num_rules":13,"num_related_predicates":26,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2222222222222223,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" finial(\"Kevin\", \"Samuel\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- eardrum(\"Kevin\", \"Eric\").","jorum(\"Kevin\").","surfing_internet(\"Kevin\", \"Eric\", \"Heather\").","- mechanical_device(\"Eric\", \"Elaine\", \"Samuel\").","- pad(\"Kevin\", \"Eric\").","- starfish(\"Samuel\", \"Heather\").","thorax(\"Samuel\", \"Heather\").","- wheeled_vehicle(\"Kevin\", \"Elaine\").","- mousse(\"Kevin\", \"Elaine\").","- plywood(\"Kevin\", \"Eric\", \"Heather\").","- dame(\"Elaine\", \"Samuel\", \"Heather\").","nuts(\"Kevin\", \"Samuel\", \"Heather\").","- little_office(\"Eric\", \"Elaine\", \"Samuel\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- eardrum(\"Kevin\", \"Eric\").","surfing_internet(\"Kevin\", \"Eric\", \"Heather\").","- mechanical_device(\"Eric\", \"Elaine\", \"Samuel\").","- little_office(\"Eric\", \"Elaine\", \"Samuel\")."],"noiseless_rules":["- finial(V0, V3) :- - ornament(V0, V1), scandalization(V3, V4), not portugal(V0, V1, V3).","- ornament(V0, V1) :- - eardrum(V0, V1).","chat(V0, V3, V4) :- jorum(V0), - plywood(V0, V1, V4), - dame(V2, V3, V4).","- confetti(V3, V4) :- jorum(V0), - plywood(V0, V1, V4), - dame(V2, V3, V4).","scandalization(V3, V4) :- ao_dai(V3), comforter(V1, V2, V4), not -sheep(V2, V3, V4).","ao_dai(V3) :- surfing_internet(V0, V1, V4), - little_office(V1, V2, V3).","- fool_enemy(V1, V2) :- surfing_internet(V0, V1, V4), - little_office(V1, V2, V3).","- portugal(V0, V0, V3) :- chat(V0, V3, V4), not meeting_people(V0, V3, V4), not -nuts(V0, V3, V4).","asking_for_more_food(V3, V3) :- - confetti(V3, V4), not starfish(V3, V4), not -thorax(V3, V4).","comforter(V1, V2, V2) :- - mechanical_device(V1, V2, V3), not little_office(V1, V2, V3).","oyster(V2, V2) :- - mechanical_device(V1, V2, V3), not little_office(V1, V2, V3).","- meeting_people(V0, V2, V1) :- - fool_enemy(V1, V2), asking_for_more_food(V0, V1), not pad(V0, V1).","sheep(V2, V0, V0) :- oyster(V0, V2), not wheeled_vehicle(V0, V2), not mousse(V0, V2)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_66_5_6_6_9_0.5_1.0_5_2_3","seed":66,"num_facts":8,"num_rules":7,"num_related_predicates":15,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" P6(\"Stephen\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P7(\"Rebecca\").","- P8(\"John\", \"Stephen\").","- P9(\"John\", \"Wanda\").","- P10(\"John\").","P11(\"John\").","- P12(\"John\", \"Wanda\").","- P13(\"Stephen\", \"Wanda\").","P14(\"Wanda\", \"Rebecca\")."],"noisy_facts":["- P22(\"John\", \"Rebecca\").","P25(\"John\", \"Stephen\").","- P20(\"John\", \"Stephen\").","P26(\"John\", \"Rebecca\").","P16(\"John\").","- P17(\"John\").","- P18(\"John\", \"Stephen\").","P23(\"Wanda\", \"Rebecca\").","- P21(\"John\", \"Wanda\")."],"min_fact_dicts_for_query":["P7(\"Rebecca\").","- P9(\"John\", \"Wanda\").","- P12(\"John\", \"Wanda\").","- P13(\"Stephen\", \"Wanda\")."],"noiseless_rules":["- P6(V1) :- P0(V3), P1(V1, V2), not -P5(V1, V3).","P0(V3) :- P7(V3), - P9(V0, V2), - P12(V0, V2), - P13(V1, V2), not -P14(V2, V3).","P1(V1, V2) :- P7(V3), - P9(V0, V2), - P12(V0, V2), - P13(V1, V2), not -P14(V2, V3).","P2(V0, V3) :- P7(V3), - P9(V0, V2), - P12(V0, V2), - P13(V1, V2), not -P14(V2, V3).","- P3(V0) :- - P8(V0, V1).","- P4(V0, V1) :- P1(V1, V2), - P3(V0), not P9(V0, V2), not P10(V0), not -P11(V0).","P5(V1, V3) :- P2(V0, V3), - P4(V0, V1), P14(V2, V3)."],"noisy_rules":{"a":["P6(V0) :- - P0(V3), P3(V0).","P6(V1) :- - P1(V1, V2), P3(V0), P4(V0, V1), - P5(V1, V3)."],"b":["- P5(V1, V1) :- P6(V1).","P3(V1) :- - P1(V1, V2), not -P6(V1)."],"c":["P12(V0, V1) :- - P2(V0, V3), - P5(V1, V3).","P13(V1, V3) :- P3(V0), - P5(V1, V3)."],"d":["- P15(V1) :- not -P3(V0), P4(V0, V1), - P5(V1, V3), P16(V0), not P17(V0).","P13(V1, V0) :- P4(V0, V1), not P18(V0, V1)."],"e":["P19(V3) :- - P20(V0, V1), - P21(V0, V2), - P22(V0, V3), not -P23(V2, V3).","P24(V0, V1) :- P25(V0, V1), P26(V0, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_13_8_10_8_9_0.5_1.0_5_3_4","seed":13,"num_facts":13,"num_rules":11,"num_related_predicates":24,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" opening(\"Christian\", \"Lisa\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- helping(\"Maria\", \"James\", \"Lisa\").","office(\"Christian\", \"James\", \"Lisa\").","plankton(\"Christian\", \"James\").","small_ocean(\"Christian\", \"James\", \"Lisa\").","- candy(\"Christian\", \"Maria\", \"Lisa\").","- causal_agent(\"Christian\", \"Lisa\").","surfing(\"Maria\", \"James\").","- baked(\"Christian\", \"Melvin\", \"James\").","negative(\"Christian\", \"Maria\", \"Lisa\").","monopoly(\"Christian\", \"Maria\", \"Lisa\").","- ice(\"Christian\", \"James\", \"Lisa\").","bioscope(\"Maria\", \"Melvin\", \"Lisa\").","- dad(\"Maria\", \"James\", \"Lisa\")."],"noisy_facts":["bottom(\"Maria\", \"Melvin\", \"Lisa\").","mutism(\"Christian\").","- americana(\"Maria\", \"Melvin\", \"James\").","gilt(\"Christian\").","columbia(\"Maria\", \"James\", \"Lisa\").","- eastern_church(\"Christian\")."],"min_fact_dicts_for_query":["- helping(\"Maria\", \"James\", \"Lisa\").","office(\"Christian\", \"James\", \"Lisa\").","plankton(\"Christian\", \"James\").","- candy(\"Christian\", \"Maria\", \"Lisa\").","- causal_agent(\"Christian\", \"Lisa\").","surfing(\"Maria\", \"James\").","negative(\"Christian\", \"Maria\", \"Lisa\").","monopoly(\"Christian\", \"Maria\", \"Lisa\").","- ice(\"Christian\", \"James\", \"Lisa\").","bioscope(\"Maria\", \"Melvin\", \"Lisa\").","- dad(\"Maria\", \"James\", \"Lisa\")."],"noiseless_rules":["- opening(V0, V4) :- bell(V0), - counter_check(V1), shell(V4), not -placing_chess_pieces_on(V0, V1), not -determination(V1, V4).","bell(V0) :- - natural_gas(V2), - tragopan(V0, V4), - causal_agent(V0, V4), surfing(V1, V3), not baked(V0, V2, V3).","- counter_check(V1) :- - helping(V1, V3, V4).","- confidante(V3, V4) :- - helping(V1, V3, V4).","legs(V0, V4) :- office(V0, V3, V4), - dad(V1, V3, V4).","shell(V4) :- plankton(V0, V3), negative(V0, V1, V4), monopoly(V0, V1, V4), - ice(V0, V3, V4), bioscope(V1, V2, V4).","placing_chess_pieces_on(V0, V3) :- office(V0, V3, V4), not -small_ocean(V0, V3, V4).","j_walkers(V3) :- office(V0, V3, V4), not -small_ocean(V0, V3, V4).","determination(V4, V4) :- - confidante(V3, V4), legs(V0, V4), not -j_walkers(V3).","- natural_gas(V0) :- - confidante(V3, V4), legs(V0, V4), not -j_walkers(V3).","- tragopan(V0, V4) :- - candy(V0, V1, V4)."],"noisy_rules":{"a":["opening(V0, V4) :- confidante(V3, V4), - legs(V0, V4), - placing_chess_pieces_on(V0, V1).","opening(V2, V2) :- natural_gas(V2)."],"b":["dad(V4, V3, V4) :- - bell(V0), confidante(V3, V4), not shell(V4), opening(V0, V4).","- negative(V0, V1, V4) :- counter_check(V1), - legs(V0, V4), not shell(V4), - j_walkers(V3), opening(V0, V4)."],"c":["causal_agent(V0, V2) :- - placing_chess_pieces_on(V0, V1), natural_gas(V2).","causal_agent(V1, V1) :- counter_check(V1), natural_gas(V2)."],"d":["tragopan(V0, V0) :- - bell(V0), natural_gas(V2), not -mutism(V0), not -gilt(V0).","dad(V4, V3, V4) :- - bell(V0), - legs(V0, V4), - j_walkers(V3), not -tragopan(V0, V4), - eastern_church(V0)."],"e":["- size(V1, V2, V3) :- bottom(V1, V2, V4), columbia(V1, V3, V4).","- louder_than_most_cars(V1, V2, V3) :- - americana(V1, V2, V3)."]}},"num_min_facts_for_query":11,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_56_8_10_4_4_0.5_1.0_5_3_4","seed":56,"num_facts":8,"num_rules":11,"num_related_predicates":19,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.5714285714285714,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" piece_de_resistance(\"Joy\", \"Lisa\", \"Erin\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- nourishment(\"Joy\").","wreath(\"Joy\", \"Sally\", \"Erin\").","team_teaching(\"Joy\", \"Lisa\", \"Sally\").","nymphalid(\"Joy\", \"Lisa\", \"Terri\").","- sea_eagle(\"Joy\", \"Lisa\", \"Terri\").","harp(\"Joy\", \"Sally\", \"Erin\").","- stooper(\"Joy\", \"Sally\", \"Erin\").","- grower(\"Lisa\", \"Terri\", \"Erin\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- nourishment(\"Joy\").","team_teaching(\"Joy\", \"Lisa\", \"Sally\").","- sea_eagle(\"Joy\", \"Lisa\", \"Terri\").","harp(\"Joy\", \"Sally\", \"Erin\")."],"noiseless_rules":["- piece_de_resistance(V0, V1, V4) :- plantation(V0), rock_group(V4), cemetery(V0, V1), not testing(V0, V4).","- diving(V0, V1, V2) :- - nourishment(V0), - sea_eagle(V0, V1, V2), harp(V0, V3, V4), not stooper(V0, V3, V4), not grower(V1, V2, V4).","appendage(V0, V3, V4) :- - nourishment(V0), - sea_eagle(V0, V1, V2), harp(V0, V3, V4), not stooper(V0, V3, V4), not grower(V1, V2, V4).","- charcoal(V0, V1, V3) :- - nourishment(V0), - sea_eagle(V0, V1, V2), harp(V0, V3, V4), not stooper(V0, V3, V4), not grower(V1, V2, V4).","plantation(V0) :- - diving(V0, V1, V2), not -thickness(V0, V1, V2).","rock_group(V4) :- appendage(V0, V3, V4), not ireland(V0, V3, V4).","- ireland(V0, V3, V4) :- wreath(V0, V3, V4).","cemetery(V0, V1) :- team_teaching(V0, V1, V3).","pommel_horse(V0, V1, V3) :- team_teaching(V0, V1, V3).","- testing(V0, V3) :- - charcoal(V0, V1, V3), not -pommel_horse(V0, V1, V3).","thickness(V0, V1, V2) :- nymphalid(V0, V1, V2)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_55_10_15_10_11_0.5_1.0_5_3_4","seed":55,"num_facts":12,"num_rules":16,"num_related_predicates":28,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"P15(\"Dakota\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P16(\"Jason\", \"Amanda\", \"Thomas\").","- P17(\"Thomas\").","P18(\"Jason\", \"Thomas\").","P19(\"Jason\", \"Thomas\").","P20(\"Jason\", \"Thomas\").","- P21(\"Jason\", \"Dakota\").","- P22(\"Jason\", \"Amanda\", \"Thomas\").","P23(\"Jason\", \"Dakota\", \"Derek\").","- P24(\"Amanda\", \"Dakota\").","P25(\"Jason\", \"Thomas\", \"Derek\").","- P26(\"Jason\", \"Thomas\", \"Derek\").","P27(\"Amanda\", \"Dakota\", \"Derek\")."],"noisy_facts":["- P31(\"Dakota\").","- P28(\"Jason\", \"Thomas\", \"Derek\").","- P33(\"Amanda\", \"Dakota\", \"Derek\").","- P30(\"Dakota\").","P32(\"Jason\", \"Dakota\").","- P35(\"Amanda\", \"Thomas\", \"Derek\")."],"min_fact_dicts_for_query":["P16(\"Jason\", \"Amanda\", \"Thomas\").","- P17(\"Thomas\").","- P21(\"Jason\", \"Dakota\").","- P22(\"Jason\", \"Amanda\", \"Thomas\").","- P24(\"Amanda\", \"Dakota\").","P25(\"Jason\", \"Thomas\", \"Derek\")."],"noiseless_rules":["P15(V2) :- P12(V4), - P13(V0, V2), - P21(V0, V2), - P22(V0, V1, V3), not -P23(V0, V2, V4).","P0(V0, V1, V3) :- P16(V0, V1, V3).","P1(V0, V3, V4) :- - P17(V3), - P24(V1, V2), P25(V0, V3, V4), not P26(V0, V3, V4), not -P27(V1, V2, V4).","P2(V3, V4) :- - P17(V3), - P24(V1, V2), P25(V0, V3, V4), not P26(V0, V3, V4), not -P27(V1, V2, V4).","- P3(V1, V2) :- - P17(V3), - P24(V1, V2), P25(V0, V3, V4), not P26(V0, V3, V4), not -P27(V1, V2, V4).","- P4(V1, V2) :- - P17(V3), - P24(V1, V2), P25(V0, V3, V4), not P26(V0, V3, V4), not -P27(V1, V2, V4).","- P5(V0, V2, V3) :- - P17(V3), - P24(V1, V2), P25(V0, V3, V4), not P26(V0, V3, V4), not -P27(V1, V2, V4).","P6(V0, V3) :- P1(V0, V3, V4).","P7(V4, V3) :- P1(V0, V3, V4).","P8(V0, V3, V4) :- P1(V0, V3, V4).","P9(V4, V3, V4) :- P2(V3, V4), P6(V0, V3), not -P18(V0, V3), not -P19(V0, V3), not -P20(V0, V3).","P10(V0, V2, V3) :- P11(V0, V1, V2), P14(V0, V3, V4).","P11(V1, V1, V2) :- - P3(V1, V2).","P12(V3) :- P0(V0, V1, V3), - P4(V1, V2), not -P7(V2, V3).","- P13(V0, V2) :- - P3(V1, V2), P8(V0, V3, V4), not -P9(V1, V2, V4), not -P10(V0, V2, V3).","P14(V0, V3, V2) :- - P5(V0, V2, V3)."],"noisy_rules":{"a":["- P15(V2) :- P3(V1, V2).","- P15(V2) :- - P11(V0, V1, V2)."],"b":["- P11(V2, V2, V2) :- - P15(V2).","P17(V3) :- not -P5(V0, V2, V3), - P6(V0, V3), - P11(V0, V1, V2), not P15(V2)."],"c":["- P23(V0, V2, V4) :- - P0(V0, V1, V3), not -P3(V1, V2), not P7(V2, V3), - P9(V1, V2, V4), - P14(V0, V3, V4).","P13(V4, V2) :- - P2(V3, V4), P4(V1, V2)."],"d":["P5(V0, V2, V3) :- P4(V1, V2), - P8(V0, V3, V4), not P12(V4), not P28(V0, V3, V4).","P4(V4, V3) :- - P14(V0, V3, V4)."],"e":["- P29(V0, V2) :- - P30(V2), - P31(V2), P32(V0, V2), - P33(V1, V2, V4).","- P34(V1, V3, V4) :- - P35(V1, V3, V4)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_24_6_6_3_6_0.5_1.0_3_2_3","seed":24,"num_facts":5,"num_rules":7,"num_related_predicates":12,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"warmth(\"Carolyn\", \"Christopher\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- flea(\"Carolyn\", \"Jennifer\").","- fire(\"Kelly\", \"Christopher\").","- nose(\"Christopher\").","transposition(\"Christopher\").","doll(\"Carolyn\", \"Christopher\")."],"noisy_facts":["form_of_entertainment(\"Carolyn\", \"Christopher\").","- thank_god(\"Carolyn\", \"Kelly\").","- cod_liver_oil(\"Kelly\", \"Christopher\").","- crown(\"Carolyn\", \"Christopher\").","auto_racing(\"Kelly\").","china(\"Carolyn\", \"Christopher\")."],"min_fact_dicts_for_query":["- flea(\"Carolyn\", \"Jennifer\").","- fire(\"Kelly\", \"Christopher\").","doll(\"Carolyn\", \"Christopher\")."],"noiseless_rules":["warmth(V0, V3) :- hair(V0, V3), heat(V2, V3), not down(V2, V3).","- combing(V0, V3) :- hair(V0, V3), not -facial_feature(V0, V3).","hair(V0, V3) :- - flea(V0, V1), doll(V0, V3).","eye(V3) :- - flea(V0, V1), doll(V0, V3).","heat(V2, V3) :- - fire(V2, V3).","facial_feature(V3, V3) :- eye(V3), not nose(V3), not -transposition(V3).","- down(V2, V3) :- - combing(V2, V3), facial_feature(V0, V3), not -doll(V0, V3)."],"noisy_rules":{"a":["- warmth(V0, V3) :- - hair(V0, V3), - heat(V2, V3), - facial_feature(V0, V3).","- warmth(V0, V3) :- combing(V2, V3), - hair(V0, V3), not -down(V2, V3)."],"b":["- doll(V0, V3) :- combing(V2, V3), down(V2, V3), - warmth(V0, V3).","- hair(V0, V3) :- down(V2, V3), - warmth(V0, V3)."],"c":["- hair(V3, V3) :- - heat(V2, V3), down(V2, V3).","- hair(V2, V3) :- combing(V2, V3), - heat(V2, V3)."],"d":["- fall_out(V0, V3) :- - hair(V0, V3), form_of_entertainment(V0, V3).","head(V3, V3) :- not hair(V0, V3), not eye(V3), - crown(V0, V3)."],"e":["- country(V3) :- china(V0, V3).","trim(V3) :- not -auto_racing(V2), - thank_god(V0, V2), - cod_liver_oil(V2, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_37_10_15_14_14_0.5_1.0_5_2_3","seed":37,"num_facts":17,"num_rules":16,"num_related_predicates":33,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.4444444444444446,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"P15(\"Kathleen\", \"Kathryn\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P16(\"Linda\", \"Kathryn\").","- P17(\"Linda\", \"Kathleen\").","- P18(\"Linda\", \"Kathryn\").","P19(\"Linda\", \"Kathleen\").","- P20(\"Linda\", \"Kathleen\").","- P21(\"Linda\", \"Kathleen\").","- P22(\"Linda\", \"Kathleen\").","- P23(\"Kathryn\").","- P24(\"Kathryn\").","- P25(\"Kathryn\").","P26(\"Kathryn\").","P27(\"Linda\", \"Kathryn\").","- P28(\"Cody\", \"Kathleen\").","- P29(\"Cody\", \"Kathryn\").","- P30(\"Cody\", \"Kathryn\").","P31(\"Kathleen\", \"Kathryn\").","P32(\"Kathleen\", \"Kathryn\")."],"noisy_facts":["P37(\"Kathryn\").","P35(\"Linda\").","- P33(\"Linda\").","P39(\"Cody\", \"Kathryn\").","P34(\"Linda\", \"Cody\").","P36(\"Cody\").","- P42(\"Linda\", \"Kathleen\").","P38(\"Linda\", \"Cody\")."],"min_fact_dicts_for_query":["P16(\"Linda\", \"Kathryn\").","- P17(\"Linda\", \"Kathleen\").","P27(\"Linda\", \"Kathryn\").","- P28(\"Cody\", \"Kathleen\")."],"noiseless_rules":["P15(V2, V3) :- - P0(V0), - P2(V3), - P4(V0, V2), not P7(V0, V3), not -P10(V2, V3).","- P0(V0) :- - P3(V0, V3), P27(V0, V3), - P28(V1, V2), not P29(V1, V3), not P30(V1, V3).","- P1(V2, V3) :- - P3(V0, V3), P27(V0, V3), - P28(V1, V2), not P29(V1, V3), not P30(V1, V3).","- P2(V3) :- P16(V0, V3).","- P3(V0, V3) :- P16(V0, V3).","- P4(V0, V2) :- - P17(V0, V2).","- P5(V0, V2) :- - P17(V0, V2).","P6(V2, V2) :- - P5(V0, V2), not -P19(V0, V2), not P20(V0, V2), not P21(V0, V2), not P22(V0, V2).","- P7(V0, V3) :- - P9(V0, V1), - P12(V1, V3).","- P8(V3) :- - P18(V0, V3).","- P9(V2, V3) :- - P1(V2, V3), not -P11(V2, V3), not P13(V2, V3), not -P31(V2, V3), not -P32(V2, V3).","P10(V1, V3) :- P6(V1, V3), not -P14(V1, V3).","P11(V3, V3) :- P6(V1, V3), not -P14(V1, V3).","- P12(V3, V3) :- - P8(V3), not P23(V3), not P24(V3), not P25(V3), not -P26(V3).","- P13(V3, V3) :- - P8(V3), not P23(V3), not P24(V3), not P25(V3), not -P26(V3).","P14(V3, V3) :- - P8(V3), not P23(V3), not P24(V3), not P25(V3), not -P26(V3)."],"noisy_rules":{"a":["- P15(V2, V3) :- P0(V0), P4(V0, V2), - P6(V1, V3), not -P7(V0, V3), not -P9(V0, V1).","- P15(V2, V3) :- P3(V0, V3), - P6(V1, V3), P7(V0, V3), P13(V2, V3)."],"b":["- P11(V2, V3) :- P0(V0), not -P1(V2, V3), - P10(V2, V3), P12(V1, V3), - P15(V2, V3).","- P10(V2, V3) :- P8(V3), P12(V1, V3), P13(V2, V3), not P15(V2, V3)."],"c":["P18(V0, V3) :- P2(V3), P5(V0, V2), not -P8(V3), P9(V0, V1), - P14(V1, V3).","P23(V3) :- P0(V0), - P6(V1, V3), not -P7(V0, V3), not P10(V2, V3), - P11(V2, V3)."],"d":["P20(V0, V2) :- P0(V0), P1(V2, V3), P7(V0, V3), - P33(V0).","P13(V0, V3) :- - P6(V1, V3), not -P8(V3), P9(V0, V1), not P14(V1, V3), not -P34(V0, V1)."],"e":["P40(V1, V3) :- not -P35(V0), P36(V1), P37(V3), P38(V0, V1), not -P39(V1, V3).","- P41(V0, V2) :- - P42(V0, V2)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_38_8_9_3_6_0.5_1.0_5_2_3","seed":38,"num_facts":7,"num_rules":10,"num_related_predicates":17,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"look(\"Kevin\", \"Madeline\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["confederate_army(\"Christopher\", \"Johnny\").","- counter(\"Kevin\", \"Christopher\").","own(\"Kevin\", \"Madeline\").","- tint(\"Kevin\", \"Madeline\").","- botanical_garden(\"Kevin\", \"Madeline\").","- future_date(\"Johnny\", \"Madeline\").","- court(\"Johnny\", \"Madeline\")."],"noisy_facts":["confetti(\"Kevin\", \"Johnny\").","nostrils(\"Christopher\", \"Johnny\").","- wig(\"Christopher\").","ophiurida(\"Kevin\", \"Christopher\").","- catholic_church(\"Christopher\").","- large_stream(\"Christopher\", \"Madeline\").","- eating_apple(\"Johnny\", \"Madeline\").","- tumult(\"Christopher\", \"Madeline\")."],"min_fact_dicts_for_query":["confederate_army(\"Christopher\", \"Johnny\").","own(\"Kevin\", \"Madeline\").","- botanical_garden(\"Kevin\", \"Madeline\")."],"noiseless_rules":["look(V0, V3) :- horn(V2), repayment(V3), - botanical_garden(V0, V3), not future_date(V2, V3), not court(V2, V3).","- norse_deity(V1) :- confederate_army(V1, V2).","- getting_publicity(V1) :- confederate_army(V1, V2).","thermography(V1, V1) :- - norse_deity(V1), not getting_publicity(V1), not -footprint(V1), not -throbbing(V1).","horn(V2) :- - getting_publicity(V1), thermography(V1, V2), not -grow_vegetables(V1).","footprint(V1) :- - counter(V0, V1).","repayment(V3) :- inhalation(V1, V3).","throbbing(V3) :- own(V0, V3), not botanical_garden(V0, V3).","grow_vegetables(V3) :- own(V0, V3), not tint(V0, V3).","inhalation(V3, V3) :- own(V0, V3), not tint(V0, V3)."],"noisy_rules":{"a":["- look(V3, V3) :- - thermography(V1, V2), - repayment(V3), - throbbing(V1).","- look(V2, V2) :- norse_deity(V1), not -getting_publicity(V1), - horn(V2), not footprint(V1), - grow_vegetables(V1)."],"b":["botanical_garden(V0, V3) :- - look(V0, V3).","- repayment(V3) :- - horn(V2), - throbbing(V1), - look(V0, V3)."],"c":["- footprint(V1) :- norse_deity(V1), - inhalation(V1, V3).","- horn(V3) :- - footprint(V1), - repayment(V3), - grow_vegetables(V1), not inhalation(V1, V3)."],"d":["- inhalation(V1, V3) :- - tumult(V1, V3).","botanical_garden(V3, V3) :- getting_publicity(V1), - thermography(V1, V2), - inhalation(V1, V3), not catholic_church(V1)."],"e":["- issue(V1) :- - wig(V1).","- fearful(V0, V2) :- ophiurida(V0, V1), not -confetti(V0, V2), nostrils(V1, V2), not large_stream(V1, V3), - eating_apple(V2, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_24_6_8_3_6_0.5_1.0_3_3_4","seed":24,"num_facts":5,"num_rules":9,"num_related_predicates":14,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.4,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" P8(\"Carolyn\", \"Joseph\", \"Samantha\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P9(\"Joseph\", \"Samantha\").","P10(\"Samuel\", \"Carolyn\", \"William\").","P11(\"Samuel\", \"Joseph\", \"Samantha\").","- P12(\"Samuel\", \"Joseph\", \"Samantha\").","- P13(\"Samuel\", \"Carolyn\", \"Joseph\")."],"noisy_facts":["P21(\"Carolyn\", \"Joseph\").","- P20(\"Samuel\", \"Joseph\").","P18(\"Joseph\", \"William\", \"Samantha\").","- P15(\"Carolyn\", \"Samantha\").","- P14(\"Carolyn\", \"Samantha\").","P17(\"Samuel\", \"Joseph\")."],"min_fact_dicts_for_query":["- P9(\"Joseph\", \"Samantha\").","P10(\"Samuel\", \"Carolyn\", \"William\").","P11(\"Samuel\", \"Joseph\", \"Samantha\").","- P13(\"Samuel\", \"Carolyn\", \"Joseph\")."],"noiseless_rules":["- P8(V1, V2, V4) :- P1(V1, V4), - P4(V1, V2, V4), not -P7(V1, V2, V4).","P0(V4, V1, V4) :- P1(V1, V4), not P2(V1, V4), not P6(V1, V4).","P1(V1, V4) :- - P9(V2, V4), - P13(V0, V1, V2).","- P2(V1, V4) :- - P9(V2, V4), - P13(V0, V1, V2).","- P3(V0, V2) :- - P9(V2, V4), - P13(V0, V1, V2).","- P4(V1, V2, V4) :- P10(V0, V1, V3), P11(V0, V2, V4), not P12(V0, V2, V4).","- P5(V0, V2) :- P10(V0, V1, V3), P11(V0, V2, V4), not P12(V0, V2, V4).","- P6(V1, V4) :- P1(V1, V4), - P3(V0, V2), not P13(V0, V1, V2).","P7(V0, V2, V3) :- P0(V0, V2, V3), not P5(V0, V2)."],"noisy_rules":{"a":["P8(V1, V4, V4) :- P2(V1, V4).","P8(V1, V2, V4) :- - P0(V0, V2, V3), - P7(V1, V2, V4)."],"b":["P3(V0, V2) :- - P1(V1, V4), P5(V0, V2), not -P8(V1, V2, V4).","- P1(V1, V4) :- P8(V1, V2, V4)."],"c":["P4(V1, V1, V4) :- P2(V1, V4).","- P10(V0, V1, V3) :- - P0(V0, V2, V3), P2(V1, V4), not -P3(V0, V2)."],"d":["- P7(V1, V4, V4) :- - P1(V1, V4), not -P6(V1, V4), - P14(V1, V4).","P5(V4, V1) :- - P1(V1, V4), - P15(V1, V4)."],"e":["P16(V0, V2, V3) :- P17(V0, V2), P18(V2, V3, V4).","P19(V0, V2) :- - P20(V0, V2), P21(V1, V2)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_18_10_12_11_14_0.5_1.0_5_3_4","seed":18,"num_facts":14,"num_rules":13,"num_related_predicates":27,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"quilt(\"Ryan\", \"Monica\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["autotelism(\"Robert\").","reflex(\"Ryan\", \"Alexandra\").","childs_play(\"Ryan\", \"Alexandra\", \"Robert\").","pug(\"Ryan\", \"Monica\").","frozen_water(\"Monica\", \"Christopher\").","earthquake(\"Alexandra\", \"Robert\").","going_on_vacation(\"Monica\", \"Alexandra\", \"Robert\").","copper(\"Monica\", \"Alexandra\").","furry_rodent(\"Monica\", \"Christopher\").","branch_out(\"Alexandra\", \"Christopher\").","ununtrium(\"Monica\", \"Christopher\").","book_activity(\"Monica\", \"Christopher\").","pen_with_fat_tip(\"Monica\", \"Christopher\").","selectivity(\"Monica\", \"Christopher\")."],"noisy_facts":[],"min_fact_dicts_for_query":["autotelism(\"Robert\").","reflex(\"Ryan\", \"Alexandra\").","childs_play(\"Ryan\", \"Alexandra\", \"Robert\").","pug(\"Ryan\", \"Monica\").","frozen_water(\"Monica\", \"Christopher\").","earthquake(\"Alexandra\", \"Robert\").","going_on_vacation(\"Monica\", \"Alexandra\", \"Robert\").","copper(\"Monica\", \"Alexandra\").","furry_rodent(\"Monica\", \"Christopher\").","branch_out(\"Alexandra\", \"Christopher\").","ununtrium(\"Monica\", \"Christopher\").","book_activity(\"Monica\", \"Christopher\").","pen_with_fat_tip(\"Monica\", \"Christopher\").","selectivity(\"Monica\", \"Christopher\")."],"noiseless_rules":["quilt(V0, V1) :- cigarillo(V0, V1), canister(V1, V2).","morning(V1, V2, V3) :- key(V0, V3), account(V1, V2), copper(V1, V2), furry_rodent(V1, V3), branch_out(V2, V3).","entoproct(V1, V3) :- autotelism(V4), pug(V0, V1), frozen_water(V1, V3), earthquake(V2, V4), going_on_vacation(V1, V2, V4).","hunt_zebras(V0, V3) :- autotelism(V4), pug(V0, V1), frozen_water(V1, V3), earthquake(V2, V4), going_on_vacation(V1, V2, V4).","suspects(V0, V2) :- autotelism(V4), pug(V0, V1), frozen_water(V1, V3), earthquake(V2, V4), going_on_vacation(V1, V2, V4).","key(V0, V0) :- suspects(V0, V2), reflex(V0, V2).","habitat(V1, V1, V3) :- entoproct(V1, V3), ununtrium(V1, V3), book_activity(V1, V3), pen_with_fat_tip(V1, V3), selectivity(V1, V3).","cigarillo(V0, V1) :- morning(V1, V2, V3), habitat(V0, V2, V4), american_civil_war(V0, V2, V4), canadian_bacon(V0, V2, V4).","account(V3, V2) :- hunt_zebras(V0, V3), canadian_bacon(V0, V2, V4).","canister(V1, V2) :- expensive_things(V1, V2, V3).","american_civil_war(V0, V2, V4) :- canadian_bacon(V0, V2, V4), childs_play(V0, V2, V4).","canadian_bacon(V0, V2, V0) :- suspects(V0, V2).","expensive_things(V0, V2, V2) :- suspects(V0, V2)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_22_6_9_2_5_0.5_1.0_5_3_4","seed":22,"num_facts":5,"num_rules":10,"num_related_predicates":15,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.4,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" beverage_service(\"Richard\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["ectrodactyly(\"James\", \"Eileen\", \"Richard\").","- tea(\"Holly\", \"Eileen\", \"Richard\").","- wheelchair(\"Holly\", \"Eileen\").","- value(\"James\", \"Eileen\", \"Richard\").","- eurasia(\"James\", \"Eileen\", \"Richard\")."],"noisy_facts":["giraffe(\"James\", \"Eileen\", \"Ashley\").","- sarcenet(\"Eileen\", \"Richard\").","carp(\"James\", \"Ashley\").","eating_dinner(\"Holly\").","two_hitter(\"Holly\")."],"min_fact_dicts_for_query":["ectrodactyly(\"James\", \"Eileen\", \"Richard\").","- tea(\"Holly\", \"Eileen\", \"Richard\")."],"noiseless_rules":["- beverage_service(V4) :- improvement(V1), - most_humans(V0, V4), - think(V2, V3), not become_agressive(V0, V1, V2), not eurasia(V0, V2, V4).","- small_bug(V2, V2, V4) :- ectrodactyly(V0, V2, V4), not value(V0, V2, V4), not eurasia(V0, V2, V4).","improvement(V1) :- - tea(V1, V2, V4).","restaurant_chain(V1, V2, V4) :- - tea(V1, V2, V4).","- casquet(V1, V2) :- - tea(V1, V2, V4).","- most_humans(V0, V4) :- restaurant_chain(V1, V2, V4), - become_agressive(V0, V1, V2), not orientation_course(V0, V1, V2).","- think(V2, V3) :- - small_bug(V2, V3, V4), - casquet(V1, V2), not lower_mantle(V1, V2).","- become_agressive(V4, V1, V2) :- - small_bug(V2, V3, V4), - casquet(V1, V2), not lower_mantle(V1, V2).","- orientation_course(V2, V1, V2) :- - casquet(V1, V2), not wheelchair(V1, V2).","- lower_mantle(V1, V2) :- - casquet(V1, V2), not wheelchair(V1, V2)."],"noisy_rules":{"a":["beverage_service(V4) :- not restaurant_chain(V1, V2, V4), most_humans(V0, V4), orientation_course(V0, V1, V2).","beverage_service(V1) :- - improvement(V1)."],"b":["small_bug(V2, V3, V4) :- small_bug(V2, V3, V4), not -casquet(V1, V2), lower_mantle(V1, V2), not -beverage_service(V4).","- ectrodactyly(V0, V2, V4) :- small_bug(V2, V3, V4), - improvement(V1), most_humans(V0, V4), not -lower_mantle(V1, V2), not -beverage_service(V4)."],"c":["wheelchair(V1, V2) :- casquet(V1, V2), most_humans(V0, V4).","think(V2, V3) :- small_bug(V2, V3, V4), most_humans(V0, V4), orientation_course(V0, V1, V2), not -lower_mantle(V1, V2)."],"d":["tea(V1, V2, V1) :- - improvement(V1), think(V2, V3), eating_dinner(V1), two_hitter(V1).","become_agressive(V2, V1, V2) :- lower_mantle(V1, V2)."],"e":["by_product(V0, V3) :- carp(V0, V3).","- ship_wreak(V0, V2, V4) :- - sarcenet(V2, V4), giraffe(V0, V2, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_35_5_4_3_6_0.5_1.0_3_2_3","seed":35,"num_facts":5,"num_rules":5,"num_related_predicates":10,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" P4(\"Samantha\", \"Colleen\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P5(\"Samantha\", \"Colleen\").","- P6(\"Samantha\", \"Colleen\").","- P7(\"Samantha\", \"Colleen\").","- P8(\"Samantha\", \"Colleen\").","- P9(\"Samantha\", \"Colleen\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P5(\"Samantha\", \"Colleen\").","- P6(\"Samantha\", \"Colleen\")."],"noiseless_rules":["- P4(V1, V3) :- - P3(V3), - P6(V1, V3), not P8(V1, V3).","- P0(V3) :- P5(V1, V3), not P7(V1, V3), not P8(V1, V3).","- P1(V2) :- - P0(V2), not -P2(V2).","P2(V1) :- - P6(V1, V3), not P9(V1, V3).","- P3(V2) :- - P1(V2), not -P2(V2)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_32_9_12_1_4_0.5_1.0_5_3_4","seed":32,"num_facts":4,"num_rules":13,"num_related_predicates":17,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P12(\"Brandy\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["- P13(\"Chad\", \"John\", \"Brandy\").","- P14(\"Chad\", \"John\", \"Jennifer\").","P15(\"John\", \"Brandy\", \"Jennifer\").","P16(\"Chad\", \"John\", \"Jennifer\")."],"noisy_facts":["- P22(\"John\", \"Brandy\", \"Kathryn\").","- P26(\"Kathryn\", \"Jennifer\").","- P25(\"Chad\", \"Jennifer\").","P20(\"Chad\", \"Brandy\", \"Jennifer\").","P18(\"Chad\", \"John\", \"Brandy\").","- P17(\"Chad\", \"Jennifer\").","P28(\"Kathryn\", \"Jennifer\").","P27(\"Kathryn\", \"Jennifer\").","P24(\"Chad\", \"Kathryn\")."],"min_fact_dicts_for_query":["- P14(\"Chad\", \"John\", \"Jennifer\").","P15(\"John\", \"Brandy\", \"Jennifer\")."],"noiseless_rules":["- P12(V2) :- P0(V2), - P2(V0, V4), P5(V1, V2), not -P16(V0, V1, V4).","P0(V2) :- P4(V0, V2), P6(V1, V2).","P1(V1, V2) :- - P13(V0, V1, V2).","- P2(V0, V4) :- - P14(V0, V1, V4), not -P16(V0, V1, V4).","P3(V0, V1, V4) :- - P14(V0, V1, V4), not -P16(V0, V1, V4).","P4(V2, V2) :- P6(V1, V2), not P7(V1, V2), not P8(V1, V2), not P9(V1, V2).","P5(V1, V2) :- - P9(V1, V2), not P10(V1, V2).","P6(V1, V2) :- - P9(V1, V2), not P10(V1, V2).","- P7(V1, V2) :- - P9(V1, V2), not P10(V1, V2).","- P8(V1, V2) :- P3(V0, V1, V2), not -P11(V0, V1, V2).","- P9(V1, V2) :- P15(V1, V2, V4).","- P10(V1, V2) :- P1(V1, V2).","P11(V2, V1, V2) :- P1(V1, V2)."],"noisy_rules":{"a":["P12(V2) :- - P5(V1, V2).","P12(V2) :- - P4(V0, V2), not P5(V1, V2), not P6(V1, V2), P7(V1, V2), not -P8(V1, V2)."],"b":["- P16(V0, V1, V4) :- P2(V0, V4), not P4(V0, V2), not -P8(V1, V2), P9(V1, V2), not -P12(V2).","P14(V2, V1, V2) :- - P5(V1, V2), P8(V1, V2), P9(V1, V2), not -P10(V1, V2), P12(V2)."],"c":["- P0(V2) :- not P1(V1, V2), not -P8(V1, V2), P10(V1, V2), - P11(V0, V1, V2).","- P0(V2) :- - P1(V1, V2), - P5(V1, V2), - P6(V1, V2), - P11(V0, V1, V2)."],"d":["P8(V0, V4) :- P2(V0, V4), not P17(V0, V4).","- P19(V0, V2) :- - P3(V0, V1, V2), not -P18(V0, V1, V2)."],"e":["P21(V1, V2) :- P20(V0, V2, V4), - P22(V1, V2, V3).","P23(V0, V3) :- P24(V0, V3), not P25(V0, V4), - P26(V3, V4), P27(V3, V4), P28(V3, V4)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_69_4_4_3_4_0.5_1.0_5_2_3","seed":69,"num_facts":5,"num_rules":5,"num_related_predicates":10,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.3333333333333333,"num_noise_rules_per_type":2,"num_rules_with_default_negation":3,"target_query":"domestic_fowl(\"James\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- cock(\"James\", \"Erica\").","rock_cornish_hen(\"James\", \"Catherine\").","poultry(\"James\", \"Erica\").","turkey(\"Catherine\", \"Erica\").","grass(\"James\", \"Erica\")."],"noisy_facts":["ledger(\"Carlos\", \"Catherine\").","- duck(\"James\", \"Catherine\").","- squirrel(\"James\", \"Carlos\")."],"min_fact_dicts_for_query":["- cock(\"James\", \"Erica\").","rock_cornish_hen(\"James\", \"Catherine\").","grass(\"James\", \"Erica\")."],"noiseless_rules":["domestic_fowl(V0) :- - chicken(V0), saddle(V0, V2), - rock_cornish(V0, V3), not -poultry(V0, V3), not -turkey(V2, V3).","- chicken(V0) :- - cock(V0, V3), not -poultry(V0, V3).","bird(V0, V3) :- - cock(V0, V3), not -poultry(V0, V3).","saddle(V0, V0) :- bird(V0, V3).","- rock_cornish(V0, V3) :- rock_cornish_hen(V0, V2), grass(V0, V3)."],"noisy_rules":{"a":["- domestic_fowl(V0) :- chicken(V0).","- domestic_fowl(V0) :- chicken(V0), - bird(V0, V3), - saddle(V0, V2), not -rock_cornish(V0, V3)."],"b":["- poultry(V0, V3) :- chicken(V0), - bird(V0, V3), - saddle(V0, V2), - domestic_fowl(V0).","rock_cornish(V0, V3) :- chicken(V0), - bird(V0, V3), - saddle(V0, V2), not -rock_cornish(V0, V3), - domestic_fowl(V0)."],"c":["- saddle(V0, V0) :- chicken(V0).","- turkey(V2, V2) :- chicken(V0), - saddle(V0, V2)."],"d":["cock(V0, V3) :- rock_cornish(V0, V3).","- poultry(V0, V3) :- - saddle(V0, V2), rock_cornish(V0, V3), not duck(V0, V2)."],"e":["eater(V1) :- - squirrel(V0, V1).","trestle_bridge(V1) :- ledger(V1, V2)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_63_5_6_6_7_0.5_1.0_3_3_4","seed":63,"num_facts":8,"num_rules":7,"num_related_predicates":15,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"laying(\"Daniel\", \"Amber\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- pendulum(\"Tyrone\", \"Richard\", \"Daniel\").","layer(\"Daniel\").","- doorkeeper(\"Tyrone\", \"Richard\", \"Amber\").","- week(\"Richard\", \"Daniel\", \"Amber\").","pike(\"Tyrone\", \"Daniel\", \"Amber\").","air_terminal(\"Tyrone\", \"Daniel\", \"Amber\").","built_in_bed(\"Tyrone\", \"Richard\", \"Daniel\").","- door(\"Tyrone\", \"Richard\", \"Amber\")."],"noisy_facts":["- great_time_for_socialization(\"Richard\", \"Amber\").","humanitarian(\"Tyrone\", \"Richard\", \"Amber\").","potential(\"Tyrone\", \"Daniel\", \"Amber\").","broken(\"Daniel\", \"Amber\")."],"min_fact_dicts_for_query":["- pendulum(\"Tyrone\", \"Richard\", \"Daniel\").","layer(\"Daniel\").","- doorkeeper(\"Tyrone\", \"Richard\", \"Amber\").","pike(\"Tyrone\", \"Daniel\", \"Amber\").","built_in_bed(\"Tyrone\", \"Richard\", \"Daniel\")."],"noiseless_rules":["laying(V3, V4) :- carapace(V1, V3), hook(V0, V1, V4), not artificial_intelligence(V0, V1, V4).","carapace(V1, V3) :- - chewing_on_by_happy_dog(V0, V3), monal(V0, V4), built_in_bed(V0, V1, V3).","- chewing_on_by_happy_dog(V0, V3) :- - pendulum(V0, V1, V3), pike(V0, V3, V4), not -air_terminal(V0, V3, V4).","boy(V0, V4) :- - pendulum(V0, V1, V3), pike(V0, V3, V4), not -air_terminal(V0, V3, V4).","hook(V0, V1, V4) :- boy(V0, V4), - artificial_intelligence(V0, V1, V4), not door(V0, V1, V4).","monal(V0, V4) :- boy(V0, V4), - artificial_intelligence(V0, V1, V4), not door(V0, V1, V4).","- artificial_intelligence(V0, V1, V4) :- layer(V3), - doorkeeper(V0, V1, V4), not week(V1, V3, V4)."],"noisy_rules":{"a":["- laying(V0, V4) :- - monal(V0, V4).","- laying(V3, V3) :- - carapace(V1, V3)."],"b":["- boy(V3, V4) :- - laying(V3, V4).","- carapace(V3, V3) :- - laying(V3, V4)."],"c":["artificial_intelligence(V0, V1, V4) :- - carapace(V1, V3), not -chewing_on_by_happy_dog(V0, V3), - hook(V0, V1, V4).","- pike(V0, V3, V4) :- chewing_on_by_happy_dog(V0, V3), - hook(V0, V1, V4)."],"d":["- hook(V0, V0, V4) :- - boy(V0, V4).","pendulum(V0, V1, V1) :- not hook(V0, V1, V4), humanitarian(V0, V1, V4)."],"e":["lugger(V3, V4) :- - great_time_for_socialization(V1, V4), broken(V3, V4).","- seat(V0, V4) :- potential(V0, V3, V4)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_5_7_10_7_8_0.5_1.0_5_2_3","seed":5,"num_facts":10,"num_rules":11,"num_related_predicates":21,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8333333333333333,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" benefactor(\"Veronica\", \"Christopher\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["boy(\"Veronica\").","sweater_girl(\"Eric\", \"Michael\").","laying(\"Michael\", \"Christopher\").","- pike(\"Veronica\").","- lass(\"Eric\", \"Michael\").","- doorkeeper(\"Eric\", \"Veronica\").","- inversion(\"Michael\", \"Veronica\").","- monal(\"Eric\", \"Christopher\").","- carapace(\"Michael\", \"Veronica\").","every_time(\"Michael\", \"Christopher\")."],"noisy_facts":[],"min_fact_dicts_for_query":["boy(\"Veronica\").","sweater_girl(\"Eric\", \"Michael\").","laying(\"Michael\", \"Christopher\").","- pike(\"Veronica\").","- lass(\"Eric\", \"Michael\").","- monal(\"Eric\", \"Christopher\").","- carapace(\"Michael\", \"Veronica\")."],"noiseless_rules":["- benefactor(V2, V3) :- - fairy_godmother(V1), - patron(V3), - donor(V1, V2), not uncle(V1, V3), not benefactress(V2, V3).","- fairy_godmother(V1) :- - leg(V2), - pike(V2), - lass(V0, V1), not doorkeeper(V0, V2), not inversion(V1, V2).","- patron(V3) :- - girl(V1), parturition(V3), not -birth(V1, V3).","- donor(V1, V2) :- boy(V2), - monal(V0, V3), - carapace(V1, V2), not -every_time(V1, V3).","- leg(V2) :- boy(V2), - monal(V0, V3), - carapace(V1, V2), not -every_time(V1, V3).","delivery(V0, V1) :- boy(V2), - monal(V0, V3), - carapace(V1, V2), not -every_time(V1, V3).","- girl(V1) :- sweater_girl(V0, V1), not lass(V0, V1).","- uncle(V1, V3) :- laying(V1, V3).","parturition(V3) :- laying(V1, V3).","- benefactress(V1, V0) :- delivery(V0, V1).","birth(V1, V0) :- delivery(V0, V1)."],"noisy_rules":{}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_9_5_4_4_7_0.5_1.0_5_2_3","seed":9,"num_facts":8,"num_rules":5,"num_related_predicates":13,"max_depth_of_rule_graph":1,"average_depth_of_rule_graph":1.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":3,"target_query":"spiritual_being(\"Kristen\", \"Erica\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["belief(\"Vanessa\", \"Michael\").","archangel(\"Vanessa\", \"Michael\").","- humanitarian(\"Kristen\").","- titania(\"Erica\", \"Michael\").","- fairy_godmother(\"Michael\").","- donor(\"Michael\").","- uncle(\"Kristen\", \"Michael\").","benefactress(\"Erica\", \"Michael\")."],"noisy_facts":["velveeta(\"Vanessa\", \"Erica\").","- nest(\"Erica\").","- seraph(\"Kristen\", \"Erica\").","home(\"Vanessa\", \"Erica\").","night_time(\"Kristen\", \"Erica\").","- seat(\"Kristen\", \"Erica\").","wing(\"Kristen\", \"Erica\").","- dinner(\"Erica\").","- rolled_tobacco(\"Vanessa\", \"Kristen\")."],"min_fact_dicts_for_query":["belief(\"Vanessa\", \"Michael\").","archangel(\"Vanessa\", \"Michael\").","- humanitarian(\"Kristen\").","- fairy_godmother(\"Michael\").","- donor(\"Michael\").","- uncle(\"Kristen\", \"Michael\").","benefactress(\"Erica\", \"Michael\")."],"noiseless_rules":["spiritual_being(V1, V2) :- opinion(V3), angel(V0, V3), benefactor(V1, V2), not fairy(V2, V3), not titania(V2, V3).","opinion(V3) :- belief(V0, V3), not -archangel(V0, V3).","angel(V0, V3) :- archangel(V0, V3).","benefactor(V1, V2) :- - humanitarian(V1), - fairy_godmother(V3), - donor(V3), - uncle(V1, V3), benefactress(V2, V3).","- fairy(V2, V3) :- - titania(V2, V3), not fairy_godmother(V3)."],"noisy_rules":{"a":["- spiritual_being(V2, V2) :- fairy(V2, V3).","- spiritual_being(V1, V2) :- - angel(V0, V3), - benefactor(V1, V2), not -fairy(V2, V3)."],"b":["- belief(V2, V3) :- - opinion(V3), not -fairy(V2, V3), - spiritual_being(V1, V2).","- angel(V2, V1) :- - benefactor(V1, V2), - spiritual_being(V1, V2)."],"c":["- opinion(V3) :- - angel(V0, V3), - benefactor(V1, V2), fairy(V2, V3).","fairy_godmother(V3) :- - benefactor(V1, V2), fairy(V2, V3)."],"d":["fairy_godmother(V2) :- not benefactor(V1, V2), night_time(V1, V2).","- angel(V3, V3) :- - opinion(V3), not benefactor(V1, V2), not -fairy(V2, V3), wing(V1, V2), not seraph(V1, V2)."],"e":["- place(V0, V2) :- - nest(V2), home(V0, V2), - seat(V1, V2).","- great_time_for_socialization(V2) :- - dinner(V2), - rolled_tobacco(V0, V1), not -velveeta(V0, V2)."]}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_17_7_8_7_9_0.5_1.0_5_3_4","seed":17,"num_facts":11,"num_rules":9,"num_related_predicates":20,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6666666666666667,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"asia(\"Keith\", \"Christopher\", \"Brenda\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["serve(\"Keith\", \"Christopher\", \"Natasha\").","- amerind(\"Keith\", \"Christopher\", \"Natasha\").","cypriniform_fish(\"Natasha\").","travelling(\"Christopher\", \"Natasha\").","- paste(\"Christopher\", \"Natasha\").","- chicken(\"Keith\", \"Lisa\", \"Natasha\").","- egg(\"Keith\", \"Lisa\", \"Natasha\").","sheep(\"Christopher\", \"Brenda\", \"Natasha\").","bacon_strip(\"Brenda\", \"Natasha\").","buckthorn(\"Keith\", \"Christopher\", \"Lisa\").","proposition(\"Christopher\", \"Lisa\", \"Brenda\")."],"noisy_facts":[],"min_fact_dicts_for_query":["serve(\"Keith\", \"Christopher\", \"Natasha\").","travelling(\"Christopher\", \"Natasha\").","- paste(\"Christopher\", \"Natasha\").","- chicken(\"Keith\", \"Lisa\", \"Natasha\").","- egg(\"Keith\", \"Lisa\", \"Natasha\").","sheep(\"Christopher\", \"Brenda\", \"Natasha\").","bacon_strip(\"Brenda\", \"Natasha\").","buckthorn(\"Keith\", \"Christopher\", \"Lisa\")."],"noiseless_rules":["asia(V0, V1, V3) :- bangladesh(V2, V3), - turkistan(V0, V1, V4), not kyrgyzstan(V0, V2, V4).","bangladesh(V2, V3) :- cover_ground(V1), white(V2, V4), bacon_strip(V3, V4), buckthorn(V0, V1, V2), not -proposition(V1, V2, V3).","- turkistan(V0, V1, V4) :- serve(V0, V1, V4).","- yellow_bird(V4) :- serve(V0, V1, V4).","- kyrgyzstan(V4, V4, V4) :- - yellow_bird(V4), not -natural_language(V4), not -jaw(V4), not -cypriniform_fish(V4).","cover_ground(V1) :- serve(V0, V1, V4), not amerind(V0, V1, V4).","natural_language(V4) :- serve(V0, V1, V4), not amerind(V0, V1, V4).","jaw(V4) :- cypriniform_fish(V4).","white(V2, V4) :- travelling(V1, V4), - paste(V1, V4), - chicken(V0, V2, V4), - egg(V0, V2, V4), sheep(V1, V3, V4)."],"noisy_rules":{}},"num_min_facts_for_query":8,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_81_8_8_5_6_0.5_1.0_3_2_3","seed":81,"num_facts":8,"num_rules":9,"num_related_predicates":17,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"seat(\"Brandon\", \"Juan\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- paintbox(\"Brandon\", \"Juan\").","- fusee_drive(\"Brandon\", \"Juan\").","- morris_chair(\"Rebecca\", \"Juan\").","- electric_clock(\"Rebecca\", \"Juan\").","wall_clock(\"Rebecca\", \"Juan\").","- chapters(\"Brandon\", \"Juan\").","people(\"Brandon\", \"Juan\").","- face_part(\"Brandon\", \"Rebecca\")."],"noisy_facts":["- cross_fertilization(\"Juan\").","procedure(\"Juan\").","feet(\"Brandon\", \"Rebecca\").","fly(\"Brandon\", \"Juan\").","- trouser(\"Rebecca\", \"Juan\")."],"min_fact_dicts_for_query":["- paintbox(\"Brandon\", \"Juan\").","- fusee_drive(\"Brandon\", \"Juan\").","- electric_clock(\"Rebecca\", \"Juan\").","people(\"Brandon\", \"Juan\")."],"noiseless_rules":["seat(V1, V3) :- aquarium(V1, V3), clock_time(V2, V3), not -armchair(V2, V3).","aquarium(V1, V3) :- tunicate(V1, V3), not -people(V1, V3).","tunicate(V1, V3) :- box(V3), chair(V1, V3), not chapters(V1, V3).","box(V3) :- - paintbox(V1, V3).","- ladder_back(V1, V3) :- - paintbox(V1, V3).","chair(V1, V3) :- - ladder_back(V1, V3).","- clock(V1, V2) :- - fusee_drive(V1, V3), - electric_clock(V2, V3), not -wall_clock(V2, V3).","clock_time(V2, V3) :- - clock(V1, V2), people(V1, V3), not face_part(V1, V2).","armchair(V2, V3) :- - morris_chair(V2, V3)."],"noisy_rules":{"a":["- seat(V1, V3) :- not box(V3), - chair(V1, V3), - armchair(V2, V3).","- seat(V3, V3) :- - armchair(V2, V3)."],"b":["electric_clock(V3, V3) :- not -ladder_back(V1, V3), - seat(V1, V3).","fusee_drive(V1, V3) :- - seat(V1, V3)."],"c":["- wall_clock(V1, V3) :- ladder_back(V1, V3).","- people(V1, V3) :- - aquarium(V1, V3), not chair(V1, V3), clock(V1, V2)."],"d":["paintbox(V3, V3) :- - box(V3), not -procedure(V3), - cross_fertilization(V3).","- chair(V2, V3) :- - armchair(V2, V3)."],"e":["- below(V1, V2) :- feet(V1, V2).","- garment(V1, V3) :- fly(V1, V3), - trouser(V2, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_60_6_8_3_3_0.5_1.0_3_3_4","seed":60,"num_facts":5,"num_rules":9,"num_related_predicates":14,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"P8(\"Kendra\", \"Ronald\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P9(\"Jennifer\", \"Kendra\", \"Sharon\").","- P10(\"Kendra\", \"Ronald\").","- P11(\"Jennifer\", \"Kendra\", \"Christina\").","P12(\"Jennifer\", \"Kendra\", \"Christina\").","P13(\"Jennifer\", \"Kendra\", \"Sharon\")."],"noisy_facts":["P14(\"Kendra\", \"Ronald\", \"Christina\").","- P15(\"Jennifer\", \"Kendra\", \"Ronald\").","- P20(\"Jennifer\", \"Kendra\", \"Christina\").","- P18(\"Kendra\", \"Sharon\", \"Christina\").","P17(\"Kendra\", \"Ronald\").","- P21(\"Jennifer\", \"Ronald\", \"Sharon\")."],"min_fact_dicts_for_query":["- P9(\"Jennifer\", \"Kendra\", \"Sharon\").","- P10(\"Kendra\", \"Ronald\").","- P11(\"Jennifer\", \"Kendra\", \"Christina\")."],"noiseless_rules":["P8(V1, V2) :- P0(V1, V2), P1(V0, V2, V3).","P0(V1, V2) :- - P4(V3, V4), P5(V0, V1, V2), not -P13(V0, V1, V3).","P1(V0, V2, V3) :- - P3(V0, V1, V3), P6(V1, V2, V4).","P2(V4) :- - P3(V0, V1, V3), P6(V1, V2, V4).","- P3(V0, V1, V3) :- - P9(V0, V1, V3).","- P4(V4, V4) :- P2(V4), not -P7(V4).","P5(V0, V1, V2) :- - P10(V1, V2), - P11(V0, V1, V4), not -P12(V0, V1, V4).","P6(V1, V2, V4) :- - P10(V1, V2), - P11(V0, V1, V4), not -P12(V0, V1, V4).","P7(V4) :- - P10(V1, V2), - P11(V0, V1, V4), not -P12(V0, V1, V4)."],"noisy_rules":{"a":["- P8(V4, V3) :- P4(V3, V4), - P7(V4).","- P8(V4, V4) :- - P2(V4), - P7(V4)."],"b":["- P6(V1, V2, V2) :- - P8(V1, V2).","- P13(V0, V1, V3) :- - P0(V1, V2), P3(V0, V1, V3), not P8(V1, V2)."],"c":["P10(V1, V2) :- - P0(V1, V2), P4(V3, V4), - P6(V1, V2, V4).","P3(V0, V1, V3) :- - P1(V0, V2, V3), - P2(V4), - P5(V0, V1, V2)."],"d":["P11(V4, V1, V4) :- - P6(V1, V2, V4), - P7(V4), not -P14(V1, V2, V4).","- P12(V0, V1, V4) :- - P5(V0, V1, V2), - P6(V1, V2, V4), not P15(V0, V1, V2)."],"e":["P16(V3) :- P17(V1, V2), - P18(V1, V3, V4).","P19(V1, V3, V4) :- - P20(V0, V1, V4), - P21(V0, V2, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_14_7_6_5_7_0.5_1.0_3_2_3","seed":14,"num_facts":8,"num_rules":7,"num_related_predicates":15,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8333333333333333,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"P6(\"Eric\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P7(\"Eric\", \"Joshua\").","- P8(\"Bryan\", \"Stephanie\").","- P9(\"Eric\", \"Joshua\").","P10(\"Eric\", \"Stephanie\").","- P11(\"Stephanie\", \"Joshua\").","- P12(\"Eric\", \"Joshua\").","- P13(\"Eric\", \"Joshua\").","- P14(\"Stephanie\", \"Joshua\")."],"noisy_facts":["P15(\"Bryan\", \"Eric\").","- P16(\"Eric\", \"Joshua\").","P19(\"Eric\", \"Joshua\").","- P22(\"Bryan\", \"Eric\").","- P18(\"Joshua\").","P17(\"Joshua\")."],"min_fact_dicts_for_query":["- P8(\"Bryan\", \"Stephanie\").","P10(\"Eric\", \"Stephanie\").","- P11(\"Stephanie\", \"Joshua\")."],"noiseless_rules":["P6(V1) :- - P2(V1, V2), P5(V1, V3), not P14(V2, V3).","P0(V1, V3) :- - P7(V1, V3).","P1(V0, V1) :- - P8(V0, V2), P10(V1, V2), - P11(V2, V3).","- P2(V1, V2) :- - P4(V1, V2).","- P3(V3, V1) :- P0(V1, V3), not P12(V1, V3), not P13(V1, V3).","- P4(V1, V3) :- P5(V1, V3), not P7(V1, V3), not P9(V1, V3).","P5(V1, V1) :- P1(V0, V1), not P3(V0, V1)."],"noisy_rules":{"a":["- P6(V1) :- P4(V1, V2).","- P6(V1) :- - P0(V1, V3), P2(V1, V2), not P5(V1, V3)."],"b":["P13(V1, V3) :- - P0(V1, V3), - P6(V1).","P13(V1, V2) :- P2(V1, V2), - P6(V1)."],"c":["P11(V2, V3) :- - P1(V0, V1), P2(V1, V2), - P5(V1, V3).","- P1(V0, V1) :- P3(V0, V1)."],"d":["P12(V1, V1) :- - P1(V0, V1), P15(V0, V1).","P9(V1, V3) :- - P0(V1, V3), not P16(V1, V3)."],"e":["- P20(V1, V3) :- P17(V3), not P18(V3), P19(V1, V3).","- P21(V0, V1) :- - P22(V0, V1)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_4_10_15_6_9_0.5_1.0_5_2_3","seed":4,"num_facts":10,"num_rules":16,"num_related_predicates":26,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.7777777777777777,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"P15(\"Lauren\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P16(\"Eric\", \"Lauren\").","- P17.","- P18(\"Nicholas\", \"Lauren\").","- P19(\"Eric\", \"Beth\").","- P20(\"Eric\", \"Lauren\").","- P21(\"Eric\", \"Lauren\").","P22(\"Beth\", \"Nicholas\").","- P23(\"Beth\", \"Lauren\").","P24(\"Eric\", \"Nicholas\").","P25(\"Beth\", \"Lauren\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- P16(\"Eric\", \"Lauren\").","- P19(\"Eric\", \"Beth\").","- P20(\"Eric\", \"Lauren\").","- P21(\"Eric\", \"Lauren\").","P22(\"Beth\", \"Nicholas\").","P24(\"Eric\", \"Nicholas\").","P25(\"Beth\", \"Lauren\")."],"noiseless_rules":["P15(V3) :- P1(V0, V2), P2(V0, V3), not P5(V2, V3), not P14(V2, V3).","P0(V0, V3) :- - P16(V0, V3).","P1(V0, V2) :- P7(V1), - P9(V0, V2), not -P10(V1, V2).","P2(V0, V3) :- - P11(V3), - P20(V0, V3), - P21(V0, V3), P22(V1, V2), not P23(V1, V3).","- P3(V0, V1) :- - P11(V3), - P20(V0, V3), - P21(V0, V3), P22(V1, V2), not P23(V1, V3).","- P4(V0, V0) :- P2(V0, V3), not P17.","- P5(V2, V1) :- - P4(V1, V2), not P8(V1, V2).","P6(V1) :- - P4(V1, V2), not P8(V1, V2).","P7(V3) :- - P13(V2, V3), not P14(V2, V3), not P18(V2, V3).","- P8(V2, V2) :- - P13(V2, V3), not P14(V2, V3), not P18(V2, V3).","- P9(V0, V0) :- P0(V0, V3), - P3(V0, V1), not -P6(V1), not P12(V0, V1).","P10(V1, V2) :- - P19(V0, V1), P24(V0, V2), P25(V1, V3).","- P11(V3) :- - P19(V0, V1), P24(V0, V2), P25(V1, V3).","- P12(V0, V1) :- - P19(V0, V1), P24(V0, V2), P25(V1, V3).","- P13(V2, V3) :- - P19(V0, V1), P24(V0, V2), P25(V1, V3).","- P14(V2, V3) :- - P13(V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_76_10_14_6_7_0.5_1.0_3_3_4","seed":76,"num_facts":9,"num_rules":15,"num_related_predicates":24,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.888888888888889,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" creek(\"Carrie\", \"Benjamin\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["hunter(\"Gregory\", \"Steven\").","thank_parents(\"Carrie\", \"Steven\").","- female_parent(\"Steven\", \"Benjamin\").","berkshire(\"Gregory\", \"Scott\", \"Benjamin\").","- running(\"Carrie\", \"Scott\", \"Benjamin\").","inner_mongolia(\"Gregory\", \"Steven\", \"Benjamin\").","- shoulder_flash(\"Carrie\", \"Scott\", \"Benjamin\").","much_taller_than_others(\"Gregory\", \"Carrie\", \"Scott\").","- hold_magazines_and_papers(\"Gregory\", \"Steven\", \"Scott\")."],"noisy_facts":["cherry(\"Gregory\", \"Carrie\", \"Scott\").","getting_food_to_feed_to_others(\"Steven\", \"Benjamin\").","- information(\"Gregory\", \"Steven\").","natural_childbirth(\"Carrie\", \"Steven\", \"Scott\").","- duplicate(\"Steven\", \"Scott\", \"Benjamin\")."],"min_fact_dicts_for_query":["hunter(\"Gregory\", \"Steven\").","- female_parent(\"Steven\", \"Benjamin\").","berkshire(\"Gregory\", \"Scott\", \"Benjamin\").","- running(\"Carrie\", \"Scott\", \"Benjamin\").","much_taller_than_others(\"Gregory\", \"Carrie\", \"Scott\")."],"noiseless_rules":["- creek(V1, V4) :- superstition(V1, V3), mycophagist(V0, V2, V4), not store_pennies(V1, V2, V3).","vireo(V2, V3) :- penny(V0, V2, V3).","superstition(V1, V3) :- mouth(V1, V2, V3).","penny(V0, V2, V3) :- - rice(V2), - hame(V0, V3), inner_mongolia(V0, V2, V4).","mycophagist(V0, V2, V4) :- - acting_in_play(V2, V3), reproducing_yourself(V0, V1, V4), not shoulder_flash(V1, V3, V4).","mouth(V1, V2, V3) :- - acting_in_play(V2, V3), reproducing_yourself(V0, V1, V4), not shoulder_flash(V1, V3, V4).","- store_pennies(V1, V2, V3) :- - water_starwort(V0, V3), journey_into_space(V1, V2, V3), not group_people(V1, V2, V3).","- rice(V2) :- hunter(V0, V2), berkshire(V0, V3, V4), - running(V1, V3, V4).","- creature(V1, V2) :- hunter(V0, V2), berkshire(V0, V3, V4), - running(V1, V3, V4).","- water_starwort(V2, V3) :- vireo(V2, V3), - creature(V1, V2).","- acting_in_play(V2, V1) :- - creature(V1, V2), not -thank_parents(V1, V2).","journey_into_space(V1, V2, V1) :- - creature(V1, V2), not -thank_parents(V1, V2).","- hame(V0, V3) :- - female_parent(V2, V4), much_taller_than_others(V0, V1, V3), not hold_magazines_and_papers(V0, V2, V3).","reproducing_yourself(V0, V1, V4) :- - female_parent(V2, V4), much_taller_than_others(V0, V1, V3), not hold_magazines_and_papers(V0, V2, V3).","- group_people(V1, V2, V3) :- - female_parent(V2, V4), much_taller_than_others(V0, V1, V3), not hold_magazines_and_papers(V0, V2, V3)."],"noisy_rules":{"a":["creek(V1, V2) :- group_people(V1, V2, V3).","creek(V1, V4) :- - vireo(V2, V3), - mycophagist(V0, V2, V4), creature(V1, V2)."],"b":["shoulder_flash(V1, V4, V4) :- creek(V1, V4).","- superstition(V1, V4) :- creek(V1, V4)."],"c":["creature(V4, V2) :- - penny(V0, V2, V3), - mycophagist(V0, V2, V4), not -hame(V0, V3).","hame(V1, V3) :- rice(V2), - journey_into_space(V1, V2, V3)."],"d":["rice(V2) :- not -acting_in_play(V2, V3), - journey_into_space(V1, V2, V3), not -natural_childbirth(V1, V2, V3).","- reproducing_yourself(V0, V0, V2) :- - penny(V0, V2, V3)."],"e":["- bodies(V3, V4) :- - duplicate(V2, V3, V4).","raglan(V0, V2) :- - information(V0, V2), getting_food_to_feed_to_others(V2, V4), cherry(V0, V1, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_89_6_6_6_9_0.5_1.0_3_3_4","seed":89,"num_facts":9,"num_rules":7,"num_related_predicates":16,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P6(\"Brandon\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P7(\"Antonio\", \"Crystal\").","P8(\"Antonio\", \"Brandon\", \"Selena\").","P9(\"Antonio\", \"Brandon\", \"Selena\").","P10(\"Antonio\", \"Brandon\", \"Selena\").","P11(\"Antonio\", \"Brandon\", \"Selena\").","P12(\"Antonio\", \"Brandon\", \"Selena\").","P13(\"Antonio\", \"Brandon\", \"Selena\").","P14(\"Brandon\", \"Crystal\", \"Selena\").","P15(\"Antonio\", \"Brandon\", \"Selena\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P7(\"Antonio\", \"Crystal\").","P8(\"Antonio\", \"Brandon\", \"Selena\").","P9(\"Antonio\", \"Brandon\", \"Selena\").","P10(\"Antonio\", \"Brandon\", \"Selena\").","P11(\"Antonio\", \"Brandon\", \"Selena\").","P12(\"Antonio\", \"Brandon\", \"Selena\").","P13(\"Antonio\", \"Brandon\", \"Selena\").","P14(\"Brandon\", \"Crystal\", \"Selena\").","P15(\"Antonio\", \"Brandon\", \"Selena\")."],"noiseless_rules":["P6(V2) :- P1(V0, V1, V2), P3(V0, V1, V3), P4(V0, V1, V3).","P0(V0, V2, V4) :- P7(V0, V3), P13(V0, V2, V4), P14(V2, V3, V4).","P1(V0, V2, V2) :- P0(V0, V2, V4), P5(V0, V2, V4), P12(V0, V2, V4).","P2(V2, V4) :- P8(V0, V2, V4), P10(V0, V2, V4), P12(V0, V2, V4).","P3(V0, V1, V1) :- P2(V1, V4), P13(V0, V2, V4), P15(V0, V2, V4).","P4(V0, V2, V4) :- P9(V0, V2, V4), P10(V0, V2, V4), P11(V0, V2, V4).","P5(V0, V2, V4) :- P9(V0, V2, V4), P10(V0, V2, V4), P11(V0, V2, V4)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_91_7_6_3_6_0.5_1.0_3_3_4","seed":91,"num_facts":7,"num_rules":7,"num_related_predicates":14,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"airplane(\"Thomas\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["garment(\"Tina\", \"Michelle\", \"Joyce\").","- curtain(\"Tina\", \"Thomas\", \"Joyce\").","- book(\"Tina\", \"Thomas\", \"Joyce\").","- parameter(\"Tina\", \"Thomas\", \"Joyce\").","- three_quarter_binding(\"Tina\", \"Thomas\", \"Joyce\").","work_clothing(\"Tina\", \"Thomas\", \"Joyce\").","- consumer_goods(\"Michelle\", \"Thomas\", \"Evan\")."],"noisy_facts":["picture_book(\"Michelle\", \"Thomas\", \"Evan\").","- case(\"Tina\", \"Evan\", \"Joyce\").","clutch_bag(\"Michelle\", \"Evan\", \"Joyce\").","- hand_luggage(\"Tina\", \"Evan\", \"Joyce\").","ctenophore(\"Michelle\", \"Joyce\").","- woodborer(\"Tina\", \"Joyce\").","worm(\"Michelle\", \"Evan\", \"Joyce\")."],"min_fact_dicts_for_query":["garment(\"Tina\", \"Michelle\", \"Joyce\").","- parameter(\"Tina\", \"Thomas\", \"Joyce\").","work_clothing(\"Tina\", \"Thomas\", \"Joyce\")."],"noiseless_rules":["airplane(V2) :- - covering(V1, V2, V3), not consumer_goods(V1, V2, V3).","clothing(V0, V1) :- garment(V0, V1, V4), work_clothing(V0, V2, V4).","- blind(V2, V2, V2) :- - hood(V0, V2, V4), not curtain(V0, V2, V4), not -work_clothing(V0, V2, V4).","- binding(V2, V0) :- - book(V0, V2, V4), not three_quarter_binding(V0, V2, V4), not -work_clothing(V0, V2, V4).","- covering(V1, V2, V1) :- clothing(V0, V1), - hood(V0, V2, V4), not protective_covering(V0, V1).","- hood(V0, V2, V4) :- - parameter(V0, V2, V4).","- protective_covering(V3, V1) :- - blind(V1, V2, V3), not binding(V2, V3)."],"noisy_rules":{"a":["- airplane(V2) :- hood(V0, V2, V4).","- airplane(V2) :- covering(V1, V2, V3), protective_covering(V0, V1)."],"b":["covering(V2, V2, V2) :- - airplane(V2).","consumer_goods(V2, V2, V2) :- - airplane(V2)."],"c":["consumer_goods(V1, V1, V0) :- - clothing(V0, V1).","book(V1, V2, V2) :- not -binding(V2, V3), covering(V1, V2, V3)."],"d":["student(V0) :- - clothing(V0, V1).","book(V1, V2, V3) :- covering(V1, V2, V3), not -picture_book(V1, V2, V3)."],"e":["carrying_stuff(V0, V1) :- - case(V0, V3, V4), - hand_luggage(V0, V3, V4), clutch_bag(V1, V3, V4).","- invertebrate(V0, V1) :- - woodborer(V0, V4), not -ctenophore(V1, V4), worm(V1, V3, V4)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_18_9_12_4_7_0.5_1.0_3_2_3","seed":18,"num_facts":8,"num_rules":13,"num_related_predicates":21,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"P12(\"Jill\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P13(\"Patricia\", \"Jill\").","P14(\"Courtney\", \"Jill\").","- P15(\"Patricia\", \"Jill\").","- P16(\"Jill\").","- P17(\"Patricia\", \"Jill\").","P18(\"Patricia\", \"Jill\").","- P19(\"Patricia\", \"Jill\").","- P20(\"Patricia\", \"Jill\")."],"noisy_facts":["P21(\"Patricia\", \"Jill\").","P22(\"Patricia\", \"Jill\").","- P27(\"Jill\", \"Kyle\").","- P29(\"Courtney\", \"Kyle\").","P26(\"Patricia\", \"Jill\").","P25(\"Kyle\")."],"min_fact_dicts_for_query":["P13(\"Patricia\", \"Jill\").","P14(\"Courtney\", \"Jill\").","- P15(\"Patricia\", \"Jill\")."],"noiseless_rules":["P12(V2) :- P1(V1), - P5(V1, V2), - P9(V1, V3).","P0(V1, V2) :- P13(V1, V2).","P1(V1) :- P2(V2), P3(V0, V2), - P6(V1, V2).","P2(V2) :- P14(V0, V2).","P3(V1, V2) :- P0(V1, V2), not -P2(V2), not P15(V1, V2).","P4(V1, V2) :- P0(V1, V2), not -P2(V2), not P15(V1, V2).","- P5(V1, V2) :- P4(V1, V2), not P7(V1, V2), not -P10(V1, V2).","- P6(V1, V2) :- P4(V1, V2), not P7(V1, V2), not -P10(V1, V2).","- P7(V1, V2) :- - P15(V1, V2), not P17(V1, V2), not -P18(V1, V2).","P8(V1, V2) :- - P15(V1, V2), not P17(V1, V2), not -P18(V1, V2).","- P9(V1, V2) :- P8(V1, V2), not -P10(V1, V2), not P11(V1, V2).","P10(V1, V2) :- - P16(V2), - P19(V1, V2), not P20(V1, V2).","- P11(V1, V2) :- - P16(V2), - P19(V1, V2), not P20(V1, V2)."],"noisy_rules":{"a":["- P12(V1) :- - P1(V1).","- P12(V2) :- - P3(V0, V2)."],"b":["P16(V2) :- - P12(V2).","P6(V1, V2) :- - P4(V1, V2), - P12(V2)."],"c":["P5(V2, V2) :- - P3(V0, V2).","P17(V1, V2) :- - P3(V0, V2), P7(V1, V2), not P10(V1, V2)."],"d":["P17(V1, V2) :- - P4(V1, V2), P21(V1, V2).","P23(V1) :- not -P6(V1, V2), P22(V1, V2)."],"e":["- P24(V1, V2) :- not -P25(V3), P26(V1, V2), - P27(V2, V3).","P28(V3) :- - P29(V0, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_24_7_10_4_6_0.5_1.0_5_3_4","seed":24,"num_facts":6,"num_rules":11,"num_related_predicates":17,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"P10(\"Molly\", \"Rachel\", \"Jennifer\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P11(\"Scott\", \"Mary\", \"Jennifer\").","- P12(\"Scott\", \"Jennifer\").","P13(\"Rachel\", \"Mary\").","- P14(\"Scott\", \"Molly\", \"Jennifer\").","- P15(\"Scott\", \"Molly\", \"Jennifer\").","P16(\"Scott\", \"Rachel\", \"Jennifer\")."],"noisy_facts":["- P19(\"Scott\", \"Rachel\").","P25(\"Rachel\", \"Jennifer\").","- P18(\"Scott\", \"Rachel\", \"Mary\").","P26(\"Scott\", \"Molly\", \"Rachel\").","P24(\"Jennifer\").","- P20(\"Molly\", \"Rachel\").","- P22(\"Scott\", \"Mary\", \"Jennifer\").","- P17(\"Scott\", \"Rachel\", \"Mary\")."],"min_fact_dicts_for_query":["P11(\"Scott\", \"Mary\", \"Jennifer\").","- P12(\"Scott\", \"Jennifer\").","P13(\"Rachel\", \"Mary\").","- P14(\"Scott\", \"Molly\", \"Jennifer\")."],"noiseless_rules":["P10(V1, V2, V4) :- P1(V4), P3(V1, V2, V4), not P8(V1, V2, V4).","- P0(V1, V2) :- P6(V1, V2, V4).","P1(V4) :- P11(V0, V3, V4).","P2(V3, V4) :- P11(V0, V3, V4).","P3(V1, V2, V4) :- - P12(V0, V4), P13(V2, V3), - P14(V0, V1, V4), not P15(V0, V1, V4), not -P16(V0, V2, V4).","P4(V1, V3) :- - P12(V0, V4), P13(V2, V3), - P14(V0, V1, V4), not P15(V0, V1, V4), not -P16(V0, V2, V4).","- P5(V3) :- - P12(V0, V4), P13(V2, V3), - P14(V0, V1, V4), not P15(V0, V1, V4), not -P16(V0, V2, V4).","P6(V1, V3, V1) :- P4(V1, V3).","- P7(V3, V3, V3) :- P4(V1, V3).","- P8(V1, V2, V1) :- - P0(V1, V2), not P9(V1, V2).","- P9(V3, V2) :- P2(V3, V4), - P5(V3), - P7(V0, V2, V3), not P12(V0, V4), not -P16(V0, V2, V4)."],"noisy_rules":{"a":["- P10(V1, V2, V4) :- not P1(V4), - P2(V3, V4), - P3(V1, V2, V4), not -P9(V1, V2).","- P10(V2, V2, V2) :- P7(V0, V2, V3)."],"b":["P5(V4) :- - P10(V1, V2, V4).","- P16(V1, V2, V4) :- - P1(V4), - P4(V1, V3), - P10(V1, V2, V4)."],"c":["P12(V0, V4) :- P0(V1, V2), - P2(V3, V4), - P3(V1, V2, V4), not -P5(V3), P7(V0, V2, V3).","P8(V1, V2, V4) :- - P1(V4), - P4(V1, V3), P9(V1, V2)."],"d":["- P2(V3, V4) :- - P3(V1, V2, V4), P7(V0, V2, V3), - P17(V0, V2, V3).","P8(V1, V2, V4) :- not P2(V3, V4), - P6(V1, V2, V4), P7(V0, V2, V3), - P18(V0, V2, V3)."],"e":["- P21(V0, V2, V3) :- - P19(V0, V2), - P20(V1, V2), - P22(V0, V3, V4).","- P23(V0, V2) :- P24(V4), P25(V2, V4), P26(V0, V1, V2)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_21_7_8_6_8_0.5_1.0_3_2_3","seed":21,"num_facts":9,"num_rules":9,"num_related_predicates":18,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P8(\"Carlos\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P9(\"Nicholas\", \"Melissa\").","- P10(\"Melissa\", \"Carlos\").","P11(\"Melissa\", \"Carlos\").","P12(\"Carlos\", \"Mark\").","- P13(\"Carlos\", \"Mark\").","P14(\"Melissa\", \"Mark\").","P15(\"Carlos\", \"Mark\").","P16(\"Nicholas\", \"Carlos\").","P17(\"Melissa\", \"Carlos\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- P9(\"Nicholas\", \"Melissa\").","- P10(\"Melissa\", \"Carlos\").","P14(\"Melissa\", \"Mark\").","P16(\"Nicholas\", \"Carlos\")."],"noiseless_rules":["P8(V2) :- P0(V0, V1), - P3(V1, V2), - P6(V1, V3).","P0(V1, V1) :- - P3(V1, V2), not -P5(V1, V2), not P7(V1, V2).","- P1(V0, V1) :- - P9(V0, V1), P16(V0, V2), not -P17(V1, V2).","P2(V1, V2) :- - P9(V0, V1), P16(V0, V2), not -P17(V1, V2).","- P3(V1, V2) :- - P10(V1, V2), P14(V1, V3), not -P15(V2, V3).","- P4(V1, V2) :- P11(V1, V2), P12(V2, V3), not P13(V2, V3).","P5(V1, V0) :- - P1(V0, V1).","- P6(V1, V1) :- P2(V1, V2), not P3(V1, V2), not P4(V1, V2).","- P7(V1, V2) :- P2(V1, V2), not P3(V1, V2), not P4(V1, V2)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_25_8_12_1_3_0.5_1.0_5_2_3","seed":25,"num_facts":4,"num_rules":13,"num_related_predicates":17,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.7142857142857142,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" spiritual_leader(\"Marcia\", \"Charlotte\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- gladiolus(\"Marcia\", \"Charlotte\").","bedrooms(\"Marcia\", \"Charlotte\").","preacher(\"Marcia\", \"Charlotte\").","- gamete(\"Marcia\", \"Charlotte\")."],"noisy_facts":["sunfish(\"Marcia\", \"Monica\").","gentleman(\"Monica\", \"Charlotte\").","butte(\"Marcia\", \"Charlotte\").","sorb(\"Marcia\", \"Monica\").","- overdraft(\"Monica\", \"Charlotte\").","porcelain(\"Monica\", \"Charlotte\").","laminar_flow_clean_room(\"Marcia\", \"Monica\").","- unnilquintium(\"Monica\")."],"min_fact_dicts_for_query":["- gladiolus(\"Marcia\", \"Charlotte\").","preacher(\"Marcia\", \"Charlotte\")."],"noiseless_rules":["- spiritual_leader(V0, V3) :- cortex(V0, V2), - clergyman(V0, V3), not embryonic_tissue(V0, V3), not -animal_tissue(V2, V3), not -ovum(V2, V3).","bone(V0) :- - clergyman(V0, V3), not gladiolus(V0, V3).","- store_data(V3) :- - clergyman(V0, V3), not gladiolus(V0, V3).","- connective_tissue(V0, V0) :- - clergyman(V0, V3), not gladiolus(V0, V3).","chalaza(V0) :- bone(V0).","egg(V0, V0) :- bone(V0).","cortex(V0, V3) :- - gladiolus(V0, V3), not -bedrooms(V0, V3), not gamete(V0, V3).","interstitial_tissue(V0) :- - gladiolus(V0, V3), not -bedrooms(V0, V3), not gamete(V0, V3).","- clergyman(V0, V3) :- preacher(V0, V3).","- embryonic_tissue(V3, V3) :- - store_data(V3).","- flesh(V3) :- - store_data(V3).","animal_tissue(V1, V0) :- - connective_tissue(V0, V1), not -chalaza(V0), not -interstitial_tissue(V0), not flesh(V1).","ovum(V0, V1) :- egg(V0, V1)."],"noisy_rules":{"a":["spiritual_leader(V0, V3) :- - bone(V0), - chalaza(V0), - egg(V0, V1), clergyman(V0, V3).","spiritual_leader(V1, V1) :- flesh(V1)."],"b":["- animal_tissue(V2, V3) :- connective_tissue(V0, V1), - cortex(V0, V2), embryonic_tissue(V0, V3), not animal_tissue(V2, V3), spiritual_leader(V0, V3).","- cortex(V0, V3) :- flesh(V1), spiritual_leader(V0, V3)."],"c":["connective_tissue(V0, V1) :- - bone(V0), - chalaza(V0), flesh(V1), - animal_tissue(V2, V3).","gamete(V0, V3) :- - bone(V0), - egg(V0, V1), clergyman(V0, V3), - ovum(V2, V3)."],"d":["- egg(V0, V0) :- - chalaza(V0).","- interstitial_tissue(V0) :- connective_tissue(V0, V1), sorb(V0, V1)."],"e":["- buskin(V0) :- - unnilquintium(V1), laminar_flow_clean_room(V0, V1), not -butte(V0, V3), - overdraft(V1, V3).","vulture(V0, V1) :- sunfish(V0, V1), porcelain(V1, V3), not -gentleman(V1, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_30_7_6_6_9_0.5_1.0_3_2_3","seed":30,"num_facts":9,"num_rules":7,"num_related_predicates":16,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"P6(\"Samantha\", \"Crystal\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P7(\"Ronald\", \"Samantha\").","- P8(\"Vincent\", \"Crystal\").","- P9(\"Vincent\", \"Crystal\").","- P10(\"Samantha\", \"Vincent\").","P11(\"Vincent\", \"Crystal\").","- P12(\"Samantha\", \"Vincent\").","- P13(\"Vincent\", \"Crystal\").","- P14(\"Ronald\", \"Samantha\").","P15(\"Samantha\", \"Crystal\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P7(\"Ronald\", \"Samantha\").","- P10(\"Samantha\", \"Vincent\").","P11(\"Vincent\", \"Crystal\").","- P12(\"Samantha\", \"Vincent\").","- P13(\"Vincent\", \"Crystal\").","- P14(\"Ronald\", \"Samantha\").","P15(\"Samantha\", \"Crystal\")."],"noiseless_rules":["P6(V1, V3) :- P1(V1, V3), not -P3(V1, V3), not P4(V1, V3).","- P0(V0, V1) :- P2(V0, V1), - P12(V1, V2), - P13(V2, V3).","P1(V1, V3) :- - P5(V0), - P14(V0, V1), P15(V1, V3).","P2(V0, V1) :- P7(V0, V1), - P10(V1, V2), P11(V2, V3).","P3(V2, V3) :- - P8(V2, V3), not P13(V2, V3).","- P4(V3, V3) :- - P9(V2, V3), not -P11(V2, V3).","- P5(V0) :- - P0(V0, V1), not P14(V0, V1)."],"noisy_rules":{}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_96_7_9_7_10_0.5_1.0_5_2_3","seed":96,"num_facts":10,"num_rules":10,"num_related_predicates":20,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"france(\"Tommy\", \"Yolanda\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["grassy(\"Jessica\").","- oriental(\"Tommy\", \"Joshua\").","- ledger.","smart_bomb(\"Tommy\", \"Yolanda\").","- write_letter(\"Joshua\", \"Yolanda\").","- baa_lamb(\"Yolanda\", \"Jessica\").","nestorian_church(\"Yolanda\", \"Jessica\").","- consumer_goods(\"Jessica\").","- pledge(\"Tommy\").","pickerel(\"Tommy\")."],"noisy_facts":["smoke.","- americana(\"Joshua\", \"Yolanda\").","shrub(\"Tommy\", \"Joshua\").","pubes(\"Joshua\", \"Jessica\").","- out(\"Tommy\", \"Joshua\")."],"min_fact_dicts_for_query":["grassy(\"Jessica\").","- oriental(\"Tommy\", \"Joshua\").","smart_bomb(\"Tommy\", \"Yolanda\").","- write_letter(\"Joshua\", \"Yolanda\").","- baa_lamb(\"Yolanda\", \"Jessica\")."],"noiseless_rules":["france(V0, V2) :- fraternization(V3), depth(V0, V2), not -sacrum(V0, V3).","back(V0, V3) :- adults(V0, V1), new_zealand(V1, V3).","fraternization(V3) :- grassy(V3), not consumer_goods(V3).","- cost_cutting(V0, V2) :- - oriental(V0, V1), smart_bomb(V0, V2), - write_letter(V1, V2), - baa_lamb(V2, V3), not -nestorian_church(V2, V3).","- coronal_suture(V0) :- - oriental(V0, V1), smart_bomb(V0, V2), - write_letter(V1, V2), - baa_lamb(V2, V3), not -nestorian_church(V2, V3).","depth(V0, V2) :- - cost_cutting(V0, V2), not star_in_moview(V0, V2).","adults(V0, V2) :- - cost_cutting(V0, V2), not star_in_moview(V0, V2).","sacrum(V0, V3) :- back(V0, V3), not coronal_suture(V0), not consumer_goods(V3), not pledge(V0), not -pickerel(V0).","new_zealand(V2, V0) :- - cost_cutting(V0, V2), not coronal_suture(V0), not ledger.","- star_in_moview(V0, V2) :- - cost_cutting(V0, V2), not coronal_suture(V0), not ledger."],"noisy_rules":{"a":["- france(V0, V1) :- not fraternization(V3), - adults(V0, V1), - sacrum(V0, V3).","- france(V0, V3) :- - adults(V0, V1), - sacrum(V0, V3)."],"b":["star_in_moview(V0, V2) :- - back(V0, V3), cost_cutting(V0, V2), not france(V0, V2).","ledger(V0, V2) :- not -star_in_moview(V0, V2), - france(V0, V2)."],"c":["coronal_suture(V0) :- star_in_moview(V0, V2).","- depth(V3, V3) :- - fraternization(V3)."],"d":["consumer_goods(V3) :- - adults(V0, V1), - new_zealand(V1, V3), not -shrub(V0, V1).","- new_zealand(V2, V2) :- cost_cutting(V0, V2), smoke."],"e":["- winter_sport(V0, V3) :- - out(V0, V1), pubes(V1, V3).","scantling(V1) :- - americana(V1, V2)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_13_8_10_10_12_0.5_1.0_5_3_4","seed":13,"num_facts":15,"num_rules":11,"num_related_predicates":26,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" P10(\"Sheila\", \"Lucas\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P11(\"Joe\", \"Lucas\").","P12(\"Sheila\", \"Renee\", \"Lucas\").","P13(\"Sheila\", \"Kimberly\", \"Joe\").","P14(\"Sheila\").","- P15(\"Kimberly\", \"Renee\", \"Lucas\").","- P16(\"Sheila\", \"Renee\").","P17(\"Kimberly\", \"Lucas\").","- P18(\"Sheila\", \"Kimberly\", \"Joe\").","P19(\"Kimberly\", \"Renee\", \"Lucas\").","P20(\"Sheila\", \"Renee\", \"Lucas\").","- P21(\"Sheila\", \"Renee\", \"Lucas\").","P22(\"Kimberly\", \"Renee\", \"Lucas\").","- P23(\"Kimberly\", \"Renee\", \"Lucas\").","- P24(\"Kimberly\", \"Renee\", \"Lucas\").","- P25(\"Kimberly\", \"Renee\", \"Lucas\")."],"noisy_facts":["P28(\"Sheila\", \"Kimberly\", \"Lucas\").","P36(\"Kimberly\", \"Renee\", \"Joe\").","P30(\"Renee\", \"Joe\").","P27(\"Sheila\", \"Kimberly\", \"Lucas\").","P33(\"Renee\", \"Joe\", \"Lucas\").","P31(\"Renee\", \"Joe\").","P32(\"Kimberly\", \"Renee\", \"Lucas\").","P37(\"Kimberly\", \"Renee\", \"Joe\").","- P35(\"Sheila\", \"Kimberly\", \"Renee\").","P26(\"Sheila\", \"Kimberly\", \"Joe\")."],"min_fact_dicts_for_query":["- P11(\"Joe\", \"Lucas\").","P12(\"Sheila\", \"Renee\", \"Lucas\").","P13(\"Sheila\", \"Kimberly\", \"Joe\").","- P15(\"Kimberly\", \"Renee\", \"Lucas\").","P22(\"Kimberly\", \"Renee\", \"Lucas\")."],"noiseless_rules":["- P10(V0, V4) :- P0(V1, V3), - P1(V3, V4), P4(V0, V1, V3), not -P5(V0, V1, V3), not -P7(V0, V1, V4).","P0(V1, V3) :- - P2(V1, V3), - P8(V1, V3), - P9(V0, V1, V4).","- P1(V3, V4) :- - P11(V3, V4), P22(V1, V2, V4).","- P2(V1, V3) :- - P11(V3, V4), P22(V1, V2, V4).","P3(V0, V2, V4) :- P12(V0, V2, V4).","P4(V0, V1, V3) :- P13(V0, V1, V3).","P5(V0, V1, V3) :- P14(V0), - P16(V0, V2), P17(V1, V4), - P18(V0, V1, V3), not -P19(V1, V2, V4).","P6(V0, V3, V4) :- P14(V0), - P16(V0, V2), P17(V1, V4), - P18(V0, V1, V3), not -P19(V1, V2, V4).","P7(V0, V1, V4) :- - P2(V1, V3), P3(V0, V2, V4), not -P6(V0, V3, V4), not -P20(V0, V2, V4), not P21(V0, V2, V4).","- P8(V1, V3) :- - P2(V1, V3), P3(V0, V2, V4), not -P6(V0, V3, V4), not -P20(V0, V2, V4), not P21(V0, V2, V4).","- P9(V4, V1, V4) :- - P15(V1, V2, V4), not -P22(V1, V2, V4), not P23(V1, V2, V4), not P24(V1, V2, V4), not P25(V1, V2, V4)."],"noisy_rules":{"a":["P10(V0, V4) :- not -P2(V1, V3), - P3(V0, V2, V4), - P4(V0, V1, V3).","P10(V1, V1) :- P8(V1, V3)."],"b":["- P14(V0) :- P10(V0, V4).","- P4(V0, V1, V3) :- P1(V3, V4), - P4(V0, V1, V3), not -P10(V0, V4)."],"c":["- P7(V0, V1, V4) :- not P5(V0, V1, V3), - P6(V0, V3, V4), P8(V1, V3).","- P20(V0, V4, V4) :- P2(V1, V3), - P4(V0, V1, V3), - P7(V0, V1, V4)."],"d":["P15(V1, V1, V3) :- - P4(V0, V1, V3), not -P26(V0, V1, V3).","- P14(V0) :- - P0(V1, V3), not P6(V0, V3, V4), - P7(V0, V1, V4), P27(V0, V1, V4), P28(V0, V1, V4)."],"e":["P29(V3, V4) :- P30(V2, V3), P31(V2, V3), P32(V1, V2, V4), not -P33(V2, V3, V4).","P34(V1) :- - P35(V0, V1, V2), P36(V1, V2, V3), P37(V1, V2, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_21_8_12_12_13_0.5_1.0_5_2_3","seed":21,"num_facts":15,"num_rules":13,"num_related_predicates":28,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8571428571428572,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P12(\"Courtney\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P13(\"Kathryn\", \"Devon\").","P14.","P15(\"Devon\", \"Courtney\").","P16(\"Kathryn\", \"Cathy\").","P17(\"Devon\", \"Courtney\").","P18(\"Devon\", \"Courtney\").","- P19(\"Courtney\", \"Cathy\").","P20(\"Devon\", \"Courtney\").","P21(\"Devon\", \"Courtney\").","- P22(\"Devon\", \"Courtney\").","- P23(\"Cathy\").","P24(\"Cathy\").","P25(\"Cathy\").","P26(\"Cathy\").","P27(\"Kathryn\", \"Devon\")."],"noisy_facts":["- P31(\"Kathryn\").","P33(\"Kathryn\", \"Devon\").","- P28.","- P36(\"Devon\", \"Cathy\").","- P34(\"Kathryn\", \"Courtney\").","- P32(\"Kathryn\").","- P29(\"Kathryn\", \"Cathy\")."],"min_fact_dicts_for_query":["P13(\"Kathryn\", \"Devon\").","P14.","P16(\"Kathryn\", \"Cathy\").","P17(\"Devon\", \"Courtney\").","P21(\"Devon\", \"Courtney\")."],"noiseless_rules":["- P12(V2) :- P0(V1), P1(V0, V3), P6(V1, V2), not -P9(V1, V3), not -P10(V1, V3).","P0(V1) :- P5(V0, V3), - P7(V1, V3).","P1(V0, V3) :- P13(V0, V1), P16(V0, V3), P17(V1, V2), not -P18(V1, V2), not P19(V2, V3).","P2(V0, V1) :- P13(V0, V1), P16(V0, V3), P17(V1, V2), not -P18(V1, V2), not P19(V2, V3).","- P3(V1, V2) :- P13(V0, V1), P16(V0, V3), P17(V1, V2), not -P18(V1, V2), not P19(V2, V3).","- P4(V3) :- P13(V0, V1), P16(V0, V3), P17(V1, V2), not -P18(V1, V2), not P19(V2, V3).","P5(V0, V1) :- P2(V0, V1), not P8(V0, V1), not -P27(V0, V1).","P6(V1, V2) :- P14, P21(V1, V2).","- P7(V1, V1) :- P14, P21(V1, V2).","- P8(V2, V1) :- P14, P21(V1, V2).","P9(V1, V2) :- - P3(V1, V2), not -P11(V1, V2), not -P20(V1, V2), not -P21(V1, V2), not P22(V1, V2).","P10(V3, V3) :- - P4(V3), not P23(V3), not -P24(V3), not -P25(V3), not -P26(V3).","P11(V1, V2) :- P15(V1, V2)."],"noisy_rules":{"a":["P12(V2) :- P3(V1, V2).","P12(V2) :- - P11(V1, V2)."],"b":["- P11(V2, V2) :- P12(V2).","- P17(V1, V2) :- - P5(V0, V3), - P6(V1, V2), not P11(V1, V2), not -P12(V2)."],"c":["- P15(V1, V2) :- - P0(V1), - P1(V0, V3), not -P3(V1, V2), not P6(V1, V2), - P11(V1, V2).","- P10(V1, V3) :- - P0(V1), - P1(V0, V3), - P6(V1, V2)."],"d":["- P6(V3, V3) :- P4(V3), not P28.","P23(V3) :- P4(V3), - P5(V0, V3), - P6(V1, V2), not P29(V0, V3)."],"e":["- P30(V0, V2) :- not P31(V0), not P32(V0), P33(V0, V1), - P34(V0, V2).","- P35(V1, V3) :- - P36(V1, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_72_5_8_3_4_0.5_1.0_3_2_3","seed":72,"num_facts":4,"num_rules":9,"num_related_predicates":13,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"P8(\"Emily\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P9(\"Denise\", \"Kimberly\").","P10(\"Emily\", \"Kimberly\").","- P11(\"Kimberly\", \"Cody\").","- P12(\"Emily\", \"Kimberly\")."],"noisy_facts":["- P19(\"Emily\", \"Kimberly\").","- P17(\"Denise\", \"Kimberly\").","- P21(\"Emily\", \"Kimberly\").","- P13(\"Emily\", \"Cody\").","- P18(\"Emily\", \"Kimberly\").","P14(\"Kimberly\", \"Cody\").","- P22(\"Emily\", \"Cody\")."],"min_fact_dicts_for_query":["P9(\"Denise\", \"Kimberly\").","P10(\"Emily\", \"Kimberly\").","- P11(\"Kimberly\", \"Cody\")."],"noiseless_rules":["P8(V1) :- - P3(V2), - P4(V1, V2).","- P0(V0, V2) :- P9(V0, V2), P10(V1, V2), - P11(V2, V3).","P1(V1, V3) :- P9(V0, V2), P10(V1, V2), - P11(V2, V3).","P2(V2, V3) :- P9(V0, V2), P10(V1, V2), - P11(V2, V3).","- P3(V2) :- - P0(V0, V2), not -P5(V0, V2), not P7(V0, V2).","- P4(V1, V2) :- P1(V1, V3), P10(V1, V2), not P12(V1, V2).","P5(V3, V2) :- P1(V1, V3), P10(V1, V2), not P12(V1, V2).","- P6(V2, V3) :- P1(V1, V3), P10(V1, V2), not P12(V1, V2).","- P7(V3, V2) :- P2(V2, V3), not P6(V2, V3)."],"noisy_rules":{"a":["- P8(V1) :- - P1(V1, V3), - P5(V0, V2).","- P8(V2) :- P3(V2), - P5(V0, V2)."],"b":["P3(V2) :- P0(V0, V2), - P8(V1).","- P2(V1, V1) :- - P8(V1)."],"c":["P4(V1, V2) :- - P1(V1, V3), - P5(V0, V2), P7(V0, V2).","P4(V2, V2) :- P6(V2, V3)."],"d":["P3(V1) :- - P1(V1, V3), - P13(V1, V3).","- P15(V2, V3) :- P14(V2, V3)."],"e":["- P16(V0, V2) :- - P17(V0, V2), - P18(V1, V2), - P19(V1, V2).","P20(V1, V3) :- - P21(V1, V2), - P22(V1, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_95_10_12_9_9_0.5_1.0_5_2_3","seed":95,"num_facts":13,"num_rules":13,"num_related_predicates":26,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.6666666666666667,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P12(\"Cheryl\", \"Erin\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P13(\"Paul\").","- P14(\"Paul\").","P15(\"Cheryl\").","P16(\"Cheryl\", \"Erin\").","- P17(\"Paul\", \"Cheryl\").","P18(\"Paul\", \"Cheryl\").","- P19(\"Cheryl\").","P20(\"Paul\", \"Erin\").","- P21(\"Cheryl\", \"Jane\").","P22(\"Cheryl\", \"Erin\").","- P23(\"Paul\", \"Cheryl\").","- P24(\"Cheryl\", \"Erin\").","- P25(\"Cheryl\", \"Erin\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P13(\"Paul\").","P15(\"Cheryl\").","- P19(\"Cheryl\").","P20(\"Paul\", \"Erin\").","- P21(\"Cheryl\", \"Jane\").","- P23(\"Paul\", \"Cheryl\").","- P24(\"Cheryl\", \"Erin\")."],"noiseless_rules":["- P12(V1, V3) :- P3(V3), P7(V0, V1), not -P9(V1, V3), not -P10(V1, V3).","- P0(V1, V3) :- P13(V0), - P19(V1), P20(V0, V3), - P21(V1, V2), not -P22(V1, V3).","- P1(V2) :- P13(V0), - P19(V1), P20(V0, V3), - P21(V1, V2), not -P22(V1, V3).","- P2(V1, V2) :- P13(V0), - P19(V1), P20(V0, V3), - P21(V1, V2), not -P22(V1, V3).","P3(V3) :- P5(V0, V3).","P4(V0) :- - P14(V0).","P5(V0, V3) :- P15(V1), - P23(V0, V1), - P24(V1, V3), not P25(V1, V3).","- P6(V0, V1) :- P15(V1), - P23(V0, V1), - P24(V1, V3), not P25(V1, V3).","P7(V1, V1) :- - P0(V1, V3), not P11(V1, V3).","P8(V2, V2) :- - P1(V2).","P9(V0, V0) :- P4(V0).","P10(V1, V3) :- - P2(V1, V2), - P6(V0, V1), P8(V2, V3), not P17(V0, V1), not -P18(V0, V1).","- P11(V1, V3) :- P16(V1, V3)."],"noisy_rules":{}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_1_7_9_6_9_0.5_1.0_5_2_3","seed":1,"num_facts":9,"num_rules":10,"num_related_predicates":19,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" appalachians(\"Michael\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["affiliation(\"Natasha\", \"Michael\").","- bubble_and_squeak(\"Natasha\", \"Mark\").","stob(\"Natasha\", \"Michael\").","crooner(\"Natasha\", \"Mark\").","chinese(\"Natasha\", \"Mark\").","negativly_charged(\"Natasha\", \"Mark\").","indumentum(\"Natasha\", \"Michael\").","greenish_blue(\"Natasha\", \"Michael\").","- crop_grower(\"Natasha\", \"Michael\")."],"noisy_facts":["january(\"Kevin\").","- male_chicken(\"Michael\").","percussion_instrument(\"Natasha\", \"Mark\").","gentle(\"Michael\", \"Kevin\").","- bowling(\"Kevin\").","school_of_fish(\"Mark\", \"Michael\").","bevatron(\"Mark\", \"Kevin\").","- four_poster(\"Mark\").","susan_b_anthony_dollar(\"Mark\", \"Michael\").","- hoodoo(\"Mark\", \"Kevin\").","report(\"Mark\", \"Michael\")."],"min_fact_dicts_for_query":["affiliation(\"Natasha\", \"Michael\").","- bubble_and_squeak(\"Natasha\", \"Mark\").","stob(\"Natasha\", \"Michael\")."],"noiseless_rules":["- appalachians(V2) :- - motors(V0), obelion(V0), - palm(V0, V1), - hold(V0, V2).","smoker(V0, V2) :- grains(V0, V2), not hold(V0, V2), not -ten_toes(V0, V2), not -indumentum(V0, V2).","- motors(V0) :- affiliation(V0, V2), not -indumentum(V0, V2), not -greenish_blue(V0, V2), not crop_grower(V0, V2).","grains(V0, V2) :- affiliation(V0, V2), not -indumentum(V0, V2), not -greenish_blue(V0, V2), not crop_grower(V0, V2).","- day_camp(V0, V0) :- affiliation(V0, V2), not -indumentum(V0, V2), not -greenish_blue(V0, V2), not crop_grower(V0, V2).","obelion(V0) :- - palm(V0, V1), not -breadstick(V0, V1).","- palm(V0, V1) :- - bubble_and_squeak(V0, V1).","- hold(V0, V2) :- stob(V0, V2).","ten_toes(V0, V2) :- stob(V0, V2).","breadstick(V0, V1) :- smoker(V0, V2), - day_camp(V0, V1), not -crooner(V0, V1), not -chinese(V0, V1), not -negativly_charged(V0, V1)."],"noisy_rules":{"a":["appalachians(V0) :- motors(V0), not obelion(V0).","appalachians(V2) :- not smoker(V0, V2), day_camp(V0, V1), hold(V0, V2), - ten_toes(V0, V2)."],"b":["- ten_toes(V0, V2) :- motors(V0), palm(V0, V1), appalachians(V2).","hold(V0, V2) :- - smoker(V0, V2), not obelion(V0), not -hold(V0, V2), appalachians(V2)."],"c":["- ten_toes(V0, V2) :- - grains(V0, V2), - breadstick(V0, V1).","- affiliation(V0, V1) :- not -motors(V0), palm(V0, V1)."],"d":["crop_grower(V0, V1) :- palm(V0, V1), not breadstick(V0, V1), not -percussion_instrument(V0, V1).","- gate(V2, V0) :- not -motors(V0), - grains(V0, V2), - obelion(V0), hold(V0, V2)."],"e":["- cause_overeating(V1) :- - male_chicken(V2), school_of_fish(V1, V2), not -report(V1, V2), susan_b_anthony_dollar(V1, V2), bevatron(V1, V3).","rapper(V2, V3) :- - four_poster(V1), - bowling(V3), january(V3), - hoodoo(V1, V3), gentle(V2, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_96_7_9_7_7_0.5_1.0_3_2_3","seed":96,"num_facts":10,"num_rules":10,"num_related_predicates":20,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"psilosis(\"Juan\", \"Barbara\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["mustard(\"Brian\").","storm_sewer(\"Juan\", \"Barbara\").","modern_ballet(\"Juan\", \"Antonio\").","airplanes(\"Antonio\", \"Barbara\").","efficiency_apartment(\"Antonio\", \"Barbara\").","lilangeni(\"Juan\").","bugs(\"Barbara\", \"Brian\").","do_many_things(\"Juan\", \"Barbara\").","imitation(\"Juan\", \"Brian\").","ticket(\"Brian\")."],"noisy_facts":[],"min_fact_dicts_for_query":["mustard(\"Brian\").","storm_sewer(\"Juan\", \"Barbara\").","modern_ballet(\"Juan\", \"Antonio\").","airplanes(\"Antonio\", \"Barbara\").","efficiency_apartment(\"Antonio\", \"Barbara\").","lilangeni(\"Juan\").","bugs(\"Barbara\", \"Brian\").","do_many_things(\"Juan\", \"Barbara\").","imitation(\"Juan\", \"Brian\").","ticket(\"Brian\")."],"noiseless_rules":["psilosis(V0, V2) :- element(V3), authentication(V0, V2), pleasure(V0, V3).","trot(V0, V3) :- stirrup_cup(V2), finding_information(V0, V2), bugs(V2, V3).","element(V3) :- mustard(V3), ticket(V3).","crying_on_screen(V0, V2) :- storm_sewer(V0, V2), airplanes(V1, V2), efficiency_apartment(V1, V2).","interest(V0) :- storm_sewer(V0, V2), airplanes(V1, V2), efficiency_apartment(V1, V2).","authentication(V0, V2) :- crying_on_screen(V0, V2), on_hand(V0, V2).","stirrup_cup(V2) :- crying_on_screen(V0, V2), on_hand(V0, V2).","pleasure(V0, V3) :- trot(V0, V3), interest(V0), lilangeni(V0).","finding_information(V0, V2) :- modern_ballet(V0, V1), do_many_things(V0, V2), imitation(V0, V3).","on_hand(V0, V2) :- modern_ballet(V0, V1), do_many_things(V0, V2), imitation(V0, V3)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_18_4_4_4_7_0.5_1.0_5_3_4","seed":18,"num_facts":6,"num_rules":5,"num_related_predicates":11,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.3333333333333333,"num_noise_rules_per_type":2,"num_rules_with_default_negation":3,"target_query":"P4(\"Jonathan\", \"Michele\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P5(\"Jonathan\", \"Michele\", \"Lynn\").","P6(\"Samuel\", \"Samantha\", \"Lynn\").","P7(\"Michele\", \"Samuel\", \"Samantha\").","- P8(\"Jonathan\", \"Samuel\", \"Lynn\").","- P9(\"Jonathan\", \"Samuel\", \"Lynn\").","- P10(\"Jonathan\", \"Samuel\", \"Lynn\")."],"noisy_facts":["- P14(\"Jonathan\", \"Michele\", \"Samantha\").","- P13(\"Jonathan\").","- P18(\"Jonathan\", \"Samantha\", \"Lynn\").","P22(\"Samantha\", \"Lynn\").","P11(\"Jonathan\").","- P15(\"Jonathan\", \"Michele\", \"Samantha\").","- P21(\"Jonathan\", \"Lynn\").","P20(\"Jonathan\", \"Samantha\").","P12(\"Jonathan\").","- P23(\"Jonathan\", \"Michele\", \"Samuel\").","P16(\"Jonathan\", \"Michele\").","- P24(\"Jonathan\", \"Samantha\", \"Lynn\")."],"min_fact_dicts_for_query":["P5(\"Jonathan\", \"Michele\", \"Lynn\").","P6(\"Samuel\", \"Samantha\", \"Lynn\").","P7(\"Michele\", \"Samuel\", \"Samantha\").","- P8(\"Jonathan\", \"Samuel\", \"Lynn\").","- P10(\"Jonathan\", \"Samuel\", \"Lynn\")."],"noiseless_rules":["P4(V0, V1) :- P0(V0), - P1(V2, V4), - P2(V0, V1, V3), not -P7(V1, V2, V3).","P0(V0) :- P5(V0, V1, V4), - P10(V0, V2, V4).","- P1(V2, V4) :- P3(V0, V4), P6(V2, V3, V4).","- P2(V0, V1, V3) :- P6(V2, V3, V4), P7(V1, V2, V3), - P8(V0, V2, V4), not P9(V0, V2, V4), not P10(V0, V2, V4).","P3(V0, V4) :- P6(V2, V3, V4), P7(V1, V2, V3), - P8(V0, V2, V4), not P9(V0, V2, V4), not P10(V0, V2, V4)."],"noisy_rules":{"a":["- P4(V0, V0) :- - P0(V0), P1(V2, V4).","- P4(V0, V2) :- - P0(V0), P1(V2, V4), not P3(V0, V4)."],"b":["P10(V0, V0, V0) :- - P4(V0, V1).","- P7(V1, V2, V0) :- not P0(V0), P1(V2, V4), - P4(V0, V1)."],"c":["P2(V0, V0, V2) :- - P0(V0), P1(V2, V4), not P3(V0, V4).","- P6(V0, V0, V0) :- - P0(V0)."],"d":["P10(V0, V0, V4) :- - P0(V0), - P3(V0, V4), P11(V0), P12(V0), - P13(V0).","- P7(V1, V4, V3) :- not -P2(V0, V1, V3), - P3(V0, V4), not P14(V0, V1, V3), - P15(V0, V1, V3)."],"e":["- P17(V0, V3, V4) :- P16(V0, V1), - P18(V0, V3, V4).","- P19(V2) :- P20(V0, V3), - P21(V0, V4), P22(V3, V4), - P23(V0, V1, V2), - P24(V0, V3, V4)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_22_3_2_1_4_0.5_1.0_5_2_3","seed":22,"num_facts":3,"num_rules":3,"num_related_predicates":6,"max_depth_of_rule_graph":1,"average_depth_of_rule_graph":1.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":2,"target_query":"woman(\"Molly\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["cat(\"Timothy\", \"Molly\").","mistress(\"Molly\", \"Savannah\").","neural_actions(\"Molly\", \"Savannah\")."],"noisy_facts":[],"min_fact_dicts_for_query":["cat(\"Timothy\", \"Molly\").","mistress(\"Molly\", \"Savannah\").","neural_actions(\"Molly\", \"Savannah\")."],"noiseless_rules":["woman(V2) :- smasher(V2), old_woman(V3), cat(V0, V2), mistress(V2, V3).","smasher(V2) :- cat(V0, V2), mistress(V2, V3).","old_woman(V3) :- mistress(V2, V3), neural_actions(V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_87_8_8_4_6_0.5_1.0_5_2_3","seed":87,"num_facts":8,"num_rules":9,"num_related_predicates":17,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.7142857142857142,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"going_somewhere(\"Justin\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["spider_mite(\"Justin\").","- boss(\"Ryan\").","finding_stockings_on_christmas_morning(\"Nicholas\", \"Ryan\").","- arrive_at_airports(\"Ryan\").","- pitcher(\"Nicholas\", \"Justin\").","- americana(\"Justin\", \"Ryan\").","- seeds(\"Nicholas\", \"Justin\").","fresh_air(\"Justin\", \"Ryan\")."],"noisy_facts":["- long_tom(\"Breanna\", \"Nicholas\").","tender(\"Breanna\", \"Ryan\").","peach(\"Ryan\").","- keyboard(\"Nicholas\", \"Ryan\").","- flies(\"Breanna\", \"Ryan\")."],"min_fact_dicts_for_query":["spider_mite(\"Justin\").","- pitcher(\"Nicholas\", \"Justin\").","- seeds(\"Nicholas\", \"Justin\").","fresh_air(\"Justin\", \"Ryan\")."],"noiseless_rules":["going_somewhere(V2) :- degree(V3), - aquarium(V0, V3), - chicken_meat(V0, V3), - pitcher(V1, V2), not americana(V2, V3).","degree(V3) :- spider_mite(V2), - seeds(V1, V2), fresh_air(V2, V3).","- arietta(V3, V3) :- degree(V3), not boss(V3).","respiration(V3) :- degree(V3), not boss(V3).","- aquarium(V3, V3) :- - arietta(V1, V3), not -colloid(V1, V3), not polish(V1, V3).","- chicken_meat(V0, V3) :- - spring_chicken(V0, V3).","colloid(V1, V3) :- finding_stockings_on_christmas_morning(V1, V3).","- spring_chicken(V3, V3) :- degree(V3), not arrive_at_airports(V3).","- polish(V1, V1) :- respiration(V1)."],"noisy_rules":{"a":["- going_somewhere(V3) :- aquarium(V0, V3), spring_chicken(V0, V3).","- going_somewhere(V0) :- - degree(V3), - respiration(V1), - colloid(V1, V3), spring_chicken(V0, V3), not -polish(V1, V3)."],"b":["- colloid(V1, V3) :- arietta(V1, V3), - respiration(V1), - going_somewhere(V2).","seeds(V1, V2) :- aquarium(V0, V3), - colloid(V1, V3), - going_somewhere(V2)."],"c":["boss(V3) :- arietta(V1, V3).","- spider_mite(V3) :- polish(V1, V3)."],"d":["boss(V3) :- - respiration(V1), aquarium(V0, V3), not colloid(V1, V3), polish(V1, V3), tender(V0, V3).","aquarium(V0, V3) :- - degree(V3), chicken_meat(V0, V3), polish(V1, V3), - flies(V0, V3)."],"e":["- strap(V1, V3) :- peach(V3), - keyboard(V1, V3).","mac(V0, V1) :- - long_tom(V0, V1)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_0_10_11_6_7_0.5_1.0_3_2_3","seed":0,"num_facts":10,"num_rules":12,"num_related_predicates":22,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.4444444444444446,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" housing(\"Linda\", \"Michael\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["bat(\"Linda\", \"Michael\").","day_camp(\"Linda\", \"Michael\").","- shelter(\"Linda\", \"Michael\").","classic(\"Keith\", \"Michael\").","percussion_instrument(\"Keith\", \"Timothy\").","- negativly_charged(\"Timothy\", \"Michael\").","- breadstick(\"Linda\", \"Keith\").","- nut(\"Linda\", \"Michael\").","concentration_camp(\"Keith\", \"Michael\").","- work_camp(\"Keith\", \"Michael\")."],"noisy_facts":["- canary(\"Linda\").","motors(\"Linda\", \"Michael\").","alto(\"Linda\", \"Keith\").","cause_overeating(\"Linda\", \"Keith\").","- crooner(\"Linda\", \"Michael\")."],"min_fact_dicts_for_query":["- shelter(\"Linda\", \"Michael\").","- breadstick(\"Linda\", \"Keith\")."],"noiseless_rules":["- housing(V0, V3) :- - block(V0, V3), not kennel(V0, V3).","- block(V0, V3) :- - artifact(V3), - breadstick(V0, V1), not nut(V0, V3).","bread(V0) :- - artifact(V3), - breadstick(V0, V1), not nut(V0, V3).","- site(V1, V3) :- - starches(V0, V1), - camp(V0, V3), creation(V2, V3).","- starches(V0, V0) :- bread(V0).","hitting(V0, V3) :- bat(V0, V3), percussion_instrument(V1, V2), not negativly_charged(V2, V3).","- camp(V0, V3) :- day_camp(V0, V3), concentration_camp(V1, V3), not work_camp(V1, V3).","cabinet(V0, V1) :- day_camp(V0, V3), concentration_camp(V1, V3), not work_camp(V1, V3).","- shell(V1, V1) :- - site(V1, V3).","- artifact(V3) :- - shelter(V0, V3).","- kennel(V0, V3) :- hitting(V0, V3), cabinet(V0, V1), - shell(V0, V2).","creation(V3, V3) :- classic(V1, V3), not -concentration_camp(V1, V3)."],"noisy_rules":{"a":["housing(V0, V3) :- block(V0, V3), - cabinet(V0, V1).","housing(V0, V3) :- camp(V0, V3), shell(V0, V2)."],"b":["starches(V0, V0) :- housing(V0, V3).","starches(V0, V0) :- - bread(V0), housing(V0, V3)."],"c":["shelter(V0, V3) :- camp(V0, V3), kennel(V0, V3).","artifact(V3) :- block(V0, V3), kennel(V0, V3), - creation(V2, V3)."],"d":["site(V3, V3) :- - hitting(V0, V3), motors(V0, V3).","- percussion_instrument(V3, V3) :- artifact(V3)."],"e":["- singer(V0, V3) :- - canary(V0), alto(V0, V1), - crooner(V0, V3).","bubble_and_squeak(V0, V1) :- cause_overeating(V0, V1)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_48_7_7_6_8_0.5_1.0_3_2_3","seed":48,"num_facts":9,"num_rules":8,"num_related_predicates":17,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"paper_money(\"Richard\", \"Michael\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- algerian(\"Richard\", \"Michael\").","silver_dollar(\"Darrell\").","stirrup_cup(\"Richard\", \"Michael\").","- sheep(\"Richard\", \"Michael\").","gentle(\"Richard\", \"Michael\").","element(\"Richard\", \"Darrell\").","susan_b_anthony_dollar(\"Richard\", \"Michael\").","rapper(\"Richard\", \"Michael\").","- interest(\"Richard\", \"Michael\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- algerian(\"Richard\", \"Michael\").","silver_dollar(\"Darrell\").","stirrup_cup(\"Richard\", \"Michael\").","element(\"Richard\", \"Darrell\").","susan_b_anthony_dollar(\"Richard\", \"Michael\")."],"noiseless_rules":["paper_money(V1, V3) :- - bill(V3), singer(V1, V2), not -lambs(V2, V3).","- bill(V3) :- fifty_dollar_bill(V1), - dollar(V1, V3), not -rapper(V1, V3).","fifty_dollar_bill(V1) :- - algerian(V1, V3), not -stirrup_cup(V1, V3).","singer(V1, V1) :- - canary(V1, V3), not -rapper(V1, V3).","- dollar(V1, V3) :- silver_dollar(V2), element(V1, V2), susan_b_anthony_dollar(V1, V3).","wool(V1, V3) :- silver_dollar(V2), element(V1, V2), susan_b_anthony_dollar(V1, V3).","- canary(V1, V3) :- stirrup_cup(V1, V3), not interest(V1, V3).","lambs(V1, V3) :- wool(V1, V3), not sheep(V1, V3), not -gentle(V1, V3)."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_70_8_12_3_4_0.5_1.0_3_2_3","seed":70,"num_facts":6,"num_rules":13,"num_related_predicates":19,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"four_legs(\"Donald\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- water_flow(\"Donald\").","unit_of_measurement(\"Donald\", \"Justin\").","customer(\"Levi\", \"Deborah\").","- treated_like_royalty(\"Donald\", \"Justin\").","- celibacy(\"Donald\", \"Justin\").","- merganser."],"noisy_facts":[],"min_fact_dicts_for_query":["- water_flow(\"Donald\").","- treated_like_royalty(\"Donald\", \"Justin\")."],"noiseless_rules":["four_legs(V1) :- - book_bag(V3), educational(V0, V1), not sofa_bed(V1, V3).","- cutter(V1, V2) :- - water_flow(V1), - treated_like_royalty(V1, V2), not celibacy(V1, V2).","birthday_treat(V1, V2) :- - water_flow(V1), - treated_like_royalty(V1, V2), not celibacy(V1, V2).","- book_bag(V1) :- - cutter(V1, V2), not acardia(V1, V2), not -tooth(V1, V2).","- acardia(V1, V2) :- unit_of_measurement(V1, V2).","- gas_shell(V1) :- unit_of_measurement(V1, V2).","fly(V2) :- unit_of_measurement(V1, V2).","poisonous_plant(V2, V2) :- - gas_shell(V1), unit_of_measurement(V1, V2).","educational(V2, V1) :- birthday_treat(V1, V2), not -fly(V2), not merganser.","tooth(V1, V2) :- birthday_treat(V1, V2), not -fly(V2), not merganser.","passenger_ticket(V2, V1) :- birthday_treat(V1, V2), not -fly(V2), not merganser.","- sofa_bed(V0, V3) :- poisonous_plant(V0, V3), not -passenger_ticket(V0, V3), not -confidant(V0, V3).","confidant(V0, V3) :- customer(V0, V3)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_70_6_6_5_7_0.5_1.0_3_2_3","seed":70,"num_facts":8,"num_rules":7,"num_related_predicates":15,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"exercise(\"Jose\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["squirrel(\"Andrea\", \"Jose\").","physical_activity(\"Andrea\", \"Jose\").","running(\"Andrea\", \"Timothy\").","- seed(\"Andrea\", \"Timothy\").","oak(\"Jose\", \"Courtney\").","playing(\"Andrea\", \"Timothy\").","- college(\"Andrea\", \"Timothy\").","playing_tennis(\"Andrea\", \"Timothy\")."],"noisy_facts":["- fancy_goods(\"Andrea\", \"Jose\").","basic(\"Courtney\").","nut.","- sporting_goods(\"Jose\", \"Courtney\").","- puppet_government(\"Jose\", \"Timothy\")."],"min_fact_dicts_for_query":["squirrel(\"Andrea\", \"Jose\").","physical_activity(\"Andrea\", \"Jose\").","- seed(\"Andrea\", \"Timothy\").","oak(\"Jose\", \"Courtney\").","- college(\"Andrea\", \"Timothy\")."],"noiseless_rules":["exercise(V1) :- fall_from_oak_trees(V3), - riding_bicycle(V0, V1), not -excercise(V1, V3).","- acorns(V1, V2) :- squirrel(V0, V1), - seed(V0, V2), oak(V1, V3).","fall_from_oak_trees(V2) :- - acorns(V1, V2), not learning(V1, V2).","- riding_bicycle(V0, V1) :- physical_activity(V0, V1), - college(V0, V2).","- school(V0, V2) :- physical_activity(V0, V1), - college(V0, V2).","- learning(V2, V2) :- - school(V0, V2), not -playing(V0, V2), not college(V0, V2).","excercise(V0, V2) :- running(V0, V2), not -playing(V0, V2), not -playing_tennis(V0, V2)."],"noisy_rules":{"a":["- exercise(V1) :- riding_bicycle(V0, V1).","- exercise(V3) :- - fall_from_oak_trees(V3)."],"b":["school(V0, V2) :- school(V0, V2), - exercise(V1).","college(V0, V2) :- school(V0, V2), - exercise(V1)."],"c":["- excercise(V1, V3) :- - fall_from_oak_trees(V3), riding_bicycle(V0, V1).","- physical_activity(V3, V1) :- - excercise(V1, V3)."],"d":["seed(V3, V3) :- - fall_from_oak_trees(V3), not -nut.","riding_bicycle(V2, V1) :- learning(V1, V2)."],"e":["- commodity(V1) :- basic(V3), - fancy_goods(V0, V1), not sporting_goods(V1, V3).","- government(V1, V2) :- - puppet_government(V1, V2)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_89_8_7_7_10_0.5_1.0_3_2_3","seed":89,"num_facts":11,"num_rules":8,"num_related_predicates":19,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"organism(\"James\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["gastrula(\"Phillip\", \"Timothy\").","- insect(\"Phillip\").","nematode(\"Tyler\", \"Timothy\").","cannon(\"James\").","- seating(\"Phillip\", \"Timothy\").","cree(\"James\", \"Timothy\").","- person(\"James\", \"Timothy\").","cell(\"James\", \"Timothy\").","thorax(\"Phillip\", \"Tyler\").","arthromere(\"Phillip\", \"Tyler\").","blastosphere(\"James\", \"Timothy\")."],"noisy_facts":["brachiopod(\"James\", \"Timothy\").","- teal(\"Phillip\", \"James\").","has_toes(\"Phillip\", \"James\").","- stigmatism(\"James\", \"Tyler\").","chordophone(\"Phillip\", \"James\").","acanthocephalan(\"Phillip\", \"Tyler\").","- crown(\"James\")."],"min_fact_dicts_for_query":["gastrula(\"Phillip\", \"Timothy\").","- insect(\"Phillip\").","cannon(\"James\").","- seating(\"Phillip\", \"Timothy\").","- person(\"James\", \"Timothy\").","thorax(\"Phillip\", \"Tyler\").","blastosphere(\"James\", \"Timothy\")."],"noiseless_rules":["organism(V1) :- animal(V1, V2), - person(V1, V3), not -cell(V1, V3).","embryo(V0, V1) :- - animal_leg(V0), gastrula(V0, V3), blastosphere(V1, V3).","arthropod(V0, V2) :- - insect(V0), thorax(V0, V2), not -arthromere(V0, V2).","worm(V2) :- nematode(V2, V3).","invertebrate(V0, V2) :- arthropod(V0, V2), not -worm(V2).","- animal_leg(V0) :- cannon(V1), - seating(V0, V3), not -cree(V1, V3).","animal(V1, V2) :- embryo(V0, V1), invertebrate(V0, V2), not -biped(V0, V1).","biped(V0, V1) :- embryo(V0, V1), - animal_leg(V0), arthromere(V0, V2)."],"noisy_rules":{"a":["- organism(V1) :- - arthropod(V0, V2), - biped(V0, V1).","- organism(V1) :- - embryo(V0, V1), - worm(V2), - animal(V1, V2)."],"b":["- biped(V1, V1) :- - organism(V1).","- thorax(V0, V2) :- - invertebrate(V0, V2), - organism(V1)."],"c":["- cree(V1, V1) :- - embryo(V0, V1), not biped(V0, V1).","- cree(V1, V0) :- - embryo(V0, V1)."],"d":["- worm(V2) :- - invertebrate(V0, V2), - animal(V1, V2), acanthocephalan(V0, V2).","- thorax(V0, V1) :- - biped(V0, V1), not teal(V0, V1)."],"e":["puppy(V2) :- has_toes(V0, V1), chordophone(V0, V1), - stigmatism(V1, V2).","- jewelled_headdress(V1) :- - crown(V1), brachiopod(V1, V3)."]}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_3_3_3_3_3_0.5_1.0_5_2_3","seed":3,"num_facts":4,"num_rules":4,"num_related_predicates":8,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":3,"target_query":"living(\"Katrina\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["chicken_meat(\"Ricky\").","- chicken(\"Nicole\", \"Stephen\").","- chicken_brest(\"Nicole\", \"Katrina\").","- chicken_breast(\"Ricky\", \"Stephen\")."],"noisy_facts":["bed(\"Stephen\", \"Katrina\").","- respiration(\"Ricky\").","- breathing(\"Nicole\", \"Ricky\").","finding_stockings_on_christmas_morning(\"Ricky\", \"Stephen\").","duck(\"Ricky\", \"Katrina\").","- wood(\"Stephen\", \"Katrina\").","- polish(\"Stephen\", \"Katrina\")."],"min_fact_dicts_for_query":["chicken_meat(\"Ricky\").","- chicken(\"Nicole\", \"Stephen\").","- chicken_brest(\"Nicole\", \"Katrina\")."],"noiseless_rules":["living(V3) :- white_meat(V2, V3), not animal(V2, V3).","white_meat(V2, V3) :- chicken_meat(V1), - chicken(V0, V2), - chicken_brest(V0, V3), not chicken_breast(V1, V2).","bird(V1, V3) :- chicken_meat(V1), - chicken(V0, V2), - chicken_brest(V0, V3), not chicken_breast(V1, V2).","- animal(V3, V3) :- bird(V1, V3)."],"noisy_rules":{"a":["- living(V3) :- - white_meat(V2, V3), not -animal(V2, V3).","- living(V3) :- - white_meat(V2, V3), - bird(V1, V3), animal(V2, V3)."],"b":["chicken_brest(V2, V3) :- - white_meat(V2, V3), - bird(V1, V3), not -animal(V2, V3), - living(V3).","chicken_breast(V1, V2) :- - white_meat(V2, V3), - bird(V1, V3), not living(V3)."],"c":["- chicken_meat(V1) :- - white_meat(V2, V3), - bird(V1, V3), not -animal(V2, V3).","chicken_brest(V3, V3) :- - white_meat(V2, V3), - bird(V1, V3), not -animal(V2, V3)."],"d":["animal(V2, V3) :- - white_meat(V2, V3), - bird(V1, V3), duck(V1, V3).","- furniture(V2, V3) :- - white_meat(V2, V3), - wood(V2, V3), not polish(V2, V3), not -bed(V2, V3)."],"e":["- spider_mite(V1, V2) :- finding_stockings_on_christmas_morning(V1, V2).","bodily_process(V1) :- - respiration(V1), - breathing(V0, V1)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_70_6_5_5_6_0.5_1.0_3_2_3","seed":70,"num_facts":9,"num_rules":6,"num_related_predicates":15,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.4,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" brick(\"Patrick\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- in_houses(\"Patrick\", \"Jennifer\").","oyster(\"Jay\").","windows(\"Jennifer\").","- special_day(\"Patrick\", \"Jennifer\").","- white_grains(\"Patrick\", \"Jennifer\").","yukon(\"Michelle\", \"Patrick\").","socialization(\"Michelle\", \"Jay\").","- carry_cars(\"Patrick\", \"Jennifer\").","- cent(\"Patrick\", \"Jennifer\")."],"noisy_facts":["- cockpit(\"Patrick\", \"Jennifer\").","mind(\"Patrick\", \"Jay\").","train_seat(\"Jay\").","- watch_movie(\"Jay\").","- she(\"Jennifer\", \"Jay\").","bird_louse(\"Jennifer\", \"Jay\").","take_people_away_from_planet_earth(\"Patrick\", \"Jay\")."],"min_fact_dicts_for_query":["- in_houses(\"Patrick\", \"Jennifer\").","oyster(\"Jay\").","yukon(\"Michelle\", \"Patrick\")."],"noiseless_rules":["- brick(V1) :- - arrears(V3), someone(V0, V1), not water_chestnut(V1, V3).","- tiramisu(V1, V2) :- - in_houses(V1, V2).","- arrears(V1) :- - tiramisu(V1, V2), not -place_to_stay(V1, V2), not white_grains(V1, V2).","someone(V0, V1) :- oyster(V3), yukon(V0, V1), not -socialization(V0, V3).","place_to_stay(V1, V2) :- windows(V2), - cent(V1, V2).","- water_chestnut(V1, V2) :- - special_day(V1, V2), not carry_cars(V1, V2), not cent(V1, V2)."],"noisy_rules":{"a":["brick(V1) :- tiramisu(V1, V2), arrears(V3).","brick(V3) :- arrears(V3)."],"b":["water_chestnut(V1, V3) :- arrears(V3), brick(V1).","carry_cars(V1, V1) :- brick(V1)."],"c":["special_day(V1, V1) :- - someone(V0, V1).","water_chestnut(V1, V1) :- tiramisu(V1, V2), not place_to_stay(V1, V2)."],"d":["- socialization(V3, V3) :- arrears(V3), train_seat(V3).","- place_to_stay(V1, V1) :- not -arrears(V3), water_chestnut(V1, V3), take_people_away_from_planet_earth(V1, V3)."],"e":["holophyte(V1, V2) :- - cockpit(V1, V2), - she(V2, V3).","- oak(V2) :- - watch_movie(V3), mind(V1, V3), bird_louse(V2, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_67_8_8_7_8_0.5_1.0_3_2_3","seed":67,"num_facts":10,"num_rules":9,"num_related_predicates":19,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"oil(\"David\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- artist(\"Robert\", \"Karen\").","- move_people(\"Mark\", \"Karen\").","fishing(\"Robert\", \"Mark\").","motor_oil(\"David\", \"Karen\").","painter(\"David\", \"Mark\").","eagles(\"Mark\", \"Karen\").","sniffer(\"Robert\", \"Karen\").","gaining_weight(\"David\", \"Mark\").","run(\"Robert\", \"David\").","- finish(\"David\", \"Karen\")."],"noisy_facts":["- rotor_blade.","- blind(\"Robert\", \"David\").","- creation(\"Robert\", \"David\").","procedure(\"Mark\", \"Karen\").","ceremony(\"Robert\", \"Mark\").","seat(\"Robert\", \"Karen\").","old_world_quail(\"Robert\", \"Karen\").","- buying_food(\"Robert\", \"Mark\")."],"min_fact_dicts_for_query":["- artist(\"Robert\", \"Karen\").","- move_people(\"Mark\", \"Karen\").","painter(\"David\", \"Mark\").","run(\"Robert\", \"David\")."],"noiseless_rules":["oil(V1) :- paint(V1), cars(V3), not -motor_oil(V1, V3).","paint(V1) :- - artist(V0, V3), painter(V1, V2), not -eagles(V2, V3).","- name_after_bird_of_prey(V0, V3) :- - artist(V0, V3), painter(V1, V2), not -eagles(V2, V3).","- race(V0, V3) :- - horse(V3), run(V0, V1), not finish(V1, V3).","street(V0, V3) :- - name_after_bird_of_prey(V0, V3), not -address(V0, V3).","- horse(V3) :- - move_people(V2, V3).","address(V0, V3) :- fishing(V0, V2), sniffer(V0, V3), gaining_weight(V1, V2).","cars(V3) :- - race(V0, V3), street(V2, V3), not -find_outside(V0, V3).","find_outside(V0, V3) :- - name_after_bird_of_prey(V0, V3)."],"noisy_rules":{"a":["- oil(V3) :- - cars(V3).","- oil(V3) :- - street(V2, V3)."],"b":["- cars(V1) :- - oil(V1).","move_people(V0, V3) :- not cars(V3), - find_outside(V0, V3), - oil(V1)."],"c":["- street(V0, V3) :- - find_outside(V0, V3).","name_after_bird_of_prey(V0, V3) :- - address(V0, V3)."],"d":["name_after_bird_of_prey(V1, V3) :- - paint(V1), horse(V3), - rotor_blade.","- cars(V3) :- race(V0, V3), not -seat(V0, V3)."],"e":["activity(V1) :- - creation(V0, V1), ceremony(V0, V2), procedure(V2, V3).","participating_in_distribution_of_food(V1, V2) :- - blind(V0, V1), - buying_food(V0, V2), old_world_quail(V0, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_51_6_6_3_5_0.5_1.0_5_3_4","seed":51,"num_facts":5,"num_rules":7,"num_related_predicates":12,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"P6(\"Jennifer\", \"Karen\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["P7(\"Jennifer\", \"Scott\").","P8(\"Jennifer\", \"Scott\", \"Karen\").","- P9(\"Jennifer\", \"Scott\", \"Karen\").","- P10(\"Jennifer\", \"Kathryn\", \"Hannah\").","P11(\"Jennifer\", \"Karen\", \"Hannah\")."],"noisy_facts":["P15(\"Jennifer\", \"Kathryn\", \"Hannah\").","P19(\"Jennifer\", \"Scott\", \"Karen\").","P14(\"Karen\", \"Hannah\").","P18(\"Jennifer\", \"Scott\").","- P12(\"Jennifer\", \"Scott\").","P20(\"Jennifer\", \"Scott\", \"Karen\").","P13(\"Jennifer\", \"Scott\")."],"min_fact_dicts_for_query":["P7(\"Jennifer\", \"Scott\").","P8(\"Jennifer\", \"Scott\", \"Karen\").","- P9(\"Jennifer\", \"Scott\", \"Karen\").","- P10(\"Jennifer\", \"Kathryn\", \"Hannah\")."],"noiseless_rules":["P6(V0, V3) :- - P1(V0, V1, V2), P2(V0, V1, V3), not P4(V0, V1, V3).","P0(V0, V2) :- P7(V0, V1), - P9(V0, V1, V3), - P10(V0, V2, V4), not -P11(V0, V3, V4).","- P1(V0, V1, V2) :- P7(V0, V1), - P9(V0, V1, V3), - P10(V0, V2, V4), not -P11(V0, V3, V4).","P2(V0, V1, V3) :- P8(V0, V1, V3).","- P3(V0, V0) :- P0(V0, V2).","- P4(V0, V1, V0) :- - P1(V0, V1, V2), not P3(V0, V1), not P5(V0, V1).","- P5(V0, V1) :- P2(V0, V1, V3)."],"noisy_rules":{"a":["- P6(V0, V2) :- - P0(V0, V2).","- P6(V0, V3) :- P1(V0, V1, V2), - P2(V0, V1, V3), not -P3(V0, V1), not -P4(V0, V1, V3)."],"b":["- P2(V0, V3, V3) :- - P6(V0, V3).","- P11(V0, V3, V3) :- - P6(V0, V3)."],"c":["P3(V0, V1) :- - P0(V0, V2), P1(V0, V1, V2), P4(V0, V1, V3).","P3(V0, V1) :- - P0(V0, V2), P1(V0, V1, V2), P4(V0, V1, V3), P5(V0, V1)."],"d":["P10(V0, V1, V1) :- P5(V0, V1).","- P8(V0, V1, V1) :- - P0(V0, V2), not -P1(V0, V1, V2), P5(V0, V1), - P12(V0, V1)."],"e":["- P16(V0, V1, V3) :- P13(V0, V1), P14(V3, V4), P15(V0, V2, V4).","P17(V0, V3) :- not -P18(V0, V1), P19(V0, V1, V3), not -P20(V0, V1, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_54_10_14_14_15_0.5_1.0_5_2_3","seed":54,"num_facts":18,"num_rules":15,"num_related_predicates":33,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.4444444444444446,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"hue(\"Victoria\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["birthday_treat(\"Alexis\").","fly(\"Paige\", \"Alexis\").","bone(\"Victoria\").","- unit_of_measurement(\"Paige\").","- brown(\"Phillip\", \"Victoria\").","- paint(\"Phillip\", \"Alexis\").","- green(\"Paige\", \"Victoria\").","flesh(\"Paige\", \"Alexis\").","bit(\"Alexis\").","- four_legs(\"Alexis\").","acardia(\"Alexis\").","wings(\"Phillip\", \"Victoria\").","- tree(\"Phillip\", \"Alexis\").","squirrel(\"Phillip\", \"Alexis\").","- doll(\"Victoria\", \"Alexis\").","educational(\"Paige\", \"Victoria\").","celibacy(\"Paige\", \"Victoria\").","sofa_bed(\"Victoria\", \"Alexis\")."],"noisy_facts":[],"min_fact_dicts_for_query":["birthday_treat(\"Alexis\").","- brown(\"Phillip\", \"Victoria\").","- paint(\"Phillip\", \"Alexis\").","- green(\"Paige\", \"Victoria\")."],"noiseless_rules":["hue(V2) :- color(V0, V2), not colour(V0, V2), not -monster(V0, V2).","- black(V1, V3) :- - skeleton(V0, V3), - crow(V1, V3).","color(V0, V2) :- birthday_treat(V3), - brown(V0, V2), - paint(V0, V3), - green(V1, V2), not -flesh(V1, V3).","- red(V1, V2) :- birthday_treat(V3), - brown(V0, V2), - paint(V0, V3), - green(V1, V2), not -flesh(V1, V3).","- bird(V1, V3) :- fly(V1, V3), not -flesh(V1, V3).","birds(V3) :- fly(V1, V3), not -flesh(V1, V3).","- skeleton(V0, V3) :- bone(V2), wings(V0, V2), - tree(V0, V3), not -squirrel(V0, V3), not doll(V2, V3).","- limbs(V0, V2) :- bone(V2), wings(V0, V2), - tree(V0, V3), not -squirrel(V0, V3), not doll(V2, V3).","white(V2, V3) :- bone(V2), wings(V0, V2), - tree(V0, V3), not -squirrel(V0, V3), not doll(V2, V3).","- crow(V2, V3) :- - bird(V0, V3), - limbs(V0, V2).","- colour(V3, V2) :- - black(V1, V3), - red(V1, V2), not -white(V2, V3), not -yellow(V1, V2).","yellow(V1, V2) :- chick(V1, V2).","monster(V3, V3) :- birds(V3), not -acephalia(V3), not -bit(V3), not four_legs(V3), not -acardia(V3).","chick(V1, V2) :- - unit_of_measurement(V1), educational(V1, V2), celibacy(V1, V2), sofa_bed(V2, V3).","acephalia(V3) :- - unit_of_measurement(V1), educational(V1, V2), celibacy(V1, V2), sofa_bed(V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_59_10_11_8_11_0.5_1.0_5_2_3","seed":59,"num_facts":12,"num_rules":12,"num_related_predicates":24,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.7777777777777777,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P11(\"Lisa\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P12(\"Wesley\", \"Mary\").","P13(\"Peter\", \"Mary\").","P14(\"Mary\").","P15(\"Wesley\", \"Mary\").","P16(\"Mary\").","P17(\"Peter\", \"Wesley\").","P18(\"Peter\", \"Wesley\").","P19(\"Peter\", \"Wesley\").","P20(\"Peter\", \"Wesley\").","P21(\"Lisa\").","P22(\"Peter\", \"Mary\").","P23(\"Peter\", \"Lisa\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P12(\"Wesley\", \"Mary\").","P13(\"Peter\", \"Mary\").","P14(\"Mary\").","P15(\"Wesley\", \"Mary\").","P16(\"Mary\").","P17(\"Peter\", \"Wesley\").","P18(\"Peter\", \"Wesley\").","P19(\"Peter\", \"Wesley\").","P20(\"Peter\", \"Wesley\").","P21(\"Lisa\").","P22(\"Peter\", \"Mary\").","P23(\"Peter\", \"Lisa\")."],"noiseless_rules":["P11(V3) :- P1(V0), P3(V2), P21(V3), P22(V0, V2), P23(V0, V3).","P0(V1, V2) :- P12(V1, V2).","P1(V0) :- P13(V0, V2).","P2(V2) :- P13(V0, V2).","P3(V2) :- P2(V2), P5(V2), P8(V2), P10(V2), P16(V2).","P4(V2) :- P2(V2), P14(V2).","P5(V2) :- P0(V1, V2), P15(V1, V2).","P6(V2, V2) :- P0(V1, V2), P15(V1, V2).","P7(V3, V3) :- P4(V3).","P8(V2) :- P9(V1, V2).","P9(V1, V2) :- P0(V1, V2), P6(V2, V3), P14(V2).","P10(V0) :- P7(V0, V1), P17(V0, V1), P18(V0, V1), P19(V0, V1), P20(V0, V1)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_19_7_10_8_9_0.5_1.0_5_2_3","seed":19,"num_facts":9,"num_rules":11,"num_related_predicates":20,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"doing_exercises(\"Jennifer\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- currency(\"Robert\").","frozen_water(\"Robert\").","- meeting(\"Robert\").","- good_restaurant_experience(\"Robert\").","- oil_paint(\"Robert\").","- run_fast(\"Robert\").","bo_hai(\"Jennifer\", \"Edward\").","- loir(\"Robert\", \"Donald\").","chestnut(\"Donald\", \"Edward\")."],"noisy_facts":["- blue(\"Robert\", \"Edward\").","- mountain_chinchilla(\"Jennifer\", \"Edward\").","- mac(\"Robert\", \"Donald\").","cow(\"Jennifer\", \"Donald\").","- typically(\"Jennifer\", \"Edward\").","- frostiness(\"Jennifer\", \"Donald\").","- bomber_jacket(\"Robert\").","- canoe(\"Jennifer\", \"Edward\").","- detonation(\"Jennifer\", \"Donald\").","do_simple_things(\"Robert\", \"Donald\")."],"min_fact_dicts_for_query":["- currency(\"Robert\").","- run_fast(\"Robert\").","bo_hai(\"Jennifer\", \"Edward\").","- loir(\"Robert\", \"Donald\")."],"noiseless_rules":["doing_exercises(V0) :- - road(V0, V3), not -drop_forge(V0, V3).","- road(V0, V3) :- swiss_steak(V1), - run_fast(V1), bo_hai(V0, V3), - loir(V1, V2), not -chestnut(V2, V3).","- flagellated_cell(V1) :- swiss_steak(V1), - run_fast(V1), bo_hai(V0, V3), - loir(V1, V2), not -chestnut(V2, V3).","electronic_device(V1, V3) :- swiss_steak(V1), - run_fast(V1), bo_hai(V0, V3), - loir(V1, V2), not -chestnut(V2, V3).","drop_forge(V1, V1) :- - flagellated_cell(V1), not -speech_organ(V1), not -kitchen(V1), not -frozen_water(V1).","santa_gertrudis(V0, V2) :- steps(V0, V2).","speech_organ(V2) :- santa_gertrudis(V0, V2).","steps(V2, V2) :- electronic_device(V1, V3), lake(V2, V3).","swiss_steak(V1) :- - currency(V1), not -frozen_water(V1), not meeting(V1), not good_restaurant_experience(V1), not oil_paint(V1).","kitchen(V1) :- - currency(V1), not -frozen_water(V1), not meeting(V1), not good_restaurant_experience(V1), not oil_paint(V1).","lake(V1, V1) :- - currency(V1), not -frozen_water(V1), not meeting(V1), not good_restaurant_experience(V1), not oil_paint(V1)."],"noisy_rules":{"a":["- doing_exercises(V0) :- - steps(V0, V2).","- doing_exercises(V0) :- flagellated_cell(V1), - electronic_device(V1, V3), - santa_gertrudis(V0, V2)."],"b":["- swiss_steak(V1) :- - swiss_steak(V1), - kitchen(V1), - doing_exercises(V0).","- frozen_water(V0) :- - doing_exercises(V0)."],"c":["- santa_gertrudis(V2, V2) :- flagellated_cell(V1), - electronic_device(V1, V3), - speech_organ(V1), - kitchen(V1), - lake(V2, V3).","- kitchen(V1) :- - electronic_device(V1, V3), - santa_gertrudis(V0, V2), - steps(V0, V2)."],"d":["good_restaurant_experience(V3) :- road(V0, V3), not drop_forge(V0, V3), not typically(V0, V3).","- santa_gertrudis(V0, V2) :- - drop_forge(V0, V3), - speech_organ(V1), - lake(V2, V3), - canoe(V0, V3)."],"e":["- afternoon(V1) :- cow(V0, V2), - mac(V1, V2), not -do_simple_things(V1, V2).","- ward(V3) :- not bomber_jacket(V1), - frostiness(V0, V2), - detonation(V0, V2), not mountain_chinchilla(V0, V3), - blue(V1, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_14_7_10_4_4_0.5_1.0_3_2_3","seed":14,"num_facts":6,"num_rules":11,"num_related_predicates":17,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" bone(\"Thomas\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["record(\"Thomas\", \"Derek\").","passerine(\"Michael\", \"Derek\").","values(\"Derek\").","beak(\"Thomas\", \"Jennifer\").","bird_of_prey(\"Jennifer\", \"Derek\").","yellow."],"noisy_facts":[],"min_fact_dicts_for_query":["record(\"Thomas\", \"Derek\").","passerine(\"Michael\", \"Derek\").","values(\"Derek\").","beak(\"Thomas\", \"Jennifer\").","bird_of_prey(\"Jennifer\", \"Derek\").","yellow."],"noiseless_rules":["bone(V1) :- color(V1, V2), gladiolus(V1, V3), membrane_bone(V2, V3).","black(V1, V3) :- record(V1, V3).","player(V3) :- record(V1, V3).","color(V1, V3) :- black(V1, V3), yellow.","dark(V3, V1) :- black(V1, V3), yellow.","gladiolus(V1, V0) :- bird(V0, V1).","crown(V0, V1) :- bird(V0, V1).","blower(V3) :- player(V3), mouth(V3), values(V3).","bird(V0, V1) :- passerine(V0, V3), beak(V1, V2), bird_of_prey(V2, V3).","mouth(V3) :- passerine(V0, V3), beak(V1, V2), bird_of_prey(V2, V3).","membrane_bone(V0, V1) :- dark(V0, V1), crown(V0, V1), blower(V1)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_89_10_12_7_10_0.5_1.0_5_3_4","seed":89,"num_facts":11,"num_rules":13,"num_related_predicates":24,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":2.888888888888889,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P12(\"Christopher\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P13(\"Jennifer\", \"Juan\", \"Virginia\").","P14(\"Juan\", \"Christopher\", \"Virginia\").","P15(\"Jennifer\", \"Juan\", \"Ruth\").","P16(\"Jennifer\", \"Juan\", \"Christopher\").","- P17(\"Jennifer\", \"Christopher\", \"Ruth\").","- P18(\"Jennifer\", \"Christopher\", \"Ruth\").","P19(\"Jennifer\", \"Christopher\", \"Virginia\").","P20(\"Juan\", \"Ruth\", \"Virginia\").","- P21(\"Christopher\", \"Ruth\", \"Virginia\").","- P22(\"Christopher\", \"Ruth\", \"Virginia\").","- P23(\"Christopher\", \"Ruth\", \"Virginia\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- P13(\"Jennifer\", \"Juan\", \"Virginia\").","P15(\"Jennifer\", \"Juan\", \"Ruth\").","- P17(\"Jennifer\", \"Christopher\", \"Ruth\").","- P22(\"Christopher\", \"Ruth\", \"Virginia\")."],"noiseless_rules":["- P12(V2) :- P0(V0, V1, V2), P4(V0, V1, V3), not -P10(V0, V1, V3).","P0(V0, V1, V2) :- - P13(V0, V1, V4), - P17(V0, V2, V3), not P18(V0, V2, V3), not -P19(V0, V2, V4), not -P20(V1, V3, V4).","- P1(V1, V2, V4) :- P14(V1, V2, V4).","- P2(V4) :- - P1(V1, V2, V4), not -P5(V1, V2, V4).","P3(V2) :- - P8(V1, V2).","P4(V0, V1, V3) :- P15(V0, V1, V3), - P22(V2, V3, V4).","P5(V1, V2, V4) :- P15(V0, V1, V3), - P22(V2, V3, V4).","P6(V2, V4) :- P15(V0, V1, V3), - P22(V2, V3, V4).","P7(V2, V2) :- P3(V2).","- P8(V3, V2) :- - P2(V4), P6(V2, V4), - P21(V2, V3, V4), not P22(V2, V3, V4), not P23(V2, V3, V4).","- P9(V4, V2) :- - P2(V4), P6(V2, V4), - P21(V2, V3, V4), not P22(V2, V3, V4), not P23(V2, V3, V4).","P10(V0, V1, V0) :- - P1(V1, V2, V4), P7(V0, V2), not P9(V1, V2), not P11(V0, V2).","- P11(V0, V2) :- P0(V0, V1, V2), not -P16(V0, V1, V2)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_14_9_9_8_11_0.5_1.0_3_2_3","seed":14,"num_facts":13,"num_rules":10,"num_related_predicates":23,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.375,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"brother(\"Dawn\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- waterproofing(\"Christine\", \"Dawn\").","- live_in_dog_houses(\"Christine\", \"Courtney\").","craft(\"Christine\", \"Dawn\").","leopard(\"Courtney\", \"Kim\").","transcendence(\"Christine\", \"Dawn\").","- sever(\"Dawn\", \"Courtney\").","- racing_boat(\"Dawn\", \"Courtney\").","kayak(\"Christine\", \"Dawn\").","one_astronomical_unit_from_sun(\"Courtney\", \"Kim\").","blinds(\"Dawn\", \"Courtney\").","- devourer(\"Courtney\", \"Kim\").","western_chokecherry(\"Dawn\", \"Courtney\").","coal(\"Courtney\", \"Kim\")."],"noisy_facts":["- different_sizes(\"Dawn\", \"Kim\").","- aplasia(\"Dawn\", \"Kim\").","aunt(\"Courtney\", \"Kim\").","clock_time(\"Dawn\", \"Kim\").","- wagnerian(\"Christine\", \"Kim\").","- underground(\"Christine\", \"Dawn\")."],"min_fact_dicts_for_query":["- waterproofing(\"Christine\", \"Dawn\").","western_chokecherry(\"Dawn\", \"Courtney\").","coal(\"Courtney\", \"Kim\")."],"noiseless_rules":["brother(V1) :- alabama(V1, V2), pirate(V1, V3), not -one_astronomical_unit_from_sun(V2, V3).","alabama(V1, V2) :- - waterproofing(V0, V1), western_chokecherry(V1, V2), coal(V2, V3).","- glee_club(V1, V3) :- - waterproofing(V0, V1), western_chokecherry(V1, V2), coal(V2, V3).","- hazel_mouse(V0, V1) :- - live_in_dog_houses(V0, V2), blinds(V1, V2), - devourer(V2, V3).","pirate(V1, V3) :- - glee_club(V1, V3), not bunny(V1, V3), not colorado(V1, V3).","- bunny(V3, V3) :- - mountain_quail(V2, V3), not syphon(V2, V3), not -coal(V2, V3).","use(V1) :- craft(V0, V1), - sever(V1, V2), not racing_boat(V1, V2).","- mountain_quail(V2, V3) :- leopard(V2, V3).","- colorado(V1, V1) :- - hazel_mouse(V0, V1), not -use(V1), not -kayak(V0, V1).","- syphon(V0, V3) :- - glee_club(V1, V3), - waterproofing(V0, V1), not -transcendence(V0, V1)."],"noisy_rules":{"a":["- brother(V1) :- - pirate(V1, V3).","- brother(V1) :- hazel_mouse(V0, V1)."],"b":["- coal(V1, V3) :- colorado(V1, V3), not brother(V1).","- transcendence(V3, V1) :- syphon(V2, V3), - brother(V1)."],"c":["- kayak(V2, V1) :- - alabama(V1, V2).","- leopard(V3, V3) :- - pirate(V1, V3)."],"d":["waterproofing(V2, V1) :- - alabama(V1, V2).","colorado(V1, V3) :- bunny(V1, V3), - aplasia(V1, V3)."],"e":["- caroler(V2, V3) :- - wagnerian(V0, V3), clock_time(V1, V3), aunt(V2, V3).","- skull(V1, V3) :- - underground(V0, V1), - different_sizes(V1, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_47_7_10_10_10_0.5_1.0_5_3_4","seed":47,"num_facts":12,"num_rules":11,"num_related_predicates":23,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" follower(\"Susan\", \"David\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["wood_ant(\"Susan\").","- hand_luggage(\"Justin\", \"David\").","- airplanes(\"Rodney\", \"David\").","- boat(\"Justin\", \"Susan\", \"Samantha\").","bus(\"Justin\", \"Susan\", \"Samantha\").","highway(\"Samantha\", \"Rodney\", \"David\").","- bulldog_ant(\"Justin\", \"Susan\").","- army_ant(\"Susan\", \"Samantha\").","- fire_ant(\"Rodney\", \"David\").","little_black_ant(\"Justin\", \"Susan\", \"Rodney\").","- africander(\"Samantha\", \"Rodney\", \"David\").","- earning_money(\"Samantha\", \"Rodney\", \"David\")."],"noisy_facts":[],"min_fact_dicts_for_query":["wood_ant(\"Susan\").","- hand_luggage(\"Justin\", \"David\").","- airplanes(\"Rodney\", \"David\").","- boat(\"Justin\", \"Susan\", \"Samantha\").","- bulldog_ant(\"Justin\", \"Susan\").","- army_ant(\"Susan\", \"Samantha\").","- fire_ant(\"Rodney\", \"David\")."],"noiseless_rules":["- follower(V1, V4) :- - convenience(V4), - disciple(V0, V1, V4).","ant(V2, V4) :- wood_ant(V1), - bulldog_ant(V0, V1), - army_ant(V1, V2), - fire_ant(V3, V4), not -little_black_ant(V0, V1, V3).","hinayanist(V0, V1, V4) :- wood_ant(V1), - bulldog_ant(V0, V1), - army_ant(V1, V2), - fire_ant(V3, V4), not -little_black_ant(V0, V1, V3).","- convenience(V4) :- - hand_luggage(V0, V4), - airplanes(V3, V4), - boat(V0, V1, V2), not -bus(V0, V1, V2), not -highway(V2, V3, V4).","travel(V0, V2, V3) :- - hand_luggage(V0, V4), - airplanes(V3, V4), - boat(V0, V1, V2), not -bus(V0, V1, V2), not -highway(V2, V3, V4).","carrying_with(V1, V3, V4) :- - hand_luggage(V0, V4), - airplanes(V3, V4), - boat(V0, V1, V2), not -bus(V0, V1, V2), not -highway(V2, V3, V4).","swiss_cheese(V2, V3, V3) :- travel(V0, V2, V3).","aristotelean(V2, V3) :- travel(V0, V2, V3).","- chestnut(V3, V4) :- ant(V2, V4), swiss_cheese(V2, V3, V4), not africander(V2, V3, V4), not earning_money(V2, V3, V4).","- disciple(V0, V1, V4) :- hinayanist(V0, V1, V4), carrying_with(V1, V3, V4), aristotelean(V2, V3), not horse(V0, V1, V4).","- horse(V3, V3, V4) :- - chestnut(V3, V4)."],"noisy_rules":{}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_87_5_6_6_9_0.5_1.0_5_2_3","seed":87,"num_facts":7,"num_rules":7,"num_related_predicates":14,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" esq(\"Alyssa\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- peruvian_cotton(\"Robert\", \"Shannon\").","candy_bar(\"Robert\", \"Shannon\").","one_penny(\"Robert\", \"Shannon\").","- wine_bucket(\"Robert\", \"Shannon\").","let_go(\"Robert\", \"Shannon\").","- fusee_drive(\"Renee\", \"Alyssa\").","- alive(\"Alyssa\", \"Shannon\")."],"noisy_facts":["arcus(\"Renee\").","- over_established_age(\"Renee\", \"Shannon\").","cooks(\"Robert\", \"Alyssa\").","drop_rain(\"Renee\", \"Shannon\").","- flag(\"Alyssa\", \"Shannon\").","- videocassette(\"Renee\", \"Shannon\").","- nail(\"Renee\").","- nitrogen(\"Renee\", \"Shannon\").","entry(\"Renee\", \"Shannon\")."],"min_fact_dicts_for_query":["- peruvian_cotton(\"Robert\", \"Shannon\").","candy_bar(\"Robert\", \"Shannon\").","one_penny(\"Robert\", \"Shannon\").","- fusee_drive(\"Renee\", \"Alyssa\")."],"noiseless_rules":["- esq(V2) :- - roar(V3), kerb_crawler(V0, V3), one_penny(V0, V3), - fusee_drive(V1, V2), not alive(V2, V3).","opening(V3) :- - roar(V3), candy_bar(V0, V3), not -one_penny(V0, V3), not wine_bucket(V0, V3), not -let_go(V0, V3).","- frog_legs(V3) :- - peruvian_cotton(V0, V3), not wine_bucket(V0, V3).","going_to_pub(V0, V0) :- - peruvian_cotton(V0, V3), not wine_bucket(V0, V3).","- roar(V1) :- - frog_legs(V1).","- border(V1, V1) :- - frog_legs(V1).","kerb_crawler(V0, V3) :- opening(V3), going_to_pub(V0, V1), not border(V1, V3)."],"noisy_rules":{"a":["esq(V0) :- frog_legs(V1), - kerb_crawler(V0, V3).","esq(V1) :- - opening(V3), frog_legs(V1), not going_to_pub(V0, V1), not -roar(V3), - kerb_crawler(V0, V3)."],"b":["- going_to_pub(V0, V1) :- border(V1, V3), - kerb_crawler(V0, V3), esq(V2).","wine_bucket(V0, V3) :- - going_to_pub(V0, V1), roar(V3), - kerb_crawler(V0, V3), esq(V2)."],"c":["wine_bucket(V0, V3) :- - opening(V3), frog_legs(V1), not going_to_pub(V0, V1), not -border(V1, V3), - kerb_crawler(V0, V3).","frog_legs(V1) :- - opening(V3), - going_to_pub(V0, V1), not -roar(V3), border(V1, V3), not kerb_crawler(V0, V3)."],"d":["fusee_drive(V1, V1) :- frog_legs(V1), not -arcus(V1), not nail(V1).","frog_legs(V1) :- roar(V3), border(V1, V3), not nitrogen(V1, V3), not -drop_rain(V1, V3), entry(V1, V3)."],"e":["- insurance(V1, V3) :- - over_established_age(V1, V3).","die(V0, V1) :- cooks(V0, V2), - videocassette(V1, V3), - flag(V2, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_48_6_8_7_7_0.5_1.0_3_3_4","seed":48,"num_facts":9,"num_rules":9,"num_related_predicates":18,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"grebe(\"Tina\", \"Jennifer\", \"Hunter\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["outside(\"Tina\", \"Jennifer\", \"Eileen\").","cross(\"Tina\", \"Hector\").","- strengthener(\"Tina\", \"Hector\", \"Hunter\").","toy_soldier(\"Jennifer\", \"Hector\", \"Hunter\").","- windward_passage(\"Jennifer\", \"Hector\", \"Hunter\").","- scene(\"Jennifer\", \"Hector\", \"Hunter\").","- asian_horseshoe_crab(\"Jennifer\", \"Hector\").","living_life(\"Hector\", \"Eileen\").","enrichment(\"Tina\", \"Jennifer\", \"Hunter\")."],"noisy_facts":["- leprechaun(\"Tina\", \"Jennifer\", \"Hunter\").","- second_wind(\"Jennifer\", \"Hector\").","lift(\"Jennifer\", \"Hector\", \"Hunter\").","- acting_in_play(\"Jennifer\", \"Hector\").","- reflexive_reactions.","spend_money(\"Tina\", \"Hector\", \"Hunter\")."],"min_fact_dicts_for_query":["outside(\"Tina\", \"Jennifer\", \"Eileen\").","cross(\"Tina\", \"Hector\").","- strengthener(\"Tina\", \"Hector\", \"Hunter\").","- asian_horseshoe_crab(\"Jennifer\", \"Hector\").","living_life(\"Hector\", \"Eileen\")."],"noiseless_rules":["grebe(V0, V1, V4) :- - fringe_benefit(V1, V2), raccoon(V1, V4), - shearing(V0, V1, V3).","- fringe_benefit(V1, V2) :- - surfing(V3), - activity(V1, V2), not -make_mistakes(V1, V2, V3).","- surfing(V3) :- outside(V0, V1, V3), - strengthener(V0, V2, V4), not -toy_soldier(V1, V2, V4).","- craft(V0, V1, V4) :- outside(V0, V1, V3), - strengthener(V0, V2, V4), not -toy_soldier(V1, V2, V4).","- gone(V1, V2, V4) :- outside(V0, V1, V3), - strengthener(V0, V2, V4), not -toy_soldier(V1, V2, V4).","- activity(V1, V4) :- - craft(V0, V1, V4), not -enrichment(V0, V1, V4).","raccoon(V1, V4) :- - gone(V1, V2, V4), not windward_passage(V1, V2, V4), not scene(V1, V2, V4).","make_mistakes(V1, V2, V2) :- - gone(V1, V2, V4), not windward_passage(V1, V2, V4), not scene(V1, V2, V4).","- shearing(V0, V1, V3) :- cross(V0, V2), - asian_horseshoe_crab(V1, V2), living_life(V2, V3)."],"noisy_rules":{"a":["- grebe(V3, V1, V4) :- surfing(V3), activity(V1, V2), - raccoon(V1, V4).","- grebe(V3, V3, V3) :- surfing(V3)."],"b":["- enrichment(V0, V1, V4) :- - grebe(V0, V1, V4).","fringe_benefit(V1, V0) :- - grebe(V0, V1, V4)."],"c":["activity(V1, V2) :- gone(V1, V2, V4).","- cross(V1, V4) :- - raccoon(V1, V4)."],"d":["activity(V1, V3) :- shearing(V0, V1, V3).","gone(V3, V3, V3) :- surfing(V3), not reflexive_reactions."],"e":["- electrolytic_cell(V0, V1, V4) :- - second_wind(V1, V2), - leprechaun(V0, V1, V4).","- having_dinner(V4) :- - acting_in_play(V1, V2), spend_money(V0, V2, V4), lift(V1, V2, V4)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_78_9_8_6_7_0.5_1.0_3_3_4","seed":78,"num_facts":11,"num_rules":9,"num_related_predicates":20,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"P8(\"Barbara\", \"John\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P9(\"John\", \"Sean\").","- P10(\"Barbara\", \"John\", \"Tim\").","P11(\"John\", \"Tim\", \"Sean\").","- P12(\"Barbara\", \"Autumn\").","- P13(\"Barbara\", \"John\").","- P14(\"Tim\", \"Sean\").","- P15(\"Autumn\", \"Tim\", \"Sean\").","P16(\"Tim\", \"Sean\").","- P17(\"Barbara\", \"Tim\", \"Sean\").","- P18(\"Autumn\", \"Tim\", \"Sean\").","- P19(\"John\", \"Tim\", \"Sean\")."],"noisy_facts":["P21(\"Autumn\", \"Tim\", \"Sean\").","P29(\"John\", \"Tim\", \"Sean\").","P24(\"Autumn\", \"Sean\").","- P25(\"Autumn\", \"Tim\", \"Sean\").","P20.","- P23(\"Barbara\", \"Autumn\").","- P27(\"Barbara\", \"Autumn\", \"Sean\").","P26(\"Barbara\", \"Sean\")."],"min_fact_dicts_for_query":["P9(\"John\", \"Sean\").","- P10(\"Barbara\", \"John\", \"Tim\").","- P18(\"Autumn\", \"Tim\", \"Sean\")."],"noiseless_rules":["P8(V0, V2) :- P0(V2), - P1(V0, V4), not P4(V2, V4).","P0(V2) :- P9(V2, V4).","- P1(V0, V4) :- - P10(V0, V2, V3), - P18(V1, V3, V4), not P19(V2, V3, V4).","P2(V1, V3, V4) :- - P3(V1, V3, V4).","- P3(V4, V3, V4) :- P11(V2, V3, V4), not P19(V2, V3, V4).","- P4(V2, V4) :- - P6(V2, V4).","P5(V0, V3, V4) :- - P12(V0, V1), - P14(V3, V4), not P15(V1, V3, V4).","- P6(V4, V4) :- P2(V1, V3, V4), P5(V0, V3, V4), not P7(V0, V3, V4).","- P7(V0, V3, V4) :- - P13(V0, V2), P16(V3, V4), not P17(V0, V3, V4)."],"noisy_rules":{"a":["- P8(V1, V2) :- - P0(V2), - P2(V1, V3, V4).","- P8(V0, V2) :- P1(V0, V4), P6(V2, V4)."],"b":["P12(V0, V0) :- - P8(V0, V2).","P10(V0, V2, V3) :- - P5(V0, V3, V4), - P8(V0, V2)."],"c":["- P5(V0, V3, V4) :- P1(V0, V4), P3(V1, V3, V4), P4(V2, V4).","P6(V2, V4) :- P3(V1, V3, V4), P4(V2, V4), - P5(V0, V3, V4)."],"d":["- P5(V2, V2, V2) :- - P0(V2), not -P20.","P10(V4, V2, V3) :- - P0(V2), P3(V1, V3, V4), P21(V1, V3, V4)."],"e":["- P22(V3) :- - P23(V0, V1), P24(V1, V4), - P25(V1, V3, V4).","- P28(V1, V2, V3) :- P26(V0, V4), - P27(V0, V1, V4), P29(V2, V3, V4)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_13_7_8_8_11_0.5_1.0_5_3_4","seed":13,"num_facts":12,"num_rules":9,"num_related_predicates":21,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6666666666666667,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"china(\"Tammy\", \"Elizabeth\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["mac(\"Kayla\", \"Elizabeth\").","- currency(\"Tammy\", \"Kayla\", \"Elizabeth\").","- ant(\"Tammy\", \"Marcus\", \"Ashley\").","- bangladesh(\"Tammy\", \"Kayla\", \"Elizabeth\").","afternoon(\"Tammy\", \"Marcus\").","delaware_bay(\"Tammy\", \"Marcus\").","- bo_hai(\"Tammy\", \"Kayla\", \"Elizabeth\").","meeting(\"Tammy\", \"Kayla\", \"Elizabeth\").","millions_of_cells(\"Kayla\", \"Elizabeth\").","- starnose_mole(\"Marcus\", \"Ashley\").","- frostiness(\"Tammy\", \"Marcus\", \"Elizabeth\").","- cushion(\"Marcus\", \"Ashley\", \"Elizabeth\")."],"noisy_facts":["- hilo(\"Tammy\", \"Kayla\", \"Elizabeth\").","blue(\"Tammy\", \"Marcus\").","ward(\"Tammy\", \"Marcus\").","- chicken(\"Kayla\", \"Marcus\", \"Elizabeth\").","- reporting_event(\"Marcus\", \"Ashley\").","lake(\"Kayla\", \"Ashley\", \"Elizabeth\").","- curl_dumb_bells(\"Tammy\", \"Ashley\", \"Elizabeth\").","abstraction(\"Kayla\", \"Ashley\").","oil_paint(\"Tammy\", \"Kayla\", \"Ashley\").","- paid_slave(\"Ashley\")."],"min_fact_dicts_for_query":["mac(\"Kayla\", \"Elizabeth\").","- currency(\"Tammy\", \"Kayla\", \"Elizabeth\").","- bo_hai(\"Tammy\", \"Kayla\", \"Elizabeth\").","millions_of_cells(\"Kayla\", \"Elizabeth\").","- starnose_mole(\"Marcus\", \"Ashley\").","- frostiness(\"Tammy\", \"Marcus\", \"Elizabeth\")."],"noiseless_rules":["china(V0, V4) :- conjunction(V0, V3), liaodong_peninsula(V0, V4), - tien_shan(V2, V3), - bo_hai(V0, V1, V4), not -meeting(V0, V1, V4).","conjunction(V0, V0) :- - superior_conjunction(V0, V1, V4), not -eurasia(V0, V1, V4), not -meeting(V0, V1, V4).","- superior_conjunction(V0, V1, V4) :- mac(V1, V4), millions_of_cells(V1, V4), - starnose_mole(V2, V3), - frostiness(V0, V2, V4), not cushion(V2, V3, V4).","liaodong_peninsula(V0, V4) :- - currency(V0, V1, V4), not bangladesh(V0, V1, V4), not bo_hai(V0, V1, V4).","manchuria(V0, V1) :- - currency(V0, V1, V4), not bangladesh(V0, V1, V4), not bo_hai(V0, V1, V4).","- tien_shan(V2, V0) :- manchuria(V0, V2), not ransom(V0, V2), not asia(V0, V2), not -afternoon(V0, V2), not -delaware_bay(V0, V2).","- ransom(V0, V2) :- - ant(V0, V2, V3).","eurasia(V0, V1, V4) :- - bangladesh(V0, V1, V4).","- asia(V0, V1) :- - bangladesh(V0, V1, V4)."],"noisy_rules":{"a":["- china(V0, V0) :- - manchuria(V0, V2).","- china(V0, V2) :- - conjunction(V0, V3), - manchuria(V0, V2)."],"b":["asia(V0, V2) :- - manchuria(V0, V2), - china(V0, V4).","- conjunction(V0, V0) :- superior_conjunction(V0, V1, V4), not eurasia(V0, V1, V4), not china(V0, V4)."],"c":["- eurasia(V0, V1, V4) :- - conjunction(V0, V3), superior_conjunction(V0, V1, V4), - manchuria(V0, V2), tien_shan(V2, V3), not -asia(V0, V2).","- meeting(V0, V1, V4) :- - conjunction(V0, V3), superior_conjunction(V0, V1, V4), not manchuria(V0, V2), ransom(V0, V2)."],"d":["- meeting(V0, V1, V4) :- superior_conjunction(V0, V1, V4), tien_shan(V2, V3), not hilo(V0, V1, V4).","superior_conjunction(V0, V2, V2) :- not manchuria(V0, V2), asia(V0, V2), ward(V0, V2), blue(V0, V2)."],"e":["ducks(V1, V2, V3) :- - chicken(V1, V2, V4), lake(V1, V3, V4).","- reception(V1, V2, V3) :- - paid_slave(V3), abstraction(V1, V3), - reporting_event(V2, V3), oil_paint(V0, V1, V3), - curl_dumb_bells(V0, V3, V4)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_21_6_6_5_7_0.5_1.0_5_2_3","seed":21,"num_facts":7,"num_rules":7,"num_related_predicates":14,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" little(\"Peter\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["daughter(\"Amy\", \"Peter\").","school(\"Christopher\", \"Peter\").","family(\"Christopher\", \"Peter\").","play(\"Christopher\", \"Peter\").","toy(\"Christopher\", \"Peter\").","playroom(\"Christopher\", \"Peter\").","hydrozoan(\"Amy\", \"Robert\")."],"noisy_facts":[],"min_fact_dicts_for_query":["daughter(\"Amy\", \"Peter\").","school(\"Christopher\", \"Peter\").","family(\"Christopher\", \"Peter\").","play(\"Christopher\", \"Peter\").","toy(\"Christopher\", \"Peter\").","playroom(\"Christopher\", \"Peter\").","hydrozoan(\"Amy\", \"Robert\")."],"noiseless_rules":["little(V2) :- chick(V0, V3), children(V2, V3).","chick(V0, V3) :- man(V0, V3), hydrozoan(V0, V3).","father(V0, V1) :- daughter(V0, V2), family(V1, V2).","children(V2, V1) :- school(V1, V2), family(V1, V2), play(V1, V2), toy(V1, V2), playroom(V1, V2).","group(V1) :- school(V1, V2), family(V1, V2), play(V1, V2), toy(V1, V2), playroom(V1, V2).","farmer(V3, V3) :- group(V3).","man(V0, V3) :- father(V0, V1), children(V2, V3), farmer(V1, V3)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_51_8_8_3_5_0.5_1.0_3_2_3","seed":51,"num_facts":7,"num_rules":9,"num_related_predicates":16,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5714285714285716,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"location(\"Cynthia\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["safety(\"Amanda\", \"Tiffany\").","persian_deity(\"Amanda\", \"Cynthia\").","british_east_africa(\"Cynthia\").","northeast(\"Amanda\", \"Cynthia\").","- plate(\"Tiffany\", \"Cynthia\").","- tartar(\"Tiffany\", \"Cynthia\").","- no_mans_land(\"Amanda\", \"Cynthia\")."],"noisy_facts":["alarmist(\"Tiffany\", \"Cynthia\").","weaponry(\"Amanda\", \"Cynthia\").","sprint(\"Tiffany\", \"Cynthia\").","jurisdiction(\"Tiffany\", \"Cynthia\")."],"min_fact_dicts_for_query":["safety(\"Amanda\", \"Tiffany\").","- no_mans_land(\"Amanda\", \"Cynthia\")."],"noiseless_rules":["location(V3) :- - region(V1, V3), not -crust(V1, V3).","area(V1, V3) :- safety(V0, V1), - no_mans_land(V0, V3).","residential_district(V3) :- persian_deity(V0, V3).","- district(V3, V3) :- residential_district(V3), not -british_east_africa(V3).","- region(V1, V3) :- area(V1, V3), not district(V1, V3), not layer(V1, V3).","- east(V0, V3) :- northeast(V0, V3).","asthenosphere(V1, V3) :- residential_district(V3), - east(V0, V3), safety(V0, V1).","crust(V1, V3) :- asthenosphere(V1, V3), not plate(V1, V3), not tartar(V1, V3).","- layer(V1, V3) :- asthenosphere(V1, V3), not plate(V1, V3), not tartar(V1, V3)."],"noisy_rules":{"a":["- location(V3) :- region(V1, V3), east(V0, V3), layer(V1, V3).","- location(V3) :- - crust(V1, V3)."],"b":["- asthenosphere(V1, V3) :- - area(V1, V3), not location(V3).","- residential_district(V3) :- district(V1, V3), - location(V3)."],"c":["east(V3, V3) :- - residential_district(V3), - crust(V1, V3).","east(V3, V3) :- district(V1, V3), not crust(V1, V3)."],"d":["- persian_deity(V3, V3) :- - area(V1, V3), not -layer(V1, V3), not -sprint(V1, V3).","district(V1, V3) :- - area(V1, V3), - residential_district(V3), jurisdiction(V1, V3)."],"e":["communicator(V1, V3) :- alarmist(V1, V3).","- vaulting_horse(V3) :- weaponry(V0, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_66_7_8_3_4_0.5_1.0_3_2_3","seed":66,"num_facts":7,"num_rules":9,"num_related_predicates":16,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" action(\"Tracey\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["bird(\"Joshua\").","table(\"Michael\", \"Tracey\").","- article_in_magazine.","- nest(\"Michael\", \"Tracey\").","kite(\"Joshua\").","planes(\"Michael\", \"Joshua\").","- alabama(\"Michael\", \"Joshua\")."],"noisy_facts":[],"min_fact_dicts_for_query":["bird(\"Joshua\").","table(\"Michael\", \"Tracey\").","kite(\"Joshua\").","planes(\"Michael\", \"Joshua\")."],"noiseless_rules":["- action(V1) :- - fly(V3), read(V1, V2), not -cry(V1, V3).","- fly(V3) :- bird(V3), kite(V3), planes(V0, V3).","- animal(V0, V3) :- bird(V3), kite(V3), planes(V0, V3).","- silver_dollar(V0, V3) :- - animal(V0, V3), not -telling_story(V0, V3), not alabama(V0, V3).","- dinner(V0, V1) :- table(V0, V1).","read(V1, V0) :- table(V0, V1), not article_in_magazine.","telling_story(V0, V0) :- table(V0, V1), not article_in_magazine.","cry(V1, V2) :- - silver_dollar(V1, V2), - dinner(V0, V1), not baby(V0, V1).","- baby(V0, V1) :- - nest(V0, V1)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_26_5_6_3_5_0.5_1.0_3_2_3","seed":26,"num_facts":5,"num_rules":7,"num_related_predicates":12,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" phasianid(\"Jonathan\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- peafowl(\"Felicia\", \"Jonathan\").","- craft(\"Sheila\", \"Felicia\").","- hungarian_partridge(\"Maria\", \"Jonathan\").","brother(\"Sheila\", \"Jonathan\").","- california_quail(\"Sheila\", \"Jonathan\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- peafowl(\"Felicia\", \"Jonathan\").","- craft(\"Sheila\", \"Felicia\").","brother(\"Sheila\", \"Jonathan\").","- california_quail(\"Sheila\", \"Jonathan\")."],"noiseless_rules":["- phasianid(V3) :- - pheasant(V2), - quail(V2, V3), not partridge(V2, V3).","- pheasant(V2) :- - red_legged_partridge(V0, V3), - peafowl(V2, V3).","P1(V2, V3) :- - craft(V1, V2), - california_quail(V1, V3).","mountain_quail(V1, V3) :- - craft(V1, V2), - california_quail(V1, V3).","- quail(V2, V3) :- P1(V2, V3), brother(V1, V3), not california_quail(V1, V3).","- red_legged_partridge(V1, V3) :- P1(V2, V3), brother(V1, V3), not california_quail(V1, V3).","- partridge(V3, V3) :- mountain_quail(V1, V3), - red_legged_partridge(V0, V3), not hungarian_partridge(V0, V3)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_77_8_9_9_11_0.5_1.0_5_3_4","seed":77,"num_facts":11,"num_rules":10,"num_related_predicates":21,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.7142857142857144,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"P9(\"Alexis\", \"Cheryl\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P10(\"Alexis\", \"Brandon\", \"Bradley\").","- P11(\"Alexis\", \"Bradley\", \"Cheryl\").","P12(\"Bradley\").","P13(\"Bradley\").","P14(\"Bradley\").","P15(\"Brandon\", \"Kelly\").","- P16(\"Brandon\", \"Kelly\").","- P17(\"Brandon\", \"Kelly\").","P18(\"Brandon\", \"Kelly\").","P19(\"Alexis\", \"Bradley\", \"Cheryl\").","- P20(\"Alexis\", \"Bradley\", \"Cheryl\")."],"noisy_facts":["P27(\"Alexis\", \"Kelly\", \"Bradley\").","- P24(\"Alexis\", \"Brandon\", \"Kelly\").","P21(\"Bradley\").","P25(\"Alexis\", \"Brandon\").","- P22(\"Alexis\", \"Bradley\")."],"min_fact_dicts_for_query":["P10(\"Alexis\", \"Brandon\", \"Bradley\").","P19(\"Alexis\", \"Bradley\", \"Cheryl\")."],"noiseless_rules":["P9(V0, V4) :- - P0(V0, V3), - P5(V1, V3), P19(V0, V3, V4).","- P0(V0, V3) :- P1(V0, V3), not -P7(V0, V3).","P1(V0, V3) :- P10(V0, V1, V3).","P2(V0, V3) :- P10(V0, V1, V3).","- P3(V3) :- - P11(V0, V3, V4), not -P19(V0, V3, V4), not P20(V0, V3, V4).","P4(V3, V4) :- - P11(V0, V3, V4), not -P19(V0, V3, V4), not P20(V0, V3, V4).","- P5(V3, V3) :- - P0(V0, V3), not -P6(V0, V3).","P6(V3, V3) :- - P3(V3), not P8(V3), not -P12(V3), not -P13(V3), not -P14(V3).","P7(V0, V3) :- P2(V0, V3).","- P8(V1) :- P4(V1, V2), not -P15(V1, V2), not P16(V1, V2), not P17(V1, V2), not -P18(V1, V2)."],"noisy_rules":{"a":["- P9(V0, V2) :- - P1(V0, V3), not -P3(V3), - P4(V1, V2), - P6(V0, V3).","- P9(V0, V0) :- - P1(V0, V3), - P6(V0, V3), not P7(V0, V3)."],"b":["P20(V0, V3, V4) :- P0(V0, V3), - P2(V0, V3), - P7(V0, V3), - P9(V0, V4).","P3(V4) :- - P9(V0, V4)."],"c":["- P18(V1, V0) :- P5(V1, V3), - P6(V0, V3).","P16(V3, V3) :- P3(V3)."],"d":["P3(V3) :- not -P8(V3), P21(V3).","P0(V0, V3) :- not P2(V0, V3), - P22(V0, V3)."],"e":["P23(V0, V2) :- - P24(V0, V1, V2).","- P26(V0, V2) :- P25(V0, V1), P27(V0, V2, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_68_8_11_7_9_0.5_1.0_5_2_3","seed":68,"num_facts":9,"num_rules":12,"num_related_predicates":21,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5714285714285716,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"broadbill(\"Jackie\", \"Joshua\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["finch(\"Jackie\", \"Theresa\").","beak(\"Jackie\", \"Joshua\").","- alabama(\"Joshua\", \"Theresa\").","- explorer(\"Joshua\", \"Theresa\").","bird_of_prey(\"Joshua\", \"Theresa\").","- granny(\"Joshua\", \"Theresa\").","- coat(\"Theresa\").","hair(\"Theresa\").","female_mammal(\"Theresa\")."],"noisy_facts":["- barramunda(\"Jackie\", \"Theresa\").","litter(\"Marc\", \"Theresa\").","- moslem(\"Marc\", \"Jackie\").","- bugaboo(\"Marc\", \"Jackie\").","- resting_on(\"Marc\", \"Joshua\").","singing(\"Joshua\", \"Theresa\").","- work(\"Marc\", \"Joshua\")."],"min_fact_dicts_for_query":["finch(\"Jackie\", \"Theresa\").","beak(\"Jackie\", \"Joshua\").","bird_of_prey(\"Joshua\", \"Theresa\")."],"noiseless_rules":["broadbill(V1, V2) :- - hawk(V0, V3), mouth(V1, V2), not -filament(V2, V3).","- oscine(V1, V3) :- tanager(V3), finch(V1, V3).","- hawk(V0, V3) :- - passerine(V0, V2), mammal(V0, V3), not falcon(V0, V3).","- passerine(V3, V3) :- - oscine(V1, V3), not -tanager(V3).","mouth(V1, V2) :- beak(V1, V2), bird_of_prey(V2, V3).","- lyrebird(V2, V3) :- beak(V1, V2), bird_of_prey(V2, V3).","bird(V3) :- beak(V1, V2), bird_of_prey(V2, V3).","tanager(V3) :- - lyrebird(V2, V3), not alabama(V2, V3), not explorer(V2, V3), not -bird_of_prey(V2, V3), not granny(V2, V3).","filament(V3, V3) :- bird(V3), not coat(V3), not -hair(V3), not -female_mammal(V3).","mammal(V3, V3) :- bird(V3), not coat(V3), not -hair(V3), not -female_mammal(V3).","- scrubbird(V3, V3) :- bird(V3), not coat(V3), not -hair(V3), not -female_mammal(V3).","- falcon(V0, V0) :- - scrubbird(V0, V1)."],"noisy_rules":{"a":["- broadbill(V1, V2) :- oscine(V1, V3), - bird(V3), - filament(V2, V3), not mammal(V0, V3), scrubbird(V0, V1).","- broadbill(V1, V2) :- hawk(V0, V3), lyrebird(V2, V3), not bird(V3), not filament(V2, V3), scrubbird(V0, V1)."],"b":["passerine(V0, V2) :- passerine(V0, V2), lyrebird(V2, V3), scrubbird(V0, V1), - broadbill(V1, V2).","- bird_of_prey(V2, V3) :- hawk(V0, V3), lyrebird(V2, V3), - tanager(V3), - mammal(V0, V3), - broadbill(V1, V2)."],"c":["- mouth(V1, V3) :- oscine(V1, V3), hawk(V0, V3), not tanager(V3), not mammal(V0, V3), not -falcon(V0, V3).","- bird(V3) :- oscine(V1, V3), passerine(V0, V2)."],"d":["- vertebrate(V1, V3) :- - bird(V3), - mammal(V0, V3), scrubbird(V0, V1), not -falcon(V0, V3), not bugaboo(V0, V1).","- mouth(V2, V2) :- passerine(V0, V2), not resting_on(V0, V2)."],"e":["activity(V2, V3) :- - work(V0, V2), singing(V2, V3).","- shoe_collar(V0, V3) :- - moslem(V0, V1), litter(V0, V3), - barramunda(V1, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_14_7_10_6_6_0.5_1.0_3_2_3","seed":14,"num_facts":8,"num_rules":11,"num_related_predicates":19,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" grand_prix(\"Aaron\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["jars(\"Tammy\", \"Marcus\").","rest_in_barn(\"Tammy\", \"Marcus\").","safflower_oil(\"Aaron\", \"Danielle\").","panel(\"Danielle\", \"Marcus\").","grotesque(\"Aaron\", \"Marcus\").","ermine(\"Aaron\", \"Marcus\").","urchin(\"Marcus\").","hawaiian(\"Aaron\", \"Marcus\")."],"noisy_facts":[],"min_fact_dicts_for_query":["jars(\"Tammy\", \"Marcus\").","rest_in_barn(\"Tammy\", \"Marcus\").","safflower_oil(\"Aaron\", \"Danielle\").","panel(\"Danielle\", \"Marcus\").","grotesque(\"Aaron\", \"Marcus\").","ermine(\"Aaron\", \"Marcus\").","urchin(\"Marcus\").","hawaiian(\"Aaron\", \"Marcus\")."],"noiseless_rules":["grand_prix(V1) :- mouth(V1, V2), egg_in_fairy_tale(V1, V3), special_day(V2, V3).","passenger_pigeon(V1, V3) :- jars(V0, V3), hawaiian(V1, V3).","hill(V3) :- jars(V0, V3), hawaiian(V1, V3).","mouth(V1, V3) :- passenger_pigeon(V1, V3), grotesque(V1, V3), ermine(V1, V3).","manta(V3, V1) :- passenger_pigeon(V1, V3), grotesque(V1, V3), ermine(V1, V3).","egg_in_fairy_tale(V1, V3) :- concussion(V1, V3).","computer(V1) :- concussion(V1, V3).","worms(V3, V3) :- hill(V3), put_out_small_fire(V3), urchin(V3).","concussion(V1, V3) :- rest_in_barn(V0, V3), safflower_oil(V1, V2), panel(V2, V3).","put_out_small_fire(V3) :- rest_in_barn(V0, V3), safflower_oil(V1, V2), panel(V2, V3).","special_day(V0, V1) :- manta(V0, V1), computer(V1), worms(V0, V1)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_80_9_14_14_15_0.5_1.0_5_2_3","seed":80,"num_facts":18,"num_rules":15,"num_related_predicates":33,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.375,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":"sea(\"Joseph\", \"Jody\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["deal_drugs(\"David\").","- point(\"Amy\").","- rota(\"Joseph\", \"Amy\").","pen(\"Joseph\", \"David\").","- radio_operator(\"Joseph\", \"Amy\").","queen(\"Jody\", \"Amy\").","- most_commonly(\"Jody\", \"Amy\").","- scoffer(\"David\", \"Amy\").","join_private_club(\"Joseph\", \"Jody\").","- water_vehicle(\"Jody\", \"Amy\").","neckpiece(\"David\", \"Amy\").","song(\"David\", \"Amy\").","- check(\"Jody\", \"David\").","- cent(\"Jody\", \"David\").","- stagehand(\"Jody\", \"David\").","hare(\"David\", \"Amy\").","tree_rat(\"Joseph\", \"Amy\").","- old_cd(\"Jody\", \"David\")."],"noisy_facts":[],"min_fact_dicts_for_query":["deal_drugs(\"David\").","- rota(\"Joseph\", \"Amy\").","join_private_club(\"Joseph\", \"Jody\").","- water_vehicle(\"Jody\", \"Amy\").","- check(\"Jody\", \"David\")."],"noiseless_rules":["sea(V0, V1) :- lysogeny(V1), - enjoyment(V0, V2), not legionella_pneumophilia(V1, V2), not gossip(V1, V2), not hobby(V1, V2).","lysogeny(V1) :- corn(V1, V3), not -tropopause(V1, V3).","- enjoyment(V0, V2) :- deal_drugs(V2), join_private_club(V0, V1), - water_vehicle(V1, V3), not -neckpiece(V2, V3), not -song(V2, V3).","change(V0, V3) :- deal_drugs(V2), join_private_club(V0, V1), - water_vehicle(V1, V3), not -neckpiece(V2, V3), not -song(V2, V3).","swiss_pine(V0, V2) :- - point(V3), - radio_operator(V0, V3), queen(V1, V3), - most_commonly(V1, V3), - scoffer(V2, V3).","- eat_dinner(V1, V3) :- - point(V3), - radio_operator(V0, V3), queen(V1, V3), - most_commonly(V1, V3), - scoffer(V2, V3).","- legionella_pneumophilia(V1, V2) :- - rota(V0, V3), - check(V1, V2), not cent(V1, V2), not stagehand(V1, V2), not -hare(V2, V3).","corn(V1, V3) :- - rota(V0, V3), - check(V1, V2), not cent(V1, V2), not stagehand(V1, V2), not -hare(V2, V3).","- capsule(V0, V2) :- - rota(V0, V3), - check(V1, V2), not cent(V1, V2), not stagehand(V1, V2), not -hare(V2, V3).","rice_rat(V0) :- - rota(V0, V3), - check(V1, V2), not cent(V1, V2), not stagehand(V1, V2), not -hare(V2, V3).","- gossip(V0, V2) :- swiss_pine(V0, V2), not capsule(V0, V2).","wear(V0, V2) :- swiss_pine(V0, V2), not capsule(V0, V2).","- hobby(V1, V0) :- change(V0, V3), - eat_dinner(V1, V3), not -paternoster(V0, V3), not water_vehicle(V1, V3).","tropopause(V0, V3) :- rice_rat(V0), wear(V0, V3).","paternoster(V0, V3) :- pen(V0, V2), tree_rat(V0, V3), - old_cd(V1, V2)."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_48_6_9_7_7_0.5_1.0_3_2_3","seed":48,"num_facts":8,"num_rules":10,"num_related_predicates":18,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"web_spinner(\"Christopher\", \"Daniel\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["watching_films(\"Lauren\", \"Christopher\").","case_shot(\"Lauren\", \"Pamela\").","kitchen(\"Christopher\", \"Daniel\").","rubber_stamp(\"Christopher\", \"Daniel\").","ginger(\"Christopher\", \"Daniel\").","potassium_cyanide(\"Lauren\", \"Christopher\").","ownership(\"Lauren\", \"Christopher\").","grosbeak(\"Christopher\", \"Daniel\")."],"noisy_facts":[],"min_fact_dicts_for_query":["watching_films(\"Lauren\", \"Christopher\").","case_shot(\"Lauren\", \"Pamela\").","kitchen(\"Christopher\", \"Daniel\").","rubber_stamp(\"Christopher\", \"Daniel\").","ginger(\"Christopher\", \"Daniel\").","potassium_cyanide(\"Lauren\", \"Christopher\").","ownership(\"Lauren\", \"Christopher\").","grosbeak(\"Christopher\", \"Daniel\")."],"noiseless_rules":["web_spinner(V1, V3) :- expect_to_hunted_down(V3), bar_bit(V1, V2), outfield(V2, V3).","expect_to_hunted_down(V3) :- thistle(V1), eye(V1, V3), sell_beer(V1, V3).","thistle(V1) :- watching_films(V0, V1), case_shot(V0, V2), kitchen(V1, V3).","reducing_hunger(V1, V3) :- watching_films(V0, V1), case_shot(V0, V2), kitchen(V1, V3).","nuclear_weapon(V1, V3) :- watching_films(V0, V1), case_shot(V0, V2), kitchen(V1, V3).","ballroom(V0, V1) :- watching_films(V0, V1), case_shot(V0, V2), kitchen(V1, V3).","eye(V1, V3) :- reducing_hunger(V1, V3), grosbeak(V1, V3).","bar_bit(V1, V1) :- nuclear_weapon(V1, V3), rubber_stamp(V1, V3), ginger(V1, V3).","sell_beer(V1, V3) :- nuclear_weapon(V1, V3), rubber_stamp(V1, V3), ginger(V1, V3).","outfield(V0, V1) :- ballroom(V0, V1), potassium_cyanide(V0, V1), ownership(V0, V1)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_96_7_10_5_5_0.5_1.0_3_2_3","seed":96,"num_facts":8,"num_rules":11,"num_related_predicates":19,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.8333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"P10(\"Jennifer\", \"Amy\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P11(\"Amy\", \"Adam\").","P12(\"Jennifer\", \"Amy\").","P13(\"Jennifer\", \"Amy\").","P14(\"Sarah\", \"Amy\").","P15(\"Sarah\", \"Amy\").","P16(\"Jennifer\").","P17(\"Amy\", \"Adam\").","P18(\"Amy\", \"Adam\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P11(\"Amy\", \"Adam\").","P12(\"Jennifer\", \"Amy\").","P13(\"Jennifer\", \"Amy\").","P14(\"Sarah\", \"Amy\").","P15(\"Sarah\", \"Amy\").","P16(\"Jennifer\").","P17(\"Amy\", \"Adam\").","P18(\"Amy\", \"Adam\")."],"noiseless_rules":["P10(V0, V2) :- P1(V3), P5(V0, V2), P7(V0, V3).","P0(V0, V3) :- P2(V2), P6(V0, V2), P8(V2, V3).","P1(V3) :- P11(V2, V3).","P2(V2) :- P11(V2, V3).","P3(V0, V2) :- P12(V0, V2), P14(V1, V2), P15(V1, V2).","P4(V0) :- P12(V0, V2), P14(V1, V2), P15(V1, V2).","P5(V0, V2) :- P3(V0, V2), P9(V0, V2).","P6(V0, V2) :- P3(V0, V2), P9(V0, V2).","P7(V0, V3) :- P0(V0, V3), P4(V0), P16(V0).","P8(V2, V3) :- P13(V0, V2), P17(V2, V3), P18(V2, V3).","P9(V0, V2) :- P13(V0, V2), P17(V2, V3), P18(V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_48_6_7_6_7_0.5_1.0_3_2_3","seed":48,"num_facts":8,"num_rules":8,"num_related_predicates":16,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P7(\"Heather\", \"Lisa\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P8(\"Lisa\").","P9(\"Barbara\", \"Lisa\").","P10(\"Heather\", \"Lisa\").","- P11(\"Heather\", \"Barbara\").","- P12(\"Heather\", \"Lisa\").","- P13(\"Heather\", \"Lisa\").","P14(\"Heather\", \"Lisa\").","- P15(\"Heather\", \"Lisa\")."],"noisy_facts":["P21(\"Heather\", \"Lisa\").","- P19(\"Barbara\", \"Lisa\").","P16(\"Heather\").","P18(\"Heather\", \"Lisa\")."],"min_fact_dicts_for_query":["- P8(\"Lisa\").","- P11(\"Heather\", \"Barbara\")."],"noiseless_rules":["- P7(V1, V3) :- - P0(V3), P5(V1, V2), not P6(V2, V3).","- P0(V3) :- - P1(V1), P4(V1, V3), not -P10(V1, V3).","- P1(V1) :- - P8(V3), - P11(V1, V2), not P12(V1, V3).","- P2(V1, V3) :- - P8(V3), - P11(V1, V2), not P12(V1, V3).","P3(V1, V3) :- - P8(V3), - P11(V1, V2), not P12(V1, V3).","P4(V1, V3) :- - P2(V1, V3), not P13(V1, V3), not P15(V1, V3).","P5(V1, V1) :- P3(V1, V3), not P13(V1, V3), not -P14(V1, V3).","- P6(V2, V3) :- P9(V2, V3)."],"noisy_rules":{"a":["P7(V1, V3) :- P1(V1), P2(V1, V3).","P7(V1, V3) :- not -P2(V1, V3), - P3(V1, V3), not P4(V1, V3)."],"b":["P2(V1, V3) :- P7(V1, V3).","P11(V1, V2) :- - P5(V1, V2), P7(V1, V3)."],"c":["- P14(V1, V3) :- P2(V1, V3), - P5(V1, V2).","P8(V3) :- not -P0(V3), not -P1(V1), - P4(V1, V3)."],"d":["P1(V1) :- - P3(V1, V3).","P13(V1, V1) :- P1(V1), not -P16(V1)."],"e":["P17(V2) :- P18(V1, V3), - P19(V2, V3).","P20(V1, V3) :- P21(V1, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_24_7_8_8_10_0.5_1.0_3_2_3","seed":24,"num_facts":10,"num_rules":9,"num_related_predicates":19,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" be(\"Troy\", \"Kevin\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- person(\"Hunter\").","- werewolf(\"Hunter\").","bird(\"Martin\", \"Hunter\").","chicken(\"Hunter\", \"Kevin\").","- people(\"Martin\", \"Hunter\").","- arthrospore(\"Martin\", \"Kevin\").","- exist(\"Troy\", \"Hunter\").","electricity(\"Hunter\", \"Kevin\").","playing_harp(\"Hunter\").","- animal(\"Hunter\")."],"noisy_facts":["- bullfinch(\"Troy\", \"Hunter\").","- interest(\"Troy\", \"Kevin\").","small(\"Kevin\").","saddle(\"Martin\", \"Kevin\").","- cow_liquid(\"Hunter\").","- galvanism(\"Hunter\", \"Kevin\")."],"min_fact_dicts_for_query":["- person(\"Hunter\").","- werewolf(\"Hunter\").","bird(\"Martin\", \"Hunter\").","chicken(\"Hunter\", \"Kevin\").","- exist(\"Troy\", \"Hunter\").","electricity(\"Hunter\", \"Kevin\")."],"noiseless_rules":["- be(V0, V3) :- water_plant(V0, V3), - monster(V2, V3), not zombie(V2, V3).","not_(V2, V3) :- angels(V2), - people(V1, V2), - arthrospore(V1, V3).","water_plant(V0, V3) :- - person(V2), - exist(V0, V2), electricity(V2, V3).","- monster(V2, V3) :- - werewolf(V2), bird(V1, V2), chicken(V2, V3).","- wings(V2) :- - werewolf(V2), bird(V1, V2), chicken(V2, V3).","angels(V2) :- - wings(V2), not -playing_harp(V2), not animal(V2).","- creature(V2) :- - wings(V2), not -playing_harp(V2), not animal(V2).","- zombie(V2, V3) :- not_(V2, V3), not -being(V2, V3).","being(V2, V2) :- - creature(V2), not person(V2), not animal(V2)."],"noisy_rules":{"a":["be(V2, V3) :- - angels(V2), not -zombie(V2, V3), - being(V2, V3).","be(V0, V3) :- - water_plant(V0, V3)."],"b":["- not_(V2, V3) :- not -wings(V2), - being(V2, V3), be(V0, V3).","exist(V0, V2) :- wings(V2), - angels(V2), be(V0, V3)."],"c":["monster(V2, V3) :- creature(V2), zombie(V2, V3).","- bird(V3, V2) :- - water_plant(V0, V3), monster(V2, V3)."],"d":["- electricity(V2, V3) :- monster(V2, V3), - galvanism(V2, V3).","- being(V2, V3) :- - not_(V2, V3), not -wings(V2), not cow_liquid(V2)."],"e":["finch(V2, V3) :- - bullfinch(V0, V2), - interest(V0, V3).","- back(V3) :- small(V3), saddle(V1, V3)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_72_5_4_4_6_0.5_1.0_3_2_3","seed":72,"num_facts":7,"num_rules":5,"num_related_predicates":12,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"P4(\"Kyle\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P5(\"Joshua\", \"Dennis\").","- P6(\"Kyle\", \"Dennis\").","P7(\"Kyle\", \"Dennis\").","- P8(\"Kyle\", \"Dennis\").","P9(\"Kyle\", \"Dennis\").","- P10(\"Kyle\", \"Dennis\").","- P11(\"Kyle\", \"Dennis\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P5(\"Joshua\", \"Dennis\").","P7(\"Kyle\", \"Dennis\").","- P10(\"Kyle\", \"Dennis\")."],"noiseless_rules":["P4(V1) :- P1(V2), P7(V1, V2).","P0(V0, V2) :- P5(V0, V2), - P10(V1, V2), not P11(V1, V2).","P1(V2) :- P0(V0, V2), not P2(V0, V2), not -P3(V0, V2).","- P2(V1, V2) :- - P6(V1, V2), not P11(V1, V2).","P3(V2, V2) :- P7(V1, V2), not P8(V1, V2), not -P9(V1, V2)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_50_7_9_8_10_0.5_1.0_5_2_3","seed":50,"num_facts":11,"num_rules":10,"num_related_predicates":21,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"airdock(\"Rebecca\", \"Robert\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["deer(\"Mary\").","- bogy(\"Rebecca\", \"Robert\").","trim(\"Rebecca\", \"Mary\").","- gobbet(\"Jacob\", \"Rebecca\").","- vacation(\"Rebecca\", \"Robert\").","- smallest(\"Rebecca\", \"Robert\").","lubricant(\"Rebecca\", \"Mary\").","learning_from(\"Jacob\", \"Robert\").","- people_who_like_low_maintenance(\"Jacob\", \"Robert\").","roar(\"Jacob\", \"Robert\").","nipa(\"Jacob\", \"Robert\")."],"noisy_facts":[],"min_fact_dicts_for_query":["deer(\"Mary\").","- bogy(\"Rebecca\", \"Robert\").","- gobbet(\"Jacob\", \"Rebecca\").","- vacation(\"Rebecca\", \"Robert\")."],"noiseless_rules":["airdock(V1, V2) :- - gander(V0, V3), - educational_institution(V1, V2), not gallon(V1, V2), not -trim(V1, V3).","- water_vapor(V0, V1) :- - phalanx(V0, V1), - customers(V1, V2).","- gander(V0, V1) :- - water_vapor(V0, V1), not -omophagia(V0, V1), not -measure(V0, V1).","- educational_institution(V1, V2) :- deer(V3), - gobbet(V0, V1), - vacation(V1, V2), not smallest(V1, V2), not -lubricant(V1, V3).","- phalanx(V0, V1) :- deer(V3), - gobbet(V0, V1), - vacation(V1, V2), not smallest(V1, V2), not -lubricant(V1, V3).","- customers(V1, V2) :- - bogy(V1, V2), not smallest(V1, V2).","kill(V1, V2) :- - bogy(V1, V2), not smallest(V1, V2).","omophagia(V1, V1) :- trim(V1, V3).","- gallon(V2, V2) :- kill(V0, V2), not -learning_from(V0, V2), not people_who_like_low_maintenance(V0, V2), not -roar(V0, V2), not -nipa(V0, V2).","measure(V0, V0) :- kill(V0, V2), not -learning_from(V0, V2), not people_who_like_low_maintenance(V0, V2), not -roar(V0, V2), not -nipa(V0, V2)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_90_7_10_1_4_0.5_1.0_5_3_4","seed":90,"num_facts":4,"num_rules":11,"num_related_predicates":15,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" district(\"Tiffany\", \"Jason\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["- acromphalus(\"Tiffany\", \"Jason\", \"Karen\").","- central_america(\"Tiffany\", \"Jason\", \"Karen\").","acardia(\"Tiffany\", \"Jason\", \"Karen\").","residential_district(\"Tiffany\", \"Jason\", \"Karen\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- acromphalus(\"Tiffany\", \"Jason\", \"Karen\").","- central_america(\"Tiffany\", \"Jason\", \"Karen\")."],"noiseless_rules":["- district(V0, V2) :- british_east_africa(V2, V4), - enclave(V0, V1, V3), not jurisdiction(V0, V1, V3), not -residential_district(V0, V2, V4).","answering_questions(V2) :- - acromphalus(V0, V2, V4), not -residential_district(V0, V2, V4).","- article_in_magazine(V1, V2, V3) :- monster(V0, V1, V3), - central_america(V0, V2, V4).","- america(V0, V2, V3) :- monster(V0, V1, V3), - central_america(V0, V2, V4).","british_east_africa(V2, V4) :- - acromphalus(V0, V2, V4), not -acardia(V0, V2, V4).","- abnormality(V0, V2, V4) :- - acromphalus(V0, V2, V4), not -acardia(V0, V2, V4).","monster(V0, V2, V2) :- - acromphalus(V0, V2, V4), not -acardia(V0, V2, V4).","- giving_information(V3, V2) :- answering_questions(V2), - article_in_magazine(V1, V2, V3).","- enclave(V0, V3, V3) :- - america(V0, V2, V3), - abnormality(V0, V3, V4), not giving_information(V3, V4), not fetus(V0, V2, V3).","- jurisdiction(V0, V1, V3) :- monster(V0, V1, V3).","- fetus(V0, V0, V3) :- monster(V0, V1, V3)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_28_8_12_10_11_0.5_1.0_5_2_3","seed":28,"num_facts":13,"num_rules":13,"num_related_predicates":26,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" road(\"Phillip\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- head(\"William\", \"Steven\").","suitcase(\"William\").","motor_oil(\"William\", \"Phillip\").","sobersides(\"Phillip\", \"Steven\").","body_part(\"Phillip\", \"Steven\").","- tormentor(\"Phillip\", \"Peter\").","cars(\"Phillip\", \"Peter\").","hand_luggage(\"Steven\").","baggage(\"William\", \"Steven\").","airplanes(\"Phillip\", \"Steven\").","boat(\"Steven\", \"Peter\").","- eye(\"Phillip\", \"Steven\").","- sneeze(\"Phillip\", \"Peter\")."],"noisy_facts":["- neuter(\"Phillip\", \"Peter\").","- masculine(\"William\", \"Steven\").","- money(\"Phillip\").","coin_purse(\"Phillip\", \"Peter\").","feminine(\"Phillip\", \"Steven\").","round_trip_ticket."],"min_fact_dicts_for_query":["- head(\"William\", \"Steven\").","suitcase(\"William\").","motor_oil(\"William\", \"Phillip\").","sobersides(\"Phillip\", \"Steven\").","body_part(\"Phillip\", \"Steven\").","- tormentor(\"Phillip\", \"Peter\").","hand_luggage(\"Steven\").","baggage(\"William\", \"Steven\").","airplanes(\"Phillip\", \"Steven\").","boat(\"Steven\", \"Peter\").","- eye(\"Phillip\", \"Steven\").","- sneeze(\"Phillip\", \"Peter\")."],"noiseless_rules":["- road(V1) :- - bridge(V1), - carrying_clothing(V1), - highway(V0, V3), not black(V1, V3).","- nose(V1, V3) :- - head(V0, V2), - eye(V1, V2), - sneeze(V1, V3).","- body(V1) :- - nose(V1, V3), not travel(V1, V3).","- bus(V2) :- - body(V2), not -carrying_with(V2), not -paint(V2).","- bridge(V2) :- - bus(V2), not -captain(V2).","- carrying_clothing(V1) :- suitcase(V0), hand_luggage(V2), baggage(V0, V2), airplanes(V1, V2), boat(V2, V3).","- travel(V1, V3) :- suitcase(V0), hand_luggage(V2), baggage(V0, V2), airplanes(V1, V2), boat(V2, V3).","carrying_with(V2) :- suitcase(V0), hand_luggage(V2), baggage(V0, V2), airplanes(V1, V2), boat(V2, V3).","- highway(V0, V3) :- motor_oil(V0, V1), sobersides(V1, V2), body_part(V1, V2), - tormentor(V1, V3), not -cars(V1, V3).","captain(V2) :- motor_oil(V0, V1), sobersides(V1, V2), body_part(V1, V2), - tormentor(V1, V3), not -cars(V1, V3).","- oil(V0, V2) :- motor_oil(V0, V1), sobersides(V1, V2), body_part(V1, V2), - tormentor(V1, V3), not -cars(V1, V3).","- black(V2, V2) :- - oil(V0, V2), not -baggage(V0, V2).","paint(V2) :- - oil(V0, V2), not -baggage(V0, V2)."],"noisy_rules":{"a":["road(V1) :- nose(V1, V3), bus(V2), carrying_clothing(V1), not -travel(V1, V3), not -black(V1, V3).","road(V1) :- body(V2), travel(V1, V3), not carrying_with(V2), not -black(V1, V3)."],"b":["- cars(V1, V3) :- travel(V1, V3), oil(V0, V2), not -road(V1).","sneeze(V1, V3) :- carrying_clothing(V1), travel(V1, V3), - carrying_with(V2), black(V1, V3), not -road(V1)."],"c":["oil(V2, V2) :- carrying_clothing(V1), - paint(V2).","- body_part(V1, V2) :- nose(V1, V3), body(V2), - carrying_with(V2), oil(V0, V2)."],"d":["- boat(V2, V2) :- - captain(V2).","travel(V0, V3) :- bus(V2), highway(V0, V3), not -round_trip_ticket."],"e":["coins(V1) :- not money(V1), coin_purse(V1, V3).","gender(V1, V3) :- - masculine(V0, V2), feminine(V1, V2), - neuter(V1, V3)."]}},"num_min_facts_for_query":12,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_2_8_9_8_11_0.5_1.0_3_1_2","seed":2,"num_facts":11,"num_rules":10,"num_related_predicates":21,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":" liquid(\"Amy\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- mouth(\"Amy\").","bowl(\"Amy\").","humpty_dumpty(\"Amy\").","- dinner_pail(\"Amy\").","- carafe(\"Amy\").","- smelling_bottle(\"Amy\").","- dish(\"Amy\").","bed(\"Amy\").","cloud(\"Amy\").","worms(\"Amy\").","- waterwheel(\"Amy\")."],"noisy_facts":["- rock_dove(\"Brian\").","- passenger_pigeon(\"Brian\").","put_out_small_fire(\"Amy\").","urchin(\"Amy\").","grotesque(\"Amy\").","dove(\"Brian\")."],"min_fact_dicts_for_query":["- mouth(\"Amy\")."],"noiseless_rules":["- liquid(V0) :- - bottle(V0), not medium(V0).","- bottle(V0) :- - mouth(V0), not carafe(V0), not smelling_bottle(V0).","- liquid_crystal(V0) :- - mouth(V0), not carafe(V0), not smelling_bottle(V0).","- cannikin(V0) :- pyroligneous_acid(V0), not -cloud(V0), not -worms(V0).","- medium(V0) :- - bucket(V0), not crockery(V0), not waterwheel(V0).","- bucket(V0) :- - cannikin(V0), not egg_in_fairy_tale(V0), not dinner_pail(V0).","pyroligneous_acid(V0) :- - liquid_crystal(V0), not -hold(V0), not -humpty_dumpty(V0).","- crockery(V0) :- bowl(V0), not dish(V0), not -bed(V0).","hold(V0) :- bowl(V0), not dish(V0), not -bed(V0).","- egg_in_fairy_tale(V0) :- humpty_dumpty(V0), not carafe(V0), not -bed(V0)."],"noisy_rules":{"a":["liquid(V0) :- not -bottle(V0), not -liquid_crystal(V0), medium(V0).","liquid(V0) :- not -bucket(V0), - pyroligneous_acid(V0), not -egg_in_fairy_tale(V0)."],"b":["- hold(V0) :- medium(V0), not -liquid(V0).","waterwheel(V0) :- not -bucket(V0), egg_in_fairy_tale(V0), liquid(V0)."],"c":["egg_in_fairy_tale(V0) :- liquid_crystal(V0), not -crockery(V0), not hold(V0).","- hold(V0) :- not -liquid_crystal(V0), bucket(V0)."],"d":["mouth(V0) :- - pyroligneous_acid(V0).","smelling_bottle(V0) :- not -bottle(V0), not -egg_in_fairy_tale(V0), urchin(V0)."],"e":["safflower_oil(V0) :- grotesque(V0), not -put_out_small_fire(V0).","pigeon(V1) :- not -dove(V1), not rock_dove(V1), - passenger_pigeon(V1)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_60_9_9_9_12_0.5_1.0_5_3_4","seed":60,"num_facts":15,"num_rules":10,"num_related_predicates":25,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" cereal(\"Ryan\", \"Mary\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- asthenosphere(\"Shawn\").","- rota(\"Judy\", \"Ryan\", \"Shawn\").","most_commonly(\"Judy\", \"Mary\").","deal_drugs(\"Judy\", \"Stephanie\").","sweet_corn(\"Ryan\", \"Mary\").","tropopause(\"Shawn\").","ear(\"Ryan\", \"Shawn\").","- corn(\"Mary\", \"Stephanie\").","- field_corn(\"Mary\", \"Stephanie\").","- corncob(\"Stephanie\", \"Shawn\").","swiss_pine(\"Judy\", \"Shawn\").","jerboa_rat(\"Judy\", \"Shawn\").","- black_rat(\"Judy\", \"Shawn\").","- wear(\"Judy\", \"Stephanie\").","radio_operator(\"Judy\", \"Ryan\", \"Mary\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- asthenosphere(\"Shawn\").","- rota(\"Judy\", \"Ryan\", \"Shawn\").","most_commonly(\"Judy\", \"Mary\").","sweet_corn(\"Ryan\", \"Mary\").","ear(\"Ryan\", \"Shawn\").","- corn(\"Mary\", \"Stephanie\").","- wear(\"Judy\", \"Stephanie\").","radio_operator(\"Judy\", \"Ryan\", \"Mary\")."],"noiseless_rules":["- cereal(V1, V2) :- rice(V4), - millet(V4), barley(V0, V1, V2), P7(V2, V3, V4).","rice(V4) :- crust(V1, V3), - rat(V2, V3), layer(V1, V3, V4).","crust(V4, V4) :- - millet(V4), not asthenosphere(V4).","bandicoot_rat(V0, V4) :- - rota(V0, V1, V4).","- millet(V4) :- bandicoot_rat(V0, V4), not -rice_rat(V0, V4), not -swiss_pine(V0, V4), not -jerboa_rat(V0, V4), not black_rat(V0, V4).","- rat(V0, V4) :- bandicoot_rat(V0, V4), not -rice_rat(V0, V4), not -swiss_pine(V0, V4), not -jerboa_rat(V0, V4), not black_rat(V0, V4).","barley(V0, V1, V2) :- most_commonly(V0, V2), - wear(V0, V3), radio_operator(V0, V1, V2).","rice_rat(V0, V0) :- deal_drugs(V0, V3), not wear(V0, V3).","P7(V2, V3, V4) :- sweet_corn(V1, V2), ear(V1, V4), - corn(V2, V3), not field_corn(V2, V3), not corncob(V3, V4).","layer(V4, V4, V4) :- - asthenosphere(V4), not -tropopause(V4)."],"noisy_rules":{}},"num_min_facts_for_query":8,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_95_8_11_8_11_0.5_1.0_5_1_2","seed":95,"num_facts":10,"num_rules":12,"num_related_predicates":22,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" P11(\"Dennis\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P12.","P13(\"Dennis\").","- P14.","P15.","P16.","- P17.","P18(\"Dennis\").","- P19(\"Dennis\").","P20(\"Dennis\").","- P21(\"Dennis\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- P12.","P20(\"Dennis\")."],"noiseless_rules":["- P11(V2) :- - P0(V2), not P1(V2), not P2(V2), not -P7(V2), not -P9(V2).","- P0(V2) :- P5(V2).","- P1(V2) :- P8(V2), not -P10(V2).","- P2(V2) :- P3(V2), not -P7(V2).","P3(V2) :- - P12, P20(V2).","P4(V2) :- - P12, P20(V2).","P5(V0) :- P4(V0), not P14, not -P15, not -P16, not P17.","- P6(V0) :- P4(V0), not P14, not -P15, not -P16, not P17.","P7(V2) :- - P0(V2), not -P13(V2).","P8(V2) :- - P0(V2), not -P13(V2).","P9(V2) :- - P6(V2), not -P18(V2), not P19(V2), not -P20(V2), not P21(V2).","P10(V2) :- - P6(V2), not -P18(V2), not P19(V2), not -P20(V2), not P21(V2)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_9_7_9_2_4_0.5_1.0_5_2_3","seed":9,"num_facts":6,"num_rules":10,"num_related_predicates":16,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6666666666666667,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"ginger(\"Christopher\", \"Rebecca\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["watching_films(\"Adam\", \"Christopher\").","chick(\"Adam\", \"Christopher\").","smoke(\"Adam\", \"Christopher\").","range(\"Adam\", \"Jessica\").","nest(\"Christopher\", \"Rebecca\").","farm(\"Christopher\", \"Jessica\")."],"noisy_facts":[],"min_fact_dicts_for_query":["watching_films(\"Adam\", \"Christopher\").","chick(\"Adam\", \"Christopher\").","smoke(\"Adam\", \"Christopher\").","range(\"Adam\", \"Jessica\").","nest(\"Christopher\", \"Rebecca\").","farm(\"Christopher\", \"Jessica\")."],"noiseless_rules":["ginger(V1, V2) :- cook(V0, V1), black(V0, V1), home(V0, V2), temperature(V1, V3).","cook(V0, V1) :- kitchen(V0, V1), fire(V0, V1), stove(V0, V1).","kitchen(V0, V1) :- watching_films(V0, V1).","hot(V0) :- fire(V0, V1), chick(V0, V1).","black(V0, V1) :- smoke(V0, V1).","fire(V0, V1) :- smoke(V0, V1).","home(V0, V2) :- range(V0, V3), nest(V1, V2), farm(V1, V3).","stove(V0, V1) :- range(V0, V3), nest(V1, V2), farm(V1, V3).","home_on(V0, V2) :- range(V0, V3), nest(V1, V2), farm(V1, V3).","temperature(V1, V1) :- kitchen(V0, V1), hot(V2), home_on(V0, V2)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_5_6_8_3_5_0.5_1.0_3_1_2","seed":5,"num_facts":5,"num_rules":9,"num_related_predicates":14,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"liaodong_peninsula(\"Andrew\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["looks(\"Andrew\").","- providing_nutrition_to_body(\"Andrew\").","- laughing_gull(\"Andrew\").","- dagger(\"Andrew\").","idea."],"noisy_facts":["wedding(\"Andrew\").","- quack(\"Andrew\").","- pendulum(\"Andrew\").","- build_up_collection_of_games."],"min_fact_dicts_for_query":["- providing_nutrition_to_body(\"Andrew\")."],"noiseless_rules":["liaodong_peninsula(V2) :- - duckling(V2), not -ossicle(V2), not rider(V2).","- duckling(V2) :- - groceries(V2), not -put(V2), not make_traveling_easier(V2).","- groceries(V2) :- put(V2), not -looks(V2), not providing_nutrition_to_body(V2).","- amulet(V2) :- put(V2), not -looks(V2), not providing_nutrition_to_body(V2).","ossicle(V2) :- - providing_nutrition_to_body(V2), not -idea.","- sky_color(V2) :- - providing_nutrition_to_body(V2), not -idea.","- rider(V1) :- - sky_color(V1).","put(V1) :- - sky_color(V1).","- make_traveling_easier(V2) :- - amulet(V2), not laughing_gull(V2), not dagger(V2)."],"noisy_rules":{"a":["- liaodong_peninsula(V2) :- amulet(V2).","- liaodong_peninsula(V2) :- duckling(V2), not -groceries(V2), sky_color(V1)."],"b":["make_traveling_easier(V2) :- - ossicle(V2), not -make_traveling_easier(V2), not liaodong_peninsula(V2).","duckling(V2) :- groceries(V2), make_traveling_easier(V2), - liaodong_peninsula(V2)."],"c":["providing_nutrition_to_body(V2) :- rider(V2), not put(V2).","rider(V2) :- duckling(V2)."],"d":["- idea(V1) :- sky_color(V1), not build_up_collection_of_games.","providing_nutrition_to_body(V2) :- not -groceries(V2), amulet(V2), wedding(V2)."],"e":["- particle(V2) :- - pendulum(V2).","- storing_coffee_beans(V2) :- - quack(V2)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_20_9_8_1_3_0.5_1.0_3_2_3","seed":20,"num_facts":6,"num_rules":9,"num_related_predicates":15,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" P8(\"William\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P9(\"William\", \"Patrick\").","P10(\"Patrick\").","- P11(\"William\", \"Patrick\").","P12(\"William\", \"Patrick\").","P13(\"William\", \"Patrick\").","P14(\"William\", \"Patrick\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- P9(\"William\", \"Patrick\").","P10(\"Patrick\").","P12(\"William\", \"Patrick\")."],"noiseless_rules":["- P8(V2) :- - P0(V2), P1(V1, V3), not P6(V2, V3).","- P0(V2) :- - P5(V2).","P1(V1, V3) :- - P3(V3), - P4(V1, V2), not P7(V2, V3).","P2(V2, V3) :- - P9(V2, V3).","- P3(V3) :- P10(V3).","- P4(V2, V2) :- - P6(V2, V3), not P11(V2, V3).","- P5(V2) :- P12(V2, V3).","- P6(V2, V3) :- P2(V2, V3), not -P13(V2, V3).","- P7(V2, V3) :- P2(V2, V3), not -P14(V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_31_9_12_12_12_0.5_1.0_3_2_3","seed":31,"num_facts":15,"num_rules":13,"num_related_predicates":28,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"tails(\"Jonathan\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- car(\"Jonathan\").","- sheep(\"Jonathan\", \"Debra\").","fly(\"Jonathan\", \"Alan\").","- horse(\"Jonathan\", \"Alan\").","cow(\"Jonathan\", \"Alan\").","- anyone(\"Jonathan\", \"Benjamin\").","red_admiral(\"Debra\", \"Benjamin\").","- common_bean(\"Jonathan\", \"Alan\").","- rodents(\"Jonathan\").","paper(\"Debra\", \"Alan\").","sky(\"Benjamin\", \"Alan\").","- nest(\"Debra\", \"Alan\").","- plate(\"Debra\", \"Alan\").","- bird(\"Debra\").","chicken(\"Debra\")."],"noisy_facts":["tolerance(\"Jonathan\", \"Benjamin\").","- stamina(\"Debra\", \"Alan\").","- head(\"Jonathan\", \"Alan\").","- wren(\"Debra\", \"Alan\").","chick(\"Debra\", \"Alan\").","- sufferance(\"Benjamin\", \"Alan\").","- oil(\"Jonathan\", \"Debra\")."],"min_fact_dicts_for_query":["- car(\"Jonathan\").","fly(\"Jonathan\", \"Alan\").","- anyone(\"Jonathan\", \"Benjamin\").","red_admiral(\"Debra\", \"Benjamin\").","paper(\"Debra\", \"Alan\").","sky(\"Benjamin\", \"Alan\")."],"noiseless_rules":["tails(V0) :- motor_vehicle(V0, V1), - above(V1, V3), not -mammals(V1, V3).","motor_vehicle(V0, V1) :- - car(V0), - anyone(V0, V2), red_admiral(V1, V2).","living(V0, V3) :- planes(V1), - animal(V0, V1), home(V0, V3).","pigs(V0) :- living(V0, V3), not -barnyard(V0, V3), not common_bean(V0, V3).","barnyard(V0, V3) :- - sheep(V0, V1), - horse(V0, V3), not -cow(V0, V3).","farm(V1) :- - sheep(V0, V1), - horse(V0, V3), not -cow(V0, V3).","- farm_animal(V1, V3) :- - sheep(V0, V1), - horse(V0, V3), not -cow(V0, V3).","- above(V1, V3) :- fly(V0, V3), paper(V1, V3), sky(V2, V3).","planes(V1) :- fly(V0, V3), paper(V1, V3), sky(V2, V3).","mammals(V0, V0) :- pigs(V0), not -animals(V0), not rodents(V0).","- animal(V1, V1) :- farm(V1), not bird(V1), not -chicken(V1).","animals(V1) :- farm(V1), not bird(V1), not -chicken(V1).","home(V3, V3) :- - farm_animal(V1, V3), not nest(V1, V3), not plate(V1, V3)."],"noisy_rules":{"a":["- tails(V1) :- - planes(V1).","- tails(V0) :- - animals(V0)."],"b":["anyone(V0, V0) :- - tails(V0).","nest(V0, V0) :- - tails(V0)."],"c":["- planes(V1) :- animal(V0, V1).","- red_admiral(V0, V0) :- - living(V0, V3)."],"d":["above(V0, V3) :- - barnyard(V0, V3), - head(V0, V3).","car(V0) :- - motor_vehicle(V0, V1), - oil(V0, V1)."],"e":["small_bird(V1) :- chick(V1, V3), not wren(V1, V3).","endurance(V2) :- tolerance(V0, V2), - stamina(V1, V3), - sufferance(V2, V3)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_90_7_8_3_5_0.5_1.0_3_2_3","seed":90,"num_facts":6,"num_rules":9,"num_related_predicates":15,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"P8(\"Amber\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P9(\"David\", \"Corey\").","- P10(\"Corey\", \"Amber\").","- P11.","- P12(\"Mark\", \"Amber\").","P13(\"Corey\", \"Amber\").","- P14(\"Mark\", \"Corey\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P9(\"David\", \"Corey\").","- P10(\"Corey\", \"Amber\").","- P12(\"Mark\", \"Amber\")."],"noiseless_rules":["P8(V3) :- - P2(V2), P6(V2, V3).","P0(V1, V2) :- P9(V0, V2), - P12(V1, V3), not -P13(V2, V3).","P1(V2, V3) :- - P10(V2, V3).","- P2(V2) :- - P10(V2, V3), not P11.","- P3(V3, V2) :- - P10(V2, V3), not P11.","- P4(V3, V2) :- - P10(V2, V3), not P11.","P5(V2, V3) :- P0(V1, V2), P1(V2, V3), not P14(V1, V2).","P6(V2, V3) :- - P3(V0, V2), P5(V2, V3), not P7(V0, V2).","- P7(V2, V2) :- - P4(V1, V2), P5(V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_81_8_8_6_8_0.5_1.0_3_2_3","seed":81,"num_facts":9,"num_rules":9,"num_related_predicates":18,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"settled_monthy(\"Ricardo\", \"Jared\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["castle(\"Ricardo\", \"Jared\").","queen(\"Erik\", \"Jared\").","auscultation(\"Ricardo\", \"Jared\").","plants_growing_in(\"Erik\", \"Jared\").","make_clothing(\"Erik\", \"Jared\").","chessboard(\"Ricardo\", \"Jared\").","leaning(\"Ricardo\", \"Erik\").","high_walls(\"Ricardo\", \"Erik\").","lumber(\"Ricardo\", \"Jared\")."],"noisy_facts":[],"min_fact_dicts_for_query":["castle(\"Ricardo\", \"Jared\").","queen(\"Erik\", \"Jared\").","auscultation(\"Ricardo\", \"Jared\").","plants_growing_in(\"Erik\", \"Jared\").","make_clothing(\"Erik\", \"Jared\").","chessboard(\"Ricardo\", \"Jared\").","leaning(\"Ricardo\", \"Erik\").","high_walls(\"Ricardo\", \"Erik\").","lumber(\"Ricardo\", \"Jared\")."],"noiseless_rules":["settled_monthy(V1, V3) :- accounts(V1, V3), epoch(V2, V3), listening(V2, V3).","accounts(V1, V3) :- chess_set(V1, V3).","chess_set(V1, V3) :- chessman(V3), relistening(V1, V3), chessboard(V1, V3).","chessman(V3) :- castle(V1, V3), queen(V2, V3).","edible(V1, V3) :- castle(V1, V3), queen(V2, V3).","relistening(V1, V3) :- edible(V1, V3), lumber(V1, V3).","pallette(V3, V2) :- queen(V2, V3), plants_growing_in(V2, V3), make_clothing(V2, V3).","epoch(V2, V1) :- pallette(V1, V2), leaning(V1, V2), high_walls(V1, V2).","listening(V3, V3) :- relistening(V1, V3), auscultation(V1, V3)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_24_8_10_7_8_0.5_1.0_5_3_4","seed":24,"num_facts":11,"num_rules":11,"num_related_predicates":22,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8571428571428572,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" animal(\"Craig\", \"Kenneth\", \"Susan\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["egg(\"Richard\", \"Kenneth\", \"Susan\").","- canary(\"Richard\", \"Craig\", \"Kenneth\").","- vacation(\"Kenneth\", \"Mandy\", \"Susan\").","sheep(\"Richard\", \"Kenneth\", \"Susan\").","bird(\"Richard\", \"Kenneth\", \"Susan\").","- bogy(\"Richard\", \"Kenneth\").","gander(\"Richard\", \"Kenneth\").","hen(\"Richard\", \"Mandy\").","fish(\"Kenneth\", \"Mandy\", \"Susan\").","creation(\"Kenneth\", \"Mandy\", \"Susan\").","colour(\"Craig\", \"Kenneth\")."],"noisy_facts":["- bed(\"Richard\", \"Craig\").","horse(\"Richard\", \"Craig\", \"Kenneth\").","- gallon(\"Craig\").","dog(\"Richard\", \"Mandy\", \"Susan\").","- kill(\"Richard\", \"Kenneth\").","- airdock(\"Richard\", \"Kenneth\", \"Mandy\")."],"min_fact_dicts_for_query":["egg(\"Richard\", \"Kenneth\", \"Susan\").","colour(\"Craig\", \"Kenneth\")."],"noiseless_rules":["- animal(V1, V2, V4) :- - flea(V0, V1), - chicken(V2, V4), - duck(V3, V4), not -chick(V0, V2, V4), not -bird(V0, V2, V4).","- creature(V0, V2, V3) :- - bat(V2), - oval(V0, V2), hen(V0, V3), fish(V2, V3, V4), not -creation(V2, V3, V4).","- flea(V0, V1) :- - yolk(V0, V2), colour(V1, V2).","- chicken(V2, V4) :- egg(V0, V2, V4).","- yellow(V0, V2) :- - canary(V0, V1, V2).","- bat(V2) :- - vacation(V2, V3, V4).","- duck(V0, V4) :- egg(V0, V2, V4), not -sheep(V0, V2, V4).","- oval(V0, V2) :- egg(V0, V2, V4), not -sheep(V0, V2, V4).","- yolk(V0, V2) :- egg(V0, V2, V4), not -sheep(V0, V2, V4).","white(V4, V2, V2) :- egg(V0, V2, V4), not -sheep(V0, V2, V4).","chick(V0, V2, V0) :- - creature(V0, V2, V3), - yellow(V0, V2), white(V1, V2, V3), not bogy(V0, V2), not -gander(V0, V2)."],"noisy_rules":{"a":["animal(V1, V2, V4) :- creature(V0, V2, V3), flea(V0, V1), yolk(V0, V2), - chick(V0, V2, V4).","animal(V1, V2, V4) :- creature(V0, V2, V3), bat(V2), yolk(V0, V2), - white(V1, V2, V3), - chick(V0, V2, V4)."],"b":["- bird(V0, V2, V4) :- creature(V0, V2, V3), animal(V1, V2, V4).","- colour(V1, V2) :- yellow(V0, V2), - white(V1, V2, V3), animal(V1, V2, V4)."],"c":["- egg(V0, V2, V4) :- creature(V0, V2, V3), flea(V0, V1), chicken(V2, V4), not -oval(V0, V2), yolk(V0, V2).","- hen(V4, V2) :- chicken(V2, V4)."],"d":["- hen(V0, V3) :- yellow(V0, V2), oval(V0, V2), yolk(V0, V2), - white(V1, V2, V3), - kill(V0, V2).","- colour(V1, V0) :- flea(V0, V1)."],"e":["phalanx(V2, V3) :- - airdock(V0, V2, V3).","four(V0, V2) :- - gallon(V1), - bed(V0, V1), horse(V0, V1, V2), dog(V0, V3, V4)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_51_9_8_8_11_0.5_1.0_3_2_3","seed":51,"num_facts":12,"num_rules":9,"num_related_predicates":21,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"possum(\"Jacqueline\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- cartesian(\"Thomas\", \"Jacqueline\").","- emotional(\"Jacqueline\").","- nasal(\"David\", \"Jacqueline\").","- oil_company(\"David\", \"Ralph\").","mogul_empire(\"Thomas\", \"Jacqueline\").","carpenters_level(\"Thomas\", \"Jacqueline\").","finial(\"David\", \"Thomas\").","- perimysium(\"David\", \"Jacqueline\").","flying_in(\"Thomas\", \"Jacqueline\").","- eating_in_restaurant(\"Thomas\", \"Jacqueline\").","brown_bread(\"David\", \"Jacqueline\").","kentucky(\"Thomas\", \"Jacqueline\")."],"noisy_facts":["indian_food(\"Thomas\", \"Jacqueline\").","old_world_white_pelican(\"David\", \"Jacqueline\").","- consumption(\"David\", \"Thomas\").","part_in_acrimonious_ways(\"David\", \"Ralph\").","- stick(\"David\", \"Jacqueline\").","trent(\"Ralph\", \"Jacqueline\")."],"min_fact_dicts_for_query":["- cartesian(\"Thomas\", \"Jacqueline\").","- emotional(\"Jacqueline\").","- nasal(\"David\", \"Jacqueline\").","finial(\"David\", \"Thomas\")."],"noiseless_rules":["possum(V3) :- common_target_of_robbers(V1, V3), not -carpenters_level(V1, V3).","- reflective_surface(V1, V3) :- plectophera(V1, V3), not cartesian(V1, V3), not -carpenters_level(V1, V3).","plectophera(V1, V3) :- - cartesian(V1, V3), not -flying_in(V1, V3), not eating_in_restaurant(V1, V3).","- antarctica(V3) :- - reflective_surface(V1, V3), not -mogul_empire(V1, V3), not -carpenters_level(V1, V3).","buying_for_loved_one(V1, V3) :- - emotional(V3), finial(V0, V1), not perimysium(V0, V3).","- body_of_water(V0, V3) :- - nasal(V0, V3).","- door_knobs(V1, V3) :- buying_for_loved_one(V1, V3), - body_of_water(V0, V3), not reminder_to_pay(V0, V3).","- reminder_to_pay(V0, V3) :- - oil_company(V0, V2), brown_bread(V0, V3), kentucky(V1, V3).","common_target_of_robbers(V1, V3) :- - antarctica(V3), - door_knobs(V1, V3)."],"noisy_rules":{"a":["- possum(V3) :- - buying_for_loved_one(V1, V3), body_of_water(V0, V3), reminder_to_pay(V0, V3).","- possum(V3) :- door_knobs(V1, V3), reminder_to_pay(V0, V3)."],"b":["cartesian(V1, V3) :- reflective_surface(V1, V3), not buying_for_loved_one(V1, V3), not possum(V3).","reminder_to_pay(V1, V3) :- reflective_surface(V1, V3), - possum(V3)."],"c":["- plectophera(V1, V3) :- reflective_surface(V1, V3).","- finial(V3, V1) :- reflective_surface(V1, V3), not buying_for_loved_one(V1, V3), not -door_knobs(V1, V3)."],"d":["reflective_surface(V3, V3) :- body_of_water(V0, V3), not -old_world_white_pelican(V0, V3).","- brown_bread(V0, V3) :- body_of_water(V0, V3), not -reminder_to_pay(V0, V3), not stick(V0, V3)."],"e":["smudge(V1, V3) :- - consumption(V0, V1), indian_food(V1, V3), trent(V2, V3).","- slide(V2) :- part_in_acrimonious_ways(V0, V2)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_92_10_12_12_12_0.5_1.0_5_3_4","seed":92,"num_facts":17,"num_rules":13,"num_related_predicates":30,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.7777777777777777,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" square_meter(\"Jennifer\", \"Amy\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- slit(\"Ryan\", \"Jennifer\", \"Amy\").","- parcellation(\"Jennifer\", \"Melissa\").","playing_tennis(\"Ryan\", \"Amy\").","- hares(\"Ryan\", \"Melissa\", \"Amy\").","curtain(\"Ryan\", \"Melissa\", \"Amy\").","running(\"Jennifer\", \"Melissa\").","playing(\"Melissa\", \"Amy\").","- riding_bicycle(\"Amanda\", \"Ryan\", \"Amy\").","running_in_marathon(\"Amanda\", \"Ryan\", \"Amy\").","- cut(\"Jennifer\", \"Melissa\").","- bisection(\"Melissa\", \"Amy\").","dichotomization(\"Amanda\", \"Ryan\", \"Amy\").","- short_division(\"Ryan\", \"Jennifer\", \"Melissa\").","admission_day(\"Melissa\", \"Amy\").","- lot_of_fat(\"Amanda\", \"Jennifer\", \"Melissa\").","- night(\"Ryan\", \"Jennifer\", \"Amy\").","field_day(\"Ryan\", \"Jennifer\", \"Amy\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- slit(\"Ryan\", \"Jennifer\", \"Amy\").","curtain(\"Ryan\", \"Melissa\", \"Amy\").","admission_day(\"Melissa\", \"Amy\").","- lot_of_fat(\"Amanda\", \"Jennifer\", \"Melissa\")."],"noiseless_rules":["- square_meter(V2, V4) :- - apodeme(V0, V3), - cormorant(V1, V2, V4), not illumination(V1, V3, V4), not excercise(V1, V3, V4), not -mammals(V1, V3, V4).","day(V0, V2, V3) :- - obstruct(V1, V3), admission_day(V3, V4), - lot_of_fat(V0, V2, V3), not night(V1, V2, V4), not -field_day(V1, V2, V4).","- apodeme(V0, V3) :- day(V0, V2, V3), not division(V0, V2, V3).","- cormorant(V1, V2, V4) :- - slit(V1, V2, V4).","- illumination(V1, V3, V4) :- - many_houses(V4), good_exercise(V0, V4), dark(V1, V3, V4).","- division(V0, V2, V3) :- - parcellation(V2, V3), - cut(V2, V3), - bisection(V3, V4), dichotomization(V0, V1, V4), not short_division(V1, V2, V3).","- many_houses(V4) :- - form_of_exercise(V1, V2, V4).","- excercise(V1, V3, V4) :- playing_tennis(V1, V4), running(V2, V3), playing(V3, V4), - riding_bicycle(V0, V1, V4), not -running_in_marathon(V0, V1, V4).","good_exercise(V0, V4) :- playing_tennis(V1, V4), running(V2, V3), playing(V3, V4), - riding_bicycle(V0, V1, V4), not -running_in_marathon(V0, V1, V4).","- form_of_exercise(V1, V2, V4) :- playing_tennis(V1, V4), running(V2, V3), playing(V3, V4), - riding_bicycle(V0, V1, V4), not -running_in_marathon(V0, V1, V4).","mammals(V1, V3, V4) :- - hares(V1, V3, V4).","- obstruct(V1, V3) :- curtain(V1, V3, V4).","dark(V1, V3, V4) :- curtain(V1, V3, V4)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_80_7_10_6_9_0.5_1.0_5_2_3","seed":80,"num_facts":8,"num_rules":11,"num_related_predicates":19,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"P10(\"Spencer\", \"James\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P11(\"Spencer\", \"Summer\").","P12(\"Spencer\", \"Summer\").","P13(\"James\", \"Summer\").","P14(\"James\", \"Summer\").","P15(\"Spencer\", \"Summer\").","- P16(\"James\", \"Summer\").","- P17(\"Spencer\", \"Summer\").","P18(\"James\", \"Summer\")."],"noisy_facts":["- P28(\"James\", \"Nicole\").","P29(\"Summer\", \"Nicole\").","P25(\"James\").","P19(\"Spencer\", \"Summer\").","- P27(\"James\", \"Nicole\").","P23(\"Summer\", \"Nicole\").","P22(\"James\", \"Summer\").","P20(\"Spencer\", \"Summer\").","- P26(\"Spencer\", \"Summer\")."],"min_fact_dicts_for_query":["- P11(\"Spencer\", \"Summer\").","P12(\"Spencer\", \"Summer\").","- P16(\"James\", \"Summer\")."],"noiseless_rules":["P10(V0, V1) :- P0(V1), - P1(V0, V2), not P7(V1, V2), not -P13(V1, V2), not -P14(V1, V2).","P0(V1) :- P2(V1, V2), not P5(V1, V2), not P7(V1, V2), not P9(V1, V2).","- P1(V0, V2) :- - P11(V0, V2).","P2(V1, V2) :- P12(V0, V2), - P16(V1, V2), not -P18(V1, V2).","P3(V0, V2) :- P12(V0, V2), - P16(V1, V2), not -P18(V1, V2).","- P4(V0, V2) :- P12(V0, V2), - P16(V1, V2), not -P18(V1, V2).","- P5(V2, V2) :- P3(V0, V2), not -P8(V0, V2).","P6(V0, V2) :- P3(V0, V2), not -P8(V0, V2).","- P7(V0, V2) :- - P4(V0, V2).","P8(V0, V2) :- - P4(V0, V2).","- P9(V1, V2) :- P6(V0, V2), P8(V0, V2), P15(V0, V2), - P16(V1, V2), not P17(V0, V2)."],"noisy_rules":{"a":["- P10(V0, V1) :- - P6(V0, V2), not P8(V0, V2), P9(V1, V2).","- P10(V0, V0) :- - P8(V0, V2)."],"b":["P1(V0, V2) :- - P2(V1, V2), not P3(V0, V2), not -P4(V0, V2), - P6(V0, V2), - P10(V0, V1).","- P12(V0, V2) :- - P2(V1, V2), P9(V1, V2), - P10(V0, V1)."],"c":["- P3(V0, V2) :- - P0(V1), P1(V0, V2), P9(V1, V2).","P16(V1, V2) :- P1(V0, V2), - P3(V0, V2), P7(V1, V2)."],"d":["- P6(V0, V2) :- not -P1(V0, V2), - P2(V1, V2), P19(V0, V2).","P4(V0, V2) :- - P2(V1, V2), - P8(V0, V2), not -P20(V0, V2)."],"e":["P21(V1, V3) :- P22(V1, V2), P23(V2, V3).","P24(V0, V2) :- P25(V1), - P26(V0, V2), - P27(V1, V3), not P28(V1, V3), not -P29(V2, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_46_6_9_5_7_0.5_1.0_5_3_4","seed":46,"num_facts":7,"num_rules":10,"num_related_predicates":17,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P9(\"John\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P10(\"Gary\").","P11(\"Gary\", \"John\", \"Patrick\").","- P12(\"Gary\", \"Patrick\").","P13(\"Gary\", \"Patrick\").","- P14(\"Gary\", \"Patrick\").","P15(\"John\", \"Patrick\").","P16(\"Gary\", \"John\", \"Patrick\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P10(\"Gary\").","P11(\"Gary\", \"John\", \"Patrick\").","P15(\"John\", \"Patrick\")."],"noiseless_rules":["P9(V2) :- - P0(V3), - P3(V0, V3), P5(V0, V4), - P6(V2, V3), not P8(V0, V2, V3).","- P0(V3) :- P10(V0), P15(V2, V3), not -P16(V0, V2, V3).","- P1(V0, V3) :- P10(V0), P15(V2, V3), not -P16(V0, V2, V3).","P2(V2, V3) :- P10(V0), P15(V2, V3), not -P16(V0, V2, V3).","- P3(V0, V3) :- P11(V0, V2, V3).","P4(V2, V3) :- P11(V0, V2, V3).","P5(V0, V3) :- - P1(V0, V3), not P7(V0, V3), not P12(V0, V3), not -P13(V0, V3), not P14(V0, V3).","- P6(V2, V3) :- P2(V2, V3), P10(V0), not P14(V0, V3).","- P7(V0, V3) :- P2(V2, V3), P10(V0), not P14(V0, V3).","- P8(V3, V2, V3) :- P4(V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_75_9_14_11_13_0.5_1.0_5_2_3","seed":75,"num_facts":15,"num_rules":15,"num_related_predicates":30,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":12,"target_query":" towel(\"Andrew\", \"Kathryn\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- jewellery(\"Nicole\", \"Kathryn\").","manipulator(\"Andrew\", \"Kathryn\").","horst(\"Nicole\", \"Kathryn\").","capybara(\"Nicole\", \"Madison\").","spot_prey(\"Andrew\", \"Kathryn\").","- ozone_layer(\"Andrew\", \"Kathryn\").","- excrete(\"Andrew\", \"Kathryn\").","- coagulant(\"Andrew\", \"Kathryn\").","drygoods(\"Nicole\", \"Madison\").","cargo(\"Nicole\", \"Madison\").","- instruments(\"Andrew\", \"Kathryn\").","dentists_drill(\"Andrew\", \"Kathryn\").","pistia(\"Andrew\", \"Kathryn\").","person_wants(\"Andrew\", \"Madison\").","- compact(\"Andrew\", \"Madison\")."],"noisy_facts":["enjoy_sex.","- shock(\"Kathryn\", \"Madison\").","beard_worm(\"Andrew\", \"Kathryn\").","- army_rank(\"Nicole\").","common_eel(\"Kathryn\", \"Madison\").","nuclear_fuel(\"Nicole\", \"Andrew\").","mountain_quail(\"Kathryn\").","- gobbet(\"Kathryn\", \"Madison\").","- drive_on(\"Nicole\", \"Kathryn\").","preposition(\"Nicole\", \"Kathryn\").","- character(\"Andrew\")."],"min_fact_dicts_for_query":["- jewellery(\"Nicole\", \"Kathryn\").","manipulator(\"Andrew\", \"Kathryn\").","capybara(\"Nicole\", \"Madison\").","drygoods(\"Nicole\", \"Madison\").","cargo(\"Nicole\", \"Madison\").","- instruments(\"Andrew\", \"Kathryn\").","pistia(\"Andrew\", \"Kathryn\").","person_wants(\"Andrew\", \"Madison\")."],"noiseless_rules":["- towel(V1, V2) :- - cabbageworm(V0, V2), check_character(V0, V3), - often_home_to_mice(V1, V2).","- our(V0, V3) :- - jewellery(V0, V2), drygoods(V0, V3), cargo(V0, V3), - instruments(V1, V2), not -dentists_drill(V1, V2).","bull(V1, V2) :- - jewellery(V0, V2), drygoods(V0, V3), cargo(V0, V3), - instruments(V1, V2), not -dentists_drill(V1, V2).","curd(V0) :- - jewellery(V0, V2), drygoods(V0, V3), cargo(V0, V3), - instruments(V1, V2), not -dentists_drill(V1, V2).","- cabbageworm(V0, V2) :- - overflow(V0, V3), leg_presses(V1, V2), not -barn(V1, V2), not -single_breasted_jacket(V2, V3).","sri_lanka_rupee(V1, V2) :- - overflow(V0, V3), leg_presses(V1, V2), not -barn(V1, V2), not -single_breasted_jacket(V2, V3).","- overflow(V0, V3) :- - our(V0, V3), not sense_fear(V0, V3).","what_people_eat(V0, V3) :- - our(V0, V3), not sense_fear(V0, V3).","leg_presses(V1, V2) :- manipulator(V1, V2), pistia(V1, V2), person_wants(V1, V3), not compact(V1, V3).","barn(V1, V2) :- bull(V1, V2), not -spot_prey(V1, V2), not ozone_layer(V1, V2), not excrete(V1, V2), not coagulant(V1, V2).","check_character(V0, V3) :- what_people_eat(V0, V2), - sense_fear(V0, V3), not -horst(V0, V2).","single_breasted_jacket(V2, V3) :- what_people_eat(V0, V2), - sense_fear(V0, V3), not -horst(V0, V2).","- often_home_to_mice(V1, V2) :- curd(V0), sri_lanka_rupee(V1, V2), not -what_people_eat(V0, V2), not -social_occasions(V0).","- sense_fear(V0, V3) :- capybara(V0, V3).","social_occasions(V0) :- capybara(V0, V3)."],"noisy_rules":{"a":["towel(V1, V2) :- our(V0, V3), - what_people_eat(V0, V2), - leg_presses(V1, V2), not check_character(V0, V3).","towel(V1, V2) :- not sri_lanka_rupee(V1, V2), not leg_presses(V1, V2), often_home_to_mice(V1, V2)."],"b":["sense_fear(V2, V1) :- towel(V1, V2).","- what_people_eat(V0, V2) :- - curd(V0), towel(V1, V2)."],"c":["our(V0, V3) :- - bull(V1, V2), - curd(V0), not -overflow(V0, V3), - single_breasted_jacket(V2, V3).","- pistia(V2, V2) :- - what_people_eat(V0, V2)."],"d":["- check_character(V0, V3) :- not -cabbageworm(V0, V2), - single_breasted_jacket(V2, V3), preposition(V0, V2).","excrete(V0, V3) :- - curd(V0), - check_character(V0, V3), enjoy_sex."],"e":["- talking_to_friends(V2, V3) :- not -mountain_quail(V2), not gobbet(V2, V3), not shock(V2, V3), common_eel(V2, V3).","golden_pheasant(V1, V2) :- - army_rank(V0), - character(V1), nuclear_fuel(V0, V1), - drive_on(V0, V2), not -beard_worm(V1, V2)."]}},"num_min_facts_for_query":8,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_47_6_9_1_3_0.5_1.0_5_3_4","seed":47,"num_facts":3,"num_rules":10,"num_related_predicates":13,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"P9(\"Jennifer\", \"James\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P10(\"Jennifer\", \"Steven\", \"James\").","- P11(\"Dylan\", \"Steven\", \"Tammy\").","P12(\"Jennifer\", \"Steven\", \"James\")."],"noisy_facts":["P21(\"Jennifer\", \"Tammy\", \"James\").","- P19(\"Jennifer\", \"Steven\", \"James\").","- P17(\"Tammy\", \"James\").","- P18(\"Dylan\", \"Tammy\", \"James\").","- P13(\"Dylan\", \"Tammy\", \"James\").","- P16(\"Dylan\", \"James\")."],"min_fact_dicts_for_query":["P10(\"Jennifer\", \"Steven\", \"James\").","- P11(\"Dylan\", \"Steven\", \"Tammy\").","P12(\"Jennifer\", \"Steven\", \"James\")."],"noiseless_rules":["P9(V1, V4) :- - P0(V0, V2), - P7(V0, V3, V4), P10(V1, V2, V4).","- P0(V2, V2) :- P4(V1, V2, V4), not -P10(V1, V2, V4).","P1(V1, V2, V4) :- P4(V1, V2, V4), not -P10(V1, V2, V4).","- P2(V2, V1, V4) :- P4(V1, V2, V4), not -P10(V1, V2, V4).","P3(V1) :- P4(V1, V2, V4), not -P10(V1, V2, V4).","P4(V1, V2, V4) :- - P11(V0, V2, V3), P12(V1, V2, V4).","- P5(V0, V4) :- - P11(V0, V2, V3), P12(V1, V2, V4).","- P6(V2, V4, V4) :- P1(V1, V2, V4), not -P4(V1, V2, V4).","- P7(V0, V3, V4) :- - P2(V0, V3, V4), not P6(V0, V3, V4), not -P8(V0, V3, V4).","P8(V0, V0, V4) :- P3(V0), - P5(V0, V4)."],"noisy_rules":{"a":["- P9(V1, V4) :- P0(V0, V2), - P1(V1, V2, V4), not P4(V1, V2, V4).","- P9(V1, V4) :- - P3(V0), - P4(V1, V2, V4)."],"b":["P7(V0, V3, V4) :- P0(V0, V2), - P1(V1, V2, V4), P5(V0, V4), - P8(V0, V3, V4), - P9(V1, V4).","P0(V0, V4) :- P5(V0, V4), - P9(V1, V4)."],"c":["P5(V0, V4) :- P0(V0, V2), P2(V0, V3, V4), - P4(V1, V2, V4), not -P6(V0, V3, V4), - P8(V0, V3, V4).","- P8(V0, V3, V4) :- P5(V0, V4), P7(V0, V3, V4)."],"d":["P5(V1, V4) :- - P4(V1, V2, V4).","P14(V1, V4) :- not P1(V1, V2, V4), - P4(V1, V2, V4), P5(V0, V4), not -P7(V0, V3, V4), - P13(V0, V3, V4)."],"e":["- P15(V2, V4) :- not P16(V0, V4), not P17(V3, V4), - P18(V0, V3, V4), - P19(V1, V2, V4).","- P20(V3, V4) :- P21(V1, V3, V4)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_37_10_13_13_13_0.5_1.0_5_2_3","seed":37,"num_facts":16,"num_rules":14,"num_related_predicates":30,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.4444444444444446,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" P13(\"Sabrina\", \"Carla\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P14(\"Angela\", \"Carla\").","P15(\"Angela\", \"Sabrina\").","P16(\"Samantha\").","- P17(\"Angela\", \"Sabrina\").","- P18(\"Angela\", \"Sabrina\").","P19(\"Angela\", \"Sabrina\").","- P20(\"Angela\", \"Sabrina\").","- P21(\"Samantha\").","- P22(\"Samantha\").","- P23(\"Samantha\").","- P24(\"Samantha\").","- P25(\"Sabrina\", \"Carla\").","P26(\"Angela\", \"Carla\").","P27(\"Samantha\", \"Sabrina\").","- P28(\"Samantha\", \"Carla\").","- P29(\"Samantha\", \"Carla\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P14(\"Angela\", \"Carla\").","P15(\"Angela\", \"Sabrina\").","P26(\"Angela\", \"Carla\").","P27(\"Samantha\", \"Sabrina\")."],"noiseless_rules":["- P13(V2, V3) :- - P0(V0), - P2(V3), - P4(V0, V2), not P7(V0, V3), not P25(V2, V3).","- P0(V0) :- - P3(V0, V3), P26(V0, V3), P27(V1, V2), not P28(V1, V3), not P29(V1, V3).","- P1(V2, V3) :- - P3(V0, V3), P26(V0, V3), P27(V1, V2), not P28(V1, V3), not P29(V1, V3).","- P2(V3) :- P14(V0, V3).","- P3(V0, V3) :- P14(V0, V3).","- P4(V0, V2) :- P15(V0, V2).","- P5(V0, V2) :- P15(V0, V2).","P6(V2, V0) :- - P5(V0, V2), not P17(V0, V2), not P18(V0, V2), not -P19(V0, V2), not P20(V0, V2).","- P7(V0, V3) :- - P9(V0, V3), not -P11(V0, V3).","- P8(V1) :- P16(V1).","- P9(V2, V3) :- - P1(V2, V3), not -P10(V2, V3).","P10(V3, V3) :- P6(V1, V3), not P12(V1, V3).","P11(V1, V1) :- - P8(V1), not P21(V1), not P22(V1), not P23(V1), not P24(V1).","- P12(V1, V1) :- - P8(V1), not P21(V1), not P22(V1), not P23(V1), not P24(V1)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_84_8_8_7_10_0.5_1.0_3_3_4","seed":84,"num_facts":9,"num_rules":9,"num_related_predicates":18,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" P8(\"Francisco\", \"Brenda\", \"Andrea\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P9(\"Brenda\", \"Andrea\").","P10(\"Tom\", \"Francisco\", \"Brenda\").","P11(\"Tom\", \"Francisco\", \"Andrea\").","P12(\"Tom\", \"Brenda\", \"Andrea\").","P13(\"Brenda\", \"Andrea\").","P14(\"Tom\", \"Francisco\", \"Brenda\").","P15(\"Francisco\", \"Brenda\").","P16(\"Kristin\", \"Brenda\", \"Andrea\").","P17(\"Francisco\", \"Kristin\", \"Andrea\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P9(\"Brenda\", \"Andrea\").","P10(\"Tom\", \"Francisco\", \"Brenda\").","P11(\"Tom\", \"Francisco\", \"Andrea\").","P12(\"Tom\", \"Brenda\", \"Andrea\").","P13(\"Brenda\", \"Andrea\").","P14(\"Tom\", \"Francisco\", \"Brenda\").","P15(\"Francisco\", \"Brenda\").","P16(\"Kristin\", \"Brenda\", \"Andrea\").","P17(\"Francisco\", \"Kristin\", \"Andrea\")."],"noiseless_rules":["P8(V1, V3, V4) :- P7(V1, V2), P13(V3, V4), P17(V1, V2, V4).","P0(V2, V3, V4) :- P2(V4), P16(V2, V3, V4).","P1(V0, V1, V2) :- P5(V0, V1, V2).","P2(V4) :- P9(V3, V4), P11(V0, V1, V4), P12(V0, V3, V4).","P3(V0, V1, V3) :- P9(V3, V4), P11(V0, V1, V4), P12(V0, V3, V4).","P4(V1, V3) :- P3(V0, V1, V3), P6(V0, V1, V3), P14(V0, V1, V3).","P5(V3, V1, V2) :- P4(V1, V3), P15(V1, V3), P16(V2, V3, V4).","P6(V0, V1, V3) :- P10(V0, V1, V3), P14(V0, V1, V3).","P7(V1, V2) :- P0(V2, V3, V4), P1(V0, V1, V2), P13(V3, V4)."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_31_6_8_8_9_0.5_1.0_5_1_2","seed":31,"num_facts":10,"num_rules":9,"num_related_predicates":19,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.4,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" share_experiences(\"Lisa\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- pierid(\"Lisa\").","noumenon(\"Lisa\").","lettuce(\"Lisa\").","- wooly(\"Lisa\").","- having_desert_after_meal(\"Lisa\").","athenaeum(\"Lisa\").","chemical(\"Lisa\").","- casque(\"Lisa\").","cephalochordate(\"Lisa\").","- last_forever(\"Lisa\")."],"noisy_facts":["servant(\"Lisa\").","support(\"Lisa\").","midnight_sun(\"Lisa\").","dish(\"Lisa\").","- scapular(\"Lisa\").","teacup(\"Lisa\")."],"min_fact_dicts_for_query":["noumenon(\"Lisa\")."],"noiseless_rules":["- share_experiences(V0) :- turbot(V0), not destroying_targets(V0), not seraph(V0), not -blind(V0).","theater(V0) :- - pierid(V0), not -chemical(V0), not casque(V0), not -cephalochordate(V0), not last_forever(V0).","turbot(V0) :- noumenon(V0).","- alarmist(V0) :- noumenon(V0).","- destroying_targets(V0) :- - alarmist(V0).","- pastel(V0) :- - alarmist(V0).","- seraph(V0) :- - pastel(V0), not -lettuce(V0), not wooly(V0), not having_desert_after_meal(V0), not -athenaeum(V0).","- financial(V0) :- - pastel(V0), not -lettuce(V0), not wooly(V0), not having_desert_after_meal(V0), not -athenaeum(V0).","blind(V0) :- theater(V0), not alarmist(V0), not financial(V0)."],"noisy_rules":{"a":["share_experiences(V0) :- - blind(V0).","share_experiences(V0) :- - theater(V0), - turbot(V0)."],"b":["- turbot(V0) :- - theater(V0), not -share_experiences(V0).","- athenaeum(V0) :- not theater(V0), destroying_targets(V0), not -pastel(V0), not -seraph(V0), share_experiences(V0)."],"c":["wooly(V0) :- - turbot(V0), not -destroying_targets(V0), not -seraph(V0), not -financial(V0).","financial(V0) :- - turbot(V0), not -destroying_targets(V0)."],"d":["financial(V0) :- not -alarmist(V0), teacup(V0).","destroying_targets(V0) :- not -alarmist(V0), - blind(V0), not -servant(V0)."],"e":["growing_cornucopia(V0) :- midnight_sun(V0).","normal_dogs(V0) :- - scapular(V0), not -support(V0), not -dish(V0)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_0_10_13_3_6_0.5_1.0_3_2_3","seed":0,"num_facts":7,"num_rules":14,"num_related_predicates":21,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"religion(\"Rachel\", \"Kathleen\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- corner(\"Rachel\", \"Kathleen\").","unification_church.","bristol(\"Rachel\", \"Jennifer\").","- training_college(\"Rachel\", \"Kathleen\").","- action(\"Rachel\", \"Kathleen\").","- junior_college(\"Rachel\", \"Kathleen\").","business_college(\"Rachel\", \"Kathleen\")."],"noisy_facts":["lake(\"Rachel\", \"Kaitlin\").","- samba(\"Rachel\", \"Kaitlin\").","ectoplasm(\"Rachel\", \"Kaitlin\").","- P25(\"Rachel\", \"Jennifer\").","mother_in_law(\"Rachel\", \"Kathleen\").","quittance(\"Kaitlin\", \"Kathleen\").","record(\"Rachel\", \"Jennifer\").","spreading_disease(\"Rachel\", \"Kathleen\")."],"min_fact_dicts_for_query":["- corner(\"Rachel\", \"Kathleen\").","bristol(\"Rachel\", \"Jennifer\").","- training_college(\"Rachel\", \"Kathleen\").","- junior_college(\"Rachel\", \"Kathleen\")."],"noiseless_rules":["religion(V0, V3) :- - operation(V0, V3), - christendom(V0, V3), volvo(V2, V3).","- operation(V0, V3) :- - running(V0), - junior_college(V0, V3).","dining_room(V0, V3) :- - running(V0), - junior_college(V0, V3).","- body(V0, V1) :- university(V0, V1), church(V0, V2), - college(V2, V3).","- christendom(V0, V3) :- dining_room(V0, V3), not -catholic_church(V0, V3).","university(V0, V0) :- dining_room(V0, V3), not -catholic_church(V0, V3).","- monopoly(V0, V3) :- - corner(V0, V3), not action(V0, V3), not junior_college(V0, V3).","church(V0, V0) :- catholic_church(V0, V3), not -unification_church.","- living_being(V0, V3) :- catholic_church(V0, V3), not -unification_church.","- system(V0, V0) :- - body(V0, V1).","- running(V0) :- bristol(V0, V1).","volvo(V2, V3) :- - monopoly(V0, V3), - living_being(V1, V2), not system(V0, V2).","- college(V3, V3) :- - training_college(V0, V3), not junior_college(V0, V3), not -business_college(V0, V3).","catholic_church(V0, V3) :- - training_college(V0, V3), not junior_college(V0, V3), not -business_college(V0, V3)."],"noisy_rules":{"a":["- religion(V0, V3) :- - church(V0, V2), - catholic_church(V0, V3).","- religion(V0, V3) :- - university(V0, V1), - catholic_church(V0, V3)."],"b":["- university(V0, V1) :- body(V0, V1), - university(V0, V1), - religion(V0, V3).","body(V0, V3) :- - religion(V0, V3)."],"c":["christendom(V0, V3) :- - church(V0, V2), living_being(V1, V2), - catholic_church(V0, V3).","action(V0, V3) :- operation(V0, V3)."],"d":["- volvo(V0, V3) :- - dining_room(V0, V3), not -christendom(V0, V3), not -mother_in_law(V0, V3).","- volvo(V2, V0) :- not -system(V0, V2), lake(V0, V2), not samba(V0, V2)."],"e":["physical(V0) :- - P25(V0, V1), ectoplasm(V0, V2).","document(V1, V3) :- record(V0, V1), not -spreading_disease(V0, V3), quittance(V2, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_52_10_14_12_13_0.5_1.0_5_2_3","seed":52,"num_facts":17,"num_rules":15,"num_related_predicates":32,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.888888888888889,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" layer(\"Nicholas\", \"Charles\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["cliff(\"Nicholas\", \"Patrick\").","- floor(\"Nicholas\", \"Robert\").","area(\"Charles\", \"Robert\").","- possession(\"Nicholas\", \"Charles\").","- body_of_water(\"Nicholas\").","top(\"Charles\", \"Robert\").","- plant_cell(\"Charles\", \"Patrick\").","zygote(\"Robert\", \"Patrick\").","nucleus(\"Robert\", \"Patrick\").","departmental_highway(\"Nicholas\").","guides(\"Nicholas\", \"Charles\").","live_underwater(\"Nicholas\", \"Patrick\").","- gerenuk(\"Charles\", \"Patrick\").","every(\"Nicholas\").","- eat_dinnner(\"Nicholas\").","pool_ball(\"Nicholas\").","- residential_district(\"Charles\", \"Robert\")."],"noisy_facts":["- drinking_place(\"Nicholas\", \"Patrick\").","- protection_from_elements(\"Nicholas\", \"Charles\").","tiramisu(\"Nicholas\").","- harbor_porpoise(\"Nicholas\").","- actors(\"Nicholas\", \"Robert\").","- few(\"Charles\", \"Patrick\").","kupffers_cell(\"Nicholas\")."],"min_fact_dicts_for_query":["cliff(\"Nicholas\", \"Patrick\").","area(\"Charles\", \"Robert\")."],"noiseless_rules":["- layer(V0, V1) :- - asthenosphere(V0), region(V1), not -district(V1), not upper_mantle(V0, V1), not troposphere(V0, V1).","- asthenosphere(V0) :- cliff(V0, V3).","- tiles(V0, V2) :- - floor(V0, V2).","- crust(V0) :- - plate(V1), - tartar(V0, V1).","- plate(V1) :- - mother_cell(V0, V3), top(V1, V2), not plant_cell(V1, V3), not -zygote(V2, V3), not -nucleus(V2, V3).","- cell(V2) :- - mother_cell(V0, V3), top(V1, V2), not plant_cell(V1, V3), not -zygote(V2, V3), not -nucleus(V2, V3).","region(V1) :- area(V1, V2), not -top(V1, V2).","- tartar(V2, V1) :- area(V1, V2), not -top(V1, V2).","district(V1) :- - possession(V0, V1), - residential_district(V1, V2).","cell_wall(V2) :- - possession(V0, V1), - residential_district(V1, V2).","tank(V0, V2) :- - possession(V0, V1), - residential_district(V1, V2).","- upper_mantle(V0, V1) :- - body_of_water(V0), departmental_highway(V0), guides(V0, V1), live_underwater(V0, V3), not gerenuk(V1, V3).","- surface(V0) :- - body_of_water(V0), departmental_highway(V0), guides(V0, V1), live_underwater(V0, V3), not gerenuk(V1, V3).","- troposphere(V0, V2) :- - tiles(V0, V2), not crust(V0), not cell(V2), not -cell_wall(V2).","- mother_cell(V0, V0) :- tank(V0, V2), not surface(V0), not -every(V0), not eat_dinnner(V0), not -pool_ball(V0)."],"noisy_rules":{"a":["layer(V0, V2) :- asthenosphere(V0), - cell_wall(V2), not -surface(V0).","layer(V0, V1) :- not -crust(V0), troposphere(V0, V1)."],"b":["plant_cell(V1, V3) :- asthenosphere(V0), - cell_wall(V2), mother_cell(V0, V3), layer(V0, V1).","- region(V1) :- not district(V1), layer(V0, V1)."],"c":["mother_cell(V0, V0) :- asthenosphere(V0), tiles(V0, V2), tartar(V0, V1), not tank(V0, V2).","- area(V1, V2) :- crust(V0), - cell_wall(V2), upper_mantle(V0, V1), surface(V0)."],"d":["troposphere(V0, V2) :- not -crust(V0), - cell_wall(V2), - tank(V0, V2), not harbor_porpoise(V0), not -tiramisu(V0).","cell(V0) :- surface(V0), not -kupffers_cell(V0)."],"e":["- some(V1, V3) :- - protection_from_elements(V0, V1), - drinking_place(V0, V3), not few(V1, V3).","- people(V0, V2) :- - actors(V0, V2)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_36_10_9_7_9_0.5_1.0_3_2_3","seed":36,"num_facts":12,"num_rules":10,"num_related_predicates":22,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" profit(\"Duane\", \"Robert\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- boron(\"Mark\").","truck(\"Duane\", \"Ryan\").","- core(\"Ryan\", \"Mark\").","curiosa(\"Duane\", \"Mark\").","launching_shuttles(\"Duane\", \"Ryan\").","do_well(\"Duane\", \"Mark\").","percoid_fish(\"Duane\", \"Ryan\").","beagle(\"Ryan\", \"Robert\").","- lepton(\"Duane\", \"Ryan\").","- atom(\"Duane\", \"Mark\").","- band_tailed_pigeon(\"Duane\", \"Ryan\").","edible(\"Duane\", \"Mark\")."],"noisy_facts":["worshipers(\"Duane\").","wink(\"Duane\", \"Robert\").","- rubric(\"Duane\").","pump_priming(\"Duane\").","wires(\"Duane\", \"Ryan\")."],"min_fact_dicts_for_query":["- boron(\"Mark\").","percoid_fish(\"Duane\", \"Ryan\").","beagle(\"Ryan\", \"Robert\").","- lepton(\"Duane\", \"Ryan\")."],"noiseless_rules":["- profit(V0, V2) :- reviewing_book(V0), percoid_fish(V0, V1), beagle(V1, V2).","triple_frontier(V0) :- - boron(V3), - lepton(V0, V1), not atom(V0, V3).","reviewing_book(V0) :- triple_frontier(V0), not -too(V0).","tree_animal(V0) :- - petitioner(V0, V3), not -do_well(V0, V3).","too(V0) :- - loving(V0, V3), punch(V1, V3), not -corpse(V1, V3).","- loving(V0, V1) :- truck(V0, V1), not lepton(V0, V1).","- tower(V3) :- - core(V1, V3).","punch(V0, V3) :- tree_animal(V0), - tower(V3), not -do_well(V0, V3).","- petitioner(V0, V3) :- curiosa(V0, V3).","corpse(V1, V3) :- launching_shuttles(V0, V1), - band_tailed_pigeon(V0, V1), edible(V0, V3)."],"noisy_rules":{"a":["profit(V0, V0) :- - too(V0).","profit(V3, V3) :- tower(V3), - corpse(V1, V3)."],"b":["- curiosa(V0, V2) :- - reviewing_book(V0), profit(V0, V2).","tower(V3) :- - corpse(V1, V3), profit(V0, V2)."],"c":["- corpse(V1, V3) :- loving(V0, V3), tower(V3), - punch(V1, V3).","core(V1, V3) :- - too(V0), - punch(V1, V3), petitioner(V0, V3)."],"d":["- reviewing_book(V0) :- not triple_frontier(V0), pump_priming(V0).","loving(V3, V3) :- tower(V3)."],"e":["- midstream(V0) :- - rubric(V0), worshipers(V0), wink(V0, V2).","- place_of_learning(V0, V1) :- wires(V0, V1)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_50_10_11_10_11_0.5_1.0_3_2_3","seed":50,"num_facts":14,"num_rules":12,"num_related_predicates":26,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P11(\"John\", \"Jacob\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P12(\"Jacob\", \"Nichole\").","P13(\"John\", \"Jacob\").","P14(\"Phillip\", \"John\").","- P15(\"Phillip\", \"Jacob\").","- P16(\"John\").","- P17(\"Phillip\", \"Nichole\").","P18(\"Jacob\", \"Nichole\").","- P19(\"John\", \"Nichole\").","- P20(\"John\", \"Nichole\").","- P21(\"John\", \"Nichole\").","- P22(\"John\", \"Nichole\").","P23(\"John\", \"Nichole\").","- P24(\"John\", \"Nichole\").","P25(\"Phillip\", \"Nichole\")."],"noisy_facts":["P32(\"Phillip\", \"Jacob\").","- P29(\"Phillip\", \"John\").","P27.","- P26(\"Phillip\", \"Jacob\").","P31(\"Phillip\", \"John\").","P35(\"John\", \"Nichole\").","P33(\"Phillip\", \"Nichole\").","- P30(\"Phillip\", \"John\")."],"min_fact_dicts_for_query":["P13(\"John\", \"Jacob\").","P14(\"Phillip\", \"John\").","- P15(\"Phillip\", \"Jacob\").","- P17(\"Phillip\", \"Nichole\").","- P19(\"John\", \"Nichole\").","- P21(\"John\", \"Nichole\").","P23(\"John\", \"Nichole\").","P25(\"Phillip\", \"Nichole\")."],"noiseless_rules":["- P11(V1, V2) :- P0(V2), P3(V1, V2), P8(V1, V3).","P0(V2) :- - P1(V0, V1), - P4(V0, V2), P25(V0, V3).","- P1(V0, V1) :- P5(V0, V1), - P21(V1, V3), not P22(V1, V3).","P2(V3) :- - P12(V2, V3).","P3(V1, V2) :- P13(V1, V2), P23(V1, V3), not P24(V1, V3).","- P4(V0, V2) :- - P9(V0, V2).","P5(V0, V1) :- P14(V0, V1), - P19(V1, V3), not P20(V1, V3).","- P6(V1) :- P14(V0, V1), - P19(V1, V3), not P20(V1, V3).","P7(V1, V3) :- P14(V0, V1), - P19(V1, V3), not P20(V1, V3).","P8(V1, V1) :- - P6(V1), not P10(V1), not P16(V1).","- P9(V0, V2) :- - P15(V0, V2), - P17(V0, V3), not -P18(V2, V3).","- P10(V1) :- P2(V3), P7(V1, V3), not P24(V1, V3)."],"noisy_rules":{"a":["P11(V0, V2) :- - P0(V2), P4(V0, V2).","P11(V1, V3) :- - P8(V1, V3)."],"b":["- P2(V0) :- P1(V0, V1), not -P6(V1), P11(V1, V2).","P22(V1, V2) :- P4(V0, V2), P11(V1, V2)."],"c":["P19(V1, V2) :- P1(V0, V1), - P3(V1, V2), not -P6(V1).","- P18(V1, V3) :- - P7(V1, V3)."],"d":["- P0(V2) :- P4(V0, V2), not P26(V0, V2).","P4(V1, V3) :- - P8(V1, V3), P27."],"e":["- P28(V0, V1) :- - P29(V0, V1), not P30(V0, V1), P31(V0, V1).","- P34(V3) :- P32(V0, V2), P33(V0, V3), P35(V1, V3)."]}},"num_min_facts_for_query":8,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_9_10_14_12_14_0.5_1.0_5_2_3","seed":9,"num_facts":14,"num_rules":15,"num_related_predicates":29,"max_depth_of_rule_graph":7,"average_depth_of_rule_graph":3.888888888888889,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" hen(\"Amber\", \"Elizabeth\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["engraving(\"Elizabeth\").","- repository(\"Amber\", \"Elizabeth\").","nest(\"Amber\", \"Elizabeth\").","chicken(\"Amber\", \"Elizabeth\").","goose(\"Amber\", \"Elizabeth\").","duck(\"Amber\", \"Elizabeth\").","- eurasian_bullfinch(\"Elizabeth\", \"Robert\").","scene(\"Elizabeth\", \"Robert\").","- buddy(\"Amber\", \"Elizabeth\").","severance(\"Amber\", \"Elizabeth\").","- layer(\"Amber\", \"Elizabeth\").","- linen(\"Elizabeth\").","- easter_egg(\"Wendy\", \"Amber\").","- smell(\"Wendy\", \"Elizabeth\")."],"noisy_facts":["feast_day(\"Wendy\", \"Robert\").","- see_well_in_dark(\"Wendy\").","- dirty_tricks(\"Wendy\", \"Amber\").","game_equipment(\"Wendy\", \"Amber\").","aggression(\"Wendy\", \"Amber\").","part(\"Wendy\", \"Elizabeth\")."],"min_fact_dicts_for_query":["engraving(\"Elizabeth\").","nest(\"Amber\", \"Elizabeth\").","- linen(\"Elizabeth\").","- easter_egg(\"Wendy\", \"Amber\")."],"noiseless_rules":["- hen(V1, V2) :- little_brother(V1, V2), not finch(V1, V2).","little_brother(V1, V2) :- canary(V2), animal(V0, V2), nest(V1, V2).","stepbrother(V0, V1) :- canary(V2), animal(V0, V2), nest(V1, V2).","canary(V2) :- engraving(V2), - linen(V2), - easter_egg(V0, V1), not smell(V0, V2).","chick(V2) :- engraving(V2), - linen(V2), - easter_egg(V0, V1), not smell(V0, V2).","confidant(V1, V2) :- - repository(V1, V2).","- finch(V1, V2) :- geese(V0, V1), friend(V0, V3), bird(V2, V3), not eurasian_bullfinch(V2, V3), not -scene(V2, V3).","brother(V1, V1) :- stepbrother(V0, V1), animal(V0, V2), not -oval(V0, V1).","geese(V2, V1) :- - baby(V1, V2).","- egg(V1, V2) :- - baby(V1, V2).","friend(V2, V3) :- confidant(V1, V2), brother(V1, V3), not buddy(V1, V2), not -severance(V1, V2), not layer(V1, V2).","bird(V2, V1) :- chick(V2), nest(V1, V2), not -chicken(V1, V2), not -goose(V1, V2), not -duck(V1, V2).","animal(V2, V2) :- chick(V2), nest(V1, V2), not -chicken(V1, V2), not -goose(V1, V2), not -duck(V1, V2).","- baby(V1, V2) :- chick(V2), nest(V1, V2), not -chicken(V1, V2), not -goose(V1, V2), not -duck(V1, V2).","oval(V2, V1) :- - egg(V1, V2)."],"noisy_rules":{"a":["hen(V1, V2) :- - little_brother(V1, V2), - chick(V2), egg(V1, V2), - friend(V0, V3).","hen(V1, V2) :- - little_brother(V1, V2), - canary(V2), egg(V1, V2), - oval(V0, V1)."],"b":["- bird(V2, V2) :- - stepbrother(V0, V1), - canary(V2), not confidant(V1, V2), finch(V1, V2), not -hen(V1, V2).","- friend(V2, V1) :- not canary(V2), hen(V1, V2)."],"c":["- goose(V1, V2) :- - chick(V2), - geese(V0, V1).","- brother(V1, V3) :- - little_brother(V1, V2), - stepbrother(V0, V1), egg(V1, V2), - bird(V2, V3), not oval(V0, V1)."],"d":["- friend(V0, V3) :- feast_day(V0, V3).","- little_brother(V1, V1) :- - geese(V0, V1), game_equipment(V0, V1)."],"e":["- behavior(V0, V1) :- - dirty_tricks(V0, V1), not -aggression(V0, V1).","- heaven(V2) :- - see_well_in_dark(V0), part(V0, V2)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_53_6_7_5_8_0.5_1.0_5_3_4","seed":53,"num_facts":8,"num_rules":8,"num_related_predicates":16,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"craniometric_point(\"Derek\", \"Melinda\", \"Dawn\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["jugale(\"Darlene\", \"Melinda\", \"Dawn\").","tendency(\"Derek\", \"Darlene\", \"Melinda\").","esq(\"Dawn\").","important_components_of_humans(\"Darlene\", \"Dawn\").","sharing_with_family(\"Melinda\", \"Caleb\").","enjoying_food(\"Melinda\", \"Dawn\").","soften(\"Darlene\", \"Melinda\", \"Dawn\").","course(\"Derek\", \"Darlene\", \"Melinda\")."],"noisy_facts":[],"min_fact_dicts_for_query":["jugale(\"Darlene\", \"Melinda\", \"Dawn\").","tendency(\"Derek\", \"Darlene\", \"Melinda\").","esq(\"Dawn\").","important_components_of_humans(\"Darlene\", \"Dawn\").","sharing_with_family(\"Melinda\", \"Caleb\").","enjoying_food(\"Melinda\", \"Dawn\").","soften(\"Darlene\", \"Melinda\", \"Dawn\").","course(\"Derek\", \"Darlene\", \"Melinda\")."],"noiseless_rules":["craniometric_point(V0, V2, V4) :- liquid_food(V0, V4), auriculare(V2, V4), gnathion(V1, V2, V3), sphenion(V1, V2, V4), jugale(V1, V2, V4).","liquid_food(V0, V4) :- molasses(V1, V4), soup(V0, V1, V2).","auriculare(V2, V4) :- sphenion(V1, V2, V4), jugale(V1, V2, V4).","molasses(V1, V4) :- sphenion(V1, V2, V4), jugale(V1, V2, V4).","soup(V0, V1, V2) :- direction(V0, V2), course(V0, V1, V2).","gnathion(V1, V2, V0) :- tendency(V0, V1, V2), course(V0, V1, V2).","direction(V0, V2) :- tendency(V0, V1, V2), course(V0, V1, V2).","sphenion(V1, V2, V4) :- esq(V4), important_components_of_humans(V1, V4), sharing_with_family(V2, V3), enjoying_food(V2, V4), soften(V1, V2, V4)."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_75_5_7_2_4_0.5_1.0_3_3_4","seed":75,"num_facts":4,"num_rules":8,"num_related_predicates":12,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"article(\"Jonathan\", \"Eric\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- talking_picture(\"Jonathan\", \"Eric\").","- school_cafeteria(\"Jonathan\", \"Eric\").","kook(\"Jill\", \"Jasmine\", \"Eric\").","- goldfinch(\"Jasmine\", \"Eric\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- talking_picture(\"Jonathan\", \"Eric\").","kook(\"Jill\", \"Jasmine\", \"Eric\")."],"noiseless_rules":["article(V3, V4) :- attempt(V3, V4), - roll_down_hill(V0, V2, V4), not marry(V0, V2, V4).","attempt(V3, V4) :- - talking_picture(V3, V4), kook(V0, V2, V4).","paper_page(V2, V4) :- - talking_picture(V3, V4), kook(V0, V2, V4).","- roll_down_hill(V0, V2, V4) :- face_part(V0, V2, V4), not -stay(V0, V2, V4), not -kook(V0, V2, V4).","face_part(V2, V2, V4) :- paper_page(V2, V4), not -demolition(V2, V4), not goldfinch(V2, V4).","- marry(V3, V4, V4) :- attempt(V3, V4), not school_cafeteria(V3, V4).","stay(V4, V4, V4) :- attempt(V3, V4), not school_cafeteria(V3, V4).","demolition(V4, V4) :- attempt(V3, V4), not school_cafeteria(V3, V4)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_19_8_12_6_9_0.5_1.0_3_3_4","seed":19,"num_facts":8,"num_rules":13,"num_related_predicates":21,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.7142857142857144,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" cigar_box(\"Dylan\", \"Amanda\", \"Colleen\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- propellers(\"Zachary\", \"Dylan\", \"Jessica\").","train(\"Dylan\", \"Colleen\", \"Jessica\").","oak(\"Dylan\", \"Colleen\", \"Jessica\").","cut_and(\"Dylan\", \"Colleen\", \"Jessica\").","- statfjord(\"Dylan\", \"Amanda\", \"Colleen\").","- drawing(\"Dylan\", \"Colleen\", \"Jessica\").","thermosphere(\"Dylan\", \"Amanda\", \"Colleen\").","withe(\"Dylan\", \"Amanda\", \"Jessica\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- propellers(\"Zachary\", \"Dylan\", \"Jessica\").","oak(\"Dylan\", \"Colleen\", \"Jessica\").","thermosphere(\"Dylan\", \"Amanda\", \"Colleen\").","withe(\"Dylan\", \"Amanda\", \"Jessica\")."],"noiseless_rules":["- cigar_box(V1, V2, V3) :- find_underground(V1), thermosphere(V1, V2, V3), withe(V1, V2, V4).","imperial(V0, V1, V3) :- - propellers(V0, V1, V4), oak(V1, V3, V4), not -cut_and(V1, V3, V4).","homo(V3) :- - propellers(V0, V1, V4), oak(V1, V3, V4), not -cut_and(V1, V3, V4).","find_underground(V1) :- imperial(V0, V1, V3), not south_american(V0, V1, V3), not photoelectron(V0, V1, V3).","- birds_who_cannot_fly(V3) :- - taller_than_other(V0, V3), - statfjord(V1, V2, V3), - drawing(V1, V3, V4).","- south_american(V3, V3, V3) :- - birds_who_cannot_fly(V3), not -growing_plants(V3), not -rain_on(V3).","elementary_school(V3, V4) :- train(V1, V3, V4), not drawing(V1, V3, V4).","- percussion_cap(V3, V1, V3) :- train(V1, V3, V4), not drawing(V1, V3, V4).","growing_plants(V3) :- elementary_school(V3, V4), - percussion_cap(V0, V1, V3), not drawing(V1, V3, V4).","- hand_digit(V1, V3, V3) :- elementary_school(V3, V4), - percussion_cap(V0, V1, V3), not drawing(V1, V3, V4).","- photoelectron(V0, V1, V3) :- homo(V3), - percussion_cap(V0, V1, V3), - hand_digit(V1, V2, V3).","- taller_than_other(V0, V3) :- homo(V3), - percussion_cap(V0, V1, V3), - hand_digit(V1, V2, V3).","rain_on(V3) :- homo(V3), - percussion_cap(V0, V1, V3), - hand_digit(V1, V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_2_8_10_5_8_0.5_1.0_3_3_4","seed":2,"num_facts":8,"num_rules":11,"num_related_predicates":19,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"P10(\"Morgan\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P11(\"Jeffrey\", \"Morgan\").","P12(\"Jeffrey\", \"Rachel\").","- P13(\"Tyler\", \"Rachel\").","P14(\"Jeffrey\", \"Morgan\", \"Rachel\").","P15(\"Tyler\", \"Rachel\").","- P16(\"Morgan\", \"Tyler\", \"Brittney\").","- P17(\"Morgan\", \"Tyler\").","- P18(\"Morgan\", \"Brittney\", \"Rachel\")."],"noisy_facts":["- P25(\"Jeffrey\", \"Rachel\").","P24(\"Jeffrey\", \"Morgan\", \"Tyler\").","P28(\"Jeffrey\", \"Morgan\", \"Tyler\").","P26(\"Morgan\", \"Rachel\").","- P19(\"Jeffrey\", \"Morgan\", \"Rachel\").","P20(\"Jeffrey\", \"Morgan\", \"Rachel\").","- P23(\"Morgan\", \"Brittney\").","P22(\"Jeffrey\", \"Rachel\")."],"min_fact_dicts_for_query":["P11(\"Jeffrey\", \"Morgan\").","P12(\"Jeffrey\", \"Rachel\").","P15(\"Tyler\", \"Rachel\").","- P16(\"Morgan\", \"Tyler\", \"Brittney\").","- P17(\"Morgan\", \"Tyler\").","- P18(\"Morgan\", \"Brittney\", \"Rachel\")."],"noiseless_rules":["P10(V1) :- - P0(V0, V4), - P3(V1, V2), not P5(V1, V2, V4).","- P0(V0, V4) :- P11(V0, V1), P15(V2, V4), - P16(V1, V2, V3).","P1(V0, V2, V4) :- P11(V0, V1), P15(V2, V4), - P16(V1, V2, V3).","- P2(V0, V1, V4) :- P6(V0, V1, V4).","- P3(V1, V1) :- - P2(V0, V1, V4), not P4(V0, V1, V4), not P7(V0, V1, V4).","- P4(V0, V1, V4) :- - P2(V0, V1, V4), not -P9(V0, V1, V4), not -P14(V0, V1, V4).","- P5(V1, V2, V4) :- P1(V0, V2, V4), - P8(V0, V1), not -P11(V0, V1).","P6(V0, V1, V4) :- P1(V0, V2, V4), - P8(V0, V1), not -P11(V0, V1).","- P7(V0, V1, V4) :- P12(V0, V4), - P17(V1, V2), - P18(V1, V3, V4).","- P8(V0, V1) :- P12(V0, V4), - P17(V1, V2), - P18(V1, V3, V4).","P9(V2, V4, V4) :- - P13(V2, V4), not -P15(V2, V4)."],"noisy_rules":{"a":["- P10(V4) :- - P1(V0, V2, V4).","- P10(V1) :- P4(V0, V1, V4)."],"b":["- P1(V0, V1, V4) :- P2(V0, V1, V4), not P9(V0, V1, V4), not P10(V1).","P8(V0, V1) :- P0(V0, V4), - P9(V0, V1, V4), not P10(V1)."],"c":["P17(V1, V1) :- P2(V0, V1, V4), not -P8(V0, V1).","P5(V1, V1, V4) :- - P6(V0, V1, V4)."],"d":["- P12(V0, V4) :- P5(V1, V2, V4), - P9(V0, V1, V4), not P19(V0, V1, V4).","- P12(V0, V4) :- P5(V1, V2, V4), P7(V0, V1, V4), not -P20(V0, V1, V4)."],"e":["P21(V2) :- P22(V0, V4), - P23(V1, V3), P24(V0, V1, V2).","- P27(V0, V4) :- - P25(V0, V4), P26(V1, V4), P28(V0, V1, V2)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_41_8_10_9_10_0.5_1.0_3_2_3","seed":41,"num_facts":12,"num_rules":11,"num_related_predicates":23,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"appearance(\"Gerald\", \"Jason\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- phimosis(\"Michael\").","point(\"Gerald\", \"Jason\").","- planet(\"Gerald\", \"Jason\").","spinach(\"Michael\", \"Jason\").","- baboon(\"Michael\", \"Jason\").","- council(\"Hannah\", \"Jason\").","geographical_area(\"Gerald\", \"Michael\").","consumer(\"Michael\", \"Jason\").","- eagles(\"Gerald\", \"Jason\").","perspiration(\"Gerald\", \"Jason\").","barcarole(\"Gerald\", \"Jason\").","playing_card(\"Gerald\", \"Jason\")."],"noisy_facts":["knell(\"Gerald\", \"Michael\").","pets_sometimes_when_with_people(\"Gerald\", \"Michael\").","- professional(\"Hannah\", \"Jason\").","hold_bank_account(\"Gerald\", \"Jason\").","- bench(\"Gerald\", \"Jason\").","allograph(\"Gerald\", \"Jason\")."],"min_fact_dicts_for_query":["- phimosis(\"Michael\").","- planet(\"Gerald\", \"Jason\").","spinach(\"Michael\", \"Jason\").","- council(\"Hannah\", \"Jason\").","geographical_area(\"Gerald\", \"Michael\").","consumer(\"Michael\", \"Jason\")."],"noiseless_rules":["appearance(V0, V3) :- column(V3), - strum(V0, V3), lap(V1, V3).","column(V3) :- - binder(V3), exist(V3), - council(V1, V3).","- binder(V3) :- - phimosis(V2), geographical_area(V0, V2), consumer(V2, V3).","- storing_coffee(V0, V3) :- - strum(V0, V3), not -point(V0, V3).","subset_of_sports(V0, V3) :- - strum(V0, V3), not -point(V0, V3).","armhole(V0, V3) :- - storing_coffee(V0, V3), not eagles(V0, V3), not -perspiration(V0, V3).","- strum(V0, V3) :- - planet(V0, V3), not -barcarole(V0, V3), not -playing_card(V0, V3).","staying_fit(V0, V3) :- - planet(V0, V3), not -barcarole(V0, V3), not -playing_card(V0, V3).","exist(V3) :- - peanut_worm(V0, V3), spinach(V2, V3), not baboon(V2, V3).","lap(V1, V3) :- subset_of_sports(V2, V3), armhole(V1, V3), staying_fit(V0, V3).","- peanut_worm(V0, V3) :- subset_of_sports(V2, V3), armhole(V1, V3), staying_fit(V0, V3)."],"noisy_rules":{"a":["- appearance(V0, V3) :- - armhole(V1, V3), strum(V0, V3), - exist(V3).","- appearance(V0, V3) :- strum(V0, V3), - staying_fit(V0, V3)."],"b":["- lap(V3, V3) :- - column(V3), - appearance(V0, V3).","- spinach(V0, V3) :- - column(V3), - staying_fit(V0, V3), not appearance(V0, V3)."],"c":["- point(V0, V3) :- storing_coffee(V0, V3), - subset_of_sports(V2, V3).","peanut_worm(V3, V3) :- - exist(V3)."],"d":["peanut_worm(V0, V3) :- not -strum(V0, V3), allograph(V0, V3).","- armhole(V1, V3) :- - professional(V1, V3)."],"e":["moussaka(V3) :- - bench(V0, V3).","brambling(V0, V3) :- not -knell(V0, V2), pets_sometimes_when_with_people(V0, V2), hold_bank_account(V0, V3)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_2_8_10_9_10_0.5_1.0_3_2_3","seed":2,"num_facts":12,"num_rules":11,"num_related_predicates":23,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"pheasant(\"Jeffrey\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["peacock(\"Jeffrey\", \"Tammie\").","monarch(\"Jeffrey\").","- highway(\"Tammie\", \"Karen\").","pierid(\"Tammie\").","street(\"Tammie\", \"Karen\").","- road(\"Tammie\", \"Karen\").","- flea(\"Karen\").","- chess_board(\"Jeffrey\", \"Shelby\").","- thrall(\"Tammie\", \"Shelby\").","- polity(\"Tammie\", \"Shelby\").","peachick(\"Jeffrey\", \"Tammie\").","- peahen(\"Jeffrey\", \"Tammie\")."],"noisy_facts":[],"min_fact_dicts_for_query":["peacock(\"Jeffrey\", \"Tammie\").","monarch(\"Jeffrey\").","- chess_board(\"Jeffrey\", \"Shelby\").","- thrall(\"Tammie\", \"Shelby\")."],"noiseless_rules":["pheasant(V0) :- - peafowl(V0), - golden_pheasant(V0, V1), - tragopan(V1, V3).","- peafowl(V0) :- peacock(V0, V1), not -peachick(V0, V1), not peahen(V0, V1).","nymphalid(V1) :- peacock(V0, V1), not -peachick(V0, V1), not peahen(V0, V1).","- lepidopterous_insect(V0) :- butterfly(V0, V1), not -peachick(V0, V1).","- golden_pheasant(V0, V1) :- - insect(V1), - challenging_chess_opponent(V0, V3), not polity(V1, V3).","- insect(V2) :- - lepidopterous_insect(V2), not -drive_on(V2), not flea(V2).","- tragopan(V1, V1) :- nymphalid(V1), not danaid(V1), not -pierid(V1).","butterfly(V1, V1) :- nymphalid(V1), not danaid(V1), not -pierid(V1).","- challenging_chess_opponent(V0, V3) :- monarch(V0), - chess_board(V0, V3), - thrall(V1, V3).","- danaid(V1) :- monarch(V0), - chess_board(V0, V3), - thrall(V1, V3).","drive_on(V2) :- - highway(V1, V2), not -street(V1, V2), not road(V1, V2)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_90_7_7_7_7_0.5_1.0_3_3_4","seed":90,"num_facts":10,"num_rules":8,"num_related_predicates":18,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" columbiform_bird(\"Andrea\", \"Tonya\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- hardtop(\"Andrea\", \"Valerie\").","- wood(\"Andrea\", \"John\", \"Valerie\").","- similar_awareness_of_time(\"Ashley\", \"Tonya\", \"Valerie\").","- accelerator(\"Ashley\", \"Tonya\", \"John\").","- bus(\"Ashley\", \"John\", \"Valerie\").","international_intelligence_agency(\"Andrea\", \"Ashley\", \"Tonya\").","large_brains(\"Tonya\", \"John\", \"Valerie\").","australian_turtledove(\"Ashley\", \"Valerie\").","- turtledove(\"Ashley\", \"Valerie\").","- eating_out(\"Andrea\", \"John\", \"Valerie\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- hardtop(\"Andrea\", \"Valerie\").","- wood(\"Andrea\", \"John\", \"Valerie\").","- similar_awareness_of_time(\"Ashley\", \"Tonya\", \"Valerie\").","- accelerator(\"Ashley\", \"Tonya\", \"John\").","large_brains(\"Tonya\", \"John\", \"Valerie\")."],"noiseless_rules":["- columbiform_bird(V0, V2) :- - sandgrouse(V2), pigeon(V0, V2), large_brains(V2, V3, V4).","car(V0, V1, V2) :- - hardtop(V0, V4), - accelerator(V1, V2, V3), not bus(V1, V3, V4).","- acardia(V0, V3, V4) :- - wood(V0, V3, V4), not eating_out(V0, V3, V4).","- sandgrouse(V2) :- - similar_awareness_of_time(V1, V2, V4).","mourning_dove(V1, V4) :- - similar_awareness_of_time(V1, V2, V4).","- passenger_pigeon(V0, V2, V3) :- car(V0, V1, V2), - acardia(V0, V3, V4), not -international_intelligence_agency(V0, V1, V2).","pigeon(V0, V2) :- - passenger_pigeon(V0, V2, V3), not dove(V0, V2, V3).","- dove(V4, V4, V1) :- mourning_dove(V1, V4), not -australian_turtledove(V1, V4), not turtledove(V1, V4)."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_72_4_4_4_4_0.5_1.0_3_2_3","seed":72,"num_facts":6,"num_rules":5,"num_related_predicates":11,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6666666666666667,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" girdle(\"Robert\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- backyard(\"Nancy\", \"Ann\").","film_editing(\"Ann\").","- water_polo(\"Robert\", \"Ann\").","- system_command(\"Robert\", \"Ann\").","- concert(\"Nancy\", \"Haley\").","superior_conjunction(\"Ann\", \"Haley\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- girdle(V1) :- colic_artery(V2), - descending(V1, V2).","colic_artery(V2) :- - backyard(V0, V2), - water_polo(V1, V2), not system_command(V1, V2).","- counter_check(V0, V2) :- - backyard(V0, V2), - water_polo(V1, V2), not system_command(V1, V2).","- descending(V0, V2) :- - counter_check(V0, V2), not crustaceans(V0, V2).","- crustaceans(V0, V2) :- film_editing(V2), - concert(V0, V3), not -superior_conjunction(V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_55_6_9_7_8_0.5_1.0_3_3_4","seed":55,"num_facts":8,"num_rules":10,"num_related_predicates":18,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"meal(\"Rebecca\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["baked_alaska(\"Kimberly\").","- beetle(\"Rebecca\", \"Albert\").","parrot(\"Rebecca\", \"Albert\").","- blancmange(\"William\", \"Kimberly\", \"Rachel\").","- tiramisu(\"William\", \"Rebecca\", \"Albert\").","- painting(\"William\", \"Kimberly\", \"Albert\").","entree(\"Rebecca\", \"Albert\").","appetizer(\"Rebecca\", \"Albert\")."],"noisy_facts":["corner_mice(\"William\", \"Rebecca\").","instrumentality(\"William\", \"Kimberly\", \"Rebecca\").","- ladybug(\"Rebecca\", \"Albert\").","- do_in_gym(\"Rebecca\", \"Rachel\").","diseased(\"William\", \"Albert\", \"Rachel\").","- outfield(\"William\", \"Rebecca\").","- alarmist(\"William\", \"Kimberly\", \"Albert\").","- funnel(\"Kimberly\", \"Albert\")."],"min_fact_dicts_for_query":["baked_alaska(\"Kimberly\").","- blancmange(\"William\", \"Kimberly\", \"Rachel\").","- tiramisu(\"William\", \"Rebecca\", \"Albert\")."],"noiseless_rules":["meal(V2) :- - course(V0, V2), breakfast(V3, V4), not dinner(V0, V2, V4).","- dessert(V2, V3) :- baked_alaska(V1), - blancmange(V0, V1, V4), - tiramisu(V0, V2, V3).","- continental_breakfast(V0, V1, V3) :- baked_alaska(V1), - blancmange(V0, V1, V4), - tiramisu(V0, V2, V3).","- high_tea(V2, V3) :- baked_alaska(V1), - blancmange(V0, V1, V4), - tiramisu(V0, V2, V3).","- ground_beetle(V1, V3) :- baked_alaska(V1), - blancmange(V0, V1, V4), - tiramisu(V0, V2, V3).","- course(V2, V2) :- - dessert(V2, V3), not -entree(V2, V3), not -appetizer(V2, V3).","playing_sport(V2, V3, V3) :- - dessert(V2, V3), not -entree(V2, V3), not -appetizer(V2, V3).","breakfast(V3, V1) :- - continental_breakfast(V0, V1, V3), not -power_breakfast(V0, V1, V3), not painting(V0, V1, V3).","- dinner(V2, V2, V3) :- - high_tea(V2, V3), not beetle(V2, V3), not -parrot(V2, V3).","power_breakfast(V0, V1, V3) :- - ground_beetle(V1, V3), playing_sport(V0, V1, V4), not -baked_alaska(V1)."],"noisy_rules":{"a":["- meal(V3) :- - power_breakfast(V0, V1, V3).","- meal(V2) :- dessert(V2, V3)."],"b":["course(V2, V2) :- - meal(V2).","continental_breakfast(V2, V2, V2) :- - meal(V2)."],"c":["beetle(V2, V3) :- continental_breakfast(V0, V1, V3), high_tea(V2, V3), ground_beetle(V1, V3).","tiramisu(V1, V2, V3) :- high_tea(V2, V3), ground_beetle(V1, V3)."],"d":["- entree(V1, V3) :- continental_breakfast(V0, V1, V3), - alarmist(V0, V1, V3).","beetle(V2, V3) :- dessert(V2, V3), not ladybug(V2, V3)."],"e":["ceiling(V4) :- - funnel(V1, V3), - do_in_gym(V2, V4), diseased(V0, V3, V4).","material(V0, V2) :- - outfield(V0, V2), corner_mice(V0, V2), instrumentality(V0, V1, V2)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_48_10_13_10_13_0.5_1.0_5_2_3","seed":48,"num_facts":14,"num_rules":14,"num_related_predicates":28,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.7777777777777777,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"P13(\"Colleen\", \"Emily\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P14(\"Whitney\", \"Emily\").","P15(\"Whitney\", \"Colleen\").","P16(\"Colleen\", \"Emily\").","P17(\"Whitney\", \"Emily\").","- P18(\"Colleen\", \"Emily\").","P19(\"Colleen\", \"Emily\").","P20(\"Colleen\", \"Emily\").","P21(\"Colleen\", \"Emily\").","P22(\"Whitney\", \"Emily\").","P23(\"Colleen\", \"Jesse\").","- P24(\"Jesse\", \"Emily\").","P25(\"Jesse\", \"Emily\").","- P26(\"Colleen\", \"Emily\").","P27(\"Jesse\", \"Emily\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- P14(\"Whitney\", \"Emily\").","P15(\"Whitney\", \"Colleen\").","P22(\"Whitney\", \"Emily\").","P23(\"Colleen\", \"Jesse\").","- P26(\"Colleen\", \"Emily\").","P27(\"Jesse\", \"Emily\")."],"noiseless_rules":["P13(V1, V3) :- - P0(V1), - P3(V1, V3), not -P4(V1, V3), not -P10(V1, V3).","- P0(V1) :- - P1(V1), P5(V1, V3).","- P1(V1) :- - P14(V0, V3), - P26(V1, V3), P27(V2, V3).","- P2(V1, V3) :- - P14(V0, V3), - P26(V1, V3), P27(V2, V3).","- P3(V1, V3) :- P6(V1, V3), - P9(V2, V3).","P4(V1, V3) :- - P2(V1, V3), not -P11(V1, V3).","P5(V1, V3) :- P15(V0, V1), P22(V0, V3), P23(V1, V2), not P24(V2, V3), not -P25(V2, V3).","P6(V1, V3) :- P15(V0, V1), P22(V0, V3), P23(V1, V2), not P24(V2, V3), not -P25(V2, V3).","- P7(V1, V3) :- P15(V0, V1), P22(V0, V3), P23(V1, V2), not P24(V2, V3), not -P25(V2, V3).","- P8(V3) :- P15(V0, V1), P22(V0, V3), P23(V1, V2), not P24(V2, V3), not -P25(V2, V3).","- P9(V3, V3) :- - P7(V1, V3), not -P20(V1, V3), not -P21(V1, V3).","P10(V1, V3) :- P16(V1, V3), not P18(V1, V3), not -P19(V1, V3), not -P20(V1, V3), not -P21(V1, V3).","P11(V0, V3) :- - P8(V3), P12(V0, V3), not -P22(V0, V3).","P12(V0, V3) :- P17(V0, V3)."],"noisy_rules":{}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_56_6_9_8_11_0.5_1.0_5_1_2","seed":56,"num_facts":11,"num_rules":10,"num_related_predicates":21,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"P9(\"Katelyn\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P10.","- P11(\"Katelyn\").","P12(\"Katelyn\").","P13.","P14(\"Katelyn\").","- P15(\"Katelyn\").","P16.","- P17(\"Katelyn\").","- P18(\"Katelyn\").","P19(\"Katelyn\").","P20(\"Katelyn\")."],"noisy_facts":["P23.","P29(\"Katelyn\").","P22(\"Katelyn\").","P32(\"Katelyn\").","P25(\"Katelyn\").","- P26(\"Katelyn\").","- P21(\"Katelyn\").","P27(\"Katelyn\").","P30(\"Katelyn\").","- P28(\"Katelyn\")."],"min_fact_dicts_for_query":["- P10.","P13.","P14(\"Katelyn\")."],"noiseless_rules":["P9(V2) :- - P0(V2), not -P3(V2), not P5(V2), not -P6(V2), not -P7(V2).","- P0(V2) :- - P10, P13, P14(V2), not P15(V2), not -P16.","P1(V2) :- - P10, P13, P14(V2), not P15(V2), not -P16.","- P2(V2) :- - P10, P13, P14(V2), not P15(V2), not -P16.","P3(V2) :- - P11(V2), not P17(V2), not P18(V2), not -P19(V2), not -P20(V2).","P4(V2) :- - P11(V2), not P17(V2), not P18(V2), not -P19(V2), not -P20(V2).","- P5(V1) :- P1(V1).","P6(V2) :- - P2(V2), not -P4(V2), not P8(V2), not -P14(V2), not P15(V2).","P7(V2) :- - P11(V2), not -P12(V2).","- P8(V2) :- - P11(V2), not -P12(V2)."],"noisy_rules":{"a":["- P9(V2) :- P0(V2), not -P2(V2), not P4(V2), not -P5(V2), not P7(V2).","- P9(V2) :- P0(V2), - P3(V2), - P6(V2)."],"b":["- P4(V2) :- - P9(V2).","- P3(V2) :- not P3(V2), - P9(V2)."],"c":["- P4(V2) :- - P1(V1), not -P5(V2), - P7(V2), not -P8(V2).","P0(V2) :- - P1(V1), - P3(V2), not -P5(V2)."],"d":["- P6(V2) :- not -P2(V2), not P3(V2), - P21(V2), P22(V2).","P10(V1) :- P0(V2), - P1(V1), not -P8(V2), P23."],"e":["- P24(V2) :- P25(V2), - P26(V2), not -P27(V2), - P28(V2), P29(V2).","P31(V2) :- P30(V2), not -P32(V2)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_46_9_14_10_10_0.5_1.0_5_3_4","seed":46,"num_facts":12,"num_rules":15,"num_related_predicates":27,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P14(\"Aaron\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P15(\"Connie\", \"Micheal\").","P16(\"Sophia\", \"Aaron\", \"Micheal\").","P17(\"Penny\", \"Sophia\", \"Aaron\").","P18(\"Penny\", \"Sophia\", \"Connie\").","- P19(\"Sophia\", \"Aaron\", \"Connie\").","P20(\"Sophia\", \"Aaron\", \"Connie\").","- P21(\"Penny\", \"Sophia\", \"Aaron\").","- P22(\"Penny\", \"Sophia\", \"Connie\").","P23(\"Penny\", \"Connie\", \"Micheal\").","- P24(\"Penny\", \"Micheal\").","- P25(\"Penny\", \"Micheal\").","- P26(\"Penny\", \"Micheal\")."],"noisy_facts":["P37(\"Aaron\", \"Connie\", \"Micheal\").","P35(\"Sophia\").","- P33(\"Penny\", \"Sophia\", \"Micheal\").","- P32(\"Penny\", \"Sophia\", \"Connie\").","P30(\"Connie\").","P36(\"Sophia\", \"Micheal\").","P27(\"Penny\", \"Connie\", \"Micheal\").","- P31(\"Connie\", \"Micheal\").","- P28(\"Penny\", \"Connie\", \"Micheal\")."],"min_fact_dicts_for_query":["P15(\"Connie\", \"Micheal\").","P17(\"Penny\", \"Sophia\", \"Aaron\").","- P21(\"Penny\", \"Sophia\", \"Aaron\").","- P22(\"Penny\", \"Sophia\", \"Connie\")."],"noiseless_rules":["- P14(V2) :- - P0(V1, V4), P4(V2, V3), not P8(V3, V4), not -P11(V1, V2, V4), not P12(V1, V2, V4).","- P0(V1, V4) :- - P6(V2, V4), P9(V0, V1, V2), - P21(V0, V1, V2), - P22(V0, V1, V3), not -P23(V0, V3, V4).","- P1(V1, V3, V4) :- - P6(V2, V4), P9(V0, V1, V2), - P21(V0, V1, V2), - P22(V0, V1, V3), not -P23(V0, V3, V4).","P2(V1, V2, V3) :- P15(V3, V4), P17(V0, V1, V2), not -P18(V0, V1, V3), not P19(V1, V2, V3), not -P20(V1, V2, V3).","- P3(V0, V1, V2) :- P15(V3, V4), P17(V0, V1, V2), not -P18(V0, V1, V3), not P19(V1, V2, V3), not -P20(V1, V2, V3).","P4(V2, V3) :- P2(V1, V2, V3).","P5(V2, V2) :- P2(V1, V2, V3).","- P6(V4, V4) :- P5(V0, V4), not P24(V0, V4), not P25(V0, V4), not P26(V0, V4).","- P7(V0, V0, V4) :- P5(V0, V4), not P24(V0, V4), not P25(V0, V4), not P26(V0, V4).","- P8(V2, V2) :- - P3(V0, V1, V2).","P9(V0, V1, V2) :- - P3(V0, V1, V2).","P10(V1, V2, V0) :- - P3(V0, V1, V2).","P11(V1, V2, V4) :- - P1(V1, V3, V4), P10(V1, V2, V4), not -P13(V1, V2, V4).","- P12(V4, V0, V4) :- - P7(V0, V3, V4).","P13(V1, V2, V4) :- P16(V1, V2, V4)."],"noisy_rules":{"a":["P14(V2) :- P6(V2, V4).","P14(V2) :- P0(V1, V4), - P2(V1, V2, V3), not -P8(V3, V4), - P9(V0, V1, V2), not P10(V1, V2, V4)."],"b":["- P10(V1, V2, V4) :- P1(V1, V3, V4), not -P6(V2, V4), not P11(V1, V2, V4), P12(V1, V2, V4), not -P14(V2).","P24(V0, V4) :- P8(V3, V4), - P9(V0, V1, V2), not P11(V1, V2, V4), P14(V2)."],"c":["- P4(V2, V3) :- P1(V1, V3, V4), P6(V2, V4), not P10(V1, V2, V4).","P12(V0, V2, V4) :- - P4(V2, V3), - P5(V0, V4)."],"d":["- P4(V2, V3) :- P6(V2, V4), P7(V0, V3, V4), - P11(V1, V2, V4), not -P12(V1, V2, V4), not -P27(V0, V3, V4).","P12(V4, V4, V4) :- P7(V0, V3, V4), not P28(V0, V3, V4)."],"e":["- P29(V1) :- P30(V3), - P31(V3, V4), - P32(V0, V1, V3), not P33(V0, V1, V4).","- P34(V1, V2, V4) :- P35(V1), not -P36(V1, V4), P37(V2, V3, V4)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_32_5_8_6_8_0.5_1.0_5_2_3","seed":32,"num_facts":8,"num_rules":9,"num_related_predicates":17,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"P8(\"Brian\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P9(\"Brian\").","- P10(\"Jonathan\").","P11(\"Joseph\").","- P12(\"Jonathan\", \"Steven\").","P13(\"Brian\", \"Steven\").","P14(\"Brian\", \"Joseph\").","P15(\"Jonathan\", \"Steven\").","P16(\"Brian\", \"Steven\")."],"noisy_facts":["- P29(\"Brian\", \"Steven\").","- P27(\"Joseph\").","- P18(\"Jonathan\", \"Brian\").","P26(\"Steven\").","- P28(\"Jonathan\", \"Brian\").","- P19(\"Brian\").","- P17(\"Jonathan\", \"Brian\").","- P24(\"Steven\", \"Joseph\").","P23(\"Steven\", \"Joseph\").","- P30(\"Steven\", \"Joseph\").","- P21(\"Steven\").","P22(\"Jonathan\", \"Steven\")."],"min_fact_dicts_for_query":["- P9(\"Brian\").","- P10(\"Jonathan\").","P11(\"Joseph\").","- P12(\"Jonathan\", \"Steven\").","P15(\"Jonathan\", \"Steven\").","P16(\"Brian\", \"Steven\")."],"noiseless_rules":["P8(V1) :- P0(V2), P3(V2), - P4(V1, V2).","P0(V2) :- - P9(V1), P11(V3), - P12(V0, V2), not -P13(V1, V2), not -P14(V1, V3).","P1(V2) :- - P9(V1), P11(V3), - P12(V0, V2), not -P13(V1, V2), not -P14(V1, V3).","P2(V0, V1) :- - P9(V1), P11(V3), - P12(V0, V2), not -P13(V1, V2), not -P14(V1, V3).","P3(V2) :- P1(V2), - P4(V1, V2), not P5(V1), not P7(V1), not P9(V1).","- P4(V1, V2) :- - P10(V0), P15(V0, V2), P16(V1, V2).","- P5(V1) :- - P10(V0), P15(V0, V2), P16(V1, V2).","P6(V0) :- - P10(V0), P15(V0, V2), P16(V1, V2).","- P7(V1) :- P2(V0, V1), not -P6(V0)."],"noisy_rules":{"a":["- P8(V2) :- - P3(V2).","- P8(V1) :- - P0(V2), P7(V1)."],"b":["- P11(V1) :- - P0(V2), - P3(V2), not -P4(V1, V2), P5(V1), - P8(V1).","- P6(V1) :- - P0(V2), not -P7(V1), - P8(V1)."],"c":["- P15(V2, V2) :- not P0(V2), - P3(V2).","P5(V1) :- - P2(V0, V1), - P3(V2)."],"d":["- P16(V1, V2) :- - P0(V2), not P2(V0, V1), - P3(V2), - P17(V0, V1), not P18(V0, V1).","- P0(V2) :- - P3(V2), P4(V1, V2), not -P5(V1), - P19(V1)."],"e":["- P20(V2) :- - P21(V2), P22(V0, V2), P23(V2, V3), - P24(V2, V3).","P25(V3) :- P26(V2), - P27(V3), - P28(V0, V1), not P29(V1, V2), not P30(V2, V3)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_79_4_5_3_4_0.5_1.0_3_2_3","seed":79,"num_facts":5,"num_rules":6,"num_related_predicates":11,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6666666666666667,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" images_embossed_on_both_sides(\"Jessica\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["mankind(\"Eric\", \"Jessica\").","where_people_live(\"Eric\", \"Jessica\").","gall_midge(\"Eric\", \"Jessica\").","stall_bar(\"Eric\", \"Jessica\").","plates(\"Michelle\", \"Jessica\")."],"noisy_facts":[],"min_fact_dicts_for_query":["mankind(\"Eric\", \"Jessica\").","where_people_live(\"Eric\", \"Jessica\").","gall_midge(\"Eric\", \"Jessica\").","stall_bar(\"Eric\", \"Jessica\").","plates(\"Michelle\", \"Jessica\")."],"noiseless_rules":["images_embossed_on_both_sides(V2) :- flap(V0, V2), tombstone(V0, V2), test_pilot(V0, V2).","flap(V0, V2) :- mankind(V0, V2), stall_bar(V0, V2), plates(V1, V2).","coloratura(V0, V2) :- mankind(V0, V2), stall_bar(V0, V2), plates(V1, V2).","tombstone(V0, V2) :- where_people_live(V0, V2), gall_midge(V0, V2), stall_bar(V0, V2).","toilet_bowl(V2) :- where_people_live(V0, V2), gall_midge(V0, V2), stall_bar(V0, V2).","test_pilot(V0, V2) :- coloratura(V0, V2), toilet_bowl(V2)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_80_8_11_8_10_0.5_1.0_5_2_3","seed":80,"num_facts":11,"num_rules":12,"num_related_predicates":23,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.857142857142857,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P11(\"Ronald\", \"Margaret\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P12(\"Ronald\", \"Kyle\").","P13(\"Margaret\", \"Kyle\").","P14(\"Kyle\").","- P15(\"Margaret\", \"Kyle\").","- P16(\"Margaret\", \"Kyle\").","P17(\"Kyle\").","P18(\"Kyle\").","P19(\"Kyle\").","- P20(\"Kyle\").","P21(\"Ronald\", \"Margaret\").","- P22(\"Margaret\", \"Kyle\")."],"noisy_facts":["- P30(\"Ronald\", \"Kyle\").","- P25(\"Ronald\", \"Kyle\").","P33(\"Kayla\").","- P35(\"Ronald\", \"Kayla\").","P26(\"Margaret\", \"Kyle\").","P31(\"Margaret\", \"Kayla\").","P24(\"Ronald\", \"Kyle\").","- P29(\"Ronald\", \"Margaret\").","- P32(\"Ronald\")."],"min_fact_dicts_for_query":["- P12(\"Ronald\", \"Kyle\").","P13(\"Margaret\", \"Kyle\")."],"noiseless_rules":["- P11(V0, V1) :- - P0(V1), - P1(V0, V2), not P2(V1, V2), not -P6(V1, V2), not P7(V1, V2).","- P0(V1) :- - P3(V1, V2), not P7(V1, V2), not -P10(V1, V2), not P15(V1, V2), not P16(V1, V2).","- P1(V0, V2) :- - P12(V0, V2).","- P2(V1, V2) :- P13(V1, V2).","- P3(V1, V2) :- P13(V1, V2).","P4(V2) :- P13(V1, V2).","P5(V2, V2) :- P4(V2), not -P17(V2), not -P18(V2), not -P19(V2), not P20(V2).","P6(V1, V2) :- P14(V2), P21(V0, V1), not P22(V1, V2).","- P7(V1, V2) :- P14(V2), P21(V0, V1), not P22(V1, V2).","- P8(V2) :- P14(V2), P21(V0, V1), not P22(V1, V2).","P9(V2, V1) :- P5(V1, V2), not P8(V2).","P10(V1, V1) :- P9(V0, V1), not -P21(V0, V1)."],"noisy_rules":{"a":["P11(V0, V1) :- P1(V0, V2), not P5(V1, V2), - P6(V1, V2).","P11(V2, V1) :- P2(V1, V2)."],"b":["P2(V1, V0) :- P11(V0, V1).","P1(V0, V2) :- P8(V2), - P10(V1, V2), P11(V0, V1)."],"c":["P15(V1, V2) :- P0(V1), P1(V0, V2), not P5(V1, V2), - P6(V1, V2), not -P8(V2).","P20(V2) :- - P4(V2), P7(V1, V2), P8(V2), - P9(V0, V1), - P10(V1, V2)."],"d":["- P23(V0, V1) :- P0(V1), P1(V0, V2), not -P7(V1, V2), not -P24(V0, V2), not P25(V0, V2).","- P27(V1, V2) :- - P4(V2), - P10(V1, V2), not -P26(V1, V2)."],"e":["- P28(V2) :- - P29(V0, V1), - P30(V0, V2), P31(V1, V3).","P34(V0) :- not P32(V0), not -P33(V3), - P35(V0, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_70_5_8_3_4_0.5_1.0_5_2_3","seed":70,"num_facts":4,"num_rules":9,"num_related_predicates":13,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" P8(\"Stacey\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["P9(\"Stacey\").","- P10(\"Jennifer\", \"Kristy\").","- P11(\"Jennifer\", \"William\").","P12(\"Stacey\", \"William\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P9(\"Stacey\").","- P10(\"Jennifer\", \"Kristy\").","- P11(\"Jennifer\", \"William\")."],"noiseless_rules":["- P8(V1) :- - P0(V3), - P5(V0, V1), not -P6(V1, V3).","- P0(V3) :- P9(V1), - P10(V0, V2), - P11(V0, V3), not -P12(V1, V3).","P1(V1, V2) :- P9(V1), - P10(V0, V2), - P11(V0, V3), not -P12(V1, V3).","- P2(V1, V2) :- P9(V1), - P10(V0, V2), - P11(V0, V3), not -P12(V1, V3).","P3(V1, V2) :- P1(V1, V2).","P4(V1) :- P1(V1, V2).","- P5(V0, V1) :- - P2(V1, V2), P3(V0, V2), not -P7(V0, V2).","P6(V1, V3) :- P4(V1), P12(V1, V3).","P7(V3, V3) :- P4(V1), P12(V1, V3)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_24_8_11_8_11_0.5_1.0_5_3_4","seed":24,"num_facts":11,"num_rules":12,"num_related_predicates":23,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P11(\"Gregory\", \"Tanya\", \"Stephanie\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P12(\"Kelly\", \"Jill\").","P13(\"Kelly\", \"Tanya\", \"Stephanie\").","P14(\"Kelly\", \"Tanya\", \"Jill\").","- P15(\"Kelly\", \"Tanya\", \"Stephanie\").","- P16(\"Kelly\", \"Gregory\", \"Tanya\").","- P17(\"Kelly\", \"Gregory\", \"Tanya\").","- P18(\"Kelly\", \"Gregory\", \"Tanya\").","- P19(\"Gregory\").","- P20(\"Kelly\", \"Gregory\", \"Stephanie\").","P21(\"Kelly\", \"Tanya\", \"Jill\").","- P22(\"Gregory\", \"Tanya\", \"Stephanie\")."],"noisy_facts":["- P26(\"Kelly\", \"Gregory\", \"Tanya\").","- P24(\"Kelly\", \"Tanya\", \"Jill\").","- P29(\"Kelly\", \"Stephanie\").","P23(\"Kelly\", \"Tanya\", \"Jill\").","P28(\"Tanya\").","- P31(\"Kelly\", \"Gregory\", \"Tanya\").","P30(\"Kelly\", \"Gregory\", \"Tanya\")."],"min_fact_dicts_for_query":["- P12(\"Kelly\", \"Jill\").","- P15(\"Kelly\", \"Tanya\", \"Stephanie\").","- P22(\"Gregory\", \"Tanya\", \"Stephanie\")."],"noiseless_rules":["P11(V1, V2, V4) :- P1(V0, V1), - P2(V2, V4), - P6(V1, V2, V3), not P10(V1, V3, V4).","P0(V2, V4) :- P5(V0), P7(V0), - P19(V1), - P20(V0, V1, V4), P21(V0, V2, V3).","P1(V1, V1) :- - P8(V1, V3, V4), not P10(V1, V3, V4).","- P2(V2, V4) :- - P12(V0, V3), - P15(V0, V2, V4), - P22(V1, V2, V4).","- P3(V0, V1, V2) :- - P12(V0, V3), - P15(V0, V2, V4), - P22(V1, V2, V4).","- P4(V0, V2, V4) :- P13(V0, V2, V4).","P5(V0) :- P14(V0, V2, V3).","- P6(V1, V2, V0) :- - P3(V0, V1, V2), - P15(V0, V2, V4), not P16(V0, V1, V2), not P17(V0, V1, V2), not P18(V0, V1, V2).","P7(V0) :- - P3(V0, V1, V2), - P15(V0, V2, V4), not P16(V0, V1, V2), not P17(V0, V1, V2), not P18(V0, V1, V2).","- P8(V1, V1, V4) :- - P3(V0, V1, V2), - P15(V0, V2, V4), not P16(V0, V1, V2), not P17(V0, V1, V2), not P18(V0, V1, V2).","- P9(V0, V2, V2) :- - P3(V0, V1, V2), - P15(V0, V2, V4), not P16(V0, V1, V2), not P17(V0, V1, V2), not P18(V0, V1, V2).","- P10(V0, V3, V4) :- P0(V2, V4), - P4(V0, V2, V4), - P9(V0, V2, V3), not -P21(V0, V2, V3)."],"noisy_rules":{"a":["- P11(V1, V2, V4) :- - P1(V0, V1), P2(V2, V4), P6(V1, V2, V3), - P7(V0).","- P11(V1, V2, V4) :- - P0(V2, V4), - P1(V0, V1), P6(V1, V2, V3)."],"b":["- P21(V0, V2, V4) :- P2(V2, V4), P3(V0, V1, V2), not P7(V0), not P11(V1, V2, V4).","P19(V1) :- P2(V2, V4), - P5(V0), P8(V1, V3, V4), not P11(V1, V2, V4)."],"c":["- P14(V3, V4, V3) :- P8(V1, V3, V4), not -P10(V1, V3, V4).","P15(V0, V2, V4) :- - P0(V2, V4), P3(V0, V1, V2), - P7(V0)."],"d":["- P14(V0, V2, V3) :- P9(V0, V2, V3), P23(V0, V2, V3).","P19(V1) :- P9(V0, V2, V3), P10(V1, V3, V4), not P24(V0, V2, V3)."],"e":["P25(V0, V1) :- - P26(V0, V1, V2).","- P27(V0, V1) :- P28(V2), - P29(V0, V4), not -P30(V0, V1, V2), - P31(V0, V1, V2)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_81_7_7_3_5_0.5_1.0_3_2_3","seed":81,"num_facts":6,"num_rules":8,"num_related_predicates":14,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.6666666666666667,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" fix_many_problems(\"Joyce\", \"Jessica\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["spoiler(\"Joyce\", \"Ryan\").","- important(\"Joyce\", \"Jessica\").","tibet(\"Ryan\", \"Jessica\").","board_passengers(\"Joyce\", \"Jessica\").","- museums(\"Joyce\", \"Jessica\").","- gallinule(\"Joyce\", \"Ryan\")."],"noisy_facts":["isogamete(\"Peter\", \"Joyce\").","- home_study(\"Joyce\", \"Ryan\").","lancashire(\"Peter\", \"Jessica\").","making_into_jewelry(\"Joyce\", \"Jessica\").","bed(\"Ryan\", \"Jessica\").","sleep_in(\"Peter\", \"Joyce\")."],"min_fact_dicts_for_query":["spoiler(\"Joyce\", \"Ryan\").","- important(\"Joyce\", \"Jessica\").","board_passengers(\"Joyce\", \"Jessica\")."],"noiseless_rules":["- fix_many_problems(V1, V3) :- palm_nut(V1, V3), - bacon(V2, V3), not connect(V2, V3).","palm_nut(V1, V3) :- - plaster(V1, V3).","- bacon(V2, V3) :- spoiler(V1, V2), board_passengers(V1, V3).","- plaster(V1, V3) :- - have_fun(V1, V3).","- have_fun(V1, V3) :- - important(V1, V3), not -board_passengers(V1, V3), not museums(V1, V3).","- botanical_garden(V1, V1) :- - important(V1, V3), not -board_passengers(V1, V3), not museums(V1, V3).","- sharing_with_friends(V2) :- - bacon(V2, V3), not -tibet(V2, V3).","- connect(V2, V2) :- - botanical_garden(V1, V2), not sharing_with_friends(V2), not gallinule(V1, V2)."],"noisy_rules":{"a":["fix_many_problems(V2, V3) :- connect(V2, V3).","fix_many_problems(V1, V3) :- bacon(V2, V3), botanical_garden(V1, V2), connect(V2, V3)."],"b":["bacon(V2, V3) :- botanical_garden(V1, V2), fix_many_problems(V1, V3).","sharing_with_friends(V1) :- - palm_nut(V1, V3), not -have_fun(V1, V3), fix_many_problems(V1, V3)."],"c":["sharing_with_friends(V2) :- - palm_nut(V1, V3), botanical_garden(V1, V2).","have_fun(V1, V3) :- bacon(V2, V3), plaster(V1, V3), sharing_with_friends(V2)."],"d":["sharing_with_friends(V3) :- plaster(V1, V3).","- palm_nut(V1, V1) :- not -botanical_garden(V1, V2), - home_study(V1, V2)."],"e":["- blanket(V0, V2) :- lancashire(V0, V3), bed(V2, V3).","owed(V1, V3) :- sleep_in(V0, V1), isogamete(V0, V1), making_into_jewelry(V1, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_38_7_6_6_8_0.5_1.0_5_2_3","seed":38,"num_facts":10,"num_rules":7,"num_related_predicates":17,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8333333333333333,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"starches(\"John\", \"Alejandro\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- enjoying_food(\"Joshua\").","- nest(\"Joshua\", \"Alejandro\").","- buying_presents(\"Joshua\", \"Alejandro\").","cracked_wheat_bread(\"John\", \"Alejandro\").","gluten_bread(\"John\", \"Alejandro\").","- host(\"John\", \"Alejandro\").","bap(\"John\", \"Alejandro\").","- attire(\"John\", \"Alejandro\").","- rice(\"Nathan\", \"Alejandro\").","outfit(\"Nathan\", \"Alejandro\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- enjoying_food(\"Joshua\").","cracked_wheat_bread(\"John\", \"Alejandro\").","- host(\"John\", \"Alejandro\")."],"noiseless_rules":["starches(V0, V3) :- four_legs(V2), - bread(V3), - host(V0, V3), not rice(V2, V3), not -outfit(V2, V3).","- most_but_not_all_tables(V1) :- - enjoying_food(V1).","four_legs(V1) :- - most_but_not_all_tables(V1), not -tree(V1), not -trees(V1).","tree(V1) :- christmas(V1, V3).","trees(V1) :- christmas(V1, V3), not nest(V1, V3).","christmas(V1, V3) :- - buying_presents(V1, V3).","- bread(V3) :- cracked_wheat_bread(V0, V3), not -gluten_bread(V0, V3), not host(V0, V3), not -bap(V0, V3), not attire(V0, V3)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_14_5_5_4_6_0.5_1.0_3_3_4","seed":14,"num_facts":6,"num_rules":6,"num_related_predicates":12,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"biont(\"Rebecca\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["mother_cell(\"Victoria\", \"Judith\", \"Maria\").","- living_thing(\"Victoria\", \"Judith\", \"Maria\").","flight_line(\"Judith\", \"Julie\", \"Maria\").","- wildlife(\"Judith\", \"Julie\", \"Maria\").","- beta_cell(\"Victoria\", \"Rebecca\", \"Maria\").","zygote(\"Julie\", \"Rebecca\", \"Maria\")."],"noisy_facts":["- health(\"Judith\", \"Rebecca\", \"Maria\").","- quarto(\"Victoria\", \"Maria\").","extra_large(\"Victoria\", \"Judith\", \"Maria\").","- number(\"Judith\", \"Julie\", \"Rebecca\").","earth(\"Victoria\", \"Julie\", \"Rebecca\").","board_plane(\"Judith\", \"Rebecca\", \"Maria\")."],"min_fact_dicts_for_query":["mother_cell(\"Victoria\", \"Judith\", \"Maria\").","- beta_cell(\"Victoria\", \"Rebecca\", \"Maria\").","zygote(\"Julie\", \"Rebecca\", \"Maria\")."],"noiseless_rules":["biont(V3) :- cell(V1, V3, V4), not -object(V1, V3, V4).","cell(V1, V3, V4) :- mother_cell(V0, V1, V4), - beta_cell(V0, V3, V4), zygote(V2, V3, V4).","- nucleus(V1, V2, V4) :- mother_cell(V0, V1, V4), - beta_cell(V0, V3, V4), zygote(V2, V3, V4).","object(V1, V1, V4) :- - life(V0, V1, V4), not -whole(V0, V1, V4), not -mother_cell(V0, V1, V4).","- life(V4, V1, V4) :- - nucleus(V1, V2, V4), not -flight_line(V1, V2, V4), not wildlife(V1, V2, V4).","whole(V0, V1, V4) :- mother_cell(V0, V1, V4), not living_thing(V0, V1, V4)."],"noisy_rules":{"a":["- biont(V0) :- - whole(V0, V1, V4).","- biont(V3) :- - object(V1, V3, V4), life(V0, V1, V4), not whole(V0, V1, V4)."],"b":["living_thing(V0, V1, V4) :- - cell(V1, V3, V4), life(V0, V1, V4), not biont(V3).","- mother_cell(V0, V1, V4) :- - whole(V0, V1, V4), - biont(V3)."],"c":["- cell(V1, V4, V4) :- nucleus(V1, V2, V4).","nucleus(V1, V1, V4) :- life(V0, V1, V4)."],"d":["beta_cell(V3, V3, V4) :- - object(V1, V3, V4), board_plane(V1, V3, V4).","nucleus(V1, V3, V4) :- - cell(V1, V3, V4), - health(V1, V3, V4)."],"e":["all_living_things(V0, V3) :- earth(V0, V2, V3).","- size(V1, V3, V4) :- - quarto(V0, V4), extra_large(V0, V1, V4), - number(V1, V2, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_16_7_9_9_11_0.5_1.0_5_2_3","seed":16,"num_facts":12,"num_rules":10,"num_related_predicates":22,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" binding(\"Julie\", \"Dennis\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["fire(\"Julie\", \"Brent\").","- kook(\"Brent\").","sleeping_on.","three_quarter_binding(\"Julie\", \"Dennis\").","hardback(\"Julie\", \"Dennis\").","- product(\"Julie\", \"Dennis\").","marry(\"Julie\", \"Brent\").","- roll_down_hill(\"Christopher\", \"Dennis\").","- factory(\"Christopher\", \"Dennis\").","demolition(\"Dennis\", \"Brent\").","half_binding(\"Dennis\", \"Brent\").","common_mosquito(\"Dennis\", \"Brent\")."],"noisy_facts":["- silo(\"Julie\", \"Dennis\").","registration(\"Julie\", \"Dennis\").","lecture_room(\"Christopher\", \"Brent\").","- flow(\"Julie\", \"Christopher\").","conveyer_belt(\"Julie\", \"Christopher\").","- study_hall(\"Christopher\", \"Dennis\").","- talking_picture(\"Christopher\", \"Brent\")."],"min_fact_dicts_for_query":["fire(\"Julie\", \"Brent\").","- kook(\"Brent\").","three_quarter_binding(\"Julie\", \"Dennis\").","marry(\"Julie\", \"Brent\").","- roll_down_hill(\"Christopher\", \"Dennis\").","half_binding(\"Dennis\", \"Brent\")."],"noiseless_rules":["- binding(V0, V2) :- attempt(V2), production_line(V0, V1), three_quarter_binding(V0, V2), half_binding(V2, V3), not -common_mosquito(V2, V3).","attempt(V2) :- book(V0, V2), burn_houses(V0, V3), movie(V1, V2).","production_line(V0, V2) :- picture_book(V0, V2), not textile_mill(V0, V2), not -three_quarter_binding(V0, V2), not -hardback(V0, V2), not product(V0, V2).","book(V0, V2) :- picture_book(V0, V2), not textile_mill(V0, V2), not -three_quarter_binding(V0, V2), not -hardback(V0, V2), not product(V0, V2).","burn_houses(V0, V3) :- fire(V0, V3).","picture_book(V0, V2) :- - kook(V3), marry(V0, V3), - roll_down_hill(V1, V2), not factory(V1, V2), not -demolition(V2, V3).","steel_mill(V1, V2) :- - kook(V3), marry(V0, V3), - roll_down_hill(V1, V2), not factory(V1, V2), not -demolition(V2, V3).","- textile_mill(V0, V3) :- fire(V0, V3), not -sleeping_on.","- sweatshop(V0, V0) :- fire(V0, V3), not -sleeping_on.","movie(V1, V2) :- steel_mill(V1, V2), not sweatshop(V1, V2)."],"noisy_rules":{"a":["binding(V0, V2) :- - production_line(V0, V1), - burn_houses(V0, V3), - steel_mill(V1, V2).","binding(V0, V2) :- not book(V0, V2), - burn_houses(V0, V3), not picture_book(V0, V2), - steel_mill(V1, V2), not -textile_mill(V0, V2)."],"b":["- three_quarter_binding(V0, V2) :- - attempt(V2), - book(V0, V2), - steel_mill(V1, V2), - movie(V1, V2), not -binding(V0, V2).","- book(V0, V2) :- binding(V0, V2)."],"c":["factory(V1, V2) :- - production_line(V0, V1), - steel_mill(V1, V2), textile_mill(V0, V2), not -sweatshop(V1, V2), - movie(V1, V2).","product(V0, V2) :- not production_line(V0, V1), - book(V0, V2), - movie(V1, V2)."],"d":["show(V0, V2) :- - picture_book(V0, V2), textile_mill(V0, V2), - movie(V1, V2), not silo(V0, V2), not -registration(V0, V2).","- production_line(V0, V1) :- conveyer_belt(V0, V1)."],"e":["- water_movement(V0, V1) :- - flow(V0, V1), - talking_picture(V1, V3).","classroom(V3) :- - study_hall(V1, V2), lecture_room(V1, V3)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_6_10_12_9_9_0.5_1.0_5_2_3","seed":6,"num_facts":13,"num_rules":13,"num_related_predicates":26,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"toy_marble(\"Jennifer\", \"Lisa\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- point(\"Phillip\", \"Sandra\").","backband(\"Jennifer\").","- diptych(\"Jennifer\", \"Lisa\").","- playing_game(\"Phillip\").","trousers(\"Phillip\").","paper_doll(\"Phillip\", \"Sandra\").","- picnicker(\"Sandra\", \"Lisa\").","- go_up(\"Sandra\", \"Lisa\").","- music(\"Sandra\", \"Jennifer\").","fall_armyworm(\"Sandra\", \"Jennifer\").","- partridge(\"Sandra\", \"Lisa\").","- scale(\"Sandra\", \"Jennifer\").","- young(\"Sandra\", \"Jennifer\")."],"noisy_facts":["bestiary(\"Phillip\", \"Sandra\").","- symbolist.","- frustration(\"Phillip\", \"Sandra\").","meals(\"Sandra\", \"Lisa\").","towhee(\"Sandra\", \"Lisa\").","- antler(\"Sandra\", \"Lisa\").","wormian_bone(\"Sandra\", \"Lisa\").","hygeine(\"Phillip\", \"Sandra\").","- borsch(\"Phillip\", \"Lisa\").","- american(\"Phillip\", \"Sandra\").","seed_plants(\"Sandra\", \"Lisa\")."],"min_fact_dicts_for_query":["backband(\"Jennifer\").","- diptych(\"Jennifer\", \"Lisa\").","- playing_game(\"Phillip\").","trousers(\"Phillip\").","paper_doll(\"Phillip\", \"Sandra\").","- picnicker(\"Sandra\", \"Lisa\").","- music(\"Sandra\", \"Jennifer\")."],"noiseless_rules":["toy_marble(V2, V3) :- - total_darkness(V1, V3), representation(V2, V3), not sound_bow(V2, V3).","- total_darkness(V1, V3) :- corner_cats(V2), auditory_system(V0, V3), - music(V1, V2), not -fall_armyworm(V1, V2), not partridge(V1, V3).","jennet(V1) :- corner_cats(V2), auditory_system(V0, V3), - music(V1, V2), not -fall_armyworm(V1, V2), not partridge(V1, V3).","eating_meals_together(V0, V1) :- - point(V0, V1).","corner_cats(V2) :- backband(V2).","representation(V2, V3) :- loon(V2, V3).","loon(V2, V3) :- - diptych(V2, V3).","- sound_bow(V1, V1) :- jennet(V1), not menu(V1), not roller_skates(V1).","- menu(V1) :- - gray(V0, V1), - punnet(V0, V2), not scale(V1, V2), not young(V1, V2).","auditory_system(V0, V3) :- - playing_game(V0), trousers(V0), paper_doll(V0, V1), - picnicker(V1, V3), not go_up(V1, V3).","- gray(V0, V1) :- - playing_game(V0), trousers(V0), paper_doll(V0, V1), - picnicker(V1, V3), not go_up(V1, V3).","- roller_skates(V1) :- eating_meals_together(V0, V1).","- punnet(V0, V0) :- eating_meals_together(V0, V1)."],"noisy_rules":{"a":["- toy_marble(V2, V3) :- total_darkness(V1, V3), - jennet(V1), - representation(V2, V3), menu(V1), - auditory_system(V0, V3).","- toy_marble(V2, V3) :- - corner_cats(V2), sound_bow(V2, V3), - auditory_system(V0, V3), gray(V0, V1)."],"b":["- eating_meals_together(V2, V3) :- - loon(V2, V3), sound_bow(V2, V3), - toy_marble(V2, V3).","- corner_cats(V2) :- total_darkness(V1, V3), gray(V0, V1), - toy_marble(V2, V3)."],"c":["picnicker(V1, V3) :- total_darkness(V1, V3), not corner_cats(V2), - loon(V2, V3), - auditory_system(V0, V3), not -roller_skates(V1).","go_up(V1, V1) :- roller_skates(V1)."],"d":["partridge(V3, V3) :- - auditory_system(V0, V3), - borsch(V0, V3).","go_up(V1, V2) :- - jennet(V1), punnet(V0, V2), not symbolist."],"e":["short_staple_cotton(V0, V1) :- - frustration(V0, V1), - american(V0, V1), not -towhee(V1, V3), seed_plants(V1, V3).","scrub_oak(V1, V3) :- hygeine(V0, V1), bestiary(V0, V1), wormian_bone(V1, V3), not antler(V1, V3), meals(V1, V3)."]}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_76_10_13_13_14_0.5_1.0_3_3_4","seed":76,"num_facts":16,"num_rules":14,"num_related_predicates":30,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.6666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" specific_amounts(\"Dylan\", \"Erika\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["mole(\"Michael\", \"Erika\").","bill(\"Victoria\", \"Michael\").","bridge(\"Michael\", \"Erika\").","water_lily(\"Dylan\", \"Edward\", \"Michael\").","current(\"Victoria\", \"Dylan\", \"Michael\").","flow(\"Victoria\", \"Dylan\", \"Michael\").","account(\"Victoria\", \"Edward\", \"Erika\").","immortality(\"Michael\", \"Erika\").","flatness(\"Dylan\", \"Michael\", \"Erika\").","feed_babies(\"Michael\", \"Erika\").","loaf(\"Victoria\", \"Edward\", \"Erika\").","blackhead(\"Michael\", \"Erika\").","whitehead(\"Michael\", \"Erika\").","dollar(\"Victoria\", \"Erika\").","payment(\"Dylan\", \"Edward\", \"Michael\").","sassaby(\"Victoria\", \"Dylan\", \"Erika\")."],"noisy_facts":[],"min_fact_dicts_for_query":["mole(\"Michael\", \"Erika\").","bill(\"Victoria\", \"Michael\").","bridge(\"Michael\", \"Erika\").","water_lily(\"Dylan\", \"Edward\", \"Michael\").","current(\"Victoria\", \"Dylan\", \"Michael\").","flow(\"Victoria\", \"Dylan\", \"Michael\").","account(\"Victoria\", \"Edward\", \"Erika\").","immortality(\"Michael\", \"Erika\").","flatness(\"Dylan\", \"Michael\", \"Erika\").","feed_babies(\"Michael\", \"Erika\").","loaf(\"Victoria\", \"Edward\", \"Erika\").","blackhead(\"Michael\", \"Erika\").","whitehead(\"Michael\", \"Erika\").","dollar(\"Victoria\", \"Erika\").","payment(\"Dylan\", \"Edward\", \"Michael\").","sassaby(\"Victoria\", \"Dylan\", \"Erika\")."],"noiseless_rules":["specific_amounts(V1, V4) :- usually_in_chains(V1, V3), bills(V0, V2, V4), vascular_plant(V1, V2, V3).","tape_grass(V2, V3) :- antelope(V0, V4), feed_babies(V3, V4), loaf(V0, V2, V4).","usually_in_chains(V1, V3) :- banks(V0, V4), immortality(V3, V4), flatness(V1, V3, V4).","antelope(V0, V4) :- blemish(V0), mole(V3, V4), sassaby(V0, V1, V4).","bills(V0, V2, V4) :- money(V2, V3), river(V0, V1, V4), account(V0, V2, V4).","banks(V0, V4) :- money(V2, V3), river(V0, V1, V4), account(V0, V2, V4).","vascular_plant(V1, V2, V3) :- aquatic_plant(V2), currency(V1, V2), cross_road(V1, V3, V4).","blemish(V3) :- mole(V3, V4), blackhead(V3, V4), whitehead(V3, V4).","water_speedwell(V4, V4, V3) :- mole(V3, V4), blackhead(V3, V4), whitehead(V3, V4).","aquatic_plant(V2) :- tape_grass(V2, V3), water_speedwell(V1, V2, V3), water_lily(V1, V2, V3).","money(V2, V3) :- bill(V0, V3), dollar(V0, V4), payment(V1, V2, V3).","currency(V1, V2) :- bill(V0, V3), dollar(V0, V4), payment(V1, V2, V3).","river(V0, V1, V4) :- bridge(V3, V4), current(V0, V1, V3), flow(V0, V1, V3).","cross_road(V1, V3, V4) :- bridge(V3, V4), current(V0, V1, V3), flow(V0, V1, V3)."],"noisy_rules":{}},"num_min_facts_for_query":7,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_70_6_9_4_5_0.5_1.0_5_2_3","seed":70,"num_facts":5,"num_rules":10,"num_related_predicates":15,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"course(\"Rose\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- crossing(\"Rose\").","mailbox(\"Cynthia\", \"Rose\").","traveling_faster(\"Cynthia\", \"Tara\").","- night_time(\"Rose\", \"Shelley\").","trunk(\"Shelley\", \"Tara\")."],"noisy_facts":["moo(\"Cynthia\", \"Rose\").","- offerer(\"Shelley\").","- modification.","double_bed(\"Rose\", \"Shelley\").","- die_horribly(\"Rose\", \"Tara\").","- thysanuran_insect(\"Cynthia\").","work_place(\"Rose\", \"Shelley\").","- fur(\"Cynthia\", \"Shelley\").","tugboat(\"Rose\", \"Shelley\").","- born(\"Shelley\")."],"min_fact_dicts_for_query":["- crossing(\"Rose\").","mailbox(\"Cynthia\", \"Rose\").","traveling_faster(\"Cynthia\", \"Tara\").","- night_time(\"Rose\", \"Shelley\")."],"noiseless_rules":["course(V1) :- - stepladder(V3), - guinea_worm(V0, V1), not -breadbasket(V1, V3).","- sandwich_shop(V1, V2) :- - crossing(V1), mailbox(V0, V1), traveling_faster(V0, V3), - night_time(V1, V2), not -trunk(V2, V3).","cliffhanger(V1, V2) :- - crossing(V1), mailbox(V0, V1), traveling_faster(V0, V3), - night_time(V1, V2), not -trunk(V2, V3).","- body_armor(V2) :- - crossing(V1), mailbox(V0, V1), traveling_faster(V0, V3), - night_time(V1, V2), not -trunk(V2, V3).","- stepladder(V1) :- - sandwich_shop(V1, V2), not -palm(V1, V2), not -nit(V1, V2).","- guinea_worm(V2, V1) :- cliffhanger(V1, V2).","palm(V1, V2) :- cliffhanger(V1, V2).","playing_with_friends(V2) :- cliffhanger(V1, V2).","nit(V1, V2) :- palm(V1, V2).","breadbasket(V2, V2) :- - body_armor(V2), not -playing_with_friends(V2)."],"noisy_rules":{"a":["- course(V1) :- stepladder(V3), guinea_worm(V0, V1), - playing_with_friends(V2).","- course(V1) :- - cliffhanger(V1, V2), body_armor(V2), guinea_worm(V0, V1), - playing_with_friends(V2)."],"b":["- palm(V1, V1) :- - course(V1).","night_time(V1, V2) :- sandwich_shop(V1, V2), - cliffhanger(V1, V2), body_armor(V2), - breadbasket(V1, V3), not course(V1)."],"c":["- mailbox(V2, V1) :- sandwich_shop(V1, V2), stepladder(V3), - palm(V1, V2), - nit(V1, V2), not breadbasket(V1, V3).","body_armor(V2) :- not cliffhanger(V1, V2), stepladder(V3), - nit(V1, V2)."],"d":["- traveling_faster(V2, V2) :- body_armor(V2), - born(V2), - offerer(V2).","- cliffhanger(V1, V3) :- stepladder(V3), guinea_worm(V0, V1), not modification."],"e":["- shetland_pony(V0, V1) :- - fur(V0, V2), tugboat(V1, V2).","- name_puppy(V1, V2) :- - thysanuran_insect(V0), moo(V0, V1), work_place(V1, V2), double_bed(V1, V2), - die_horribly(V1, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_43_7_11_7_8_0.5_1.0_5_2_3","seed":43,"num_facts":10,"num_rules":12,"num_related_predicates":22,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P11(\"Leslie\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P12.","P13(\"Marc\", \"Kara\").","- P14(\"Leslie\").","- P15(\"Marc\").","- P16(\"Marc\").","P17(\"Marc\").","- P18(\"Marc\").","- P19(\"Leslie\", \"Marc\").","- P20(\"Leslie\", \"Mark\").","P21(\"Marc\", \"Kara\")."],"noisy_facts":["P22(\"Leslie\", \"Marc\").","P27(\"Marc\", \"Kara\").","- P30(\"Marc\", \"Mark\").","P28(\"Marc\", \"Mark\").","- P29(\"Marc\", \"Mark\").","- P24(\"Leslie\", \"Marc\").","P26(\"Marc\")."],"min_fact_dicts_for_query":["P13(\"Marc\", \"Kara\").","- P14(\"Leslie\").","- P18(\"Marc\").","- P19(\"Leslie\", \"Marc\").","- P20(\"Leslie\", \"Mark\").","P21(\"Marc\", \"Kara\")."],"noiseless_rules":["P11(V0) :- - P0(V3), P6(V0, V1), not P10(V0, V3).","- P0(V1) :- P4(V1), not P12.","P1(V1) :- P4(V1), not P12.","- P2(V1, V1) :- P4(V1), not P12.","- P3(V1, V1) :- P4(V1), not P12.","P4(V1) :- P13(V1, V2).","P5(V1, V2) :- P13(V1, V2).","P6(V0, V1) :- - P14(V0), - P18(V1), - P19(V0, V1), - P20(V0, V3), P21(V1, V2).","- P7(V2, V3) :- - P14(V0), - P18(V1), - P19(V0, V1), - P20(V0, V3), P21(V1, V2).","P8(V2, V2) :- P1(V2).","- P9(V1, V1) :- - P2(V1, V2), not -P4(V1), not P15(V1), not P16(V1), not -P17(V1).","- P10(V0, V3) :- - P3(V0, V2), P5(V1, V2), - P7(V2, V3), not -P8(V1, V3), not P9(V0, V3)."],"noisy_rules":{"a":["- P11(V1) :- - P4(V1).","- P11(V0) :- - P1(V2), P7(V2, V3), P10(V0, V3)."],"b":["P18(V1) :- P0(V3), P2(V1, V2), - P6(V0, V1), not -P10(V0, V3), - P11(V0).","P16(V1) :- P2(V1, V2), - P4(V1), - P6(V0, V1), - P8(V1, V3), - P11(V0)."],"c":["- P5(V1, V1) :- - P4(V1).","P20(V0, V3) :- P0(V3), - P1(V2), - P6(V0, V1), not -P9(V0, V3), not -P10(V0, V3)."],"d":["P20(V1, V3) :- - P8(V1, V3).","P2(V1, V2) :- - P1(V2), not -P3(V0, V2), - P6(V0, V1), not -P22(V0, V1)."],"e":["P23(V0, V1) :- - P24(V0, V1).","- P25(V1, V2) :- P26(V1), P27(V1, V2), P28(V1, V3), not P29(V1, V3), not P30(V1, V3)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_89_7_7_3_6_0.5_1.0_5_2_3","seed":89,"num_facts":6,"num_rules":8,"num_related_predicates":14,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8333333333333333,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"grassland(\"Richard\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- branch_out(\"Eric\", \"Richard\").","- seychelles_rupee(\"Eric\", \"Richard\").","department(\"Eric\", \"Richard\").","- employee(\"Eric\", \"Richard\").","- hold_bank_account(\"Eric\", \"Richard\").","- girls(\"Eric\", \"Richard\")."],"noisy_facts":["farm(\"Richard\", \"Laura\").","yellow_breasted_bunting(\"Richard\", \"Kevin\").","consumer(\"Richard\", \"Laura\").","reed_bunting(\"Eric\", \"Kevin\").","- delmonico_steak(\"Eric\", \"Richard\").","having_food_to_eat(\"Eric\", \"Laura\").","yellowhammer(\"Richard\", \"Kevin\").","playing_card(\"Eric\", \"Richard\")."],"min_fact_dicts_for_query":["- branch_out(\"Eric\", \"Richard\")."],"noiseless_rules":["grassland(V1) :- - corporation(V1, V2), - bodily_process(V1, V3), not -organic_process(V1, V3).","perspiration(V0, V1) :- - branch_out(V0, V1).","- corporation(V1, V2) :- expression(V1, V2), not -company(V1, V2).","- bodily_process(V1, V1) :- perspiration(V0, V1).","parturition(V1) :- perspiration(V0, V1).","organic_process(V1, V3) :- - bodily_process(V1, V3), not -parturition(V1).","expression(V1, V0) :- - branch_out(V0, V1), not seychelles_rupee(V0, V1), not employee(V0, V1), not hold_bank_account(V0, V1), not girls(V0, V1).","company(V1, V1) :- department(V0, V1), not employee(V0, V1)."],"noisy_rules":{"a":["- grassland(V1) :- - company(V1, V2).","- grassland(V1) :- - perspiration(V0, V1), corporation(V1, V2), - company(V1, V2)."],"b":["corporation(V1, V2) :- corporation(V1, V2), - organic_process(V1, V3), - grassland(V1).","branch_out(V0, V1) :- - perspiration(V0, V1), bodily_process(V1, V3), not organic_process(V1, V3), - company(V1, V2), not grassland(V1)."],"c":["hold_bank_account(V0, V1) :- - perspiration(V0, V1), corporation(V1, V2), bodily_process(V1, V3).","- expression(V1, V1) :- - perspiration(V0, V1), bodily_process(V1, V3)."],"d":["business(V1) :- bodily_process(V1, V3), not organic_process(V1, V3), - expression(V1, V2), not company(V1, V2), not -farm(V1, V2).","- organic_process(V1, V2) :- - perspiration(V0, V1), - expression(V1, V2), - delmonico_steak(V0, V1)."],"e":["bit(V0, V2) :- having_food_to_eat(V0, V2).","bunting(V2) :- playing_card(V0, V1), reed_bunting(V0, V3), consumer(V1, V2), not -yellowhammer(V1, V3), not -yellow_breasted_bunting(V1, V3)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_80_6_7_1_3_0.5_1.0_5_1_2","seed":80,"num_facts":3,"num_rules":8,"num_related_predicates":11,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" P7(\"Samantha\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P8(\"Samantha\").","- P9.","P10(\"Samantha\")."],"noisy_facts":["P20(\"Allen\").","- P12(\"Samantha\").","P11(\"Samantha\").","- P19(\"Allen\").","P17(\"Samantha\").","P16(\"Samantha\").","P21(\"Allen\").","- P14(\"Samantha\")."],"min_fact_dicts_for_query":["- P9.","P10(\"Samantha\")."],"noiseless_rules":["- P7(V1) :- P0(V1), not -P10(V1).","P0(V1) :- - P1(V1), not -P2(V1), not P5(V1).","- P1(V1) :- P3(V1), not -P6(V1).","P2(V1) :- P6(V1), not -P8(V1).","P3(V1) :- P6(V1), not -P8(V1).","- P4(V1) :- - P9, P10(V1).","- P5(V2) :- - P4(V2).","P6(V2) :- - P4(V2)."],"noisy_rules":{"a":["P7(V1) :- - P3(V1), P4(V2), not P6(V1).","P7(V2) :- P4(V2)."],"b":["- P0(V1) :- not P0(V1), not -P1(V1), - P3(V1), not -P5(V1), P7(V1).","- P10(V1) :- not -P1(V1), P5(V1), P7(V1)."],"c":["P1(V1) :- not P0(V1), P5(V1), not P6(V1).","- P10(V1) :- - P0(V1), - P2(V1), - P3(V1), P4(V2), not P6(V1)."],"d":["- P0(V1) :- P5(V1), not -P11(V1), - P12(V1).","P13(V1) :- not P0(V1), P1(V1), not P2(V1), not P14(V1)."],"e":["P15(V1) :- P16(V1), not -P17(V1).","- P18(V2) :- - P19(V2), not -P20(V2), not -P21(V2)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_17_10_10_9_10_0.5_1.0_3_3_4","seed":17,"num_facts":14,"num_rules":11,"num_related_predicates":25,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" eating(\"Samantha\", \"Elizabeth\", \"Nicholas\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- dinner(\"Elizabeth\", \"Christian\", \"Nicholas\").","- carrying_things_around(\"Elizabeth\", \"Latoya\").","- crustaceans(\"Christian\").","- bird(\"Elizabeth\", \"Christian\", \"Latoya\").","baby(\"Samantha\").","film_editing(\"Christian\", \"Nicholas\").","social_activity(\"Elizabeth\", \"Christian\", \"Latoya\").","- duck(\"Samantha\", \"Christian\", \"Latoya\").","chick(\"Elizabeth\", \"Nicholas\", \"Latoya\").","cone(\"Elizabeth\", \"Christian\").","egg(\"Samantha\", \"Christian\", \"Nicholas\").","hen(\"Elizabeth\", \"Nicholas\", \"Latoya\").","- ball(\"Samantha\", \"Christian\", \"Nicholas\").","- clickety_clack(\"Samantha\", \"Elizabeth\", \"Christian\")."],"noisy_facts":["seat_many_people(\"Samantha\", \"Nicholas\").","- facts(\"Elizabeth\", \"Christian\", \"Latoya\").","- cloud_sky(\"Christian\", \"Nicholas\", \"Latoya\").","counter_check(\"Christian\", \"Nicholas\").","satin_bowerbird(\"Samantha\", \"Christian\", \"Nicholas\")."],"min_fact_dicts_for_query":["- dinner(\"Elizabeth\", \"Christian\", \"Nicholas\").","- carrying_things_around(\"Elizabeth\", \"Latoya\").","- duck(\"Samantha\", \"Christian\", \"Latoya\").","egg(\"Samantha\", \"Christian\", \"Nicholas\")."],"noiseless_rules":["- eating(V0, V1, V3) :- - sleep(V2, V3), - animal(V0, V1, V4), not -roll(V0, V2, V4).","- sleep(V2, V3) :- - dinner(V1, V2, V3).","- animal(V0, V1, V4) :- - chicken(V1, V3), - duck(V0, V2, V4), not -chick(V1, V3, V4).","- chicken(V1, V3) :- - carrying_things_around(V1, V4), egg(V0, V2, V3), not -hen(V1, V3, V4).","- cake(V1, V2) :- - carrying_things_around(V1, V4), egg(V0, V2, V3), not -hen(V1, V3, V4).","roll(V0, V2, V4) :- - cream(V0), - action(V3, V4), - ball(V0, V2, V3).","- cream(V2) :- - cake(V1, V2), not shake(V1, V2), not -cone(V1, V2).","- action(V2, V1) :- - shake(V1, V2), not -fly(V1, V2), not -cry(V1, V2).","- shake(V1, V2) :- - crustaceans(V2), film_editing(V2, V3), social_activity(V1, V2, V4).","fly(V1, V2) :- - bird(V1, V2, V4).","cry(V1, V2) :- baby(V0), - clickety_clack(V0, V1, V2)."],"noisy_rules":{"a":["eating(V1, V1, V3) :- chicken(V1, V3), cake(V1, V2).","eating(V1, V1, V2) :- - cry(V1, V2)."],"b":["chicken(V1, V3) :- eating(V0, V1, V3).","- social_activity(V1, V3, V1) :- eating(V0, V1, V3)."],"c":["action(V3, V3) :- sleep(V2, V3).","action(V2, V4) :- - roll(V0, V2, V4), cream(V0), - cry(V1, V2)."],"d":["cream(V0) :- satin_bowerbird(V0, V2, V3).","dinner(V4, V2, V4) :- - roll(V0, V2, V4)."],"e":["- check(V2, V4) :- seat_many_people(V0, V3), counter_check(V2, V3), - cloud_sky(V2, V3, V4).","- fauteuil(V1, V4) :- - facts(V1, V2, V4)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_96_8_10_10_13_0.5_1.0_5_1_2","seed":96,"num_facts":13,"num_rules":11,"num_related_predicates":24,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"birds(\"Anthony\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- kite.","- chicken(\"Anthony\").","game(\"Anthony\").","- nest(\"Anthony\").","- chick(\"Anthony\").","egg(\"Anthony\").","- form_of_entertainment(\"Anthony\").","- bill(\"Anthony\").","most_birds(\"Anthony\").","tiger_beetle(\"Anthony\").","- janissary(\"Anthony\").","- toy(\"Anthony\").","- redtail."],"noisy_facts":["ball(\"Anthony\").","cutaway(\"Samantha\").","- produce_products(\"Michael\").","concert(\"Anthony\").","- mackinaw(\"Samantha\")."],"min_fact_dicts_for_query":["- kite.","- toy(\"Anthony\")."],"noiseless_rules":["birds(V1) :- fly(V1), not -bird(V1), not -activity(V1), not baby(V1), not -girl(V1).","fly(V1) :- - kite, - toy(V1), not redtail.","canary(V1) :- - kite, - toy(V1), not redtail.","- doll(V1) :- - beak(V1), not -singing(V1), not -activity(V1).","- beak(V1) :- - chicken(V1), not bill(V1), not -most_birds(V1), not -tiger_beetle(V1), not janissary(V1).","bird(V2) :- canary(V2).","singing(V2) :- canary(V2).","activity(V1) :- game(V1), not toy(V1).","play(V1) :- game(V1), not toy(V1).","- baby(V1) :- - doll(V1), not nest(V1), not chick(V1), not -egg(V1), not form_of_entertainment(V1).","girl(V1) :- - doll(V1), not -play(V1)."],"noisy_rules":{"a":["- birds(V1) :- beak(V1), - singing(V1), - activity(V1).","- birds(V1) :- - singing(V1), not activity(V1)."],"b":["baby(V1) :- doll(V1), baby(V1), not birds(V1).","- play(V1) :- - singing(V1), not -baby(V1), - birds(V1)."],"c":["chick(V1) :- baby(V1).","- bird(V2) :- - canary(V2)."],"d":["form_of_entertainment(V1) :- not singing(V1), - play(V1), concert(V1).","- play(V1) :- not -doll(V1), ball(V1)."],"e":["- coat(V2) :- - mackinaw(V2), not -cutaway(V2).","womans_clothing(V0) :- - produce_products(V0)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_81_10_10_6_9_0.5_1.0_3_2_3","seed":81,"num_facts":10,"num_rules":11,"num_related_predicates":21,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"seed(\"Paul\", \"Dawn\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- cupule(\"Paul\", \"Dawn\").","- banana(\"Mason\", \"Dawn\").","- social_event(\"Victoria\", \"Paul\").","- whereabouts(\"Paul\", \"Dawn\").","determination(\"Paul\", \"Dawn\").","- crest(\"Paul\", \"Dawn\").","go_bankrupt(\"Paul\", \"Dawn\").","severance(\"Paul\", \"Dawn\").","fruit(\"Paul\", \"Dawn\").","- act(\"Victoria\", \"Dawn\")."],"noisy_facts":["- mail(\"Victoria\", \"Paul\").","- subscript(\"Dawn\").","- basement(\"Paul\", \"Mason\").","- attack_motherboard(\"Mason\", \"Dawn\").","ducks(\"Paul\", \"Dawn\").","- pilot_whale(\"Paul\", \"Dawn\").","- birds(\"Paul\", \"Dawn\")."],"min_fact_dicts_for_query":["- cupule(\"Paul\", \"Dawn\").","- social_event(\"Victoria\", \"Paul\").","- act(\"Victoria\", \"Dawn\")."],"noiseless_rules":["seed(V1, V3) :- nut(V1, V3), acorn(V2, V3), not -edible_fruit(V2, V3).","nut(V1, V3) :- edible_nut(V1, V3), not -determination(V1, V3).","edible_nut(V1, V3) :- - almond(V3), peanut(V1, V3), not -fruit(V1, V3).","- discovery(V1, V3) :- rediscovery(V1, V3), not breakthrough(V1, V3), not -determination(V1, V3).","acorn(V1, V3) :- - cupule(V1, V3), not -determination(V1, V3), not crest(V1, V3).","- almond(V3) :- - event(V1, V3), not -determination(V1, V3).","rediscovery(V1, V3) :- - event(V1, V3), not -determination(V1, V3).","peanut(V1, V3) :- - discovery(V1, V3), not -go_bankrupt(V1, V3), not -severance(V1, V3).","edible_fruit(V2, V3) :- - banana(V2, V3).","- event(V1, V3) :- - social_event(V0, V1), - act(V0, V3).","- breakthrough(V1, V3) :- - whereabouts(V1, V3)."],"noisy_rules":{"a":["- seed(V1, V3) :- - peanut(V1, V3), breakthrough(V1, V3).","- seed(V1, V3) :- not edible_nut(V1, V3), not rediscovery(V1, V3), breakthrough(V1, V3)."],"b":["banana(V2, V3) :- - edible_fruit(V2, V3), breakthrough(V1, V3), not seed(V1, V3).","- fruit(V1, V3) :- not acorn(V2, V3), - edible_fruit(V2, V3), - seed(V1, V3)."],"c":["act(V2, V3) :- discovery(V1, V3), - edible_fruit(V2, V3).","- edible_nut(V1, V3) :- - rediscovery(V1, V3)."],"d":["breakthrough(V1, V3) :- - edible_nut(V1, V3).","breakthrough(V1, V3) :- - rediscovery(V1, V3), - pilot_whale(V1, V3)."],"e":["field_trial(V1, V2) :- - subscript(V3), - basement(V1, V2), not attack_motherboard(V2, V3).","bills(V1, V3) :- - mail(V0, V1), - birds(V1, V3), not -ducks(V1, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_16_8_10_4_6_0.5_1.0_3_1_2","seed":16,"num_facts":6,"num_rules":11,"num_related_predicates":17,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"cause_disease_and_death(\"Marvin\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["steam(\"Marvin\").","white.","pipes(\"Marvin\").","chessman.","- black(\"Marvin\").","- chick(\"Marvin\")."],"noisy_facts":["music(\"Marvin\").","opening(\"Marvin\").","needlework(\"Marvin\")."],"min_fact_dicts_for_query":["white.","pipes(\"Marvin\")."],"noiseless_rules":["cause_disease_and_death(V1) :- cigarettes(V1), not -hot(V1), not -plastic(V1).","cigarettes(V1) :- lighter(V1), not smoke(V1), not tar(V1).","lighter(V1) :- - bird(V1).","hot(V1) :- steam(V1), not -pipes(V1), not chick(V1).","- smoke(V1) :- steam(V1), not -pipes(V1), not chick(V1).","- doll(V1) :- steam(V1), not -pipes(V1), not chick(V1).","- man(V1) :- white, pipes(V1), not -chessman.","crow(V1) :- white, pipes(V1), not -chessman.","plastic(V1) :- - doll(V1).","- tar(V1) :- - man(V1), not black(V1), not chick(V1).","- bird(V0) :- crow(V0)."],"noisy_rules":{"a":["- cause_disease_and_death(V1) :- - plastic(V1).","- cause_disease_and_death(V1) :- - cigarettes(V1)."],"b":["- plastic(V1) :- - hot(V1), not -bird(V1), - cause_disease_and_death(V1).","black(V1) :- - crow(V0), not -tar(V1), - cause_disease_and_death(V1)."],"c":["- steam(V1) :- smoke(V1), bird(V1).","- plastic(V1) :- smoke(V1), not -tar(V1), not -bird(V1)."],"d":["- pipes(V1) :- tar(V1).","- lighter(V1) :- man(V1)."],"e":["chicken_meat(V1) :- not -music(V1), opening(V1).","- creation(V1) :- needlework(V1)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_24_6_8_8_8_0.5_1.0_3_2_3","seed":24,"num_facts":10,"num_rules":9,"num_related_predicates":19,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.4,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" morgue(\"Jerry\", \"Melissa\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["taste_food(\"Jerry\", \"Daniel\").","escalope_de_veau_orloff(\"Ashley\").","five_toes_on_each_foot(\"Melissa\").","plate(\"Melissa\").","calgary(\"Ashley\", \"Melissa\").","statue(\"Daniel\", \"Melissa\").","gastroenterologist(\"Jerry\", \"Melissa\").","educational(\"Ashley\", \"Melissa\").","superiority(\"Jerry\", \"Ashley\").","royal(\"Daniel\", \"Melissa\")."],"noisy_facts":[],"min_fact_dicts_for_query":["taste_food(\"Jerry\", \"Daniel\").","escalope_de_veau_orloff(\"Ashley\").","five_toes_on_each_foot(\"Melissa\").","plate(\"Melissa\").","calgary(\"Ashley\", \"Melissa\").","statue(\"Daniel\", \"Melissa\").","gastroenterologist(\"Jerry\", \"Melissa\").","educational(\"Ashley\", \"Melissa\").","superiority(\"Jerry\", \"Ashley\").","royal(\"Daniel\", \"Melissa\")."],"noiseless_rules":["morgue(V0, V3) :- scissor(V0, V3), classroom(V2, V3), sao_jose_dos_campos(V2, V3).","diamond(V2, V3) :- enter(V2), playing_games_on(V1, V2), statue(V1, V3).","scissor(V0, V3) :- taste_food(V0, V1), superiority(V0, V2), royal(V1, V3).","enter(V2) :- taste_food(V0, V1), superiority(V0, V2), royal(V1, V3).","negation(V3) :- taste_food(V0, V1), superiority(V0, V2), royal(V1, V3).","classroom(V2, V3) :- escalope_de_veau_orloff(V2), gastroenterologist(V0, V3), educational(V2, V3).","catalog(V3) :- escalope_de_veau_orloff(V2), gastroenterologist(V0, V3), educational(V2, V3).","playing_games_on(V3, V3) :- negation(V3), five_toes_on_each_foot(V3), plate(V3).","sao_jose_dos_campos(V2, V3) :- diamond(V2, V3), catalog(V3), calgary(V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_81_9_9_5_6_0.5_1.0_3_1_2","seed":81,"num_facts":8,"num_rules":10,"num_related_predicates":18,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" P9(\"James\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P10(\"Traci\").","P11(\"James\").","P12.","P13.","- P14.","- P15(\"James\").","P16(\"James\").","- P17."],"noisy_facts":[],"min_fact_dicts_for_query":["P12.","P16(\"James\")."],"noiseless_rules":["- P9(V2) :- - P0(V2), not P3(V2), not P6(V2).","- P0(V2) :- P1(V2).","P1(V2) :- P4(V2), not P5(V2), not P15(V2).","P2(V1) :- P10(V1).","- P3(V2) :- P11(V2), not -P16(V2).","P4(V2) :- - P8(V2).","- P5(V1) :- P2(V1), not -P13, not P14.","- P6(V2) :- P12, P16(V2), not P17.","P7(V2) :- P12, P16(V2), not P17.","- P8(V1) :- P7(V1)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_0_10_15_12_15_0.5_1.0_5_3_4","seed":0,"num_facts":16,"num_rules":16,"num_related_predicates":32,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":12,"target_query":"lemon(\"James\", \"Adam\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["uropygium(\"James\", \"Phillip\").","shrapnel(\"Nicole\", \"James\", \"Phillip\").","check_mark(\"Heather\", \"James\", \"Adam\").","oven(\"Nicole\", \"James\", \"Adam\").","acorns(\"Heather\", \"James\", \"Phillip\").","overactivity(\"Nicole\", \"Adam\", \"Phillip\").","chain_mail(\"Nicole\", \"James\", \"Adam\").","pooch(\"Nicole\", \"James\", \"Adam\").","jump_high(\"Nicole\", \"James\", \"Adam\").","vireo(\"Nicole\", \"James\", \"Adam\").","coulterneb(\"Phillip\").","plums(\"Phillip\").","hobby(\"Phillip\").","brushes(\"Phillip\").","parcellation(\"Heather\", \"James\", \"Adam\").","tufted_puffin(\"Heather\", \"James\", \"Phillip\")."],"noisy_facts":[],"min_fact_dicts_for_query":["uropygium(\"James\", \"Phillip\").","shrapnel(\"Nicole\", \"James\", \"Phillip\").","check_mark(\"Heather\", \"James\", \"Adam\").","oven(\"Nicole\", \"James\", \"Adam\").","acorns(\"Heather\", \"James\", \"Phillip\").","overactivity(\"Nicole\", \"Adam\", \"Phillip\").","chain_mail(\"Nicole\", \"James\", \"Adam\").","pooch(\"Nicole\", \"James\", \"Adam\").","jump_high(\"Nicole\", \"James\", \"Adam\").","vireo(\"Nicole\", \"James\", \"Adam\").","coulterneb(\"Phillip\").","plums(\"Phillip\").","hobby(\"Phillip\").","brushes(\"Phillip\").","parcellation(\"Heather\", \"James\", \"Adam\").","tufted_puffin(\"Heather\", \"James\", \"Phillip\")."],"noiseless_rules":["lemon(V2, V3) :- pine_grosbeak(V3), toes(V3, V4), bacon_strip(V0, V2, V3), ping_pong_ball(V2, V3, V4).","pine_grosbeak(V3) :- rock_group(V1, V2, V3).","saddle(V1, V2, V3) :- rock_group(V1, V2, V3).","fog(V4) :- dame(V1), retractable_claws(V1, V2), lens_cortex(V3, V4), acorns(V0, V2, V4), overactivity(V1, V3, V4).","sell_sandwiches(V2, V3) :- dame(V1), retractable_claws(V1, V2), lens_cortex(V3, V4), acorns(V0, V2, V4), overactivity(V1, V3, V4).","toes(V3, V1) :- saddle(V1, V2, V3), distillery(V1, V2, V3), vireo(V1, V2, V3).","dame(V1) :- saddle(V1, V2, V3), distillery(V1, V2, V3), vireo(V1, V2, V3).","bacon_strip(V0, V2, V3) :- uropygium(V2, V4), parcellation(V0, V2, V3), tufted_puffin(V0, V2, V4).","quite(V0, V2, V3) :- uropygium(V2, V4), parcellation(V0, V2, V3), tufted_puffin(V0, V2, V4).","retractable_claws(V1, V2) :- shrapnel(V1, V2, V4).","article(V4) :- shrapnel(V1, V2, V4).","having_lunch(V4, V4) :- fog(V4), coulterneb(V4), plums(V4), hobby(V4), brushes(V4).","rock_group(V2, V2, V3) :- quite(V0, V2, V3), check_mark(V0, V2, V3).","ping_pong_ball(V2, V3, V4) :- sell_sandwiches(V2, V3), quite(V0, V2, V3), article(V4), having_lunch(V0, V4), hobby(V4).","lens_cortex(V3, V3) :- oven(V1, V2, V3), chain_mail(V1, V2, V3), pooch(V1, V2, V3), jump_high(V1, V2, V3), vireo(V1, V2, V3).","distillery(V1, V2, V3) :- oven(V1, V2, V3), chain_mail(V1, V2, V3), pooch(V1, V2, V3), jump_high(V1, V2, V3), vireo(V1, V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_70_5_7_4_7_0.5_1.0_3_2_3","seed":70,"num_facts":5,"num_rules":8,"num_related_predicates":13,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" natural_object(\"Michael\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- procreating(\"Marc\").","- scallop_shell(\"Michael\", \"Marc\").","not_vegetables(\"Crystal\", \"Marc\").","- shell(\"Mitchell\", \"Crystal\").","mancalline(\"Michael\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- procreating(\"Marc\").","- scallop_shell(\"Michael\", \"Marc\").","not_vegetables(\"Crystal\", \"Marc\")."],"noiseless_rules":["- natural_object(V1) :- - carpet(V3), - covering(V0, V1), not auk(V1, V3).","- carpet(V3) :- - procreating(V3), - scallop_shell(V1, V3), not_vegetables(V2, V3).","- valve(V1, V2) :- - procreating(V3), - scallop_shell(V1, V3), not_vegetables(V2, V3).","vesture(V1, V2) :- - procreating(V3), - scallop_shell(V1, V3), not_vegetables(V2, V3).","- P3(V3, V2) :- - valve(V1, V2), - scallop_shell(V1, V3), not -not_vegetables(V2, V3).","- guillemot(V1) :- - valve(V1, V2), - scallop_shell(V1, V3), not -not_vegetables(V2, V3).","- covering(V0, V1) :- vesture(V1, V2), - P3(V0, V2), not shell(V0, V2).","- auk(V1, V2) :- vesture(V1, V2), not guillemot(V1), not -mancalline(V1)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_97_9_11_4_7_0.5_1.0_3_2_3","seed":97,"num_facts":8,"num_rules":12,"num_related_predicates":20,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"fish(\"Joseph\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- diving_petrel(\"Thomas\", \"Valerie\").","dressing_sack(\"Thomas\", \"Valerie\").","- gross_estate.","- taupe(\"Valerie\", \"Joseph\").","little_office(\"Valerie\", \"Joseph\").","- basketball_player(\"Valerie\", \"Joseph\").","- queen(\"Thomas\", \"Valerie\").","- cavy(\"Thomas\", \"Valerie\")."],"noisy_facts":["- barbaric_societies(\"Thomas\", \"Valerie\").","taste(\"Thomas\").","money_storage(\"Shannon\", \"Joseph\").","lineman(\"Thomas\", \"Shannon\").","- getting_minerals(\"Valerie\", \"Joseph\").","tender(\"Valerie\", \"Joseph\")."],"min_fact_dicts_for_query":["- diving_petrel(\"Thomas\", \"Valerie\").","dressing_sack(\"Thomas\", \"Valerie\").","- taupe(\"Valerie\", \"Joseph\").","little_office(\"Valerie\", \"Joseph\")."],"noiseless_rules":["fish(V3) :- down(V0, V1), arcus(V1, V3), not halitus(V1, V3).","down(V0, V1) :- - diving_petrel(V0, V1).","arcus(V1, V3) :- - tea_bread(V1, V3), - feel_good(V2, V3), not -scratching(V2, V3).","- tea_bread(V1, V3) :- - almighty(V0), dressing_sack(V0, V1), little_office(V1, V3).","- agent(V0) :- - almighty(V0), dressing_sack(V0, V1), little_office(V1, V3).","- passenger(V1, V0) :- dressing_sack(V0, V1), not queen(V0, V1), not cavy(V0, V1).","- halitus(V0, V0) :- - almighty(V0), not gross_estate.","- adopt(V0) :- - almighty(V0), not gross_estate.","- feel_good(V3, V3) :- - taupe(V1, V3), not -little_office(V1, V3), not basketball_player(V1, V3).","- playing_cards(V1, V1) :- - taupe(V1, V3), not -little_office(V1, V3), not basketball_player(V1, V3).","scratching(V1, V0) :- - agent(V0), - adopt(V0), - playing_cards(V0, V1).","- almighty(V3) :- - passenger(V1, V3)."],"noisy_rules":{"a":["- fish(V3) :- agent(V0), halitus(V1, V3), - scratching(V2, V3).","- fish(V1) :- - down(V0, V1)."],"b":["agent(V0) :- - down(V0, V1), agent(V0), - fish(V3).","agent(V1) :- - arcus(V1, V3), not -passenger(V1, V3), not fish(V3)."],"c":["- little_office(V1, V1) :- - down(V0, V1).","playing_cards(V1, V1) :- tea_bread(V1, V3)."],"d":["gobbet(V3) :- - down(V0, V1), - arcus(V1, V3), - barbaric_societies(V0, V1).","playing_cards(V3, V1) :- passenger(V1, V3), halitus(V1, V3), - getting_minerals(V1, V3)."],"e":["electric(V0) :- lineman(V0, V2), tender(V1, V3), money_storage(V2, V3).","- romper(V0) :- taste(V0)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_77_7_9_8_10_0.5_1.0_5_3_4","seed":77,"num_facts":10,"num_rules":10,"num_related_predicates":20,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"fuel(\"Robert\", \"Andrew\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["sky(\"Robert\", \"Margaret\", \"Andrew\").","- cars(\"Robert\", \"Margaret\", \"Chad\").","paint(\"Robert\", \"Margaret\", \"Andrew\").","bisque(\"Robert\", \"Margaret\", \"Andrew\").","ride(\"Robert\", \"Chad\").","seat(\"Robert\", \"Chad\").","- find_outside(\"Robert\", \"Chad\").","- flying(\"Robert\", \"Chad\").","crow(\"Robert\", \"Margaret\").","mole(\"Robert\", \"Margaret\")."],"noisy_facts":["antic(\"Robert\", \"Michael\", \"Margaret\").","- twenty_four(\"Robert\", \"Michael\", \"Margaret\").","- evening(\"Robert\", \"Michael\", \"Margaret\").","- woman_clothing(\"Robert\", \"Michael\", \"Margaret\").","paper(\"Robert\", \"Margaret\").","bat(\"Robert\", \"Margaret\", \"Andrew\").","- celebration(\"Margaret\").","- fly(\"Robert\", \"Margaret\").","- dancing(\"Robert\", \"Chad\", \"Andrew\")."],"min_fact_dicts_for_query":["sky(\"Robert\", \"Margaret\", \"Andrew\").","- cars(\"Robert\", \"Margaret\", \"Chad\").","paint(\"Robert\", \"Margaret\", \"Andrew\")."],"noiseless_rules":["fuel(V0, V4) :- crash(V2), black(V2, V3), paint(V0, V2, V4).","- oil(V0, V2) :- planes(V0, V2, V4), not wings(V0, V2, V4), not -airplanes(V0, V2, V4), not -paint(V0, V2, V4), not -bisque(V0, V2, V4).","planes(V0, V2, V4) :- sky(V0, V2, V4).","crash(V2) :- - cars(V0, V2, V3).","- form_of_personal_transportation(V0, V3) :- - cars(V0, V2, V3).","black(V2, V2) :- - oil(V0, V2), not -bird(V0, V2), not -crow(V0, V2), not -mole(V0, V2).","- wings(V2, V2, V2) :- crash(V2), not car(V2).","bird(V2, V2) :- crash(V2), not car(V2).","airplanes(V0, V0, V0) :- - form_of_personal_transportation(V0, V3), not -ride(V0, V3), not -seat(V0, V3), not find_outside(V0, V3), not flying(V0, V3).","- car(V3) :- - form_of_personal_transportation(V0, V3), not -ride(V0, V3), not -seat(V0, V3), not find_outside(V0, V3), not flying(V0, V3)."],"noisy_rules":{"a":["- fuel(V0, V4) :- oil(V0, V2), - planes(V0, V2, V4), - crash(V2), - bird(V0, V2).","- fuel(V0, V4) :- - black(V2, V3), wings(V0, V2, V4), not -car(V2)."],"b":["- crash(V2) :- - planes(V0, V2, V4), form_of_personal_transportation(V0, V3), not airplanes(V0, V2, V4), not -car(V2), - fuel(V0, V4).","form_of_personal_transportation(V0, V3) :- - planes(V0, V2, V4), - black(V2, V3), wings(V0, V2, V4), not fuel(V0, V4)."],"c":["wings(V0, V2, V4) :- form_of_personal_transportation(V0, V3), not bird(V0, V2), - airplanes(V0, V2, V4).","car(V2) :- not -oil(V0, V2), - crash(V2), wings(V0, V2, V4), - airplanes(V0, V2, V4)."],"d":["flying(V0, V3) :- form_of_personal_transportation(V0, V3), not -wings(V0, V2, V4), - airplanes(V0, V2, V4), bat(V0, V2, V4).","- planes(V0, V2, V0) :- oil(V0, V2), not crash(V2), - bird(V0, V2), not fly(V0, V2), not -paper(V0, V2)."],"e":["night_time(V0, V2) :- - evening(V0, V1, V2).","- diversion(V0, V2) :- - celebration(V2), antic(V0, V1, V2), - woman_clothing(V0, V1, V2), - twenty_four(V0, V1, V2), - dancing(V0, V3, V4)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_48_6_6_4_6_0.5_1.0_3_2_3","seed":48,"num_facts":7,"num_rules":7,"num_related_predicates":14,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.4,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" P6(\"Brandon\", \"Brian\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P7(\"Carla\", \"Joseph\").","P8(\"Joseph\", \"Brian\").","P9(\"Brandon\", \"Brian\").","P10(\"Brandon\", \"Joseph\").","- P11(\"Brandon\", \"Brian\").","P12(\"Brandon\", \"Brian\").","- P13(\"Brandon\", \"Brian\")."],"noisy_facts":["P17(\"Brandon\", \"Joseph\").","P20(\"Brandon\", \"Brian\").","P19(\"Carla\", \"Brandon\").","- P14(\"Brandon\", \"Joseph\")."],"min_fact_dicts_for_query":["P7(\"Carla\", \"Joseph\").","P10(\"Brandon\", \"Joseph\").","- P11(\"Brandon\", \"Brian\")."],"noiseless_rules":["- P6(V1, V3) :- P0(V3), P4(V1, V2), not P5(V2, V3).","P0(V3) :- - P1(V2, V3), not P3(V2, V3), not P5(V2, V3).","- P1(V2, V3) :- P7(V0, V2), P10(V1, V2), - P11(V1, V3).","P2(V1, V3) :- P7(V0, V2), P10(V1, V2), - P11(V1, V3).","- P3(V2, V3) :- P8(V2, V3).","P4(V1, V1) :- P2(V1, V3), not -P12(V1, V3), not P13(V1, V3).","- P5(V1, V3) :- P9(V1, V3), not P13(V1, V3)."],"noisy_rules":{"a":["P6(V2, V3) :- P3(V2, V3).","P6(V1, V3) :- P1(V2, V3), - P4(V1, V2)."],"b":["P5(V2, V3) :- - P0(V3), - P4(V1, V2), not -P6(V1, V3).","P5(V1, V3) :- P6(V1, V3)."],"c":["P1(V2, V3) :- - P0(V3), - P4(V1, V2).","- P9(V1, V3) :- P1(V2, V3), - P4(V1, V2), P5(V2, V3)."],"d":["P5(V3, V3) :- - P2(V1, V3).","P15(V1, V3) :- - P2(V1, V3), - P4(V1, V2), not P14(V1, V2)."],"e":["P16(V2) :- P17(V1, V2).","P18(V1, V3) :- P19(V0, V1), P20(V1, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_20_7_11_8_11_0.5_1.0_5_3_4","seed":20,"num_facts":11,"num_rules":12,"num_related_predicates":23,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8333333333333333,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" horse(\"Curtis\", \"Gina\", \"Jacob\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["meat(\"Curtis\").","equine(\"Curtis\", \"Gina\", \"Jacob\").","cut_of_mutton(\"Scott\", \"Gina\", \"Jacob\").","cut_of_pork(\"Scott\", \"Gina\", \"Jacob\").","cut_of_beef(\"Scott\", \"Gina\", \"Jacob\").","saddle(\"Scott\", \"Gina\", \"Jacob\").","- steak(\"Scott\", \"Gina\", \"Jacob\").","fauteuil(\"Jacob\").","- unreality(\"Kenneth\", \"Scott\").","pencil_tip(\"Kenneth\", \"Scott\", \"Jacob\").","- eating_apple(\"Curtis\", \"Scott\", \"Jacob\")."],"noisy_facts":["- bird(\"Curtis\", \"Gina\", \"Jacob\").","- delicious(\"Curtis\", \"Scott\", \"Gina\").","- docking(\"Kenneth\", \"Curtis\", \"Gina\").","appearance(\"Kenneth\", \"Scott\", \"Jacob\").","- sleep(\"Kenneth\", \"Curtis\", \"Gina\")."],"min_fact_dicts_for_query":["meat(\"Curtis\").","equine(\"Curtis\", \"Gina\", \"Jacob\").","cut_of_pork(\"Scott\", \"Gina\", \"Jacob\").","fauteuil(\"Jacob\").","- unreality(\"Kenneth\", \"Scott\")."],"noiseless_rules":["- horse(V1, V3, V4) :- - poll(V0, V4), - withers(V1, V2), - horsemeat(V1, V4), pony(V1, V3, V4), not cut(V1, V3, V4).","- poll(V0, V4) :- meat(V1), fauteuil(V4), - unreality(V0, V2), not -pencil_tip(V0, V2, V4), not eating_apple(V1, V2, V4).","- polo_pony(V1, V2, V4) :- meat(V1), fauteuil(V4), - unreality(V0, V2), not -pencil_tip(V0, V2, V4), not eating_apple(V1, V2, V4).","cayuse(V0, V4) :- meat(V1), fauteuil(V4), - unreality(V0, V2), not -pencil_tip(V0, V2, V4), not eating_apple(V1, V2, V4).","- withers(V1, V2) :- - polo_pony(V1, V2, V4).","- male_horse(V1, V2, V4) :- - polo_pony(V1, V2, V4).","harness_horse(V1, V2, V3) :- equine(V1, V3, V4), cut_of_pork(V2, V3, V4).","dark_meat(V1, V3, V4) :- equine(V1, V3, V4), cut_of_pork(V2, V3, V4).","- horsemeat(V1, V4) :- - withers(V1, V2), - male_horse(V0, V2, V4), harness_horse(V1, V2, V3), not -dark_meat(V1, V3, V4), not -pork(V0, V2, V4).","pony(V1, V3, V4) :- cayuse(V0, V4), dark_meat(V1, V3, V4).","- cut(V2, V3, V4) :- cut_of_mutton(V2, V3, V4), not -cut_of_pork(V2, V3, V4), not -cut_of_beef(V2, V3, V4), not -saddle(V2, V3, V4), not steak(V2, V3, V4).","pork(V3, V2, V4) :- cut_of_mutton(V2, V3, V4), not -cut_of_pork(V2, V3, V4), not -cut_of_beef(V2, V3, V4), not -saddle(V2, V3, V4), not steak(V2, V3, V4)."],"noisy_rules":{"a":["horse(V1, V3, V4) :- poll(V0, V4), not -male_horse(V0, V2, V4), - harness_horse(V1, V2, V3), - dark_meat(V1, V3, V4), not pony(V1, V3, V4).","horse(V1, V3, V4) :- polo_pony(V1, V2, V4), withers(V1, V2), - dark_meat(V1, V3, V4), not pony(V1, V3, V4)."],"b":["- equine(V1, V3, V4) :- - cayuse(V0, V4), horse(V1, V3, V4).","male_horse(V0, V0, V4) :- poll(V0, V4), horse(V1, V3, V4)."],"c":["- harness_horse(V1, V2, V3) :- male_horse(V0, V2, V4), - dark_meat(V1, V3, V4).","- equine(V0, V0, V4) :- not -poll(V0, V4), male_horse(V0, V2, V4)."],"d":["eating_apple(V1, V2, V3) :- - harness_horse(V1, V2, V3), not delicious(V1, V2, V3).","- meat(V1) :- - dark_meat(V1, V3, V4), not -horsemeat(V1, V4), not -cut(V1, V3, V4), not bird(V1, V3, V4)."],"e":["arrival(V1, V2, V3) :- - docking(V0, V1, V3), appearance(V0, V2, V4).","cayman_islands_dollar(V3) :- - sleep(V0, V1, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_67_7_8_3_6_0.5_1.0_5_2_3","seed":67,"num_facts":5,"num_rules":9,"num_related_predicates":14,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"t_bone_steak(\"Katie\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["play(\"Thomas\", \"Rebecca\").","- stiffening(\"Katie\", \"Rebecca\").","social_activity(\"Katie\", \"Rebecca\").","man(\"Thomas\", \"Rebecca\").","- insufflation(\"Thomas\", \"Rebecca\")."],"noisy_facts":[],"min_fact_dicts_for_query":["play(\"Thomas\", \"Rebecca\").","- stiffening(\"Katie\", \"Rebecca\").","social_activity(\"Katie\", \"Rebecca\")."],"noiseless_rules":["t_bone_steak(V1) :- - measure(V1), procedure(V1), work(V3), not -social_activity(V1, V3).","action(V0, V3) :- play(V0, V3).","- cardiac_massage(V0, V3) :- group_action(V0, V3).","- emergency_procedure(V3, V3) :- - cardiac_massage(V0, V3), not -artificial_respiration(V0, V3).","- measure(V1) :- - stiffening(V1, V3).","artificial_respiration(V1, V3) :- - stiffening(V1, V3).","procedure(V1) :- - emergency_procedure(V2, V3), - stiffening(V1, V3), not -social_activity(V1, V3).","work(V3) :- action(V0, V3), social_activity(V1, V3), not -man(V0, V3), not insufflation(V0, V3).","group_action(V0, V3) :- action(V0, V3), social_activity(V1, V3), not -man(V0, V3), not insufflation(V0, V3)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_14_7_10_7_8_0.5_1.0_3_2_3","seed":14,"num_facts":9,"num_rules":11,"num_related_predicates":20,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" dish(\"Diane\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["goulash(\"Danielle\").","nutriment(\"Jennifer\", \"Diane\").","entree(\"Jennifer\", \"Danielle\").","- teaching(\"Diane\", \"Cathy\").","- form_of_entertainment(\"Jennifer\", \"Diane\").","- chicken_soup(\"Diane\", \"Danielle\").","- coleslaw(\"Diane\", \"Danielle\").","- pasta_salad(\"Diane\", \"Danielle\").","salad_bowl(\"Danielle\")."],"noisy_facts":["- toyota(\"Cathy\", \"Danielle\").","claymore(\"Cathy\", \"Danielle\").","- department(\"Jennifer\", \"Cathy\").","employee(\"Diane\", \"Cathy\").","- phone_call.","cash_bar(\"Diane\")."],"min_fact_dicts_for_query":["goulash(\"Danielle\").","nutriment(\"Jennifer\", \"Diane\").","entree(\"Jennifer\", \"Danielle\").","- teaching(\"Diane\", \"Cathy\").","- form_of_entertainment(\"Jennifer\", \"Diane\")."],"noiseless_rules":["- dish(V1) :- salad(V1, V2), soup(V1, V3), not P9(V2, V3).","salad_nicoise(V1, V3) :- goulash(V3), - form_of_entertainment(V0, V1), not chicken_soup(V1, V3).","- stew(V3) :- goulash(V3), - form_of_entertainment(V0, V1), not chicken_soup(V1, V3).","salad(V1, V3) :- salad_nicoise(V1, V3), not coleslaw(V1, V3), not pasta_salad(V1, V3).","- head_sea(V3, V1) :- salad_nicoise(V1, V3), not coleslaw(V1, V3), not pasta_salad(V1, V3).","soup(V1, V3) :- - eggdrop_soup(V1, V3), not chicken_soup(V1, V3).","potato_salad(V1) :- - eggdrop_soup(V1, V3), not chicken_soup(V1, V3).","bowl(V3, V3) :- - stew(V3), not -course(V3), not -salad_bowl(V3).","- eggdrop_soup(V1, V3) :- nutriment(V0, V1), entree(V0, V3), - teaching(V1, V2).","course(V3) :- nutriment(V0, V1), entree(V0, V3), - teaching(V1, V2).","- P9(V2, V0) :- - head_sea(V0, V1), potato_salad(V1), bowl(V1, V2)."],"noisy_rules":{"a":["dish(V3) :- P9(V2, V3).","dish(V1) :- stew(V3), - soup(V1, V3), P9(V2, V3)."],"b":["head_sea(V3, V1) :- - soup(V1, V3), dish(V1).","- nutriment(V3, V1) :- - course(V3), dish(V1)."],"c":["- salad_nicoise(V1, V1) :- - salad(V1, V2).","- salad(V1, V1) :- - potato_salad(V1)."],"d":["- salad_bowl(V1) :- - potato_salad(V1), cash_bar(V1).","head_sea(V3, V3) :- stew(V3), - phone_call."],"e":["broadsword(V2, V3) :- claymore(V2, V3).","- company(V0, V1) :- - department(V0, V2), employee(V1, V2), - toyota(V2, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_6_5_8_4_6_0.5_1.0_3_3_4","seed":6,"num_facts":5,"num_rules":9,"num_related_predicates":14,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"uniat_church(\"Todd\", \"Christopher\", \"Jessica\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["acromicria(\"Christopher\", \"Jack\").","measure_time(\"Todd\", \"Christopher\", \"Jessica\").","- consuming(\"Todd\", \"Jack\").","- power_breakfast(\"Todd\", \"Christopher\", \"Jessica\").","- papal_cross(\"Jill\", \"Christopher\", \"Jack\")."],"noisy_facts":["- saiga(\"Todd\", \"Jill\", \"Christopher\").","body_bag(\"Todd\", \"Jill\", \"Jack\").","- finger_bowl(\"Todd\", \"Christopher\", \"Jessica\").","tapa(\"Jill\", \"Christopher\")."],"min_fact_dicts_for_query":["acromicria(\"Christopher\", \"Jack\").","- power_breakfast(\"Todd\", \"Christopher\", \"Jessica\").","- papal_cross(\"Jill\", \"Christopher\", \"Jack\")."],"noiseless_rules":["uniat_church(V0, V2, V3) :- - mcintosh(V3), sleeping_platform(V0, V3), - wildlife(V0, V1, V2).","- plaything(V0, V1, V2) :- acromicria(V2, V4), - power_breakfast(V0, V2, V3), - papal_cross(V1, V2, V4).","leotard(V2, V3, V4) :- acromicria(V2, V4), - power_breakfast(V0, V2, V3), - papal_cross(V1, V2, V4).","satisfying_hunger(V0, V4) :- acromicria(V2, V4), - power_breakfast(V0, V2, V3), - papal_cross(V1, V2, V4).","- mcintosh(V3) :- - plaything(V0, V1, V2), leotard(V2, V3, V4), not -acromicria(V2, V4).","cup(V0, V2, V3) :- - plaything(V0, V1, V2), leotard(V2, V3, V4), not -acromicria(V2, V4).","- url(V2, V4) :- - plaything(V0, V1, V2), leotard(V2, V3, V4), not -acromicria(V2, V4).","sleeping_platform(V0, V3) :- leotard(V2, V3, V4), cup(V0, V2, V3), not -measure_time(V0, V2, V3).","- wildlife(V0, V4, V2) :- satisfying_hunger(V0, V4), - url(V2, V4), not consuming(V0, V4)."],"noisy_rules":{"a":["- uniat_church(V0, V0, V0) :- - satisfying_hunger(V0, V4).","- uniat_church(V0, V2, V3) :- url(V2, V4), - sleeping_platform(V0, V3), wildlife(V0, V1, V2)."],"b":["- measure_time(V0, V2, V3) :- - satisfying_hunger(V0, V4), - uniat_church(V0, V2, V3).","url(V2, V4) :- - leotard(V2, V3, V4), - uniat_church(V0, V2, V3)."],"c":["- leotard(V2, V3, V1) :- - cup(V0, V2, V3), wildlife(V0, V1, V2).","power_breakfast(V0, V3, V3) :- mcintosh(V3), - sleeping_platform(V0, V3)."],"d":["grenada_dollar(V0, V2, V3) :- - satisfying_hunger(V0, V4), mcintosh(V3), url(V2, V4).","wildlife(V0, V1, V2) :- plaything(V0, V1, V2), - saiga(V0, V1, V2)."],"e":["- birthday_desert(V0, V1, V2) :- body_bag(V0, V1, V4), - finger_bowl(V0, V2, V3).","- ectoproct(V1, V2) :- tapa(V1, V2)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_5_7_8_8_11_0.5_1.0_5_1_2","seed":5,"num_facts":12,"num_rules":9,"num_related_predicates":21,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"animal(\"Mary\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["egg(\"Mary\").","- freudian(\"Mary\").","- shoulders(\"Mary\").","- bottle(\"Mary\").","liquid_crystal(\"Mary\").","medium(\"Mary\").","- bucket(\"Mary\").","pyroligneous_acid(\"Mary\").","- hay(\"Mary\").","thermography(\"Mary\").","- ship_boss(\"Mary\").","- own_washing_machine(\"Mary\")."],"noisy_facts":[],"min_fact_dicts_for_query":["egg(\"Mary\")."],"noiseless_rules":["animal(V2) :- - bird(V2), not horse(V2), not chicken(V2), not duck(V2), not liquid(V2).","- bird(V2) :- nest(V2).","- horse(V2) :- - jockey(V2), not -garden_snail(V2), not hay(V2), not -thermography(V2), not ship_boss(V2).","- chicken(V2) :- egg(V2).","nest(V2) :- egg(V2).","- jockey(V2) :- - liquid(V2), not freudian(V2), not -pyroligneous_acid(V2), not own_washing_machine(V2).","- duck(V2) :- - shoulders(V2), not -pyroligneous_acid(V2).","garden_snail(V2) :- - shoulders(V2), not -pyroligneous_acid(V2).","- liquid(V2) :- - bottle(V2), not -liquid_crystal(V2), not -medium(V2), not bucket(V2), not -pyroligneous_acid(V2)."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_24_5_6_6_8_0.5_1.0_5_3_4","seed":24,"num_facts":8,"num_rules":7,"num_related_predicates":15,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"seed(\"James\", \"Tiffany\", \"Frank\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- owed(\"James\", \"Tiffany\", \"Frank\").","- plaster(\"James\", \"Tiffany\").","- edible_nut(\"James\", \"Tiffany\").","cembra_nut(\"James\", \"Tiffany\").","fruit(\"James\", \"Tiffany\").","- palm_nut(\"James\", \"Tiffany\").","tibet(\"Tiffany\", \"Frank\").","- connect(\"Tiffany\", \"Annette\", \"Frank\")."],"noisy_facts":["- museums(\"James\", \"Tiffany\").","- cupule(\"James\", \"Tiffany\", \"Frank\").","botanical_garden(\"Jason\", \"Tiffany\").","- wing(\"Annette\").","- vertical_tail(\"James\", \"Annette\").","aileron(\"Jason\", \"Tiffany\").","spoiler(\"Jason\", \"James\").","- home_study(\"James\", \"Tiffany\", \"Frank\")."],"min_fact_dicts_for_query":["- owed(\"James\", \"Tiffany\", \"Frank\").","- plaster(\"James\", \"Tiffany\").","- edible_nut(\"James\", \"Tiffany\").","tibet(\"Tiffany\", \"Frank\")."],"noiseless_rules":["seed(V1, V2, V4) :- - safflower_seed(V1, V4), buckeye(V1, V2, V4), not -acorn(V1, V2, V4).","- safflower_seed(V1, V4) :- edible_seed(V2), - nut(V0, V3), - plaster(V1, V2), tibet(V2, V4), not connect(V2, V3, V4).","buckeye(V1, V2, V4) :- - owed(V1, V2, V4).","acorn(V1, V2, V2) :- - plaster(V1, V2), not edible_nut(V1, V2).","edible_seed(V2) :- - plaster(V1, V2), not edible_nut(V1, V2).","ivory_nut(V2, V1) :- - plaster(V1, V2), not edible_nut(V1, V2).","- nut(V3, V3) :- ivory_nut(V2, V3), - edible_nut(V1, V2), not -cembra_nut(V1, V2), not -fruit(V1, V2), not palm_nut(V1, V2)."],"noisy_rules":{"a":["- seed(V1, V2, V4) :- safflower_seed(V1, V4), - buckeye(V1, V2, V4), - ivory_nut(V2, V3), nut(V0, V3).","- seed(V2, V2, V2) :- - edible_seed(V2)."],"b":["edible_nut(V1, V2) :- - seed(V1, V2, V4).","- fruit(V1, V2) :- safflower_seed(V1, V4), - acorn(V1, V2, V4), - edible_seed(V2), not seed(V1, V2, V4)."],"c":["- fruit(V1, V2) :- safflower_seed(V1, V4), - buckeye(V1, V2, V4), - acorn(V1, V2, V4), - edible_seed(V2), nut(V0, V3).","- ivory_nut(V2, V3) :- not -safflower_seed(V1, V4), - acorn(V1, V2, V4), nut(V0, V3)."],"d":["- acorn(V1, V2, V4) :- - buckeye(V1, V2, V4), - ivory_nut(V2, V3), - cupule(V1, V2, V4).","- ivory_nut(V2, V4) :- safflower_seed(V1, V4), not buckeye(V1, V2, V4), - edible_seed(V2), - home_study(V1, V2, V4)."],"e":["- airfoil(V0, V2, V3) :- - wing(V3), spoiler(V0, V1), aileron(V0, V2), not vertical_tail(V1, V3).","- lancashire(V0, V2) :- botanical_garden(V0, V2), - museums(V1, V2)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_70_6_6_4_7_0.5_1.0_3_2_3","seed":70,"num_facts":7,"num_rules":7,"num_related_predicates":14,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"petting(\"Garrett\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["women(\"Jackie\", \"Garrett\").","bed(\"Garrett\", \"Robert\").","house(\"Jackie\", \"Garrett\").","outer_space(\"Garrett\", \"Robert\").","meeting_with_friends(\"Jackie\", \"Robert\").","orgasms(\"Jackie\", \"Robert\").","friction(\"Garrett\", \"Aaron\")."],"noisy_facts":[],"min_fact_dicts_for_query":["women(\"Jackie\", \"Garrett\").","bed(\"Garrett\", \"Robert\").","house(\"Jackie\", \"Garrett\").","outer_space(\"Garrett\", \"Robert\").","meeting_with_friends(\"Jackie\", \"Robert\").","orgasms(\"Jackie\", \"Robert\").","friction(\"Garrett\", \"Aaron\")."],"noiseless_rules":["petting(V1) :- rub(V3), furniture(V0, V1), cost_lot_of_money(V1, V3).","polish(V1, V2) :- women(V0, V1), orgasms(V0, V2), friction(V1, V3).","rub(V2) :- polish(V1, V2), making_into_jewelry(V1, V2), outer_space(V1, V2).","furniture(V2, V1) :- polish(V1, V2), bed(V1, V2).","silver(V1, V2) :- polish(V1, V2), bed(V1, V2).","making_into_jewelry(V1, V2) :- silver(V0, V2), outer_space(V1, V2), meeting_with_friends(V0, V2).","cost_lot_of_money(V1, V1) :- furniture(V0, V1), house(V0, V1)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_0_5_6_1_4_0.5_1.0_3_3_4","seed":0,"num_facts":2,"num_rules":7,"num_related_predicates":9,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"nerds(\"Philip\", \"Nicole\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- oman(\"Stephanie\", \"Philip\", \"Nicole\").","- negotiator(\"Stephanie\", \"Philip\", \"Nicole\")."],"noisy_facts":["- pillbox(\"Stephanie\").","- snowball(\"Stephanie\", \"Philip\", \"Nicole\").","- cement(\"Courtney\", \"Stephanie\", \"Philip\").","nonevent(\"Stephanie\", \"Philip\", \"Nicole\").","carry_stuff(\"Courtney\", \"Philip\", \"Nicole\").","light_brown(\"Stephanie\", \"Philip\").","please_humans(\"Courtney\", \"Stephanie\", \"Nicole\")."],"min_fact_dicts_for_query":["- oman(\"Stephanie\", \"Philip\", \"Nicole\").","- negotiator(\"Stephanie\", \"Philip\", \"Nicole\")."],"noiseless_rules":["nerds(V2, V3) :- - atms(V1), - real_estate(V1, V2, V3), not -originally_from_murrysville_pennsylvania(V1, V2, V3).","- atms(V1) :- - anaerobe(V1, V2, V3), not -originally_from_murrysville_pennsylvania(V1, V2, V3), not negotiator(V1, V2, V3).","moslem(V2) :- - anaerobe(V1, V2, V3), not -originally_from_murrysville_pennsylvania(V1, V2, V3), not negotiator(V1, V2, V3).","- anaerobe(V1, V2, V3) :- - val_kilmer(V1, V2, V3), not negotiator(V1, V2, V3).","- real_estate(V1, V2, V3) :- moslem(V2), - negotiator(V1, V2, V3).","originally_from_murrysville_pennsylvania(V1, V2, V3) :- - oman(V1, V2, V3).","- val_kilmer(V1, V2, V3) :- - oman(V1, V2, V3)."],"noisy_rules":{"a":["- nerds(V2, V3) :- atms(V1), real_estate(V1, V2, V3).","- nerds(V2, V3) :- anaerobe(V1, V2, V3), not -real_estate(V1, V2, V3)."],"b":["- moslem(V2) :- - nerds(V2, V3).","- moslem(V2) :- val_kilmer(V1, V2, V3), not nerds(V2, V3)."],"c":["- moslem(V2) :- anaerobe(V1, V2, V3), real_estate(V1, V2, V3), not originally_from_murrysville_pennsylvania(V1, V2, V3).","atms(V2) :- - moslem(V2)."],"d":["anaerobe(V1, V2, V3) :- atms(V1), val_kilmer(V1, V2, V3), - pillbox(V1).","- frosting(V2, V3, V2) :- - originally_from_murrysville_pennsylvania(V1, V2, V3), not snowball(V1, V2, V3)."],"e":["vegetation(V1) :- not -light_brown(V1, V2), - cement(V0, V1, V2).","species_of_fish(V0, V1, V3) :- please_humans(V0, V1, V3), not -carry_stuff(V0, V2, V3), nonevent(V1, V2, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_15_9_10_10_12_0.5_1.0_5_2_3","seed":15,"num_facts":14,"num_rules":11,"num_related_predicates":25,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" domestic_fowl(\"John\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["insecta(\"John\").","duck(\"Judy\", \"John\").","- chicken(\"Jonathan\", \"Juan\").","- yellowbelly_marmot(\"Judy\", \"John\").","- squirrel(\"John\").","- mouse(\"Jonathan\", \"Juan\").","agouti(\"Jonathan\", \"John\").","rat(\"Juan\", \"John\").","faroe_islands(\"Judy\", \"John\").","- charophyceae(\"Jonathan\", \"Judy\").","rhizopoda(\"Jonathan\", \"Juan\").","- hamamelidae(\"Juan\", \"John\").","zygomycetes(\"Juan\", \"John\").","diner(\"Jonathan\", \"Juan\")."],"noisy_facts":[],"min_fact_dicts_for_query":["insecta(\"John\").","duck(\"Judy\", \"John\").","- yellowbelly_marmot(\"Judy\", \"John\").","- squirrel(\"John\").","- mouse(\"Jonathan\", \"Juan\").","- charophyceae(\"Jonathan\", \"Judy\").","rhizopoda(\"Jonathan\", \"Juan\")."],"noiseless_rules":["- domestic_fowl(V3) :- - dorking(V0), poultry(V3), not food_fish(V0, V3).","- class(V1, V3) :- insecta(V3), - charophyceae(V0, V1), rhizopoda(V0, V2), not hamamelidae(V2, V3), not -zygomycetes(V2, V3).","- sockeye(V0) :- insecta(V3), - charophyceae(V0, V1), rhizopoda(V0, V2), not hamamelidae(V2, V3), not -zygomycetes(V2, V3).","- rodent(V2, V3) :- marmot(V3), - squirrel(V3), - mouse(V0, V2), not -agouti(V0, V3), not -rat(V2, V3).","- dorking(V2) :- - class(V1, V3), - rodent(V2, V3), not eating(V1, V3), not blackout(V1, V3), not -faroe_islands(V1, V3).","- salmon(V0) :- - sockeye(V0).","poultry(V3) :- duck(V1, V3).","- eating(V2, V0) :- - chicken(V0, V2), not -rhizopoda(V0, V2), not -diner(V0, V2).","marmot(V3) :- - yellowbelly_marmot(V1, V3).","- blackout(V1, V3) :- - yellowbelly_marmot(V1, V3).","- food_fish(V3, V3) :- - salmon(V3), not -marmot(V3)."],"noisy_rules":{}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_12_6_6_6_9_0.5_1.0_5_3_4","seed":12,"num_facts":8,"num_rules":7,"num_related_predicates":15,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"dinner_bell(\"Robert\", \"Heather\", \"Christine\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- eating_vegetables(\"Heather\").","- fuel(\"Robert\", \"Heather\", \"Christine\").","- muntjac(\"Robert\", \"Heather\", \"Christine\").","- further(\"Robert\", \"Heather\", \"Christine\").","rats(\"Robert\", \"Heather\", \"Nicholas\").","change_of_integrity(\"Robert\", \"Heather\", \"Christine\").","- hinayanist(\"Robert\", \"Heather\", \"Christine\").","meliorism(\"Heather\", \"Thomas\", \"Nicholas\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- eating_vegetables(\"Heather\").","- muntjac(\"Robert\", \"Heather\", \"Christine\").","change_of_integrity(\"Robert\", \"Heather\", \"Christine\").","- hinayanist(\"Robert\", \"Heather\", \"Christine\").","meliorism(\"Heather\", \"Thomas\", \"Nicholas\")."],"noiseless_rules":["dinner_bell(V0, V1, V2) :- music_group(V1), having_fun_with_friends(V0, V4), - muntjac(V0, V1, V2), not further(V0, V1, V2), not -rats(V0, V1, V4).","music_group(V1) :- - deer(V1, V2).","- deer(V1, V2) :- - mule_deer(V0, V1, V2), not -fawn(V0, V1, V2), not muntjac(V0, V1, V2).","- mule_deer(V0, V1, V2) :- - staying_fit(V0, V1, V2), not -fawn(V0, V1, V2).","- staying_fit(V0, V1, V2) :- - eating_vegetables(V1), change_of_integrity(V0, V1, V2), - hinayanist(V0, V1, V2), meliorism(V1, V3, V4).","having_fun_with_friends(V0, V0) :- - staying_fit(V0, V1, V2), not fuel(V0, V1, V2).","fawn(V0, V1, V2) :- - staying_fit(V0, V1, V2), not fuel(V0, V1, V2)."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_54_9_14_13_14_0.5_1.0_5_3_4","seed":54,"num_facts":17,"num_rules":15,"num_related_predicates":32,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":" temperament(\"Robyn\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- chain_tongs(\"Maria\").","roach(\"Kyle\").","women(\"Amanda\", \"Kyle\", \"Shannon\").","jax(\"Amanda\", \"Kyle\", \"Shannon\").","common_canary(\"Amanda\", \"Robyn\").","- gapped_scale(\"Maria\", \"Amanda\", \"Kyle\").","- torpedo(\"Amanda\", \"Kyle\", \"Shannon\").","- record_images(\"Amanda\", \"Shannon\", \"Robyn\").","economy_of_scale(\"Amanda\", \"Kyle\").","earth(\"Amanda\", \"Kyle\").","- mountain_beaver(\"Amanda\", \"Kyle\").","wind(\"Amanda\", \"Kyle\").","snack_food(\"Maria\", \"Amanda\", \"Shannon\").","eating_ones_fill(\"Maria\", \"Amanda\").","- brocket(\"Maria\", \"Kyle\").","cold(\"Maria\", \"Shannon\", \"Robyn\").","want_sweet(\"Amanda\", \"Shannon\", \"Robyn\")."],"noisy_facts":["- racing(\"Amanda\", \"Kyle\", \"Shannon\").","- victimless_crime(\"Maria\", \"Kyle\", \"Robyn\").","googly(\"Maria\", \"Amanda\", \"Shannon\").","- sea_coal.","cock(\"Amanda\", \"Shannon\", \"Robyn\").","- boot_camp(\"Maria\", \"Kyle\", \"Shannon\")."],"min_fact_dicts_for_query":["- chain_tongs(\"Maria\").","roach(\"Kyle\").","women(\"Amanda\", \"Kyle\", \"Shannon\").","jax(\"Amanda\", \"Kyle\", \"Shannon\").","common_canary(\"Amanda\", \"Robyn\").","- gapped_scale(\"Maria\", \"Amanda\", \"Kyle\").","- torpedo(\"Amanda\", \"Kyle\", \"Shannon\").","eating_ones_fill(\"Maria\", \"Amanda\").","- brocket(\"Maria\", \"Kyle\").","cold(\"Maria\", \"Shannon\", \"Robyn\")."],"noiseless_rules":["- temperament(V4) :- - exercise(V0, V1), - fish(V0, V4), thermometer(V2, V3), not -assembly_hall(V0, V1, V2), not -snack_food(V0, V1, V3).","- exercise(V0, V1) :- band(V0, V4), - dolphin(V1, V2), living_space(V0, V2, V3), not -sock(V0, V2, V4), not -conceptualization(V2, V3, V4).","band(V0, V4) :- - chain_tongs(V0), eating_ones_fill(V0, V1), - brocket(V0, V2), cold(V0, V3, V4), not -want_sweet(V1, V3, V4).","meteor_shower(V1, V2) :- - chain_tongs(V0), eating_ones_fill(V0, V1), - brocket(V0, V2), cold(V0, V3, V4), not -want_sweet(V1, V3, V4).","- fish(V0, V4) :- roach(V2), common_canary(V1, V4), - gapped_scale(V0, V1, V2), - torpedo(V1, V2, V3), not record_images(V1, V3, V4).","dodger(V0, V2, V4) :- roach(V2), common_canary(V1, V4), - gapped_scale(V0, V1, V2), - torpedo(V1, V2, V3), not record_images(V1, V3, V4).","- dolphin(V1, V2) :- women(V1, V2, V3).","thermometer(V2, V3) :- jax(V1, V2, V3).","enjoyment(V1) :- jax(V1, V2, V3).","living_space(V0, V2, V2) :- dodger(V0, V2, V4), not pluck(V0, V2, V4).","assembly_hall(V2, V1, V2) :- meteor_shower(V1, V2), not -economy_of_scale(V1, V2), not -earth(V1, V2), not mountain_beaver(V1, V2), not -wind(V1, V2).","sock(V2, V2, V2) :- meteor_shower(V1, V2), not -economy_of_scale(V1, V2), not -earth(V1, V2), not mountain_beaver(V1, V2), not -wind(V1, V2).","- pluck(V2, V2, V2) :- meteor_shower(V1, V2), not -economy_of_scale(V1, V2), not -earth(V1, V2), not mountain_beaver(V1, V2), not -wind(V1, V2).","- acanthocephalan(V1, V2, V1) :- meteor_shower(V1, V2), not -economy_of_scale(V1, V2), not -earth(V1, V2), not mountain_beaver(V1, V2), not -wind(V1, V2).","conceptualization(V2, V3, V4) :- enjoyment(V1), - acanthocephalan(V0, V3, V4), - gapped_scale(V0, V1, V2)."],"noisy_rules":{"a":["temperament(V4) :- acanthocephalan(V0, V3, V4).","temperament(V2) :- - meteor_shower(V1, V2)."],"b":["- dodger(V0, V2, V4) :- pluck(V0, V2, V4), not -temperament(V4).","- jax(V4, V2, V0) :- pluck(V0, V2, V4), not -temperament(V4)."],"c":["- meteor_shower(V1, V2) :- exercise(V0, V1), - band(V0, V4), not dodger(V0, V2, V4), - thermometer(V2, V3), - enjoyment(V1).","- conceptualization(V2, V2, V4) :- - assembly_hall(V0, V1, V2), - sock(V0, V2, V4)."],"d":["brocket(V0, V2) :- fish(V0, V4), - sock(V0, V2, V4), not victimless_crime(V0, V2, V4).","torpedo(V4, V4, V4) :- fish(V0, V4), - sea_coal."],"e":["- hair_care(V3, V4) :- cock(V1, V3, V4).","dessertspoon(V0, V1, V2) :- googly(V0, V1, V3), - boot_camp(V0, V2, V3), - racing(V1, V2, V3)."]}},"num_min_facts_for_query":10,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_2_6_8_3_6_0.5_1.0_3_1_2","seed":2,"num_facts":5,"num_rules":9,"num_related_predicates":14,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" burning(\"Daniel\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["insemination.","believe_god_exist(\"Daniel\").","high_rise(\"Daniel\").","mesohippus(\"Daniel\").","- cone."],"noisy_facts":[],"min_fact_dicts_for_query":["insemination.","high_rise(\"Daniel\")."],"noiseless_rules":["- burning(V0) :- - jaeger(V0), not harrier_eagle(V0), not -believe_god_exist(V0).","- coast(V0) :- insemination, high_rise(V0), not cone.","enjoying_food(V0) :- insemination, high_rise(V0), not cone.","- jaeger(V0) :- - coast(V0), not sickbed(V0), not -stallion(V0).","- hearing_organ(V0) :- - coast(V0), not sickbed(V0), not -stallion(V0).","- harrier_eagle(V0) :- - hearing_organ(V0), not think_piece(V0), not -mesohippus(V0).","- sickbed(V0) :- believe_god_exist(V0), not -high_rise(V0), not -mesohippus(V0).","stallion(V1) :- enjoying_food(V1).","- think_piece(V1) :- enjoying_food(V1)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_98_6_8_8_9_0.5_1.0_5_2_3","seed":98,"num_facts":11,"num_rules":9,"num_related_predicates":20,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P8(\"John\", \"Raymond\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P9(\"Raymond\").","- P10(\"John\", \"William\").","P11(\"John\", \"Lisa\").","- P12(\"John\").","- P13(\"John\").","P14(\"John\").","P15(\"John\").","- P16(\"John\").","P17(\"Raymond\").","- P18(\"John\", \"William\").","P19(\"Raymond\", \"William\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P9(\"Raymond\").","P17(\"Raymond\").","- P18(\"John\", \"William\")."],"noiseless_rules":["P8(V0, V2) :- P0(V0, V2), not -P5(V0, V2), not P6(V0, V2).","P0(V0, V2) :- P9(V2), P17(V2), - P18(V0, V3), not -P19(V2, V3).","P1(V0) :- P9(V2), P17(V2), - P18(V0, V3), not -P19(V2, V3).","P2(V0, V3) :- - P10(V0, V3).","- P3(V0) :- - P10(V0, V3).","P4(V0, V3) :- P1(V0), P2(V0, V3), not P12(V0), not P13(V0), not -P14(V0).","P5(V0, V0) :- - P3(V0), P4(V0, V1), not P7(V0), not -P15(V0), not P16(V0).","- P6(V0, V1) :- P4(V0, V1), not -P11(V0, V1).","- P7(V0) :- P4(V0, V1), not -P11(V0, V1)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_52_5_8_5_8_0.5_1.0_5_3_4","seed":52,"num_facts":6,"num_rules":9,"num_related_predicates":15,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" wings(\"Chad\", \"Shelly\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- slow_down(\"Chad\", \"Lawrence\", \"Shelly\").","stool(\"Chad\", \"Heather\", \"Melinda\").","- recombinant(\"Heather\", \"Melinda\", \"Shelly\").","- find_outside(\"Chad\", \"Lawrence\", \"Heather\").","- drive(\"Chad\", \"Lawrence\", \"Heather\").","- horse(\"Chad\", \"Lawrence\", \"Melinda\")."],"noisy_facts":["- doll(\"Chad\", \"Lawrence\", \"Heather\").","street(\"Lawrence\", \"Heather\").","- voice_opinions(\"Lawrence\", \"Heather\", \"Shelly\").","customers(\"Chad\", \"Lawrence\", \"Melinda\")."],"min_fact_dicts_for_query":["- slow_down(\"Chad\", \"Lawrence\", \"Shelly\").","stool(\"Chad\", \"Heather\", \"Melinda\").","- recombinant(\"Heather\", \"Melinda\", \"Shelly\")."],"noiseless_rules":["- wings(V0, V4) :- airplanes(V0), seat(V1, V2), - race(V1, V4), cars(V0, V2, V3).","airplanes(V0) :- wing(V2, V4), - train(V0, V1, V3), not recombinant(V2, V3, V4).","seat(V1, V2) :- - slow_down(V0, V1, V4), stool(V0, V2, V3).","- car(V0, V1, V3) :- - slow_down(V0, V1, V4), stool(V0, V2, V3).","- oil(V0, V1, V2) :- - slow_down(V0, V1, V4), stool(V0, V2, V3).","- race(V1, V4) :- - car(V0, V1, V3), - recombinant(V2, V3, V4), not horse(V0, V1, V3).","wing(V2, V4) :- - car(V0, V1, V3), - recombinant(V2, V3, V4), not horse(V0, V1, V3).","cars(V0, V2, V3) :- - oil(V0, V1, V2), stool(V0, V2, V3), - recombinant(V2, V3, V4), not find_outside(V0, V1, V2), not drive(V0, V1, V2).","- train(V0, V1, V3) :- - oil(V0, V1, V2), stool(V0, V2, V3), - recombinant(V2, V3, V4), not find_outside(V0, V1, V2), not drive(V0, V1, V2)."],"noisy_rules":{"a":["wings(V0, V4) :- - airplanes(V0), race(V1, V4), - wing(V2, V4).","wings(V0, V3) :- car(V0, V1, V3), - cars(V0, V2, V3)."],"b":["recombinant(V0, V3, V4) :- - airplanes(V0), race(V1, V4), train(V0, V1, V3), not -wings(V0, V4).","car(V0, V1, V3) :- train(V0, V1, V3), wings(V0, V4)."],"c":["- cars(V0, V2, V3) :- - airplanes(V0), oil(V0, V1, V2), race(V1, V4), train(V0, V1, V3).","slow_down(V0, V1, V1) :- - airplanes(V0), car(V0, V1, V3), - cars(V0, V2, V3), train(V0, V1, V3)."],"d":["train(V1, V1, V2) :- - seat(V1, V2).","- cars(V1, V2, V2) :- - seat(V1, V2), not -street(V1, V2)."],"e":["pay_merchants_with_money(V1) :- customers(V0, V1, V3), - voice_opinions(V1, V2, V4).","girly(V0, V1, V2) :- - doll(V0, V1, V2)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_97_10_12_10_12_0.5_1.0_5_3_4","seed":97,"num_facts":14,"num_rules":13,"num_related_predicates":27,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.6666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" animal_tissue(\"Manuel\", \"Jason\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["rockets(\"Manuel\", \"Michael\").","- wagram(\"Manuel\", \"Michael\", \"Billy\").","- greenbelt(\"Michael\", \"Elizabeth\").","- bid(\"Manuel\", \"Billy\", \"Elizabeth\").","golden_gram(\"Manuel\", \"Billy\", \"Elizabeth\").","- account(\"Manuel\", \"Billy\", \"Elizabeth\").","jump_through_flaming_hoops(\"Manuel\", \"Billy\", \"Elizabeth\").","lioness(\"Manuel\", \"Billy\", \"Elizabeth\").","- outerwear(\"Manuel\", \"Jason\").","democracy(\"Manuel\", \"Jason\").","- ranch(\"Manuel\", \"Elizabeth\").","- create_paint(\"Manuel\", \"Billy\", \"Elizabeth\").","- canal(\"Michael\", \"Jason\", \"Elizabeth\").","- arson(\"Michael\", \"Billy\", \"Elizabeth\")."],"noisy_facts":["- skull(\"Michael\", \"Jason\").","patent(\"Manuel\", \"Michael\").","animal_product(\"Manuel\", \"Elizabeth\").","- ostrich(\"Michael\", \"Billy\", \"Elizabeth\").","- house_part(\"Jason\", \"Billy\").","- blinds(\"Michael\", \"Jason\", \"Elizabeth\").","maid(\"Manuel\", \"Michael\", \"Elizabeth\")."],"min_fact_dicts_for_query":["rockets(\"Manuel\", \"Michael\").","- greenbelt(\"Michael\", \"Elizabeth\").","- outerwear(\"Manuel\", \"Jason\").","democracy(\"Manuel\", \"Jason\").","- ranch(\"Manuel\", \"Elizabeth\").","- create_paint(\"Manuel\", \"Billy\", \"Elizabeth\").","- canal(\"Michael\", \"Jason\", \"Elizabeth\")."],"noiseless_rules":["- animal_tissue(V0, V2) :- zebra(V0, V4), coatdress(V1, V2, V3), not small_house_sometimes(V1, V3, V4).","zebra(V0, V4) :- - iranian(V0, V1), nigerian(V0, V1), - outerwear(V0, V2), democracy(V0, V2), - ranch(V0, V4).","coatdress(V1, V2, V3) :- - ameloblast(V0), - create_paint(V0, V3, V4), - canal(V1, V2, V4), not arson(V1, V3, V4).","- mystification(V0, V2, V3) :- dairyman(V0, V2, V3).","- iranian(V0, V1) :- rockets(V0, V1).","- small_house_sometimes(V1, V3, V4) :- - wagram(V0, V1, V3), jump_through_flaming_hoops(V0, V3, V4).","range(V0) :- - wagram(V0, V1, V3), jump_through_flaming_hoops(V0, V3, V4).","electronic_equipment(V1, V4) :- - greenbelt(V1, V4).","- tint(V4) :- - bid(V0, V3, V4), not -golden_gram(V0, V3, V4), not account(V0, V3, V4), not -jump_through_flaming_hoops(V0, V3, V4), not -lioness(V0, V3, V4).","nigerian(V0, V1) :- - iranian(V0, V1), not -range(V0).","dairyman(V0, V0, V1) :- - iranian(V0, V1), not -range(V0).","- store_shelf(V0, V1, V0) :- - iranian(V0, V1), not -range(V0).","- ameloblast(V0) :- - mystification(V0, V2, V3), electronic_equipment(V1, V4), not tint(V2), not store_shelf(V0, V1, V2)."],"noisy_rules":{"a":["animal_tissue(V0, V1) :- - range(V0), - electronic_equipment(V1, V4).","animal_tissue(V0, V0) :- ameloblast(V0)."],"b":["mystification(V0, V2, V0) :- animal_tissue(V0, V2).","store_shelf(V0, V2, V2) :- animal_tissue(V0, V2)."],"c":["- nigerian(V0, V1) :- - electronic_equipment(V1, V4), - dairyman(V0, V2, V3).","- jump_through_flaming_hoops(V0, V3, V3) :- mystification(V0, V2, V3), - nigerian(V0, V1)."],"d":["arson(V0, V4, V4) :- - zebra(V0, V4).","- zebra(V0, V4) :- iranian(V0, V1), small_house_sometimes(V1, V3, V4), not -patent(V0, V1)."],"e":["attending_classical_concert(V2, V4) :- - blinds(V1, V2, V4).","arrive_late(V1) :- not -animal_product(V0, V4), - skull(V1, V2), not house_part(V2, V3), maid(V0, V1, V4), - ostrich(V1, V3, V4)."]}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_33_6_9_9_11_0.5_1.0_5_2_3","seed":33,"num_facts":11,"num_rules":10,"num_related_predicates":21,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"motorway(\"Vanessa\", \"Gregory\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- course(\"Vanessa\", \"Gregory\").","night_raven(\"Vanessa\", \"Gregory\").","human_language(\"Vanessa\", \"Gregory\").","- number_of_songs_on(\"Vanessa\", \"Gregory\").","- cross_river(\"Vanessa\", \"Gregory\").","- crappie(\"Vanessa\", \"Gregory\").","- believe_in_god(\"Patrick\", \"Gregory\").","funeral(\"Patrick\", \"Gregory\").","gold_dust(\"Vanessa\", \"Gregory\").","economic_and_social_council(\"Vanessa\", \"Gregory\").","point_of_honor(\"Vanessa\", \"Gregory\")."],"noisy_facts":["- rain_date(\"Kristen\", \"Patrick\").","- tundra_swan(\"Gregory\").","mathematical_symbol(\"Kristen\", \"Patrick\").","semiconductor(\"Gregory\").","- jazz(\"Patrick\", \"Gregory\").","- pheasant(\"Kristen\", \"Vanessa\").","song(\"Vanessa\", \"Gregory\").","- comb_out(\"Patrick\", \"Gregory\")."],"min_fact_dicts_for_query":["- course(\"Vanessa\", \"Gregory\").","night_raven(\"Vanessa\", \"Gregory\").","- crappie(\"Vanessa\", \"Gregory\")."],"noiseless_rules":["motorway(V2, V3) :- - highlighter_pen(V2), coffee_table_book(V0, V3), not change(V2, V3).","- highlighter_pen(V2) :- gift(V1, V3), - crappie(V2, V3), not -gold_dust(V2, V3).","lumbar_vertebra(V3) :- gift(V1, V3), - crappie(V2, V3), not -gold_dust(V2, V3).","gift(V3, V3) :- - course(V2, V3), not -human_language(V2, V3), not number_of_songs_on(V2, V3), not cross_river(V2, V3), not crappie(V2, V3).","feminine(V3, V3) :- - course(V2, V3), not -human_language(V2, V3), not number_of_songs_on(V2, V3), not cross_river(V2, V3), not crappie(V2, V3).","coffee_table_book(V3, V3) :- night_raven(V2, V3), not -gold_dust(V2, V3), not -economic_and_social_council(V2, V3), not -point_of_honor(V2, V3).","- noise_pollution(V2, V3) :- night_raven(V2, V3), not -gold_dust(V2, V3), not -economic_and_social_council(V2, V3), not -point_of_honor(V2, V3).","acorn(V3, V3) :- night_raven(V2, V3), not -gold_dust(V2, V3), not -economic_and_social_council(V2, V3), not -point_of_honor(V2, V3).","- change(V3, V3) :- lumbar_vertebra(V3), - noise_pollution(V1, V3), not fog(V1, V3), not believe_in_god(V1, V3), not -funeral(V1, V3).","- fog(V1, V3) :- feminine(V0, V1), acorn(V1, V3)."],"noisy_rules":{"a":["- motorway(V2, V3) :- - gift(V1, V3), - feminine(V0, V1), not acorn(V1, V3), change(V2, V3), not -fog(V1, V3).","- motorway(V2, V3) :- - coffee_table_book(V0, V3), - acorn(V1, V3), change(V2, V3)."],"b":["- gold_dust(V2, V3) :- - lumbar_vertebra(V3), - feminine(V0, V1), - motorway(V2, V3).","- human_language(V2, V3) :- - motorway(V2, V3)."],"c":["- funeral(V1, V3) :- - coffee_table_book(V0, V3), noise_pollution(V1, V3).","number_of_songs_on(V2, V3) :- highlighter_pen(V2), - gift(V1, V3), not -noise_pollution(V1, V3), - acorn(V1, V3), not -fog(V1, V3)."],"d":["- acorn(V1, V3) :- - feminine(V0, V1), - coffee_table_book(V0, V3), not rain_date(V0, V1).","- human_language(V2, V3) :- highlighter_pen(V2), not lumbar_vertebra(V3), noise_pollution(V1, V3), - jazz(V1, V3)."],"e":["ram(V0, V1) :- mathematical_symbol(V0, V1).","- cent(V1, V3) :- semiconductor(V3), - tundra_swan(V3), - pheasant(V0, V2), - comb_out(V1, V3), song(V2, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_19_8_9_8_11_0.5_1.0_5_3_4","seed":19,"num_facts":11,"num_rules":10,"num_related_predicates":21,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.5714285714285716,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"blade(\"Joseph\", \"Jeremy\", \"Toni\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["mohican(\"Cheryl\").","conveyer_belt(\"Jeremy\", \"Toni\", \"Cheryl\").","promiser(\"Joseph\", \"Jeremy\", \"Toni\").","strengthener(\"Jacqueline\", \"Joseph\").","pea_soup(\"Jacqueline\", \"Joseph\").","hunt_zebras(\"Toni\", \"Cheryl\").","crown(\"Jacqueline\", \"Joseph\", \"Toni\").","dwarf(\"Joseph\", \"Jeremy\", \"Toni\").","shell(\"Joseph\", \"Jeremy\", \"Toni\").","perianth(\"Joseph\", \"Jeremy\", \"Toni\").","mealie(\"Toni\")."],"noisy_facts":[],"min_fact_dicts_for_query":["mohican(\"Cheryl\").","conveyer_belt(\"Jeremy\", \"Toni\", \"Cheryl\").","promiser(\"Joseph\", \"Jeremy\", \"Toni\").","strengthener(\"Jacqueline\", \"Joseph\").","pea_soup(\"Jacqueline\", \"Joseph\").","hunt_zebras(\"Toni\", \"Cheryl\").","crown(\"Jacqueline\", \"Joseph\", \"Toni\").","dwarf(\"Joseph\", \"Jeremy\", \"Toni\").","shell(\"Joseph\", \"Jeremy\", \"Toni\").","perianth(\"Joseph\", \"Jeremy\", \"Toni\").","mealie(\"Toni\")."],"noiseless_rules":["blade(V1, V2, V3) :- american_frogbit(V3), firm(V1, V2, V3).","draft_board(V0, V1, V3) :- mohican(V4), strengthener(V0, V1), pea_soup(V0, V1), hunt_zebras(V3, V4), crown(V0, V1, V3).","genocide(V3) :- mohican(V4), strengthener(V0, V1), pea_soup(V0, V1), hunt_zebras(V3, V4), crown(V0, V1, V3).","american_frogbit(V3) :- draft_board(V0, V1, V3), cantle(V0, V1, V3).","contrail(V3, V3, V3) :- genocide(V3), humate(V3), mealie(V3).","cantle(V1, V1, V3) :- contrail(V1, V2, V3), webbed_feet(V1, V2, V3), dwarf(V1, V2, V3), shell(V1, V2, V3), perianth(V1, V2, V3).","yellow_bird(V3) :- conveyer_belt(V2, V3, V4).","webbed_feet(V1, V2, V3) :- promiser(V1, V2, V3), shell(V1, V2, V3).","firm(V1, V2, V3) :- promiser(V1, V2, V3), shell(V1, V2, V3).","humate(V3) :- genocide(V3), yellow_bird(V3), firm(V1, V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_75_10_12_7_10_0.5_1.0_3_0_1","seed":75,"num_facts":11,"num_rules":13,"num_related_predicates":24,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":12,"target_query":" P12.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P13.","- P14.","P15.","- P16.","P17.","P18.","P19.","- P20.","- P21.","- P22.","P23."],"noisy_facts":["- P29.","P26.","- P25.","- P28.","- P31.","P33.","- P32.","- P24."],"min_fact_dicts_for_query":["- P14."],"noiseless_rules":["- P12 :- - P4, not P8, not P21.","P0 :- P6, not P13.","P1 :- - P14, not P22, not -P23.","- P2 :- - P14, not P22, not -P23.","P3 :- - P14, not P22, not -P23.","- P4 :- P1, not -P7, not P11.","P5 :- - P2, not -P18, not -P19.","P6 :- - P2, not -P18, not -P19.","P7 :- P0, not -P5, not P9.","- P8 :- P3, not -P6, not -P17.","- P9 :- P10, not P20, not P21.","P10 :- P15, not P21.","- P11 :- - P16."],"noisy_rules":{"a":["P12 :- - P6, P9.","P12 :- - P1, not P5, not P10."],"b":["P22 :- not P5, P12.","P13 :- P12."],"c":["- P6 :- P2.","- P5 :- - P0, P4, not -P8."],"d":["- P3 :- - P5, not P24.","P9 :- - P5, - P25."],"e":["- P27 :- P26, not P28, not P29.","P30 :- - P31, not P32, not -P33."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_28_5_4_2_4_0.5_1.0_5_1_2","seed":28,"num_facts":5,"num_rules":5,"num_related_predicates":10,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"etcher(\"Erica\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["seabird(\"Carrie\").","wading_bird(\"Carrie\").","emergency_procedure(\"Erica\").","getting_job.","beak."],"noisy_facts":[],"min_fact_dicts_for_query":["seabird(\"Carrie\").","wading_bird(\"Carrie\").","emergency_procedure(\"Erica\").","getting_job.","beak."],"noiseless_rules":["etcher(V0) :- earning_money(V0), procedure(V0), bird(V0).","aquatic_bird(V2) :- seabird(V2), wading_bird(V2).","earning_money(V2) :- wading_bird(V2), getting_job, beak.","procedure(V0) :- emergency_procedure(V0).","bird(V2) :- aquatic_bird(V2), beak."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_40_9_11_5_7_0.5_1.0_5_1_2","seed":40,"num_facts":8,"num_rules":12,"num_related_predicates":20,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"record_player(\"Emma\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["back.","traveler.","- lion_cub(\"Matthew\").","- entrance(\"Matthew\").","see_at_night(\"Matthew\").","- trombiculid(\"Matthew\").","hawaii_volcanoes_national_park(\"Matthew\").","latisimus_dorsi(\"Emma\")."],"noisy_facts":[],"min_fact_dicts_for_query":["back.","latisimus_dorsi(\"Emma\")."],"noiseless_rules":["record_player(V1) :- - garden_party(V1), not mosquito(V1), not nuthatch(V1).","- garden_party(V1) :- back, latisimus_dorsi(V1).","lambskin(V1) :- back, latisimus_dorsi(V1).","change(V0) :- lambskin(V0), not -fight_cats(V0).","- mosquito(V1) :- record(V1), not -zairean(V1).","record(V1) :- - res_gestae(V1).","- time_draft(V0) :- lambskin(V0), not -traveler.","- spade(V0) :- lambskin(V0), not -traveler.","zairean(V1) :- change(V1), not time_draft(V1), not -latisimus_dorsi(V1).","- nuthatch(V1) :- - spade(V1).","- res_gestae(V1) :- - spade(V1).","fight_cats(V0) :- - lion_cub(V0), not entrance(V0), not -see_at_night(V0), not trombiculid(V0), not -hawaii_volcanoes_national_park(V0)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_91_9_11_10_13_0.5_1.0_5_2_3","seed":91,"num_facts":13,"num_rules":12,"num_related_predicates":25,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P11(\"Julie\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P12.","- P13(\"Julie\", \"Susan\").","- P14(\"Eddie\", \"Susan\").","P15(\"Lisa\").","P16(\"Lisa\").","- P17(\"Lisa\").","P18(\"Lisa\").","- P19(\"Eddie\", \"Julie\").","P20(\"Julie\", \"Lisa\").","P21(\"Lisa\", \"Susan\").","P22(\"Lisa\", \"Susan\").","- P23(\"Julie\", \"Susan\").","- P24(\"Lisa\", \"Susan\")."],"noisy_facts":["P26(\"Eddie\", \"Lisa\").","- P28(\"Lisa\").","- P27(\"Eddie\", \"Lisa\").","- P30(\"Lisa\", \"Susan\").","P32(\"Eddie\", \"Susan\").","P25(\"Eddie\", \"Lisa\")."],"min_fact_dicts_for_query":["P12.","- P17(\"Lisa\").","- P19(\"Eddie\", \"Julie\").","P20(\"Julie\", \"Lisa\").","P21(\"Lisa\", \"Susan\")."],"noiseless_rules":["- P11(V1) :- P0(V2), - P19(V0, V1), P20(V1, V2), P21(V2, V3), not -P22(V2, V3).","P0(V2) :- - P4(V1), P6(V0, V2), - P8(V0, V3), not P9(V1, V2).","- P1(V2) :- P12, - P17(V2).","- P2(V2, V2) :- P12, - P17(V2).","- P3(V2, V2) :- P12, - P17(V2).","- P4(V2) :- - P1(V2), not -P15(V2), not -P16(V2), not P17(V2), not -P18(V2).","- P5(V2, V2) :- - P1(V2), not -P15(V2), not -P16(V2), not P17(V2), not -P18(V2).","P6(V1, V2) :- - P5(V1, V2).","P7(V1, V2) :- - P13(V1, V3), - P23(V1, V3), - P24(V2, V3).","- P8(V0, V3) :- - P2(V0, V3), not P10(V0, V3), not P14(V0, V3).","- P9(V3, V0) :- - P10(V0, V3), not P14(V0, V3).","- P10(V1, V2) :- - P3(V1, V2), not -P7(V1, V2)."],"noisy_rules":{"a":["P11(V1) :- P9(V1, V2).","P11(V1) :- - P7(V1, V2), not -P8(V0, V3), P9(V1, V2), P10(V0, V3)."],"b":["- P6(V0, V2) :- - P6(V0, V2), P11(V1).","- P21(V2, V3) :- P4(V1), P5(V1, V2), - P6(V0, V2), P8(V0, V3), P11(V1)."],"c":["P24(V2, V3) :- P3(V1, V2), P4(V1), P8(V0, V3).","- P18(V2) :- P1(V2), P3(V1, V2)."],"d":["P19(V0, V1) :- P3(V1, V2), - P6(V0, V2), P8(V0, V3), P25(V0, V2), not -P26(V0, V2).","P10(V0, V3) :- - P0(V2), - P6(V0, V2), P8(V0, V3), P9(V1, V2), not P27(V0, V2)."],"e":["P29(V2) :- - P28(V2), - P30(V2, V3).","- P31(V0, V3) :- P32(V0, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_67_7_9_7_8_0.5_1.0_5_3_4","seed":67,"num_facts":9,"num_rules":10,"num_related_predicates":19,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P9(\"Jeffrey\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P10(\"Micheal\", \"Jeffrey\").","P11(\"Carlos\").","P12(\"Jeffrey\", \"Carlos\").","- P13(\"Micheal\", \"Jeffrey\", \"Carlos\").","- P14(\"Matthew\", \"Carlos\").","- P15(\"Micheal\", \"Jeffrey\").","P16(\"Micheal\", \"Jeffrey\").","P17(\"Micheal\", \"Jeffrey\", \"Carlos\").","P18(\"Jeffrey\")."],"noisy_facts":["- P20(\"Matthew\", \"Jeffrey\").","P26(\"Matthew\", \"Carlos\", \"Shane\").","P19(\"Micheal\", \"Jeffrey\").","- P21(\"Matthew\", \"Jeffrey\").","- P30(\"Matthew\", \"Jeffrey\").","P28(\"Micheal\", \"Carlos\", \"Shane\").","P22(\"Matthew\", \"Jeffrey\").","P31(\"Matthew\", \"Micheal\", \"Carlos\").","- P27(\"Micheal\", \"Jeffrey\", \"Carlos\").","P25(\"Matthew\", \"Micheal\", \"Carlos\").","- P24(\"Carlos\", \"Shane\")."],"min_fact_dicts_for_query":["- P10(\"Micheal\", \"Jeffrey\").","P11(\"Carlos\").","P12(\"Jeffrey\", \"Carlos\").","- P14(\"Matthew\", \"Carlos\").","- P15(\"Micheal\", \"Jeffrey\")."],"noiseless_rules":["P9(V2) :- P4(V3), P6(V0, V4), P7(V1, V4), P12(V2, V3), not P13(V1, V2, V3).","P0(V1, V2) :- - P10(V1, V2).","- P1(V2) :- - P10(V1, V2).","- P2(V1, V2) :- P0(V1, V2), not -P8(V1, V2), not P10(V1, V2).","- P3(V2) :- - P2(V0, V2), not -P5(V0, V2).","P4(V3) :- P11(V3), - P14(V0, V3), - P15(V1, V2), not -P16(V1, V2), not -P17(V1, V2, V3).","P5(V0, V2) :- P11(V3), - P14(V0, V3), - P15(V1, V2), not -P16(V1, V2), not -P17(V1, V2, V3).","P6(V2, V2) :- - P3(V2).","P7(V2, V2) :- - P1(V2), not -P18(V2).","P8(V2, V2) :- - P1(V2), not -P18(V2)."],"noisy_rules":{"a":["- P9(V2) :- P1(V2).","- P9(V2) :- P3(V2), - P4(V3), - P6(V0, V4), - P8(V1, V2)."],"b":["- P5(V2, V2) :- - P9(V2).","P3(V2) :- - P9(V2)."],"c":["P13(V1, V2, V0) :- - P0(V1, V2), - P6(V0, V4).","- P0(V1, V2) :- P2(V0, V2), - P4(V3), not P6(V0, V4), - P7(V1, V4), not P8(V1, V2)."],"d":["P15(V1, V2) :- - P0(V1, V2), P1(V2), not -P19(V1, V2).","- P0(V2, V2) :- P3(V2), not P5(V0, V2), - P20(V0, V2), not P21(V0, V2), P22(V0, V2)."],"e":["P23(V0, V2) :- - P24(V3, V4), P25(V0, V1, V3), P26(V0, V3, V4), - P27(V1, V2, V3), not -P28(V1, V3, V4).","- P29(V1) :- - P30(V0, V2), P31(V0, V1, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_65_9_13_13_15_0.5_1.0_5_2_3","seed":65,"num_facts":16,"num_rules":14,"num_related_predicates":30,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" nutriment(\"Lisa\", \"Susan\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["pasta_salad(\"Justin\", \"Susan\").","- measure(\"Susan\").","- baked_alaska(\"Lisa\").","- cirrostratus(\"Lisa\", \"Courtney\").","pallet(\"Lisa\", \"Susan\").","- old_cd(\"Justin\", \"Susan\").","case(\"Susan\").","- plate(\"Lisa\", \"Susan\").","storage_ring(\"Justin\", \"Courtney\").","canister(\"Courtney\", \"Susan\").","soup(\"Justin\", \"Susan\").","- escalope_de_veau_orloff(\"Justin\", \"Susan\").","P26(\"Justin\", \"Susan\").","blancmange(\"Susan\").","- pudding(\"Lisa\", \"Courtney\").","- tiramisu(\"Lisa\", \"Susan\")."],"noisy_facts":["big_ears(\"Justin\", \"Susan\").","- can(\"Justin\").","- ice_cream_soda(\"Lisa\", \"Justin\").","pod(\"Justin\")."],"min_fact_dicts_for_query":["pasta_salad(\"Justin\", \"Susan\").","- measure(\"Susan\").","- baked_alaska(\"Lisa\").","- cirrostratus(\"Lisa\", \"Courtney\").","pallet(\"Lisa\", \"Susan\").","case(\"Susan\").","- plate(\"Lisa\", \"Susan\").","storage_ring(\"Justin\", \"Courtney\").","blancmange(\"Susan\").","- pudding(\"Lisa\", \"Courtney\")."],"noiseless_rules":["- nutriment(V0, V3) :- entree(V1), - container(V0, V2), dessert(V0, V3), not -dinner(V1, V2).","entree(V1) :- - bowl(V1), - dish(V1), - cirrostratus(V0, V2), pallet(V0, V3), not old_cd(V1, V3).","empty(V1, V3) :- pasta_salad(V1, V3).","salad(V3) :- pasta_salad(V1, V3).","appetizer(V1, V3) :- empty(V1, V3).","course(V1, V3) :- empty(V1, V3).","- container(V0, V2) :- - measure(V3), case(V3), - plate(V0, V3), storage_ring(V1, V2), not -canister(V2, V3).","P6(V1, V2) :- - measure(V3), case(V3), - plate(V0, V3), storage_ring(V1, V2), not -canister(V2, V3).","stew(V1, V3) :- - measure(V3), case(V3), - plate(V0, V3), storage_ring(V1, V2), not -canister(V2, V3).","- bowl(V1) :- appetizer(V1, V2), not -P6(V1, V2).","- dish(V1) :- salad(V3), stew(V1, V3), not -soup(V1, V3), not escalope_de_veau_orloff(V1, V3), not -P26(V1, V3).","dessert(V0, V3) :- - baked_alaska(V0), blancmange(V3), - pudding(V0, V2), not tiramisu(V0, V3).","chicken(V3) :- - baked_alaska(V0), blancmange(V3), - pudding(V0, V2), not tiramisu(V0, V3).","dinner(V1, V1) :- course(V1, V3), chicken(V3), case(V3), - plate(V0, V3)."],"noisy_rules":{"a":["nutriment(V3, V3) :- - salad(V3), - course(V1, V3), not -dish(V1).","nutriment(V0, V3) :- - entree(V1), not empty(V1, V3), - dessert(V0, V3)."],"b":["plate(V0, V3) :- - dinner(V1, V2), nutriment(V0, V3).","dish(V1) :- dish(V1), nutriment(V0, V3)."],"c":["- course(V1, V3) :- - entree(V1), - appetizer(V1, V2), - dessert(V0, V3).","- course(V1, V2) :- container(V0, V2), - dinner(V1, V2)."],"d":["container(V3, V3) :- - empty(V1, V3), not stew(V1, V3), bowl(V1), not -pod(V1), not can(V1).","- P26(V1, V1) :- bowl(V1)."],"e":["superiority(V0, V1) :- - ice_cream_soda(V0, V1).","- statue(V1, V3) :- big_ears(V1, V3)."]}},"num_min_facts_for_query":10,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_26_10_12_11_11_0.5_1.0_5_3_4","seed":26,"num_facts":16,"num_rules":13,"num_related_predicates":29,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.4444444444444446,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"knives(\"Elizabeth\", \"Kristin\", \"Evan\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["owl(\"Olivia\", \"Michael\", \"Kristin\").","emmenagogue(\"Olivia\", \"Evan\").","recapitulation(\"Olivia\", \"Michael\", \"Evan\").","lac(\"Olivia\", \"Elizabeth\", \"Evan\").","- foggy(\"Elizabeth\", \"Kristin\").","- salad(\"Michael\", \"Kristin\").","- record_player(\"Kristin\", \"Evan\").","- bruin(\"Olivia\", \"Elizabeth\", \"Michael\").","- brown(\"Olivia\", \"Elizabeth\", \"Evan\").","woodwind_family(\"Michael\", \"Evan\").","hard(\"Kristin\", \"Evan\").","- vegetarian(\"Olivia\", \"Elizabeth\", \"Michael\").","eat_things_off_of(\"Olivia\", \"Elizabeth\", \"Evan\").","screw(\"Olivia\", \"Michael\").","- leaf_beetle(\"Olivia\", \"Michael\").","- impressing_others(\"Olivia\", \"Michael\")."],"noisy_facts":["drove(\"Elizabeth\", \"Michael\").","cassican(\"Elizabeth\", \"Kristin\").","bantam(\"Michael\", \"Kristin\").","- saturniid(\"Michael\", \"Kristin\", \"Evan\").","- production_cost(\"Olivia\", \"Elizabeth\", \"Evan\").","toll_highway(\"Elizabeth\", \"Michael\").","- biological_cells(\"Michael\", \"Evan\").","- beak(\"Olivia\", \"Elizabeth\", \"Michael\").","aerosol(\"Olivia\", \"Michael\", \"Evan\").","parameter(\"Olivia\", \"Elizabeth\", \"Evan\")."],"min_fact_dicts_for_query":["owl(\"Olivia\", \"Michael\", \"Kristin\").","emmenagogue(\"Olivia\", \"Evan\").","recapitulation(\"Olivia\", \"Michael\", \"Evan\").","lac(\"Olivia\", \"Elizabeth\", \"Evan\").","- foggy(\"Elizabeth\", \"Kristin\").","- salad(\"Michael\", \"Kristin\").","- record_player(\"Kristin\", \"Evan\").","- bruin(\"Olivia\", \"Elizabeth\", \"Michael\").","woodwind_family(\"Michael\", \"Evan\").","hard(\"Kristin\", \"Evan\").","- vegetarian(\"Olivia\", \"Elizabeth\", \"Michael\")."],"noiseless_rules":["knives(V1, V3, V4) :- path(V3), - box_kite(V0, V1, V2), - drug(V0, V2, V4), not -hold_things(V2, V3, V4).","- leading_edge(V0, V1, V4) :- - reproductive_system(V0, V1, V4).","path(V3) :- owl(V0, V2, V3).","kill(V0, V2) :- owl(V0, V2, V3).","- box_kite(V0, V1, V2) :- - square_foot(V0, V2), - ridden(V0, V1, V4), not priest(V0, V2, V4).","- drug(V0, V2, V4) :- emmenagogue(V0, V4), woodwind_family(V2, V4), hard(V3, V4), - vegetarian(V0, V1, V2), not -eat_things_off_of(V0, V1, V4).","- farm(V0, V2, V4) :- recapitulation(V0, V2, V4).","- reproductive_system(V0, V1, V4) :- lac(V0, V1, V4).","- square_foot(V0, V2) :- - leading_edge(V0, V1, V4), - farm(V0, V2, V4), not seal_bomb(V0, V1, V4).","- ridden(V0, V1, V4) :- - foggy(V1, V3), - salad(V2, V3), - record_player(V3, V4), - bruin(V0, V1, V2), not brown(V0, V1, V4).","- seal_bomb(V0, V1, V4) :- - foggy(V1, V3), - salad(V2, V3), - record_player(V3, V4), - bruin(V0, V1, V2), not brown(V0, V1, V4).","hold_things(V2, V0, V2) :- kill(V0, V2), not -screw(V0, V2), not leaf_beetle(V0, V2), not impressing_others(V0, V2).","- priest(V0, V2, V0) :- kill(V0, V2), not -screw(V0, V2), not leaf_beetle(V0, V2), not impressing_others(V0, V2)."],"noisy_rules":{"a":["- knives(V1, V3, V4) :- box_kite(V0, V1, V2), - hold_things(V2, V3, V4).","- knives(V1, V3, V4) :- not -leading_edge(V0, V1, V4), ridden(V0, V1, V4), seal_bomb(V0, V1, V4), - hold_things(V2, V3, V4)."],"b":["- woodwind_family(V1, V4) :- - knives(V1, V3, V4).","reproductive_system(V0, V1, V4) :- seal_bomb(V0, V1, V4), - knives(V1, V3, V4)."],"c":["leaf_beetle(V0, V4) :- leading_edge(V0, V1, V4), not -seal_bomb(V0, V1, V4).","- path(V1) :- leading_edge(V0, V1, V4), reproductive_system(V0, V1, V4), not -square_foot(V0, V2), not -ridden(V0, V1, V4), priest(V0, V2, V4)."],"d":["- hard(V4, V4) :- leading_edge(V0, V1, V4), - production_cost(V0, V1, V4).","- emmenagogue(V0, V4) :- leading_edge(V0, V1, V4), - kill(V0, V2), not -ridden(V0, V1, V4), - hold_things(V2, V3, V4), not -parameter(V0, V1, V4)."],"e":["- kings_hat(V0, V2) :- not -toll_highway(V1, V2), not -drove(V1, V2), - beak(V0, V1, V2).","- spoon(V0, V2, V4) :- cassican(V1, V3), bantam(V2, V3), - biological_cells(V2, V4), aerosol(V0, V2, V4), - saturniid(V2, V3, V4)."]}},"num_min_facts_for_query":11,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_54_8_12_12_14_0.5_1.0_5_2_3","seed":54,"num_facts":15,"num_rules":13,"num_related_predicates":28,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.857142857142857,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":" reading(\"Michael\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["hen(\"James\", \"Nicholas\").","- paper(\"Nicholas\").","lay(\"Michael\", \"Cody\").","- news(\"James\", \"Cody\").","- shrapnel(\"James\", \"Cody\").","rock_group(\"James\", \"Cody\").","- lemon(\"James\", \"Cody\").","- nest(\"James\", \"Nicholas\").","duck(\"James\", \"Nicholas\").","- chick(\"James\", \"Nicholas\").","- desk(\"James\", \"Michael\").","note(\"Nicholas\", \"Michael\").","ballpoint_pen(\"Nicholas\", \"Cody\").","print(\"Michael\", \"Cody\").","- library(\"Nicholas\", \"Michael\")."],"noisy_facts":[],"min_fact_dicts_for_query":["hen(\"James\", \"Nicholas\").","- paper(\"Nicholas\").","- desk(\"James\", \"Michael\").","note(\"Nicholas\", \"Michael\").","ballpoint_pen(\"Nicholas\", \"Cody\")."],"noiseless_rules":["- reading(V2) :- scrambled(V0, V1), - writing(V0, V2), not article(V0, V2), not library(V1, V2).","scrambled(V0, V1) :- chicken(V0, V1), - quite(V0, V3), not egg(V1, V3).","chicken(V0, V1) :- hen(V0, V1).","- egg_layer(V0, V1) :- hen(V0, V1).","- writing(V0, V2) :- - paper(V1), - desk(V0, V2), note(V1, V2), ballpoint_pen(V1, V3), not -print(V2, V3).","- quite(V0, V3) :- - paper(V1), - desk(V0, V2), note(V1, V2), ballpoint_pen(V1, V3), not -print(V2, V3).","- canary(V1, V2) :- - paper(V1), - desk(V0, V2), note(V1, V2), ballpoint_pen(V1, V3), not -print(V2, V3).","- planes(V0, V3) :- - paper(V1), - desk(V0, V2), note(V1, V2), ballpoint_pen(V1, V3), not -print(V2, V3).","bird(V1, V2) :- chicken(V0, V1), - canary(V1, V2), not nest(V0, V1), not -duck(V0, V1), not chick(V0, V1).","- chicken_egg(V2, V3) :- lay(V2, V3).","- article(V0, V0) :- - planes(V0, V3), not news(V0, V3), not shrapnel(V0, V3), not -rock_group(V0, V3), not lemon(V0, V3).","- humpty_dumpty(V3) :- - planes(V0, V3), not news(V0, V3), not shrapnel(V0, V3), not -rock_group(V0, V3), not lemon(V0, V3).","- egg(V1, V3) :- - egg_layer(V0, V1), - quite(V0, V3), bird(V1, V2), not chicken_egg(V2, V3), not humpty_dumpty(V3)."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_39_9_11_5_8_0.5_1.0_3_2_3","seed":39,"num_facts":9,"num_rules":12,"num_related_predicates":21,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.125,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"vireo(\"Cindy\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["nut(\"Edward\", \"Cindy\").","paint(\"Edward\", \"Amy\").","- nest.","- flag(\"Michelle\").","- chicken(\"Edward\", \"Cindy\").","- lying_on(\"Edward\", \"Cindy\").","poodle(\"Edward\", \"Amy\").","pooch(\"Michelle\", \"Amy\").","- party(\"Edward\", \"Michelle\")."],"noisy_facts":[],"min_fact_dicts_for_query":["nut(\"Edward\", \"Cindy\").","- flag(\"Michelle\").","- chicken(\"Edward\", \"Cindy\").","poodle(\"Edward\", \"Amy\")."],"noiseless_rules":["vireo(V3) :- - social_activity(V3), - dog(V0, V2), not lying_on(V0, V3).","plums(V0, V3) :- brushes(V2), baby(V0, V2), - chicken(V0, V3).","animal(V0) :- brushes(V2), baby(V0, V2), - chicken(V0, V3).","- fruit(V3) :- plums(V0, V3), not -seed(V0, V3), not -apple(V0, V3).","seed(V0, V3) :- nut(V0, V3).","brushes(V2) :- baby(V0, V2), not -paint(V0, V2).","baby(V0, V0) :- seed(V0, V3), not nest.","apple(V0, V3) :- seed(V0, V3), not nest.","embryo(V0, V3) :- seed(V0, V3), not nest.","- eating(V0, V0) :- animal(V0), - fruit(V3), not chicken(V0, V3).","- social_activity(V1) :- embryo(V0, V1), - eating(V0, V2), not party(V0, V1).","- dog(V0, V2) :- - flag(V1), poodle(V0, V2), not -pooch(V1, V2)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_51_10_10_10_12_0.5_1.0_3_3_4","seed":51,"num_facts":16,"num_rules":11,"num_related_predicates":27,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"P10(\"Robert\", \"Randy\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P11(\"Jasmine\", \"Randy\").","P12(\"Jasmine\", \"Randy\").","- P13(\"Kelly\", \"Randy\").","P14(\"Robert\", \"Jasmine\", \"Maria\").","P15(\"Jasmine\").","P16(\"Robert\", \"Maria\").","- P17(\"Jasmine\", \"Randy\").","- P18(\"Robert\", \"Kelly\", \"Randy\").","- P19(\"Robert\", \"Randy\", \"Maria\").","- P20(\"Kelly\", \"Jasmine\", \"Maria\").","P21(\"Robert\", \"Kelly\", \"Maria\").","P22(\"Kelly\", \"Jasmine\", \"Maria\").","- P23(\"Kelly\", \"Jasmine\", \"Maria\").","- P24(\"Kelly\", \"Jasmine\", \"Maria\").","P25(\"Kelly\", \"Randy\").","P26(\"Jasmine\", \"Randy\", \"Maria\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P11(\"Jasmine\", \"Randy\").","P12(\"Jasmine\", \"Randy\").","- P13(\"Kelly\", \"Randy\").","P15(\"Jasmine\").","- P17(\"Jasmine\", \"Randy\").","- P18(\"Robert\", \"Kelly\", \"Randy\").","- P19(\"Robert\", \"Randy\", \"Maria\").","- P20(\"Kelly\", \"Jasmine\", \"Maria\").","P21(\"Robert\", \"Kelly\", \"Maria\").","- P23(\"Kelly\", \"Jasmine\", \"Maria\")."],"noiseless_rules":["P10(V0, V3) :- P0(V1, V4), P1(V3, V4), - P3(V0, V2, V4).","P0(V1, V4) :- P2(V0, V1), - P6(V2, V4), not -P9(V0, V2, V4).","P1(V3, V4) :- P11(V2, V3), P21(V0, V1, V4), not -P22(V1, V2, V4).","P2(V0, V1) :- P12(V2, V3), - P17(V2, V3), - P18(V0, V1, V3).","- P3(V0, V2, V4) :- - P13(V1, V3), - P19(V0, V3, V4), - P20(V1, V2, V4).","- P4(V0, V4) :- - P3(V0, V2, V4), not -P14(V0, V2, V4).","- P5(V2, V0, V4) :- - P3(V0, V2, V4), not -P14(V0, V2, V4).","- P6(V2, V4) :- P15(V2), - P23(V1, V2, V4), not P24(V1, V2, V4).","- P7(V0, V4) :- P16(V0, V4), P25(V1, V3), P26(V2, V3, V4).","- P8(V0, V0, V3) :- P1(V3, V4), - P4(V0, V4).","P9(V0, V2, V4) :- - P5(V2, V3, V4), - P7(V0, V4), not P8(V0, V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":10,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_43_9_13_9_12_0.5_1.0_5_2_3","seed":43,"num_facts":12,"num_rules":14,"num_related_predicates":26,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"dark(\"Kristi\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["bird(\"Robert\", \"Allen\").","sex(\"Kristi\").","crow(\"Kristi\", \"Robert\").","singing(\"Kristi\").","- sleep(\"Kristi\", \"Robert\").","halitus(\"Kristi\", \"Allen\").","agent(\"Robert\", \"Sergio\").","- cavy(\"Allen\", \"Sergio\").","fish(\"Allen\", \"Sergio\").","little_office(\"Allen\", \"Sergio\").","dressing_sack(\"Allen\", \"Sergio\").","kite(\"Robert\", \"Allen\")."],"noisy_facts":[],"min_fact_dicts_for_query":["bird(\"Robert\", \"Allen\").","sex(\"Kristi\").","crow(\"Kristi\", \"Robert\").","singing(\"Kristi\").","- sleep(\"Kristi\", \"Robert\").","halitus(\"Kristi\", \"Allen\").","agent(\"Robert\", \"Sergio\")."],"noiseless_rules":["dark(V0) :- black(V0, V1), - night(V0, V3).","- flying(V2) :- bird(V1, V2), not -kite(V1, V2).","fly(V1, V2) :- bird(V1, V2), not -kite(V1, V2).","- scratching(V1) :- - flying(V2), - breath(V1, V2), not -kite(V1, V2).","bat(V1, V2) :- - flying(V2), - breath(V1, V2), not -kite(V1, V2).","gobbet(V2, V2) :- - flying(V2), - breath(V1, V2), not -kite(V1, V2).","- breath(V1, V2) :- sex(V0), singing(V0), - sleep(V0, V1), halitus(V0, V2), agent(V1, V3).","- activity(V2, V3) :- sex(V0), singing(V0), - sleep(V0, V1), halitus(V0, V2), agent(V1, V3).","feel_good(V0) :- sex(V0), singing(V0), - sleep(V0, V1), halitus(V0, V2), agent(V1, V3).","black(V0, V1) :- crow(V0, V1).","bed(V1, V1) :- - scratching(V1), - breath(V1, V2), not action(V1).","- action(V1) :- fly(V1, V2), - activity(V2, V3).","- night(V0, V3) :- bat(V1, V2), feel_good(V0), bed(V1, V3), not owl(V0), not sleep(V0, V1).","- owl(V3) :- gobbet(V2, V3), not cavy(V2, V3), not -fish(V2, V3), not -little_office(V2, V3), not -dressing_sack(V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_84_8_9_7_9_0.5_1.0_3_3_4","seed":84,"num_facts":9,"num_rules":10,"num_related_predicates":19,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"P9(\"Alexis\", \"Kayla\", \"Morgan\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P10(\"Alexis\", \"Jennifer\").","P11(\"Joseph\", \"Alexis\", \"Kayla\").","- P12(\"Joseph\", \"Jennifer\").","P13(\"Joseph\", \"Jennifer\").","P14(\"Joseph\", \"Alexis\", \"Jennifer\").","P15(\"Joseph\", \"Kayla\", \"Morgan\").","- P16(\"Alexis\", \"Kayla\", \"Morgan\").","P17(\"Alexis\", \"Jennifer\", \"Morgan\").","- P18(\"Joseph\", \"Alexis\", \"Kayla\")."],"noisy_facts":["P26(\"Alexis\", \"Jennifer\", \"Kayla\").","- P22(\"Jennifer\", \"Kayla\", \"Morgan\").","P24(\"Joseph\").","P25(\"Joseph\", \"Alexis\").","- P19(\"Alexis\", \"Kayla\", \"Morgan\")."],"min_fact_dicts_for_query":["P10(\"Alexis\", \"Jennifer\").","P15(\"Joseph\", \"Kayla\", \"Morgan\")."],"noiseless_rules":["P9(V1, V3, V4) :- - P2(V1, V2), - P8(V3, V4), not -P17(V1, V2, V4).","- P0(V2, V3, V4) :- P3(V2, V3, V4).","P1(V4, V3, V2) :- P3(V2, V3, V4), not P6(V2, V3, V4).","- P2(V1, V2) :- P10(V1, V2), P15(V0, V3, V4), not P16(V1, V3, V4).","P3(V2, V3, V4) :- P10(V1, V2), P15(V0, V3, V4), not P16(V1, V3, V4).","- P4(V0, V1, V3) :- P10(V1, V2), P15(V0, V3, V4), not P16(V1, V3, V4).","- P5(V0, V3) :- - P4(V0, V1, V3), not -P7(V0, V1, V3), not P18(V0, V1, V3).","- P6(V2, V0, V2) :- - P5(V0, V2), not P12(V0, V2), not -P13(V0, V2).","P7(V0, V1, V3) :- P11(V0, V1, V3), not P18(V0, V1, V3).","- P8(V3, V4) :- - P0(V2, V3, V4), P1(V0, V1, V2), not -P14(V0, V1, V2)."],"noisy_rules":{"a":["- P9(V1, V3, V4) :- P0(V2, V3, V4), - P3(V2, V3, V4), P4(V0, V1, V3).","- P9(V4, V3, V4) :- P5(V0, V2), P8(V3, V4)."],"b":["- P11(V3, V1, V3) :- - P3(V2, V3, V4), - P9(V1, V3, V4).","- P1(V2, V1, V2) :- P0(V2, V3, V4), not -P2(V1, V2), - P9(V1, V3, V4)."],"c":["P6(V0, V3, V3) :- - P7(V0, V1, V3).","- P3(V2, V3, V4) :- P0(V2, V3, V4), P5(V0, V2), not -P6(V2, V3, V4)."],"d":["P20(V1, V3, V4) :- - P19(V1, V3, V4).","P16(V4, V3, V4) :- P8(V3, V4)."],"e":["- P21(V2, V3, V4) :- - P22(V2, V3, V4).","P23(V0, V1, V2) :- P24(V0), P25(V0, V1), P26(V1, V2, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_73_9_8_4_6_0.5_1.0_5_2_3","seed":73,"num_facts":8,"num_rules":9,"num_related_predicates":17,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"social_group(\"Tracy\", \"Anne\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["tawniness(\"Tracy\", \"Brian\").","- ramus(\"Tracy\", \"Brian\").","canine(\"Anne\", \"James\").","capsule(\"Anne\", \"James\").","- aire(\"Tracy\", \"Anne\").","forever(\"Tracy\", \"Brian\").","- manta(\"Anne\", \"James\").","- cent(\"Anne\", \"James\")."],"noisy_facts":["- air_mattress(\"James\", \"Brian\").","- bisexuals(\"James\", \"Brian\").","measure_time(\"Brian\").","good(\"Anne\", \"Brian\").","- late(\"Anne\", \"James\").","northern_pike(\"Tracy\", \"James\").","- hazelnut(\"Anne\", \"James\").","- women_clothing(\"James\", \"Brian\").","eat_meal(\"James\", \"Brian\").","- barrel(\"Anne\", \"James\").","- yoke(\"Tracy\", \"Brian\").","- pas_de_deux(\"James\", \"Brian\")."],"min_fact_dicts_for_query":["tawniness(\"Tracy\", \"Brian\").","- ramus(\"Tracy\", \"Brian\").","- aire(\"Tracy\", \"Anne\")."],"noiseless_rules":["social_group(V0, V1) :- - glass_over(V0), - concept(V3), - element(V3), - aire(V0, V1), not -forever(V0, V3).","- glass_over(V0) :- tawniness(V0, V3), not ramus(V0, V3).","- air_terminal(V0, V3) :- - ramus(V0, V3).","music(V2, V1) :- - air_terminal(V1, V2), not -images_embossed_on_both_sides(V1, V2).","marrow(V1, V2) :- - geological_phenomenon(V1, V2).","- geological_phenomenon(V1, V2) :- canine(V1, V2).","images_embossed_on_both_sides(V1, V2) :- marrow(V1, V2), not manta(V1, V2), not cent(V1, V2).","- concept(V3) :- music(V2, V3).","- element(V1) :- - air_terminal(V1, V2), not -capsule(V1, V2)."],"noisy_rules":{"a":["- social_group(V1, V1) :- air_terminal(V1, V2), - music(V2, V3), not marrow(V1, V2), not images_embossed_on_both_sides(V1, V2), not -element(V3).","- social_group(V3, V1) :- - music(V2, V3), geological_phenomenon(V1, V2), concept(V3)."],"b":["element(V3) :- air_terminal(V1, V2), concept(V3), - social_group(V0, V1).","- capsule(V1, V0) :- - social_group(V0, V1)."],"c":["- tawniness(V0, V1) :- glass_over(V0), - images_embossed_on_both_sides(V1, V2).","- images_embossed_on_both_sides(V3, V2) :- glass_over(V0), - music(V2, V3), not -concept(V3), not -element(V3)."],"d":["concept(V3) :- - images_embossed_on_both_sides(V1, V2), element(V3), not barrel(V1, V2).","- aiding_memory(V3, V2) :- not music(V2, V3), element(V3), - women_clothing(V2, V3), not air_mattress(V2, V3), not bisexuals(V2, V3)."],"e":["- horses(V2) :- measure_time(V3), - yoke(V0, V3), - late(V1, V2), not hazelnut(V1, V2), good(V1, V3).","parts_of_plant(V2) :- northern_pike(V0, V2), not -eat_meal(V2, V3), - pas_de_deux(V2, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_43_8_12_8_11_0.5_1.0_5_2_3","seed":43,"num_facts":11,"num_rules":13,"num_related_predicates":24,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P12(\"Michael\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P13(\"Katherine\", \"Nicholas\").","P14(\"Michael\", \"Daniel\").","- P15(\"Michael\", \"Katherine\").","- P16(\"Daniel\", \"Katherine\").","P17(\"Daniel\", \"Katherine\").","- P18(\"Katherine\", \"Nicholas\").","- P19(\"Michael\", \"Nicholas\").","- P20(\"Katherine\", \"Nicholas\").","- P21(\"Katherine\", \"Nicholas\").","- P22(\"Katherine\", \"Nicholas\").","P23(\"Katherine\", \"Nicholas\")."],"noisy_facts":["P29(\"Daniel\", \"Katherine\").","- P24.","- P28(\"Daniel\", \"Katherine\").","- P26(\"Michael\", \"Katherine\")."],"min_fact_dicts_for_query":["P14(\"Michael\", \"Daniel\").","- P15(\"Michael\", \"Katherine\").","P17(\"Daniel\", \"Katherine\").","- P19(\"Michael\", \"Nicholas\").","- P20(\"Katherine\", \"Nicholas\")."],"noiseless_rules":["- P12(V0) :- P1(V0), P5(V0, V2), P7(V1, V3), not P10(V2, V3), not P18(V2, V3).","P0(V2) :- P13(V2, V3).","P1(V0) :- P14(V0, V1), - P19(V0, V3), - P20(V2, V3), not P21(V2, V3), not P22(V2, V3).","- P2(V0, V2) :- P14(V0, V1), - P19(V0, V3), - P20(V2, V3), not P21(V2, V3), not P22(V2, V3).","P3(V1) :- P14(V0, V1), - P19(V0, V3), - P20(V2, V3), not P21(V2, V3), not P22(V2, V3).","P4(V1, V2) :- P14(V0, V1), - P19(V0, V3), - P20(V2, V3), not P21(V2, V3), not P22(V2, V3).","P5(V0, V2) :- - P15(V0, V2), P17(V1, V2).","- P6(V1, V2) :- - P15(V0, V2), P17(V1, V2).","P7(V2, V2) :- - P2(V0, V2).","- P8(V0) :- - P2(V0, V2).","P9(V1, V0) :- P0(V2), P3(V1), P5(V0, V2), not P6(V1, V2), not P8(V0).","- P10(V2, V3) :- - P11(V1, V2), P23(V2, V3).","- P11(V1, V2) :- P4(V1, V2), P9(V1, V3), not P16(V1, V2), not -P17(V1, V2), not P18(V2, V3)."],"noisy_rules":{"a":["P12(V0) :- - P5(V0, V2).","P12(V0) :- - P4(V1, V2), - P5(V0, V2), P6(V1, V2), - P7(V1, V3), not -P8(V0)."],"b":["P22(V2, V3) :- P2(V0, V2), not P4(V1, V2), - P7(V1, V3), P8(V0), not -P12(V0).","- P14(V0, V1) :- - P5(V0, V2), P8(V0), - P9(V1, V3), not -P10(V2, V3), P12(V0)."],"c":["- P0(V2) :- - P1(V0), P8(V0), P10(V2, V3), P11(V1, V2).","P18(V2, V3) :- - P0(V2), - P4(V1, V2), not P9(V1, V3), P10(V2, V3)."],"d":["- P23(V2, V2) :- - P4(V1, V2).","P19(V1, V1) :- - P3(V1), - P24."],"e":["- P25(V0) :- - P26(V0, V2).","P27(V2) :- - P28(V1, V2), not -P29(V1, V2)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_65_6_6_5_6_0.5_1.0_5_2_3","seed":65,"num_facts":9,"num_rules":7,"num_related_predicates":16,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" P6(\"Stephanie\", \"Jeremiah\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P7(\"Stephanie\", \"Sara\").","P8(\"Dorothy\").","- P9(\"Sara\", \"Jeremiah\").","- P10(\"Sara\", \"Jeremiah\").","- P11(\"Stephanie\", \"Sara\").","P12(\"Stephanie\", \"Dorothy\").","- P13(\"Stephanie\", \"Dorothy\").","- P14(\"Sara\", \"Jeremiah\").","- P15(\"Stephanie\", \"Jeremiah\")."],"noisy_facts":["- P19(\"Stephanie\", \"Jeremiah\").","P25(\"Sara\", \"Jeremiah\").","- P17(\"Sara\", \"Dorothy\").","- P22(\"Stephanie\", \"Sara\").","- P16(\"Stephanie\", \"Sara\").","- P20(\"Sara\", \"Jeremiah\").","- P24(\"Stephanie\", \"Jeremiah\").","- P23(\"Stephanie\", \"Dorothy\")."],"min_fact_dicts_for_query":["P7(\"Stephanie\", \"Sara\").","P8(\"Dorothy\").","- P9(\"Sara\", \"Jeremiah\").","- P10(\"Sara\", \"Jeremiah\").","- P11(\"Stephanie\", \"Sara\").","P12(\"Stephanie\", \"Dorothy\").","- P13(\"Stephanie\", \"Dorothy\").","- P14(\"Sara\", \"Jeremiah\")."],"noiseless_rules":["- P6(V0, V3) :- P3(V3), - P5(V0, V2), not P15(V0, V3).","- P0(V0, V1) :- P7(V0, V1).","P1(V1, V2) :- P8(V2), - P11(V0, V1), P12(V0, V2), - P13(V0, V2), - P14(V1, V3).","P2(V1, V3) :- - P9(V1, V3).","P3(V3) :- - P10(V1, V3), not P14(V1, V3).","- P4(V1, V3) :- - P10(V1, V3), not P14(V1, V3).","- P5(V0, V2) :- - P0(V0, V1), P1(V1, V2), P2(V1, V3), not P4(V1, V3)."],"noisy_rules":{"a":["P6(V0, V3) :- P0(V0, V1), - P3(V3), not -P4(V1, V3), P5(V0, V2).","P6(V0, V3) :- P0(V0, V1), - P1(V1, V2), P4(V1, V3), not -P5(V0, V2)."],"b":["P4(V3, V3) :- P6(V0, V3).","P11(V0, V1) :- P0(V0, V1), - P3(V3), not -P4(V1, V3), P5(V0, V2), not -P6(V0, V3)."],"c":["P4(V1, V3) :- P0(V0, V1), - P1(V1, V2), - P2(V1, V3), - P3(V3), not -P5(V0, V2).","P10(V1, V3) :- P0(V0, V1), - P1(V1, V2), - P2(V1, V3), not -P4(V1, V3)."],"d":["P15(V0, V3) :- P0(V0, V1), - P1(V1, V2), P4(V1, V3), P5(V0, V2), - P16(V0, V1).","- P2(V1, V2) :- - P1(V1, V2), - P17(V1, V2)."],"e":["- P18(V0, V1) :- - P19(V0, V3), - P20(V1, V3).","P21(V3) :- - P22(V0, V1), - P23(V0, V2), - P24(V0, V3), not -P25(V1, V3)."]}},"num_min_facts_for_query":8,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_22_7_10_10_13_0.5_1.0_5_2_3","seed":22,"num_facts":12,"num_rules":11,"num_related_predicates":23,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8333333333333333,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"protoplasm(\"Tracie\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- brain(\"Brandy\").","- cytosol(\"Brandy\", \"Tracie\").","- heart(\"Leonard\", \"Tracie\").","- liver(\"Leonard\", \"Daniel\").","spine(\"Leonard\", \"Daniel\").","lung(\"Brandy\", \"Daniel\").","- zygote(\"Tracie\").","nucleus(\"Tracie\").","- molded_salad(\"Leonard\", \"Brandy\").","sundress(\"Brandy\", \"Tracie\").","cytoplast(\"Brandy\", \"Tracie\").","- legal(\"Brandy\", \"Daniel\")."],"noisy_facts":["- touch(\"Tracie\").","- hearing_things(\"Tracie\").","fly(\"Leonard\", \"Tracie\").","pay_merchants_with_money(\"Leonard\", \"Daniel\").","- sarcoplasm(\"Leonard\")."],"min_fact_dicts_for_query":["- brain(\"Brandy\").","- cytosol(\"Brandy\", \"Tracie\").","- heart(\"Leonard\", \"Tracie\").","- liver(\"Leonard\", \"Daniel\").","- molded_salad(\"Leonard\", \"Brandy\").","sundress(\"Brandy\", \"Tracie\").","cytoplast(\"Brandy\", \"Tracie\").","- legal(\"Brandy\", \"Daniel\")."],"noiseless_rules":["protoplasm(V2) :- - cytoplasm(V2), - two_legs(V3), - cell(V0, V2), not parturiency(V2, V3).","- centrosome(V0) :- endoplasm(V0), - molded_salad(V0, V1), sundress(V1, V2), cytoplast(V1, V2), - legal(V1, V3).","kupffers_cell(V2, V3) :- endoplasm(V0), - molded_salad(V0, V1), sundress(V1, V2), cytoplast(V1, V2), - legal(V1, V3).","endoplasm(V0) :- - brain(V1), - heart(V0, V2), - liver(V0, V3), not -spine(V0, V3), not -lung(V1, V3).","- human_body(V0, V3) :- - brain(V1), - heart(V0, V2), - liver(V0, V3), not -spine(V0, V3), not -lung(V1, V3).","- golgi_body(V0, V1) :- - brain(V1), - heart(V0, V2), - liver(V0, V3), not -spine(V0, V3), not -lung(V1, V3).","- cytoplasm(V2) :- - cytosol(V1, V2), not -cytoplast(V1, V2).","- two_legs(V3) :- - centrosome(V0), kupffers_cell(V2, V3), not human_body(V0, V3).","- cell(V3, V2) :- kupffers_cell(V2, V3), not cytoplasm(V2), not mother_cell(V2), not zygote(V2), not -nucleus(V2).","- parturiency(V1, V1) :- - golgi_body(V0, V1).","- mother_cell(V0) :- - golgi_body(V0, V1)."],"noisy_rules":{"a":["- protoplasm(V0) :- centrosome(V0), human_body(V0, V3).","- protoplasm(V2) :- - kupffers_cell(V2, V3), not -human_body(V0, V3), golgi_body(V0, V1)."],"b":["molded_salad(V2, V2) :- - protoplasm(V2).","liver(V0, V3) :- not endoplasm(V0), human_body(V0, V3), - protoplasm(V2)."],"c":["cytoplasm(V2) :- golgi_body(V0, V1), not -cell(V0, V2), mother_cell(V2).","- kupffers_cell(V3, V3) :- centrosome(V0), human_body(V0, V3), golgi_body(V0, V1), not -two_legs(V3)."],"d":["zygote(V2) :- - kupffers_cell(V2, V3), not -cytoplasm(V2), not -two_legs(V3), not -parturiency(V2, V3), not hearing_things(V2).","cytoplasm(V2) :- not -centrosome(V0), - endoplasm(V0), cell(V0, V2), not sarcoplasm(V0)."],"e":["trinitarian(V0) :- pay_merchants_with_money(V0, V3).","action(V2) :- not touch(V2), fly(V0, V2)."]}},"num_min_facts_for_query":8,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_96_7_10_6_6_0.5_1.0_3_2_3","seed":96,"num_facts":9,"num_rules":11,"num_related_predicates":20,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.8333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"P10(\"Johnathan\", \"Peggy\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P11(\"Erin\").","- P12(\"Johnathan\", \"Peggy\").","P13(\"Johnathan\", \"Peggy\").","- P14(\"James\", \"Peggy\").","- P15(\"James\", \"Peggy\").","P16(\"Johnathan\").","- P17(\"Peggy\", \"Erin\").","- P18(\"Peggy\", \"Erin\").","P19(\"Peggy\", \"Erin\")."],"noisy_facts":["- P23(\"Johnathan\", \"James\").","- P26(\"James\", \"Peggy\").","- P24(\"James\", \"Erin\").","P21(\"Johnathan\").","P20(\"Johnathan\")."],"min_fact_dicts_for_query":["- P11(\"Erin\").","- P12(\"Johnathan\", \"Peggy\").","- P14(\"James\", \"Peggy\").","P19(\"Peggy\", \"Erin\")."],"noiseless_rules":["P10(V0, V2) :- P1(V3), P5(V0, V2), not -P7(V0, V3).","P0(V0, V3) :- - P2(V2), P6(V0, V2), - P8(V2, V3).","P1(V3) :- - P11(V3), P19(V2, V3).","- P2(V2) :- - P11(V3), P19(V2, V3).","- P3(V0, V2) :- - P12(V0, V2), - P14(V1, V2), not P15(V1, V2).","P4(V0) :- - P12(V0, V2), - P14(V1, V2), not P15(V1, V2).","P5(V0, V2) :- - P3(V0, V2), not -P9(V0, V2).","P6(V0, V2) :- - P3(V0, V2), not -P9(V0, V2).","P7(V0, V3) :- P0(V0, V3), not -P4(V0), not -P16(V0).","- P8(V2, V3) :- P13(V0, V2), - P17(V2, V3), not P18(V2, V3).","P9(V0, V2) :- P13(V0, V2), - P17(V2, V3), not P18(V2, V3)."],"noisy_rules":{"a":["- P10(V0, V2) :- - P5(V0, V2), not P6(V0, V2).","- P10(V0, V0) :- - P0(V0, V3)."],"b":["P11(V3) :- - P1(V3), - P4(V0), - P10(V0, V2).","- P0(V0, V3) :- - P7(V0, V3), - P9(V0, V2), not P10(V0, V2)."],"c":["P12(V0, V2) :- - P5(V0, V2), P8(V2, V3), - P9(V0, V2).","P17(V2, V0) :- not -P3(V0, V2), - P5(V0, V2)."],"d":["P14(V0, V2) :- - P4(V0), - P9(V0, V2), P20(V0).","- P1(V2) :- - P4(V0), - P5(V0, V2), not -P21(V0)."],"e":["- P22(V0, V3) :- - P23(V0, V1), - P24(V1, V3).","P25(V1) :- - P26(V1, V2)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_45_9_10_1_2_0.5_1.0_5_3_4","seed":45,"num_facts":5,"num_rules":11,"num_related_predicates":16,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" container(\"Virginia\", \"Anne\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["stocking_pantry(\"Virginia\", \"Justin\", \"Terri\").","- yak(\"Virginia\", \"Terri\", \"Anne\").","deer(\"Virginia\", \"Justin\", \"Terri\").","ectoproct(\"Stephanie\", \"Anne\").","- saiga(\"Justin\", \"Stephanie\")."],"noisy_facts":["- evening_bag(\"Justin\", \"Stephanie\").","- binomial(\"Virginia\", \"Justin\", \"Terri\").","sheep(\"Virginia\", \"Justin\", \"Terri\").","wound(\"Virginia\", \"Stephanie\").","knife(\"Virginia\", \"Stephanie\").","saddlebag(\"Justin\", \"Stephanie\").","- scissors(\"Virginia\", \"Terri\", \"Stephanie\").","- chop(\"Justin\", \"Stephanie\", \"Anne\").","- product(\"Virginia\", \"Justin\", \"Terri\").","operand(\"Terri\", \"Anne\").","paste(\"Terri\").","book_bag(\"Justin\", \"Stephanie\").","- proportional(\"Virginia\", \"Justin\", \"Anne\")."],"min_fact_dicts_for_query":["deer(\"Virginia\", \"Justin\", \"Terri\").","ectoproct(\"Stephanie\", \"Anne\")."],"noiseless_rules":["- container(V0, V4) :- bag(V0, V2), - aurochs(V0, V2), - bowl(V3, V4), not bovine(V0, V3, V4).","bag(V0, V2) :- body_bag(V0, V1, V2).","- withers(V0, V1, V2) :- body_bag(V0, V1, V2).","cattle(V2) :- - withers(V0, V1, V2), not antelope(V0, V1, V2).","- aurochs(V0, V2) :- - withers(V0, V1, V2), not -stocking_pantry(V0, V1, V2).","- harnessed_antelope(V1, V0) :- - withers(V0, V1, V2), not -stocking_pantry(V0, V1, V2).","- ox(V2) :- - yak(V0, V2, V4).","body_bag(V0, V1, V2) :- deer(V0, V1, V2).","- bowl(V3, V4) :- ectoproct(V3, V4).","- antelope(V3, V1, V1) :- - harnessed_antelope(V1, V3), not saiga(V1, V3).","- bovine(V2, V2, V2) :- cattle(V2), not ox(V2)."],"noisy_rules":{"a":["container(V0, V4) :- harnessed_antelope(V1, V3), - body_bag(V0, V1, V2), bowl(V3, V4).","container(V3, V4) :- bowl(V3, V4)."],"b":["- deer(V0, V1, V2) :- withers(V0, V1, V2), harnessed_antelope(V1, V3), container(V0, V4).","aurochs(V0, V2) :- - body_bag(V0, V1, V2), container(V0, V4)."],"c":["saiga(V2, V0) :- - bag(V0, V2).","ox(V2) :- withers(V0, V1, V2), aurochs(V0, V2), not body_bag(V0, V1, V2)."],"d":["- bag(V3, V3) :- harnessed_antelope(V1, V3), book_bag(V1, V3), - evening_bag(V1, V3), saddlebag(V1, V3).","bovid(V0, V2, V3) :- harnessed_antelope(V1, V3), antelope(V0, V1, V2), bovine(V0, V3, V4), not -sheep(V0, V1, V2)."],"e":["- cut(V3, V4) :- paste(V2), wound(V0, V3), knife(V0, V3), - scissors(V0, V2, V3), - chop(V1, V3, V4).","- quantity(V1, V2, V4) :- operand(V2, V4), - product(V0, V1, V2), not binomial(V0, V1, V2), not proportional(V0, V1, V4)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_48_10_12_11_11_0.5_1.0_5_2_3","seed":48,"num_facts":15,"num_rules":13,"num_related_predicates":28,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.7777777777777777,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"crest(\"Jacqueline\", \"Catherine\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- procellariiform_seabird(\"Ashley\", \"Jacqueline\").","- grebe(\"Ashley\", \"Jacqueline\").","- gaviiform_seabird(\"Ashley\", \"Zachary\").","auklet(\"Ashley\", \"Catherine\").","sphenisciform_seabird(\"Ashley\", \"Catherine\").","- coastal_diving_bird(\"Jacqueline\", \"Zachary\").","golden_fur(\"Zachary\", \"Catherine\").","fraternity(\"Zachary\", \"Catherine\").","cytoplast(\"Ashley\", \"Catherine\").","weigh_objects(\"Jacqueline\", \"Zachary\").","plasmodium(\"Zachary\", \"Catherine\").","golgi_body(\"Zachary\", \"Catherine\").","- albatross(\"Ashley\", \"Catherine\").","diving_petrel(\"Jacqueline\", \"Zachary\").","petrel(\"Zachary\", \"Catherine\")."],"noisy_facts":["overactivity(\"Jacqueline\", \"Catherine\").","- many_muscles(\"Jacqueline\", \"Catherine\").","- paper(\"Jacqueline\").","bell(\"Jacqueline\").","- good_thing(\"Jacqueline\", \"Zachary\").","- blow_up_things(\"Zachary\", \"Catherine\").","drinking_alcohol(\"Ashley\", \"Catherine\").","army(\"Jacqueline\", \"Zachary\")."],"min_fact_dicts_for_query":["- procellariiform_seabird(\"Ashley\", \"Jacqueline\").","- grebe(\"Ashley\", \"Jacqueline\").","cytoplast(\"Ashley\", \"Catherine\").","weigh_objects(\"Jacqueline\", \"Zachary\").","- albatross(\"Ashley\", \"Catherine\").","diving_petrel(\"Jacqueline\", \"Zachary\")."],"noiseless_rules":["crest(V1, V3) :- - tuft(V1), - puffin(V1, V3), not comb(V1, V3), not -seabird(V1, V3).","- tuft(V1) :- - pelagic_bird(V1), podicipitiform_seabird(V1, V3).","- pelagic_bird(V1) :- - procellariiform_seabird(V0, V1), - albatross(V0, V3), diving_petrel(V1, V2), not -petrel(V2, V3).","- pelecaniform_seabird(V1, V3) :- - procellariiform_seabird(V0, V1), - albatross(V0, V3), diving_petrel(V1, V2), not -petrel(V2, V3).","- puffin(V1, V3) :- atlantic_puffin(V1, V3).","- comb(V1, V3) :- - pelecaniform_seabird(V1, V3), not -cell(V1, V3).","podicipitiform_seabird(V1, V3) :- - grebe(V0, V1), cytoplast(V0, V3), weigh_objects(V1, V2), not -plasmodium(V2, V3), not -golgi_body(V2, V3).","but(V1, V3) :- - grebe(V0, V1), cytoplast(V0, V3), weigh_objects(V1, V2), not -plasmodium(V2, V3), not -golgi_body(V2, V3).","- cytoplasm(V3) :- - grebe(V0, V1), cytoplast(V0, V3), weigh_objects(V1, V2), not -plasmodium(V2, V3), not -golgi_body(V2, V3).","atlantic_puffin(V1, V3) :- but(V1, V3).","seabird(V1, V3) :- - gaviiform_seabird(V0, V2), sphenisciform_seabird(V0, V3), - coastal_diving_bird(V1, V2), not -golden_fur(V2, V3), not -fraternity(V2, V3).","cell(V3, V3) :- - cytoplasm(V3), not auk(V3).","- auk(V3) :- auklet(V0, V3)."],"noisy_rules":{"a":["- crest(V1, V3) :- pelecaniform_seabird(V1, V3), not -comb(V1, V3), - podicipitiform_seabird(V1, V3), - atlantic_puffin(V1, V3), not seabird(V1, V3).","- crest(V1, V3) :- puffin(V1, V3), not atlantic_puffin(V1, V3)."],"b":["pelecaniform_seabird(V1, V3) :- - crest(V1, V3).","- auklet(V3, V3) :- - cell(V1, V3), - crest(V1, V3)."],"c":["- seabird(V1, V3) :- not -pelagic_bird(V1), pelecaniform_seabird(V1, V3), not -puffin(V1, V3), not podicipitiform_seabird(V1, V3), auk(V3).","- but(V1, V3) :- cytoplasm(V3), - cell(V1, V3)."],"d":["cytoplasm(V3) :- - podicipitiform_seabird(V1, V3).","grebe(V1, V1) :- tuft(V1), not but(V1, V3), - cell(V1, V3), bell(V1)."],"e":["- being_sociable(V2) :- drinking_alcohol(V0, V3), army(V1, V2), - blow_up_things(V2, V3).","print_on(V1, V3) :- - paper(V1), - good_thing(V1, V2), - many_muscles(V1, V3), overactivity(V1, V3)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_43_9_10_7_10_0.5_1.0_3_3_4","seed":43,"num_facts":11,"num_rules":11,"num_related_predicates":22,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"center(\"Melanie\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["washington(\"Melanie\", \"Richard\", \"Kyle\").","- area(\"Kyle\").","- machines(\"Melanie\", \"Stephanie\").","playing_harp(\"Melanie\", \"Richard\", \"Kyle\").","factory(\"Andrea\", \"Melanie\", \"Kyle\").","winery(\"Melanie\", \"Richard\", \"Kyle\").","- diestock(\"Melanie\", \"Kyle\").","- on_arm(\"Melanie\", \"Kyle\").","city(\"Melanie\", \"Richard\", \"Kyle\").","- high_explosive(\"Melanie\", \"Stephanie\").","- courting_woman(\"Stephanie\", \"Kyle\")."],"noisy_facts":["parana(\"Richard\", \"Stephanie\", \"Kyle\").","- heaven(\"Melanie\", \"Richard\", \"Kyle\").","- amazon(\"Kyle\").","quack(\"Melanie\", \"Richard\", \"Stephanie\").","self_assertion(\"Andrea\", \"Melanie\").","- smell(\"Andrea\")."],"min_fact_dicts_for_query":["washington(\"Melanie\", \"Richard\", \"Kyle\").","- area(\"Kyle\").","- machines(\"Melanie\", \"Stephanie\").","factory(\"Andrea\", \"Melanie\", \"Kyle\").","winery(\"Melanie\", \"Richard\", \"Kyle\").","- high_explosive(\"Melanie\", \"Stephanie\")."],"noiseless_rules":["center(V1) :- - angels(V1, V2), - location(V1, V3, V4).","- harp(V1, V2, V4) :- washington(V1, V2, V4).","- middle(V3, V4) :- - area(V4), - high_explosive(V1, V3), not courting_woman(V3, V4).","- capital(V1, V4) :- - area(V4), - high_explosive(V1, V3), not courting_woman(V3, V4).","- take_people_away_from_planet_earth(V3, V4) :- - machines(V1, V3), factory(V0, V1, V4), winery(V1, V2, V4).","- bottle_wine(V0, V2, V4) :- - machines(V1, V3), factory(V0, V1, V4), winery(V1, V2, V4).","- angels(V1, V2) :- washington(V1, V2, V4), not -playing_harp(V1, V2, V4), not -city(V1, V2, V4).","place(V0, V1, V3) :- - take_people_away_from_planet_earth(V3, V4), - nest(V0, V1, V4), not -factory(V0, V1, V4).","- nest(V0, V1, V4) :- - harp(V1, V2, V4), - bottle_wine(V0, V2, V4), not -city(V1, V2, V4).","- location(V1, V3, V4) :- - middle(V3, V4), place(V0, V1, V3), not address(V0, V1, V3).","- address(V4, V1, V4) :- - capital(V1, V4), not diestock(V1, V4), not on_arm(V1, V4)."],"noisy_rules":{"a":["- center(V1) :- middle(V3, V4), - place(V0, V1, V3), location(V1, V3, V4).","- center(V1) :- capital(V1, V4), not -take_people_away_from_planet_earth(V3, V4), - place(V0, V1, V3)."],"b":["- city(V1, V4, V4) :- capital(V1, V4), not center(V1).","- washington(V1, V2, V4) :- harp(V1, V2, V4), not -capital(V1, V4), - center(V1)."],"c":["area(V1) :- - place(V0, V1, V3).","area(V4) :- capital(V1, V4)."],"d":["angels(V1, V2) :- not -harp(V1, V2, V4), - heaven(V1, V2, V4).","area(V4) :- location(V1, V3, V4)."],"e":["brazil(V2, V3, V4) :- - amazon(V4), parana(V2, V3, V4).","respirator(V0, V1, V2) :- not smell(V0), self_assertion(V0, V1), quack(V1, V2, V3)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_46_6_8_8_9_0.5_1.0_5_1_2","seed":46,"num_facts":11,"num_rules":9,"num_related_predicates":20,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" organic_process(\"Brooke\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["paste.","moslem(\"Brooke\").","snowball(\"Brooke\").","- breathing.","tanning.","- consumption.","sleeping.","cement.","rubber_cement.","spirit_gum(\"Brooke\").","- binder."],"noisy_facts":["- species_of_fish(\"Jeffrey\").","- oman(\"Brooke\").","- bangladesh(\"Brooke\").","- breath(\"Brooke\").","kyrgyzstan(\"Brooke\").","- real_estate(\"Brooke\")."],"min_fact_dicts_for_query":["paste.","cement.","rubber_cement.","spirit_gum(\"Brooke\")."],"noiseless_rules":["- organic_process(V0) :- - actor(V0), not parturition(V0), not -expression(V0), not -bodily_process(V0), not val_kilmer(V0).","- actor(V0) :- paste, cement, rubber_cement, spirit_gum(V0), not binder.","- adhesive_material(V0) :- paste, cement, rubber_cement, spirit_gum(V0), not binder.","lactation(V0) :- paste, cement, rubber_cement, spirit_gum(V0), not binder.","- parturition(V0) :- moslem(V0).","expression(V0) :- - adhesive_material(V0), not depletion(V0).","bodily_process(V2) :- lactation(V2), not breathing, not -tanning, not consumption, not -sleeping.","- depletion(V2) :- lactation(V2), not breathing, not -tanning, not consumption, not -sleeping.","- val_kilmer(V0) :- snowball(V0), not -spirit_gum(V0)."],"noisy_rules":{"a":["organic_process(V0) :- adhesive_material(V0).","organic_process(V0) :- not -parturition(V0), - expression(V0), - bodily_process(V0), val_kilmer(V0)."],"b":["- bodily_process(V0) :- organic_process(V0).","parturition(V0) :- organic_process(V0)."],"c":["- tanning(V0) :- actor(V0), not -parturition(V0).","actor(V0) :- adhesive_material(V0), - lactation(V2), - expression(V0), depletion(V0), val_kilmer(V0)."],"d":["- bodily_process(V0) :- not expression(V0), - breath(V0).","- spirit_gum(V0) :- depletion(V0)."],"e":["- asia(V0) :- not bangladesh(V0), kyrgyzstan(V0), not real_estate(V0), not oman(V0).","carry_stuff(V2) :- - species_of_fish(V2)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_6_10_12_2_4_0.5_1.0_5_2_3","seed":6,"num_facts":6,"num_rules":13,"num_related_predicates":19,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" absence(\"Andrew\", \"Christine\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["- raspberry(\"Peter\", \"Tammy\").","division(\"Tammy\", \"Christine\").","- raid(\"Andrew\", \"Christine\").","- chief(\"Tammy\", \"Andrew\").","wildlife(\"Tammy\", \"Christine\").","people_to_have_good_time(\"Andrew\", \"Christine\")."],"noisy_facts":["- hold_beans(\"Tammy\", \"Christine\").","- coal_mine(\"Peter\").","- gunters_chain(\"Tammy\", \"Andrew\").","hemp(\"Andrew\", \"Christine\").","land_mine(\"Peter\", \"Tammy\").","teaser(\"Tammy\", \"Andrew\").","mineshaft(\"Peter\").","- dot(\"Tammy\", \"Christine\").","salt_mine(\"Tammy\", \"Andrew\")."],"min_fact_dicts_for_query":["division(\"Tammy\", \"Christine\").","- raid(\"Andrew\", \"Christine\")."],"noiseless_rules":["- absence(V2, V3) :- default(V1, V3), - cut(V2, V3), not absenteeism(V2, V3).","default(V1, V3) :- place(V1, V3), not -bisection(V1, V3).","- passage(V1) :- place(V1, V3), not -bisection(V1, V3).","nonattendance(V0, V1) :- - raspberry(V0, V1).","place(V1, V3) :- division(V1, V3).","- cut(V2, V3) :- slash(V2, V3).","slash(V2, V3) :- - raid(V2, V3).","- absenteeism(V1, V1) :- - passage(V1), not parcellation(V1), not tribal(V1), not turkistan(V1).","- parcellation(V1) :- - tribal(V1), not -dichotomization(V1).","bisection(V1, V3) :- - chief(V1, V2), wildlife(V1, V3), not -people_to_have_good_time(V2, V3).","- tribal(V1) :- - chief(V1, V2), wildlife(V1, V3), not -people_to_have_good_time(V2, V3).","- turkistan(V1) :- - passage(V1), nonattendance(V0, V1).","dichotomization(V1) :- - passage(V1), nonattendance(V0, V1)."],"noisy_rules":{"a":["absence(V2, V3) :- passage(V1), absenteeism(V2, V3), not -tribal(V1), not -turkistan(V1).","absence(V2, V3) :- absenteeism(V2, V3)."],"b":["- nonattendance(V3, V3) :- absence(V2, V3).","- slash(V2, V3) :- absence(V2, V3)."],"c":["- bisection(V1, V3) :- passage(V1), - place(V1, V3), absenteeism(V2, V3), tribal(V1), - dichotomization(V1).","- division(V1, V3) :- not -cut(V2, V3), - slash(V2, V3), not -parcellation(V1), not bisection(V1, V3), - dichotomization(V1)."],"d":["parcellation(V1) :- - default(V1, V3), not hold_beans(V1, V3).","opening(V2, V3) :- cut(V2, V3), hemp(V2, V3)."],"e":["- chain(V1) :- - gunters_chain(V1, V2), - dot(V1, V3).","- mine(V0, V1) :- mineshaft(V0), not coal_mine(V0), not -land_mine(V0, V1), salt_mine(V1, V2), teaser(V1, V2)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_20_9_11_10_11_0.5_1.0_5_2_3","seed":20,"num_facts":14,"num_rules":12,"num_related_predicates":26,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P11(\"Andrew\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P12(\"Kristen\").","P13(\"Jason\", \"Andrew\").","- P14(\"Andrew\", \"Kristen\").","- P15(\"John\", \"Andrew\").","- P16(\"John\", \"Jason\").","P17(\"John\", \"Andrew\").","- P18(\"Andrew\", \"Kristen\").","- P19(\"Andrew\", \"Kristen\").","- P20(\"John\", \"Andrew\").","P21(\"John\", \"Andrew\").","P22(\"John\", \"Andrew\").","P23(\"John\", \"Andrew\").","- P24(\"Andrew\").","P25(\"Andrew\")."],"noisy_facts":["P31(\"Jason\", \"Kristen\").","P26(\"John\", \"Jason\").","- P32(\"Jason\", \"Kristen\").","- P27(\"John\", \"Andrew\").","- P29(\"John\", \"Jason\")."],"min_fact_dicts_for_query":["- P12(\"Kristen\").","P13(\"Jason\", \"Andrew\").","- P14(\"Andrew\", \"Kristen\").","- P15(\"John\", \"Andrew\").","- P16(\"John\", \"Jason\").","P17(\"John\", \"Andrew\")."],"noiseless_rules":["P11(V2) :- - P0(V2), P1(V0, V1), P8(V0, V2), - P9(V0, V3).","- P0(V2) :- - P7(V2).","P1(V0, V1) :- - P2(V0, V2), P4(V1, V2), P6(V2, V3), not P10(V2, V3).","- P2(V0, V2) :- - P12(V3), - P16(V0, V1), P17(V0, V2), not P18(V2, V3), not P19(V2, V3).","- P3(V0, V2) :- - P12(V3), - P16(V0, V1), P17(V0, V2), not P18(V2, V3), not P19(V2, V3).","P4(V1, V2) :- P13(V1, V2).","P5(V2) :- P13(V1, V2).","P6(V2, V3) :- - P14(V2, V3), not P18(V2, V3).","- P7(V2) :- P5(V2), not P24(V2), not -P25(V2).","P8(V0, V2) :- - P15(V0, V2).","- P9(V0, V2) :- - P3(V0, V2), not P20(V0, V2), not -P21(V0, V2), not -P22(V0, V2), not -P23(V0, V2).","- P10(V2, V0) :- - P3(V0, V2), not P20(V0, V2), not -P21(V0, V2), not -P22(V0, V2), not -P23(V0, V2)."],"noisy_rules":{"a":["- P11(V2) :- P0(V2).","- P11(V2) :- - P1(V0, V1), P2(V0, V2)."],"b":["P2(V2, V2) :- - P11(V2).","P20(V0, V2) :- P0(V2), P3(V0, V2), - P6(V2, V3), - P8(V0, V2), not P11(V2)."],"c":["- P8(V0, V2) :- not -P2(V0, V2), P3(V0, V2), - P5(V2).","P12(V3) :- not -P0(V2), - P4(V1, V2), P9(V0, V3)."],"d":["P7(V2) :- - P1(V0, V1), P3(V0, V2), not P4(V1, V2), not P8(V0, V2), P26(V0, V1).","- P5(V2) :- - P8(V0, V2), not P27(V0, V2)."],"e":["- P28(V0) :- - P29(V0, V1).","P30(V3) :- P31(V1, V3), not P32(V1, V3)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_70_6_8_4_4_0.5_1.0_5_2_3","seed":70,"num_facts":5,"num_rules":9,"num_related_predicates":14,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"P8(\"Teresa\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P9(\"Teresa\").","- P10(\"Douglas\", \"Teresa\").","P11(\"Douglas\", \"Bruce\").","P12(\"Teresa\", \"Shawn\").","- P13(\"Shawn\", \"Bruce\")."],"noisy_facts":["- P16(\"Teresa\", \"Shawn\").","P19(\"Teresa\", \"Shawn\").","- P14(\"Teresa\", \"Shawn\").","P15(\"Teresa\", \"Shawn\").","- P18(\"Teresa\", \"Shawn\")."],"min_fact_dicts_for_query":["P9(\"Teresa\").","- P10(\"Douglas\", \"Teresa\").","P11(\"Douglas\", \"Bruce\").","P12(\"Teresa\", \"Shawn\")."],"noiseless_rules":["P8(V1) :- - P3(V3), - P4(V0, V1), not -P7(V1, V3).","- P0(V1, V2) :- P9(V1), - P10(V0, V1), P11(V0, V3), P12(V1, V2), not P13(V2, V3).","P1(V1, V2) :- P9(V1), - P10(V0, V1), P11(V0, V3), P12(V1, V2), not P13(V2, V3).","- P2(V2) :- P9(V1), - P10(V0, V1), P11(V0, V3), P12(V1, V2), not P13(V2, V3).","- P3(V1) :- - P0(V1, V2), not -P6(V1, V2).","- P4(V2, V1) :- P1(V1, V2).","P5(V2) :- P1(V1, V2).","P6(V2, V2) :- P5(V2).","P7(V2, V2) :- - P2(V2)."],"noisy_rules":{"a":["- P8(V1) :- P4(V0, V1).","- P8(V1) :- P0(V1, V2), - P5(V2)."],"b":["P3(V1) :- P0(V1, V2), not P5(V2), not P6(V1, V2), not P8(V1).","P0(V1, V1) :- - P8(V1)."],"c":["P2(V2) :- P0(V1, V2), P3(V3), P4(V0, V1).","- P9(V1) :- P0(V1, V2), P3(V3), P4(V0, V1)."],"d":["P2(V2) :- - P6(V1, V2), - P14(V1, V2).","P2(V2) :- not P1(V1, V2), - P6(V1, V2), not -P15(V1, V2), - P16(V1, V2)."],"e":["- P17(V1, V2) :- - P18(V1, V2).","P20(V2) :- P19(V1, V2)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_96_7_10_2_4_0.5_1.0_5_2_3","seed":96,"num_facts":5,"num_rules":11,"num_related_predicates":16,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.8333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"boss(\"Antonio\", \"Grace\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["- lease(\"Grace\", \"Brittany\").","- skeleton(\"Antonio\", \"Molly\").","itchy(\"Antonio\", \"Grace\").","- aileron(\"Grace\", \"Brittany\").","- sponge(\"Grace\", \"Brittany\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- lease(\"Grace\", \"Brittany\").","- skeleton(\"Antonio\", \"Molly\").","itchy(\"Antonio\", \"Grace\").","- aileron(\"Grace\", \"Brittany\")."],"noiseless_rules":["boss(V0, V2) :- sending_up_rockets(V3), repository(V0, V2), not -berkshire(V0, V3).","tree_rodent(V0, V3) :- - punt(V2), banks(V0, V2), - chain_tongs(V2, V3).","sending_up_rockets(V3) :- - lease(V2, V3).","- punt(V2) :- - lease(V2, V3).","- annoying(V0, V2) :- - skeleton(V0, V1), itchy(V0, V2), - aileron(V2, V3), not sponge(V2, V3).","hotchpotch(V0) :- - skeleton(V0, V1), itchy(V0, V2), - aileron(V2, V3), not sponge(V2, V3).","repository(V0, V2) :- - annoying(V0, V2), not -hypopnea(V0, V2).","banks(V0, V2) :- - annoying(V0, V2), not -hypopnea(V0, V2).","berkshire(V0, V3) :- tree_rodent(V0, V3), not -hotchpotch(V0).","- chain_tongs(V2, V0) :- - punt(V2), itchy(V0, V2).","hypopnea(V0, V2) :- - punt(V2), itchy(V0, V2)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_13_7_11_6_6_0.5_1.0_3_2_3","seed":13,"num_facts":8,"num_rules":12,"num_related_predicates":20,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P11(\"Michelle\", \"Christopher\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P12(\"Michelle\", \"Brenda\").","P13(\"Michelle\", \"Christopher\").","P14(\"Michelle\", \"Lisa\").","- P15(\"Michelle\", \"Brenda\").","P16(\"Christopher\", \"Lisa\").","P17(\"Christopher\", \"Brenda\").","- P18(\"Brenda\").","- P19(\"Brenda\")."],"noisy_facts":["P21(\"Michelle\", \"Christopher\").","- P26(\"Michelle\", \"Lisa\").","- P20(\"Christopher\", \"Lisa\").","- P23(\"Michelle\", \"Lisa\").","- P25(\"Michelle\", \"Christopher\")."],"min_fact_dicts_for_query":["- P12(\"Michelle\", \"Brenda\").","P13(\"Michelle\", \"Christopher\").","P14(\"Michelle\", \"Lisa\").","- P15(\"Michelle\", \"Brenda\").","P16(\"Christopher\", \"Lisa\")."],"noiseless_rules":["- P11(V0, V1) :- P0(V2), P3(V0, V1), not P5(V1, V2).","P0(V2) :- - P1(V2), P6(V0, V1), not -P9(V0, V2).","- P1(V2) :- - P12(V0, V3), P16(V1, V2), not -P17(V1, V3).","P2(V3) :- - P12(V0, V3), P16(V1, V2), not -P17(V1, V3).","P3(V0, V1) :- P13(V0, V1), P14(V0, V2), - P15(V0, V3).","- P4(V2) :- P13(V0, V1), P14(V0, V2), - P15(V0, V3).","- P5(V2, V2) :- - P4(V2), not P7(V2), not P10(V2).","P6(V3, V3) :- P2(V3).","- P7(V3) :- P2(V3).","P8(V3) :- P2(V3).","P9(V3, V3) :- P8(V3), not P18(V3), not P19(V3).","- P10(V3) :- P8(V3), not P18(V3), not P19(V3)."],"noisy_rules":{"a":["P11(V2, V2) :- - P2(V3), P4(V2).","P11(V3, V2) :- P1(V2), - P2(V3), P10(V2)."],"b":["- P0(V0) :- P11(V0, V1).","- P8(V1) :- P11(V0, V1)."],"c":["- P8(V2) :- P5(V1, V2).","P19(V2) :- P5(V1, V2), - P6(V0, V1), not -P10(V2)."],"d":["- P8(V2) :- P4(V2), P5(V1, V2), not P20(V1, V2).","- P14(V0, V2) :- - P6(V0, V1), P10(V2), not -P21(V0, V1)."],"e":["- P22(V2) :- - P23(V0, V2).","- P24(V2) :- - P25(V0, V1), - P26(V0, V2)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_44_8_11_8_11_0.5_1.0_5_2_3","seed":44,"num_facts":10,"num_rules":12,"num_related_predicates":22,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" buying_beer(\"Kayla\", \"Paul\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- lunch(\"Kayla\", \"Rachel\").","milk(\"Kayla\", \"Paul\").","drinks(\"Rachel\").","saloon(\"Rachel\").","forgetting(\"Rachel\").","- beer(\"Rachel\").","soup(\"Kayla\", \"Paul\").","- bar(\"Kayla\", \"Paul\").","- relaxation(\"Kayla\", \"Paul\").","- quenching_thirst(\"Kayla\", \"Paul\")."],"noisy_facts":["- respondent(\"Rachel\", \"Paul\").","soap(\"Kayla\", \"Paul\").","- spareribs(\"Kayla\", \"Zachary\").","- ham(\"Rachel\", \"Paul\").","- bacon(\"Paul\").","pork_loin(\"Zachary\", \"Paul\")."],"min_fact_dicts_for_query":["- lunch(\"Kayla\", \"Rachel\").","milk(\"Kayla\", \"Paul\").","soup(\"Kayla\", \"Paul\")."],"noiseless_rules":["- buying_beer(V0, V3) :- water(V3), drink(V0, V2), not -pub(V0, V2), not -drinking(V0, V3).","can_of_soda(V1, V3) :- - lunch(V0, V1), soup(V0, V3).","- wine(V1) :- - lunch(V0, V1), soup(V0, V3).","perform_implosion_experiment(V1, V3) :- can_of_soda(V1, V3), not chicken(V1, V3).","water(V3) :- perform_implosion_experiment(V0, V3), not duck(V0, V3), not -soup(V0, V3).","drink(V0, V3) :- milk(V0, V3), not -soup(V0, V3), not bar(V0, V3), not relaxation(V0, V3), not quenching_thirst(V0, V3).","- chicken(V0, V3) :- milk(V0, V3), not -soup(V0, V3), not bar(V0, V3), not relaxation(V0, V3), not quenching_thirst(V0, V3).","miniature_animals(V0) :- milk(V0, V3), not -soup(V0, V3), not bar(V0, V3), not relaxation(V0, V3), not quenching_thirst(V0, V3).","- bowl(V0, V3) :- miniature_animals(V0), soup(V0, V3).","pub(V0, V1) :- - bowl(V0, V1).","- duck(V0, V1) :- - bowl(V0, V1).","drinking(V1, V1) :- - wine(V1), not -drinks(V1), not -saloon(V1), not -forgetting(V1), not beer(V1)."],"noisy_rules":{"a":["buying_beer(V3, V3) :- - water(V3).","buying_beer(V0, V3) :- - perform_implosion_experiment(V0, V3)."],"b":["- forgetting(V3) :- - miniature_animals(V0), - pub(V0, V2), buying_beer(V0, V3).","quenching_thirst(V0, V3) :- - can_of_soda(V1, V3), - water(V3), - drink(V0, V2), not drinking(V0, V3), not -buying_beer(V0, V3)."],"c":["beer(V3) :- - drinking(V0, V3).","- miniature_animals(V0) :- - perform_implosion_experiment(V0, V3), bowl(V0, V1)."],"d":["chicken(V3, V3) :- duck(V0, V3).","bar(V0, V3) :- duck(V0, V3), not -soap(V0, V3)."],"e":["communicator(V1, V3) :- - respondent(V1, V3).","- cut_of_pork(V2) :- - bacon(V3), - spareribs(V0, V2), - ham(V1, V3), pork_loin(V2, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_36_9_9_7_9_0.5_1.0_3_2_3","seed":36,"num_facts":9,"num_rules":10,"num_related_predicates":19,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.375,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" molded_salad(\"Maria\", \"Joshua\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- teaspoon(\"Maria\", \"Joshua\").","iris(\"Kimberly\", \"Travis\").","capybara(\"Maria\", \"Joshua\").","- madrigalist(\"Maria\").","pupil(\"Maria\", \"Travis\").","fraud(\"Maria\", \"Travis\").","- becoming_popular(\"Maria\").","farmer(\"Maria\").","taking_shower(\"Joshua\", \"Travis\")."],"noisy_facts":["boar(\"Maria\").","- balalaika(\"Kimberly\").","- oak(\"Maria\", \"Travis\").","- cab(\"Travis\").","- three(\"Maria\", \"Kimberly\").","chicken(\"Maria\", \"Joshua\")."],"min_fact_dicts_for_query":["- teaspoon(\"Maria\", \"Joshua\").","capybara(\"Maria\", \"Joshua\")."],"noiseless_rules":["- molded_salad(V0, V2) :- - level(V0, V2).","- note(V0) :- - fresh(V0, V2).","- level(V0, V2) :- popular_form_of_transport(V2), capybara(V0, V2).","on_next_page(V0) :- - note(V0), not becoming_popular(V0), not -farmer(V0).","artist(V2) :- on_next_page(V0), capybara(V0, V2), not madrigalist(V0).","popular_form_of_transport(V2) :- artist(V2), not negation(V2), not kill_mice(V2).","- fresh(V0, V2) :- - teaspoon(V0, V2), not -capybara(V0, V2).","- beldam(V0, V0) :- - teaspoon(V0, V2), not -capybara(V0, V2).","- negation(V2) :- iris(V1, V3), taking_shower(V2, V3).","- kill_mice(V3) :- - beldam(V0, V3), not -pupil(V0, V3), not -fraud(V0, V3)."],"noisy_rules":{"a":["molded_salad(V0, V2) :- not -note(V0), - artist(V2), beldam(V0, V3).","molded_salad(V0, V2) :- not popular_form_of_transport(V2), fresh(V0, V2)."],"b":["beldam(V0, V2) :- not -fresh(V0, V2), molded_salad(V0, V2).","- pupil(V0, V2) :- - on_next_page(V0), - popular_form_of_transport(V2), not -molded_salad(V0, V2)."],"c":["note(V0) :- beldam(V0, V3).","- pupil(V0, V2) :- note(V0), level(V0, V2), not popular_form_of_transport(V2)."],"d":["madrigalist(V0) :- - popular_form_of_transport(V2), fresh(V0, V2), not -chicken(V0, V2).","negation(V2) :- note(V0), - popular_form_of_transport(V2), not -boar(V0)."],"e":["- endoplasm(V0) :- - cab(V3), - three(V0, V1), - oak(V0, V3).","big_ears(V1) :- - balalaika(V1)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_26_8_12_8_8_0.5_1.0_3_2_3","seed":26,"num_facts":10,"num_rules":13,"num_related_predicates":23,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P12(\"Harry\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P13(\"James\", \"Alan\").","P14(\"James\").","P15(\"James\", \"Harry\").","P16(\"Alan\", \"Harry\").","- P17(\"James\", \"Harry\").","- P18(\"James\", \"Harry\").","- P19(\"Alan\", \"Harry\").","- P20(\"James\", \"Harry\").","- P21(\"Suzanne\", \"Alan\").","P22."],"noisy_facts":["- P23(\"James\", \"Harry\").","P24(\"James\", \"Harry\").","P26(\"James\", \"Alan\").","P27(\"James\", \"Harry\").","- P30(\"Suzanne\", \"Harry\").","- P28(\"James\", \"Harry\")."],"min_fact_dicts_for_query":["P13(\"James\", \"Alan\").","P14(\"James\").","P15(\"James\", \"Harry\").","P16(\"Alan\", \"Harry\").","- P19(\"Alan\", \"Harry\").","- P20(\"James\", \"Harry\").","- P21(\"Suzanne\", \"Alan\")."],"noiseless_rules":["P12(V3) :- - P0(V2), - P4(V2, V3), not P6(V2, V3).","- P0(V2) :- P2(V2), - P5(V0, V2), P10(V0, V3).","P1(V0, V3) :- P2(V2), - P5(V0, V2), P10(V0, V3).","P2(V2) :- P13(V0, V2), - P20(V0, V3), - P21(V1, V2).","- P3(V2) :- P13(V0, V2), - P20(V0, V3), - P21(V1, V2).","- P4(V2, V3) :- P14(V0), P15(V0, V3), P16(V2, V3).","- P5(V0, V2) :- - P7(V0, V2), - P11(V1, V2), - P19(V2, V3).","- P6(V3, V3) :- P1(V0, V3), not P8(V0, V3).","- P7(V2, V2) :- - P3(V2), not -P22.","- P8(V2, V2) :- - P3(V2), not -P22.","- P9(V2, V2) :- - P3(V2), not -P22.","P10(V0, V3) :- - P9(V0, V3), not P17(V0, V3), not P18(V0, V3).","- P11(V0, V3) :- - P9(V0, V3), not P17(V0, V3), not P18(V0, V3)."],"noisy_rules":{"a":["- P12(V2) :- P3(V2).","- P12(V0) :- not -P0(V2), P3(V2), P7(V0, V2)."],"b":["P17(V3, V3) :- - P12(V3).","P0(V2) :- - P2(V2), P8(V0, V3), not P12(V3)."],"c":["- P15(V0, V3) :- - P1(V0, V3).","P17(V0, V3) :- - P1(V0, V3)."],"d":["P9(V0, V3) :- - P23(V0, V3).","P7(V0, V2) :- not P1(V0, V3), P4(V2, V3), P24(V0, V3)."],"e":["- P25(V0, V3) :- P26(V0, V2), P27(V0, V3), not P28(V0, V3).","- P29(V1, V3) :- - P30(V1, V3)."]}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_31_9_11_11_11_0.5_1.0_3_2_3","seed":31,"num_facts":15,"num_rules":12,"num_related_predicates":27,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"soft_finned_fish(\"Shaun\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["cigarette_butt(\"Shaun\").","- counterbore(\"Shaun\", \"Emily\").","- causal_agent(\"Shaun\", \"Laura\").","pendulum(\"Shaun\", \"Laura\").","- badge(\"Shaun\", \"Laura\").","crash_helmet(\"Shaun\", \"Laura\").","- enjoy_sex(\"Shaun\", \"Michael\").","van_allen_belt(\"Emily\", \"Michael\").","- black_kite(\"Shaun\", \"Laura\").","- earth(\"Shaun\").","emulsion(\"Emily\", \"Laura\").","ballroom(\"Michael\", \"Laura\").","- own_property(\"Shaun\", \"Laura\").","- evening_bag(\"Emily\", \"Laura\").","- brains(\"Emily\")."],"noisy_facts":["subtraction(\"Shaun\", \"Emily\").","- vascular_plant.","water_pipe(\"Shaun\", \"Laura\").","dip(\"Emily\").","- coulterneb(\"Michael\").","toy_soldier(\"Emily\", \"Michael\").","- thenar(\"Shaun\", \"Laura\")."],"min_fact_dicts_for_query":["cigarette_butt(\"Shaun\").","- causal_agent(\"Shaun\", \"Laura\").","- enjoy_sex(\"Shaun\", \"Michael\").","van_allen_belt(\"Emily\", \"Michael\").","emulsion(\"Emily\", \"Laura\").","ballroom(\"Michael\", \"Laura\")."],"noiseless_rules":["soft_finned_fish(V0) :- mocha(V0, V1), - pacifist(V1, V3), not -talk(V1, V3).","mocha(V0, V1) :- cigarette_butt(V0), - enjoy_sex(V0, V2), van_allen_belt(V1, V2).","pigment(V0, V3) :- - property(V1), waterproofing(V0, V1), ad(V0, V3).","indian_restaurant(V0) :- pigment(V0, V3), not -age_well(V0, V3), not black_kite(V0, V3).","age_well(V0, V3) :- - counterbore(V0, V1), - badge(V0, V3), not -crash_helmet(V0, V3).","computer(V1) :- - counterbore(V0, V1), - badge(V0, V3), not -crash_helmet(V0, V3).","- pacifist(V1, V3) :- - causal_agent(V0, V3), emulsion(V1, V3), ballroom(V2, V3).","- property(V1) :- - causal_agent(V0, V3), emulsion(V1, V3), ballroom(V2, V3).","talk(V0, V0) :- indian_restaurant(V0), not bistro(V0), not earth(V0).","waterproofing(V1, V1) :- computer(V1), not brains(V1).","- bistro(V1) :- computer(V1), not brains(V1).","ad(V0, V3) :- pendulum(V0, V3), - own_property(V0, V3), - evening_bag(V1, V3)."],"noisy_rules":{"a":["- soft_finned_fish(V1) :- - computer(V1), - talk(V1, V3).","- soft_finned_fish(V0) :- bistro(V0)."],"b":["- ad(V0, V3) :- - pigment(V0, V3), not soft_finned_fish(V0).","- ballroom(V0, V3) :- - pigment(V0, V3), - soft_finned_fish(V0)."],"c":["pacifist(V1, V3) :- - mocha(V0, V1), - pigment(V0, V3).","bistro(V0) :- - mocha(V0, V1), not indian_restaurant(V0), not -property(V1)."],"d":["- crash_helmet(V0, V3) :- - age_well(V0, V3), - talk(V1, V3), not -water_pipe(V0, V3).","- van_allen_belt(V1, V3) :- - indian_restaurant(V0), - talk(V1, V3), not vascular_plant."],"e":["- procreation(V1, V2) :- not coulterneb(V2), toy_soldier(V1, V2).","palaces(V0, V3) :- dip(V1), subtraction(V0, V1), - thenar(V0, V3)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_55_9_11_11_11_0.5_1.0_3_2_3","seed":55,"num_facts":15,"num_rules":12,"num_related_predicates":27,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P11(\"Annette\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P12(\"Jennifer\", \"Annette\").","- P13(\"Jennifer\").","P14(\"Jennifer\", \"Tracy\").","P15(\"Annette\", \"Tracy\").","- P16(\"Jennifer\", \"Annette\").","- P17(\"Jennifer\", \"Annette\").","P18(\"Jennifer\", \"Tracy\").","P19(\"Jennifer\", \"Tracy\").","P20(\"Tracy\").","P21(\"Tracy\").","P22(\"Jennifer\", \"Annette\").","P23(\"Annette\", \"Tracy\").","- P24(\"Annette\", \"Tracy\").","- P25(\"Tracy\", \"Joshua\").","P26(\"Tracy\", \"Joshua\")."],"noisy_facts":["- P33(\"Annette\", \"Tracy\").","- P32(\"Annette\").","P28(\"Annette\").","P31(\"Jennifer\", \"Tracy\").","- P30(\"Jennifer\", \"Tracy\").","P34(\"Annette\", \"Joshua\")."],"min_fact_dicts_for_query":["P12(\"Jennifer\", \"Annette\").","- P13(\"Jennifer\").","P18(\"Jennifer\", \"Tracy\").","P22(\"Jennifer\", \"Annette\").","P23(\"Annette\", \"Tracy\")."],"noiseless_rules":["- P11(V1) :- P3(V1), P6(V1, V3), not P8(V1, V3).","P0(V2) :- P12(V0, V1), P18(V0, V2), not -P19(V0, V2).","P1(V0, V1) :- P12(V0, V1), P18(V0, V2), not -P19(V0, V2).","- P2(V1) :- P12(V0, V1), P18(V0, V2), not -P19(V0, V2).","P3(V1) :- - P13(V0), P22(V0, V1), P23(V1, V2).","- P4(V0, V1) :- - P13(V0), P22(V0, V1), P23(V1, V2).","- P5(V0, V2) :- P14(V0, V2), - P24(V1, V2), - P25(V2, V3).","P6(V1, V3) :- - P7(V0, V3), - P9(V1, V2), not -P10(V1, V3).","- P7(V2, V2) :- P0(V2), not -P20(V2), not -P21(V2).","- P8(V1, V2) :- P1(V0, V1), - P5(V0, V2), not P16(V0, V1).","- P9(V1, V1) :- - P2(V1), - P4(V0, V1), not P17(V0, V1).","P10(V1, V3) :- P15(V1, V2), P26(V2, V3)."],"noisy_rules":{"a":["P11(V1) :- - P3(V1).","P11(V1) :- P2(V1)."],"b":["P24(V1, V3) :- - P10(V1, V3), P11(V1).","P13(V0) :- P5(V0, V2), - P6(V1, V3), P11(V1)."],"c":["- P23(V1, V2) :- - P0(V2), P7(V0, V3), P9(V1, V2).","P17(V3, V1) :- - P10(V1, V3)."],"d":["- P27(V1) :- - P6(V1, V3).","P9(V1, V1) :- P2(V1), not -P28(V1)."],"e":["P29(V2) :- - P30(V0, V2), not -P31(V0, V2).","- P35(V1) :- - P32(V1), - P33(V1, V2), P34(V1, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_70_5_4_4_7_0.5_1.0_3_2_3","seed":70,"num_facts":7,"num_rules":5,"num_related_predicates":12,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"setter(\"Rhonda\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["subaltern(\"Ryan\", \"Gloria\").","bombs(\"Ryan\", \"Rhonda\").","- animal_place(\"Ryan\", \"Gloria\").","theater_curtain(\"Ryan\", \"Andrew\").","gurgle(\"Ryan\", \"Andrew\").","farmer(\"Rhonda\", \"Gloria\").","- two_kidneys(\"Rhonda\", \"Gloria\")."],"noisy_facts":["inland_bill(\"Rhonda\", \"Gloria\").","- launch_space_shuttle_into_orbit.","- horizontal_bar(\"Rhonda\", \"Gloria\").","tie_knots(\"Gloria\", \"Andrew\").","- beak."],"min_fact_dicts_for_query":["subaltern(\"Ryan\", \"Gloria\").","bombs(\"Ryan\", \"Rhonda\").","- animal_place(\"Ryan\", \"Gloria\").","theater_curtain(\"Ryan\", \"Andrew\")."],"noiseless_rules":["setter(V1) :- reporter(V3), - antler(V0, V1), not -cormorant(V1, V3).","reporter(V3) :- subaltern(V0, V2), theater_curtain(V0, V3), not -gurgle(V0, V3).","vermin(V1, V2) :- bombs(V0, V1), - animal_place(V0, V2).","- antler(V1, V1) :- vermin(V1, V2), not -farmer(V1, V2), not two_kidneys(V1, V2).","cormorant(V1, V0) :- vermin(V1, V2), - animal_place(V0, V2), not -farmer(V1, V2)."],"noisy_rules":{"a":["- setter(V1) :- antler(V0, V1), - cormorant(V1, V3).","- setter(V3) :- - reporter(V3)."],"b":["- vermin(V1, V1) :- - cormorant(V1, V3), not setter(V1).","- gurgle(V1, V3) :- - reporter(V3), - setter(V1)."],"c":["- reporter(V3) :- - cormorant(V1, V3).","animal_place(V3, V2) :- - reporter(V3), - vermin(V1, V2)."],"d":["- farmer(V1, V3) :- - reporter(V3), antler(V0, V1), - beak.","animal_place(V2, V2) :- - reporter(V3), - vermin(V1, V2), - launch_space_shuttle_into_orbit."],"e":["- bevel(V1) :- inland_bill(V1, V2).","accomplishing_more(V1, V2) :- - horizontal_bar(V1, V2), tie_knots(V2, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_14_10_10_10_13_0.5_1.0_3_2_3","seed":14,"num_facts":15,"num_rules":11,"num_related_predicates":26,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"sensitivity(\"Sara\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["food_court(\"Thomas\").","hold_water(\"Sara\", \"Thomas\").","- bestiary(\"Amy\", \"Tanya\").","- dispatch_case(\"Amy\", \"Sara\").","valve(\"Amy\", \"Thomas\").","- jail(\"Sara\", \"Tanya\").","- different_sizes(\"Sara\", \"Thomas\").","commissioned_military_officer(\"Sara\", \"Tanya\").","- signal(\"Sara\", \"Tanya\").","- travelling_abroad(\"Amy\", \"Sara\").","street(\"Tanya\", \"Thomas\").","rope_burn(\"Thomas\").","certificate(\"Sara\", \"Thomas\").","- bedsitting_room(\"Sara\").","sense_smell(\"Amy\", \"Thomas\")."],"noisy_facts":["get_stuck_shut(\"Amy\", \"Sara\").","water_chinquapin(\"Amy\", \"Sara\").","trampoline(\"Amy\", \"Sara\").","buses(\"Sara\").","coffee_table_book(\"Amy\", \"Thomas\")."],"min_fact_dicts_for_query":["food_court(\"Thomas\").","hold_water(\"Sara\", \"Thomas\").","rope_burn(\"Thomas\").","certificate(\"Sara\", \"Thomas\")."],"noiseless_rules":["sensitivity(V1) :- tiger_cub(V1, V2), brood_hen(V1, V3), not -street(V2, V3).","cadaver(V1, V3) :- food_court(V3), rope_burn(V3), certificate(V1, V3).","- edirne(V3, V1) :- hold_water(V1, V3), not -certificate(V1, V3).","- american_crow(V0, V1) :- - bestiary(V0, V2), - jail(V1, V2), - different_sizes(V1, V3).","spherical(V1) :- - dispatch_case(V0, V1), commissioned_military_officer(V1, V2), not signal(V1, V2).","motley(V0, V1) :- - american_crow(V0, V1), not -spherical(V1), not -travel_and_then_return_back_home(V0, V1).","tiger_cub(V1, V1) :- - edirne(V0, V1), rope_burn(V3), not -certificate(V1, V3).","travel_and_then_return_back_home(V0, V1) :- - edirne(V0, V1), rope_burn(V3), not -certificate(V1, V3).","- roulade(V0, V3) :- valve(V0, V3), not -sense_smell(V0, V3).","electrically(V1) :- motley(V0, V1), - roulade(V0, V3), not travelling_abroad(V0, V1).","brood_hen(V1, V3) :- cadaver(V1, V3), not -electrically(V1), not bedsitting_room(V1)."],"noisy_rules":{"a":["- sensitivity(V1) :- - brood_hen(V1, V3).","- sensitivity(V1) :- edirne(V0, V1), not -american_crow(V0, V1)."],"b":["- certificate(V1, V2) :- - tiger_cub(V1, V2), - sensitivity(V1).","- cadaver(V1, V1) :- american_crow(V0, V1), - spherical(V1), not sensitivity(V1)."],"c":["dispatch_case(V0, V3) :- roulade(V0, V3).","bedsitting_room(V1) :- american_crow(V0, V1), - tiger_cub(V1, V2)."],"d":["travelling_abroad(V0, V1) :- not motley(V0, V1), not electrically(V1), water_chinquapin(V0, V1).","- brood_hen(V1, V1) :- not electrically(V1), buses(V1)."],"e":["- blackbuck(V0, V1) :- get_stuck_shut(V0, V1), coffee_table_book(V0, V3).","rent(V0, V1) :- trampoline(V0, V1)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_33_9_8_6_9_0.5_1.0_3_3_4","seed":33,"num_facts":10,"num_rules":9,"num_related_predicates":19,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.125,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"P8(\"Robert\", \"Samuel\", \"Alyssa\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P9(\"William\", \"Samuel\", \"Alyssa\").","- P10(\"Robert\", \"Alyssa\", \"Sheena\").","P11(\"Robert\", \"Sheena\").","- P12(\"Robert\", \"Samuel\", \"Sheena\").","- P13(\"Robert\", \"Sheena\").","P14(\"William\", \"Samuel\", \"Alyssa\").","P15(\"William\", \"Samuel\", \"Alyssa\").","- P16(\"Samuel\", \"Sheena\").","P17(\"Alyssa\", \"Sheena\").","P18(\"Robert\", \"Alyssa\", \"Sheena\")."],"noisy_facts":["P21(\"Robert\", \"William\", \"Alyssa\").","P26(\"Robert\", \"William\", \"Samuel\").","P25(\"Samuel\", \"Alyssa\").","P23(\"William\", \"Samuel\", \"Sheena\").","- P22(\"Robert\", \"Samuel\", \"Alyssa\").","- P24(\"Robert\", \"Samuel\").","- P19(\"Robert\", \"Samuel\")."],"min_fact_dicts_for_query":["P9(\"William\", \"Samuel\", \"Alyssa\").","- P10(\"Robert\", \"Alyssa\", \"Sheena\").","- P12(\"Robert\", \"Samuel\", \"Sheena\").","- P16(\"Samuel\", \"Sheena\")."],"noiseless_rules":["P8(V0, V2, V3) :- - P6(V0, V2), - P7(V0, V2), P9(V1, V2, V3).","- P0(V0, V3, V4) :- - P4(V0, V3), - P16(V2, V4), not -P17(V3, V4).","- P1(V2, V2) :- P9(V1, V2, V3), not -P14(V1, V2, V3), not -P15(V1, V2, V3).","- P2(V0, V3, V4) :- - P10(V0, V3, V4).","- P3(V0, V0, V4) :- - P1(V0, V4), not P5(V0, V4), not P13(V0, V4).","- P4(V0, V3) :- - P2(V0, V3, V4), not P3(V0, V3, V4), not -P18(V0, V3, V4).","- P5(V0, V4) :- - P1(V0, V4), not -P11(V0, V4).","- P6(V0, V2) :- - P0(V0, V3, V4), - P16(V2, V4).","- P7(V0, V2) :- - P12(V0, V2, V4)."],"noisy_rules":{"a":["- P8(V0, V3, V3) :- P4(V0, V3).","- P8(V0, V4, V3) :- P3(V0, V3, V4)."],"b":["- P9(V4, V2, V3) :- P5(V0, V4), P7(V0, V2), - P8(V0, V2, V3).","P0(V0, V3, V4) :- P1(V0, V4), - P8(V0, V2, V3)."],"c":["P13(V0, V3) :- P4(V0, V3).","- P14(V2, V2, V3) :- P4(V0, V3), P7(V0, V2)."],"d":["P13(V0, V4) :- P5(V0, V4), P7(V0, V2), - P19(V0, V2).","P10(V0, V0, V4) :- P1(V0, V4)."],"e":["- P20(V0, V1) :- not -P21(V0, V1, V3), - P22(V0, V2, V3), P23(V1, V2, V4).","P27(V0, V3) :- - P24(V0, V2), P25(V2, V3), P26(V0, V1, V2)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_67_7_11_11_12_0.5_1.0_5_2_3","seed":67,"num_facts":13,"num_rules":12,"num_related_predicates":25,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" dig(\"April\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["achromatic_color.","mole(\"April\").","- blackhead(\"Nicole\").","- whitehead(\"Jason\", \"April\").","dent(\"Jason\", \"Nicole\").","- leeward(\"April\", \"James\").","complexion(\"Jason\", \"James\").","- face(\"Jason\", \"James\").","persona(\"Jason\", \"James\").","connective_tissue(\"Jason\", \"James\").","- district(\"April\", \"Nicole\").","- cathedral(\"April\", \"Nicole\").","- london(\"April\", \"Nicole\")."],"noisy_facts":["- tupi_guarani(\"April\", \"James\").","tongue(\"Jason\", \"James\").","- supper(\"James\").","low_explosive(\"Jason\", \"James\").","- bone(\"Jason\", \"April\").","- propellant_explosive(\"April\", \"James\").","- onion_dome(\"Jason\", \"April\")."],"min_fact_dicts_for_query":["mole(\"April\").","- blackhead(\"Nicole\").","- whitehead(\"Jason\", \"April\").","dent(\"Jason\", \"Nicole\").","- leeward(\"April\", \"James\")."],"noiseless_rules":["- dig(V1) :- blemish(V1), city(V3), not -appearance(V1, V3).","- position(V0, V3) :- direction(V0, V3), not -achromatic_color.","- capital(V3, V0) :- direction(V0, V3), not -achromatic_color.","- color(V0, V3) :- direction(V0, V3), not -achromatic_color.","matrix(V0, V3) :- - position(V0, V3), not -direction(V0, V3), not interest(V0, V3).","beauty(V1, V0) :- matrix(V0, V1), not -skin(V0, V1).","blemish(V1) :- mole(V1), - blackhead(V2), - whitehead(V0, V1), dent(V0, V2), - leeward(V1, V3).","direction(V0, V3) :- mole(V1), - blackhead(V2), - whitehead(V0, V1), dent(V0, V2), - leeward(V1, V3).","skin(V0, V1) :- mole(V1), - blackhead(V2), - whitehead(V0, V1), dent(V0, V2), - leeward(V1, V3).","city(V1) :- - capital(V1, V2), not -beauty(V1, V2), not district(V1, V2), not cathedral(V1, V2), not london(V1, V2).","appearance(V0, V3) :- - color(V0, V3), not -complexion(V0, V3), not face(V0, V3), not -persona(V0, V3), not -connective_tissue(V0, V3).","- interest(V0, V3) :- - color(V0, V3), not -complexion(V0, V3), not face(V0, V3), not -persona(V0, V3), not -connective_tissue(V0, V3)."],"noisy_rules":{"a":["dig(V1) :- - matrix(V0, V1), - beauty(V1, V2).","dig(V1) :- capital(V1, V2), - matrix(V0, V1), not direction(V0, V3), - skin(V0, V1), - appearance(V1, V3)."],"b":["- dent(V0, V2) :- color(V0, V3), - matrix(V0, V1), - beauty(V1, V2), not city(V3), dig(V1).","- direction(V0, V3) :- - direction(V0, V3), dig(V1)."],"c":["- persona(V0, V3) :- position(V0, V3), - matrix(V0, V1), not city(V3).","- appearance(V1, V3) :- color(V0, V3), - matrix(V0, V1)."],"d":["- connective_tissue(V0, V1) :- - matrix(V0, V1), - skin(V0, V1), - bone(V0, V1).","- appearance(V1, V3) :- color(V0, V3), - beauty(V1, V2), not blemish(V1), not direction(V0, V3), not -tongue(V0, V3)."],"e":["explosive(V0, V3) :- low_explosive(V0, V3), - propellant_explosive(V1, V3).","- owls(V0, V3) :- - supper(V3), - onion_dome(V0, V1), - tupi_guarani(V1, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_14_8_10_9_11_0.5_1.0_3_2_3","seed":14,"num_facts":10,"num_rules":11,"num_related_predicates":21,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.5714285714285716,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"wealth(\"Shelby\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["education(\"Jeremiah\").","contain_food(\"Jessica\", \"Shelby\").","root_vegetable(\"Jessica\", \"Shelby\").","sewer_pipe(\"Jeremiah\").","intellectual_property(\"Jeremiah\").","painted_beauty(\"Jessica\", \"Shelby\").","sattelites(\"Shelby\", \"Jeremiah\").","under_trees(\"Shelby\", \"Jeremiah\").","duckling(\"Jessica\", \"Shelby\").","natural_fiber(\"Shelby\", \"Jeremiah\")."],"noisy_facts":[],"min_fact_dicts_for_query":["education(\"Jeremiah\").","contain_food(\"Jessica\", \"Shelby\").","root_vegetable(\"Jessica\", \"Shelby\").","sewer_pipe(\"Jeremiah\").","intellectual_property(\"Jeremiah\").","painted_beauty(\"Jessica\", \"Shelby\").","sattelites(\"Shelby\", \"Jeremiah\").","under_trees(\"Shelby\", \"Jeremiah\").","duckling(\"Jessica\", \"Shelby\").","natural_fiber(\"Shelby\", \"Jeremiah\")."],"noiseless_rules":["wealth(V1) :- intravenous_drip(V1, V2), hunt_for_prey(V1, V3), eaglet(V2, V3).","canadian_bacon(V1, V3) :- education(V3), duckling(V0, V1), natural_fiber(V1, V3).","lappet_caterpillar(V3) :- education(V3), duckling(V0, V1), natural_fiber(V1, V3).","sweet(V3, V1) :- canadian_bacon(V1, V3), sattelites(V1, V3), under_trees(V1, V3).","rifle(V3, V1) :- canadian_bacon(V1, V3), sattelites(V1, V3), under_trees(V1, V3).","intravenous_drip(V3, V3) :- water_fowl(V3), bottlecap(V3), education(V3).","water_fowl(V3) :- hunt_for_prey(V1, V3).","source_of_food_for_people(V1, V1) :- hunt_for_prey(V1, V3).","hunt_for_prey(V1, V1) :- sweet(V0, V1), contain_food(V0, V1), root_vegetable(V0, V1).","bottlecap(V3) :- lappet_caterpillar(V3), sewer_pipe(V3), intellectual_property(V3).","eaglet(V2, V1) :- rifle(V0, V1), source_of_food_for_people(V1, V2), painted_beauty(V0, V1)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_17_5_8_4_4_0.5_1.0_3_2_3","seed":17,"num_facts":6,"num_rules":9,"num_related_predicates":15,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"P8(\"Stephen\", \"James\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P9(\"Christine\", \"Stephen\").","- P10(\"Christine\", \"Stephen\").","- P11(\"Christine\", \"Debra\").","- P12(\"Christine\", \"James\").","- P13(\"Stephen\", \"Debra\").","- P14(\"Stephen\", \"Debra\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P9(\"Christine\", \"Stephen\").","- P10(\"Christine\", \"Stephen\").","- P11(\"Christine\", \"Debra\").","- P12(\"Christine\", \"James\").","- P13(\"Stephen\", \"Debra\")."],"noiseless_rules":["P8(V1, V3) :- - P0(V0, V1), P4(V0, V2), - P5(V1, V3).","- P0(V0, V1) :- P9(V0, V1), - P13(V1, V2), not P14(V1, V2).","- P1(V0, V1) :- P9(V0, V1), - P13(V1, V2), not P14(V1, V2).","- P2(V0, V2) :- P9(V0, V1), - P13(V1, V2), not P14(V1, V2).","- P3(V0) :- - P1(V0, V1), not P6(V0, V1).","P4(V0, V2) :- - P2(V0, V2), not P3(V2), not P7(V0, V2).","- P5(V1, V3) :- - P10(V0, V1), - P11(V0, V2), - P12(V0, V3).","- P6(V0, V1) :- - P10(V0, V1), - P11(V0, V2), - P12(V0, V3).","- P7(V0, V2) :- - P10(V0, V1), - P11(V0, V2), - P12(V0, V3)."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_32_9_13_3_5_0.5_1.0_3_2_3","seed":32,"num_facts":6,"num_rules":14,"num_related_predicates":20,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"hangar_queen(\"Gabriel\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["hair(\"Margaret\", \"Gabriel\").","growing_vegetables(\"Gabriel\", \"Regina\").","fly(\"Jennifer\").","paper(\"Gabriel\", \"Regina\").","- sky(\"Regina\", \"Jennifer\").","- vinyard(\"Regina\")."],"noisy_facts":[],"min_fact_dicts_for_query":["fly(\"Jennifer\").","paper(\"Gabriel\", \"Regina\")."],"noiseless_rules":["hangar_queen(V1) :- bottle_wine(V2), getting_food_to_feed_to_others(V2), - manufacture(V1, V2).","bottle_wine(V2) :- - factory(V2), not -machines(V2), not vinyard(V2).","head(V0, V1) :- hair(V0, V1).","getting_food_to_feed_to_others(V2) :- - manufacture(V1, V2), not -growing_vegetables(V1, V2).","eating(V1, V2) :- - manufacture(V1, V2), not -growing_vegetables(V1, V2).","- factory(V2) :- - manufacture(V1, V2), not winery(V1, V2), not distillery(V1, V2).","- manufacture(V1, V2) :- - planes(V1, V2), not -part(V1, V2).","machines(V2) :- - planes(V1, V2), not -part(V1, V2).","- winery(V1, V2) :- - planes(V1, V2), not -part(V1, V2).","flying(V1) :- - planes(V1, V2), not -part(V1, V2).","- distillery(V1, V2) :- eating(V1, V2), not -flying(V1), not animal(V1).","- planes(V1, V2) :- fly(V3), paper(V1, V2), not sky(V2, V3).","part(V1, V0) :- head(V0, V1).","- animal(V1) :- head(V0, V1)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_66_9_8_4_7_0.5_1.0_3_2_3","seed":66,"num_facts":9,"num_rules":9,"num_related_predicates":18,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" P8(\"Robert\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P9(\"Jack\", \"Robert\").","- P10(\"Robert\", \"Jonathon\").","P11(\"Robert\").","- P12(\"Jack\", \"Robert\").","- P13(\"Robert\", \"Jonathon\").","P14(\"Robert\", \"Jonathon\").","P15(\"Robert\", \"Jonathon\").","P16(\"Jack\", \"Brian\").","- P17(\"Robert\", \"Brian\")."],"noisy_facts":["P22(\"Brian\").","P25(\"Robert\", \"Jonathon\").","P18(\"Robert\", \"Jonathon\").","P21(\"Brian\").","- P23(\"Jack\", \"Brian\").","P19(\"Jack\", \"Brian\")."],"min_fact_dicts_for_query":["P11(\"Robert\").","- P13(\"Robert\", \"Jonathon\").","P16(\"Jack\", \"Brian\")."],"noiseless_rules":["- P8(V1) :- P0(V0, V1), - P4(V0, V3).","P0(V0, V1) :- P1(V0, V1), - P3(V0, V1), - P6(V1, V3).","P1(V0, V1) :- - P3(V0, V1), not P9(V0, V1).","P2(V1, V2) :- - P10(V1, V2).","- P3(V0, V1) :- P11(V1), P16(V0, V3), not P17(V1, V3).","- P4(V0, V0) :- P1(V0, V1), not P12(V0, V1).","P5(V1, V2) :- - P13(V1, V2).","- P6(V1, V1) :- P5(V1, V2), not -P7(V1, V2), not P13(V1, V2).","P7(V1, V2) :- P2(V1, V2), not -P14(V1, V2), not -P15(V1, V2)."],"noisy_rules":{"a":["P8(V3) :- P4(V0, V3).","P8(V1) :- - P2(V1, V2), P4(V0, V3)."],"b":["P17(V1, V1) :- - P2(V1, V2), P8(V1).","- P15(V1, V1) :- - P0(V0, V1), P8(V1)."],"c":["- P0(V0, V1) :- - P1(V0, V1), P6(V1, V3).","- P11(V1) :- - P1(V0, V1), not P2(V1, V2), - P7(V1, V2)."],"d":["- P16(V3, V3) :- P6(V1, V3), not P7(V1, V2), P18(V1, V2).","- P11(V0) :- P4(V0, V3), P19(V0, V3)."],"e":["P20(V0, V3) :- P21(V3), P22(V3), - P23(V0, V3).","- P24(V1, V2) :- P25(V1, V2)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_81_9_11_9_10_0.5_1.0_3_2_3","seed":81,"num_facts":11,"num_rules":12,"num_related_predicates":23,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.125,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"explosive_device(\"Sarah\", \"Joshua\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- wing(\"Candace\", \"Sarah\").","leaf_beetle(\"Candace\", \"Sarah\").","aileron(\"Candace\", \"Sarah\").","vertical_tail(\"Sarah\", \"Joshua\").","- emmenagogue(\"Sarah\", \"Joshua\").","woodwind_family(\"Sarah\", \"Joshua\").","- propellant_explosive(\"Sarah\", \"Joshua\").","- nitramine(\"Sarah\", \"Joshua\").","- device(\"Sarah\", \"Joshua\").","vegetarian(\"Sarah\", \"Joshua\").","- bruin(\"Samuel\", \"Joshua\")."],"noisy_facts":["- spoon(\"Candace\", \"Sarah\").","- grenade(\"Sarah\", \"Joshua\").","- female_reproductive_system(\"Candace\", \"Sarah\").","kings_hat(\"Sarah\", \"Joshua\").","production_cost(\"Sarah\", \"Joshua\").","ammunition(\"Sarah\", \"Joshua\").","salad(\"Samuel\", \"Joshua\").","lac(\"Candace\", \"Sarah\")."],"min_fact_dicts_for_query":["- wing(\"Candace\", \"Sarah\").","leaf_beetle(\"Candace\", \"Sarah\").","aileron(\"Candace\", \"Sarah\").","vertical_tail(\"Sarah\", \"Joshua\").","vegetarian(\"Sarah\", \"Joshua\").","- bruin(\"Samuel\", \"Joshua\")."],"noiseless_rules":["explosive_device(V1, V3) :- - bomb(V1, V3), - seal_bomb(V2, V3), not -explosive(V2, V3).","- bomb(V1, V3) :- dumb_bomb(V1, V3), not -balloon_bomb(V1, V3).","dumb_bomb(V1, V3) :- - detonator(V3), - petard(V1, V3), not device(V1, V3).","- airfoil(V1, V3) :- - wing(V0, V1), aileron(V0, V1), vertical_tail(V1, V3).","low_explosive(V1, V3) :- - wing(V0, V1), aileron(V0, V1), vertical_tail(V1, V3).","- seal_bomb(V2, V3) :- leaf_beetle(V0, V1), vegetarian(V1, V3), - bruin(V2, V3).","- detonator(V0) :- percussion_cap(V0, V1), not -aileron(V0, V1).","- petard(V1, V3) :- - airfoil(V1, V3), not emmenagogue(V1, V3), not -woodwind_family(V1, V3).","explosive(V3, V3) :- low_explosive(V1, V3), not propellant_explosive(V1, V3), not nitramine(V1, V3).","- torpedo(V3) :- low_explosive(V1, V3), not propellant_explosive(V1, V3), not nitramine(V1, V3).","balloon_bomb(V2, V2) :- - torpedo(V2).","percussion_cap(V2, V2) :- - torpedo(V2)."],"noisy_rules":{"a":["- explosive_device(V1, V3) :- petard(V1, V3), torpedo(V2).","- explosive_device(V1, V3) :- not -bomb(V1, V3), not -detonator(V3), petard(V1, V3)."],"b":["detonator(V3) :- - explosive_device(V1, V3).","device(V1, V3) :- airfoil(V1, V3), not explosive_device(V1, V3)."],"c":["nitramine(V1, V3) :- airfoil(V1, V3), - low_explosive(V1, V3).","- low_explosive(V1, V3) :- bomb(V1, V3), - percussion_cap(V0, V1)."],"d":["- weaponry(V1, V3) :- bomb(V1, V3), ammunition(V1, V3).","bomb(V1, V3) :- - low_explosive(V1, V3), not grenade(V1, V3)."],"e":["reproductive_system(V0, V2) :- - female_reproductive_system(V0, V1), not -kings_hat(V1, V3), salad(V2, V3).","- priest(V1, V3) :- - spoon(V0, V1), not -lac(V0, V1), production_cost(V1, V3)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_67_6_6_5_8_0.5_1.0_5_3_4","seed":67,"num_facts":9,"num_rules":7,"num_related_predicates":16,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"nap(\"Erica\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["hair(\"Erica\", \"James\", \"Sarah\").","yukon(\"Erica\", \"James\", \"Sarah\").","community(\"James\", \"Sarah\").","- lower_berth(\"James\", \"Sarah\").","synthetic_or_animal_hair(\"Scott\", \"Erica\", \"James\").","bit(\"Scott\", \"James\", \"Sarah\").","- cough(\"Daniel\", \"Erica\", \"James\").","- broiler(\"James\", \"Sarah\").","- clean_wounds(\"Scott\", \"Daniel\", \"Sarah\")."],"noisy_facts":["- good_thing(\"Erica\", \"James\").","work_of_art(\"Scott\", \"Sarah\").","people_who_enjoy_playing_game(\"Scott\", \"Sarah\").","- blue(\"Scott\", \"James\", \"Sarah\").","people_who_can_afford_groceries(\"Scott\", \"Erica\", \"Sarah\").","- orange(\"Daniel\", \"James\", \"Sarah\").","airport(\"Erica\", \"James\", \"Sarah\").","- past(\"Scott\", \"Erica\", \"James\").","red_silk_cotton(\"Scott\", \"Erica\").","mite(\"Scott\", \"Erica\", \"Sarah\").","murphy_bed(\"Erica\", \"James\").","public_institutions(\"Daniel\", \"James\", \"Sarah\").","- bring_rain(\"Scott\", \"Sarah\").","- lobe(\"Scott\", \"Sarah\")."],"min_fact_dicts_for_query":["hair(\"Erica\", \"James\", \"Sarah\").","synthetic_or_animal_hair(\"Scott\", \"Erica\", \"James\").","bit(\"Scott\", \"James\", \"Sarah\")."],"noiseless_rules":["nap(V2) :- - celebrating(V1), dingbat(V2), synthetic_or_animal_hair(V0, V2, V3), bit(V0, V3, V4), not cough(V1, V2, V3).","time_unit(V2, V3, V4) :- hair(V2, V3, V4).","- early_night(V3, V4) :- hair(V2, V3, V4), not -yukon(V2, V3, V4).","- celebrating(V4) :- - early_night(V3, V4), not -community(V3, V4), not broiler(V3, V4).","- gasoline(V3, V4) :- - early_night(V3, V4), not -community(V3, V4), not broiler(V3, V4).","dingbat(V2) :- time_unit(V2, V3, V4), - early_night(V3, V4), - gasoline(V0, V4), not -breath(V0, V4), not broiler(V3, V4).","breath(V0, V4) :- - lower_berth(V3, V4), - clean_wounds(V0, V1, V4)."],"noisy_rules":{"a":["- nap(V2) :- - time_unit(V2, V3, V4).","- nap(V2) :- early_night(V3, V4), celebrating(V1), gasoline(V0, V4), - dingbat(V2)."],"b":["celebrating(V2) :- - nap(V2).","- synthetic_or_animal_hair(V2, V2, V2) :- - nap(V2)."],"c":["gasoline(V3, V4) :- - time_unit(V2, V3, V4), not -early_night(V3, V4), - dingbat(V2).","cough(V4, V2, V3) :- - time_unit(V2, V3, V4), early_night(V3, V4), gasoline(V0, V4), not breath(V0, V4)."],"d":["clean_wounds(V2, V3, V4) :- - time_unit(V2, V3, V4), early_night(V3, V4), not -airport(V2, V3, V4).","- time_unit(V1, V0, V4) :- celebrating(V1), not breath(V0, V4), not bring_rain(V0, V4), - lobe(V0, V4), work_of_art(V0, V4)."],"e":["isogamete(V1, V3) :- people_who_enjoy_playing_game(V0, V4), mite(V0, V2, V4), - blue(V0, V3, V4), public_institutions(V1, V3, V4), not orange(V1, V3, V4).","george_bush(V2, V4) :- red_silk_cotton(V0, V2), not -murphy_bed(V2, V3), not good_thing(V2, V3), - past(V0, V2, V3), people_who_can_afford_groceries(V0, V2, V4)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_26_8_7_6_7_0.5_1.0_3_2_3","seed":26,"num_facts":10,"num_rules":8,"num_related_predicates":18,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" goose(\"Jennifer\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["fowl(\"John\", \"Jennifer\").","- share_experiences(\"Nicole\").","percept(\"John\", \"Jennifer\").","chilly(\"Nicole\", \"Kelly\").","demiurge(\"Nicole\", \"Jennifer\").","escalope_de_veau_orloff(\"Nicole\", \"Jennifer\").","- tower(\"Nicole\", \"Kelly\").","- values(\"Nicole\", \"Kelly\").","maneuver(\"Nicole\", \"Jennifer\").","lot_of_calcium(\"Kelly\", \"Jennifer\")."],"noisy_facts":[],"min_fact_dicts_for_query":["fowl(\"John\", \"Jennifer\").","- share_experiences(\"Nicole\").","chilly(\"Nicole\", \"Kelly\").","demiurge(\"Nicole\", \"Jennifer\").","maneuver(\"Nicole\", \"Jennifer\")."],"noiseless_rules":["- goose(V3) :- double_breasted_jacket(V3), coffee_can(V2, V3).","- rock_dove(V0, V3) :- - crying_on_screen(V0, V3), ticket_office(V2, V3).","- crying_on_screen(V0, V3) :- fowl(V0, V3).","double_breasted_jacket(V3) :- - share_experiences(V1), demiurge(V1, V3), not -escalope_de_veau_orloff(V1, V3).","ticket_office(V2, V3) :- manitoba(V1, V2), maneuver(V1, V3), not -lot_of_calcium(V2, V3).","coffee_can(V0, V3) :- - rock_dove(V0, V3), not grabbing(V0, V3).","- grabbing(V0, V3) :- - rock_dove(V0, V3), not -percept(V0, V3).","manitoba(V1, V2) :- chilly(V1, V2), not tower(V1, V2), not values(V1, V2)."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_89_9_10_9_10_0.5_1.0_3_2_3","seed":89,"num_facts":12,"num_rules":11,"num_related_predicates":23,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"meat(\"Alexander\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- creation(\"Christopher\", \"Alexander\").","- restoration(\"Christopher\", \"Alexander\").","- december_holiday(\"Christopher\").","thumb(\"Christopher\", \"Joseph\").","argyll(\"Christopher\", \"Joseph\").","guillemot(\"Christopher\", \"Alexander\").","- butte(\"Christopher\", \"Joseph\").","- double_crosser(\"Christopher\", \"Joseph\").","foe(\"Alexander\", \"Gabriel\").","myriapod(\"Alexander\", \"Gabriel\").","- guilder(\"Christopher\", \"Gabriel\").","- cry(\"Joseph\", \"Gabriel\")."],"noisy_facts":["perpetration(\"Christopher\", \"Alexander\").","helminth(\"Alexander\", \"Gabriel\").","- pork_butcher(\"Christopher\", \"Gabriel\").","training_in_mental_and_physical_toughness(\"Christopher\", \"Alexander\").","- pilus(\"Alexander\").","- rhinion(\"Christopher\", \"Alexander\").","particle(\"Christopher\", \"Alexander\").","propagator(\"Alexander\", \"Joseph\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["meat(V1) :- rake_handle(V1, V2), foe(V1, V3), not -myriapod(V1, V3).","ram(V0, V1) :- breed_cattle(V0, V1), not system(V0, V1).","- protons(V0, V2) :- - creation(V0, V1), guillemot(V0, V1), - butte(V0, V2).","- parana(V1) :- - creation(V0, V1), guillemot(V0, V1), - butte(V0, V2).","irredenta(V0, V3) :- - restoration(V0, V1), - guilder(V0, V3), - cry(V2, V3).","holding_soda(V0, V2) :- - restoration(V0, V1), - guilder(V0, V3), - cry(V2, V3).","breed_cattle(V0, V2) :- - protons(V0, V2), irredenta(V0, V3), not double_crosser(V0, V2).","hoofed_mammals_oink(V0, V2) :- - december_holiday(V0), thumb(V0, V2), not -argyll(V0, V2).","rake_handle(V1, V0) :- ram(V0, V1), not parana(V1), not cock_leekie(V0, V1).","- cock_leekie(V0, V0) :- holding_soda(V0, V2).","- system(V0, V0) :- hoofed_mammals_oink(V0, V2), not december_holiday(V0)."],"noisy_rules":{"a":["- meat(V1) :- - hoofed_mammals_oink(V0, V2), cock_leekie(V0, V1).","- meat(V1) :- - ram(V0, V1), - breed_cattle(V0, V1), - hoofed_mammals_oink(V0, V2)."],"b":["- breed_cattle(V1, V1) :- - meat(V1).","- myriapod(V1, V1) :- parana(V1), not meat(V1)."],"c":["- foe(V1, V3) :- parana(V1), - irredenta(V0, V3).","- irredenta(V0, V0) :- not ram(V0, V1), system(V0, V1)."],"d":["- for_birds(V1) :- not ram(V0, V1), training_in_mental_and_physical_toughness(V0, V1).","- ram(V0, V3) :- - irredenta(V0, V3), not pork_butcher(V0, V3)."],"e":["swallow(V2) :- - rhinion(V0, V1), not -perpetration(V0, V1), propagator(V1, V2).","- petrol(V1) :- - pilus(V1), particle(V0, V1), helminth(V1, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_2_9_13_11_13_0.5_1.0_5_3_4","seed":2,"num_facts":14,"num_rules":14,"num_related_predicates":28,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" neckpiece(\"Thomas\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["sphere(\"Amanda\").","fib(\"Thomas\", \"Jennifer\", \"Amanda\").","- stoic(\"Lisa\").","- explode(\"Thomas\", \"Amanda\").","- pruning(\"Lisa\", \"Thomas\", \"Zachary\").","- zygote(\"Thomas\", \"Jennifer\", \"Amanda\").","- eupnea(\"Thomas\", \"Jennifer\", \"Amanda\").","having_fast_meal(\"Lisa\", \"Thomas\").","- hoofed_mammals_oink(\"Jennifer\", \"Amanda\").","- rodent(\"Lisa\", \"Jennifer\", \"Zachary\").","kings_hat(\"Lisa\", \"Jennifer\", \"Zachary\").","crappie(\"Lisa\", \"Thomas\").","- open_marriages(\"Lisa\", \"Thomas\", \"Zachary\").","season(\"Lisa\", \"Thomas\", \"Zachary\")."],"noisy_facts":["- dustpan(\"Thomas\", \"Zachary\").","hexapod(\"Thomas\", \"Jennifer\", \"Zachary\").","- gun(\"Thomas\", \"Jennifer\").","- educational_institution(\"Lisa\").","swage_block(\"Lisa\", \"Thomas\").","- resting_on(\"Lisa\")."],"min_fact_dicts_for_query":["sphere(\"Amanda\").","fib(\"Thomas\", \"Jennifer\", \"Amanda\").","- stoic(\"Lisa\").","- explode(\"Thomas\", \"Amanda\").","- pruning(\"Lisa\", \"Thomas\", \"Zachary\").","- zygote(\"Thomas\", \"Jennifer\", \"Amanda\").","having_fast_meal(\"Lisa\", \"Thomas\").","- hoofed_mammals_oink(\"Jennifer\", \"Amanda\").","- rodent(\"Lisa\", \"Jennifer\", \"Zachary\")."],"noiseless_rules":["- neckpiece(V1) :- - nit(V0, V3), narration(V0, V1, V3), arpent(V1, V2, V3).","- chocolate(V0, V1, V4) :- sphere(V3), having_fast_meal(V0, V1), - hoofed_mammals_oink(V2, V3), - rodent(V0, V2, V4), not -kings_hat(V0, V2, V4).","cottage(V2, V3, V4) :- sphere(V3), having_fast_meal(V0, V1), - hoofed_mammals_oink(V2, V3), - rodent(V0, V2, V4), not -kings_hat(V0, V2, V4).","- electricity(V3, V4) :- sphere(V3), having_fast_meal(V0, V1), - hoofed_mammals_oink(V2, V3), - rodent(V0, V2, V4), not -kings_hat(V0, V2, V4).","- nit(V0, V3) :- - chocolate(V0, V1, V4), - electricity(V3, V4), not -irredenta(V0, V1, V4), not open_marriages(V0, V1, V4), not -season(V0, V1, V4).","- antherozoid(V0, V1) :- - chocolate(V0, V1, V4), - electricity(V3, V4), not -irredenta(V0, V1, V4), not open_marriages(V0, V1, V4), not -season(V0, V1, V4).","- red_fox(V2, V3) :- fib(V1, V2, V3).","narration(V0, V1, V3) :- - stoic(V0), - explode(V1, V3), - pruning(V0, V1, V4), - zygote(V1, V2, V3), not eupnea(V1, V2, V3).","- directed_study(V0) :- - stoic(V0), - explode(V1, V3), - pruning(V0, V1, V4), - zygote(V1, V2, V3), not eupnea(V1, V2, V3).","- raphael(V0, V0) :- - directed_study(V0).","hypostasis(V0, V0) :- - directed_study(V0).","arpent(V1, V2, V3) :- - antherozoid(V0, V1), - red_fox(V2, V3), not raphael(V1, V2), not -launch_space_shuttle_into_orbit(V0, V1), not -crappie(V0, V1).","launch_space_shuttle_into_orbit(V2, V4) :- cottage(V2, V3, V4), not -hypostasis(V2, V4).","irredenta(V2, V1, V4) :- - electricity(V3, V4), - eupnea(V1, V2, V3)."],"noisy_rules":{"a":["neckpiece(V2) :- - cottage(V2, V3, V4).","neckpiece(V1) :- - arpent(V1, V2, V3), - launch_space_shuttle_into_orbit(V0, V1)."],"b":["- cottage(V2, V3, V4) :- electricity(V3, V4), - narration(V0, V1, V3), not hypostasis(V2, V4), - arpent(V1, V2, V3), not -neckpiece(V1).","- fib(V1, V2, V3) :- red_fox(V2, V3), - narration(V0, V1, V3), not -neckpiece(V1)."],"c":["chocolate(V0, V1, V1) :- nit(V0, V3), - narration(V0, V1, V3).","hoofed_mammals_oink(V2, V3) :- electricity(V3, V4), - narration(V0, V1, V3), directed_study(V0), raphael(V1, V2), not irredenta(V0, V1, V4)."],"d":["glabella(V3) :- red_fox(V2, V3), directed_study(V0), not educational_institution(V0), not resting_on(V0).","chocolate(V0, V1, V4) :- - cottage(V2, V3, V4), not -antherozoid(V0, V1), - launch_space_shuttle_into_orbit(V0, V1), not irredenta(V0, V1, V4), not -swage_block(V0, V1)."],"e":["coloradan(V1, V4) :- - gun(V1, V2), hexapod(V1, V2, V4).","- black_tailed_deer(V4) :- - dustpan(V1, V4)."]}},"num_min_facts_for_query":9,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_51_10_10_9_10_0.5_1.0_3_2_3","seed":51,"num_facts":15,"num_rules":11,"num_related_predicates":26,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"chatelaine(\"Carl\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["sharing_experience(\"Bernard\", \"Carl\").","hang_upside_down(\"Bernard\").","- fields(\"Bernard\", \"Carl\").","hairbrush(\"Bernard\", \"Carl\").","sign_contract(\"Bernard\", \"Julie\").","hold_water(\"Hailey\", \"Bernard\").","- riding_horses(\"Hailey\", \"Julie\").","- black_gold(\"Bernard\", \"Julie\").","- chordate(\"Hailey\", \"Carl\").","- graz(\"Bernard\", \"Julie\").","listen(\"Julie\", \"Carl\").","refrain(\"Julie\", \"Carl\").","- mechanization(\"Carl\").","- harbour(\"Carl\").","yacht_club(\"Julie\", \"Carl\")."],"noisy_facts":[],"min_fact_dicts_for_query":["sharing_experience(\"Bernard\", \"Carl\").","hang_upside_down(\"Bernard\").","- fields(\"Bernard\", \"Carl\").","sign_contract(\"Bernard\", \"Julie\").","- riding_horses(\"Hailey\", \"Julie\").","yacht_club(\"Julie\", \"Carl\")."],"noiseless_rules":["chatelaine(V3) :- jack(V0, V2), chew(V1, V3), not computer_vision(V2, V3).","jack(V0, V2) :- style(V0, V1), - traveler(V1, V3), aneuploidy(V2, V3).","chew(V1, V3) :- sharing_experience(V1, V3).","style(V0, V1) :- hang_upside_down(V1), - riding_horses(V0, V2), not black_gold(V1, V2).","- computer_vision(V2, V3) :- - fields(V1, V3), listen(V2, V3), not -refrain(V2, V3).","- much_taller_than_others(V3) :- - fields(V1, V3), not -hairbrush(V1, V3).","- field(V1, V3) :- - fields(V1, V3), not -hairbrush(V1, V3).","- traveler(V1, V3) :- sign_contract(V1, V2), yacht_club(V2, V3).","- country(V1, V3) :- hold_water(V0, V1), - chordate(V0, V3), - graz(V1, V2).","- chessboard(V3, V3) :- - much_taller_than_others(V3), not mechanization(V3), not harbour(V3).","aneuploidy(V3, V3) :- - field(V1, V3), not country(V1, V3), not chessboard(V1, V3)."],"noisy_rules":{}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_70_8_12_11_14_0.5_1.0_5_2_3","seed":70,"num_facts":14,"num_rules":13,"num_related_predicates":27,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"P12(\"Melissa\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P13(\"Wendy\").","P14(\"Melissa\", \"Ebony\").","P15(\"Melissa\", \"Darrell\").","- P16(\"Wendy\", \"Melissa\").","- P17(\"Melissa\", \"Darrell\").","- P18(\"Melissa\", \"Darrell\").","- P19(\"Melissa\", \"Ebony\").","P20(\"Melissa\", \"Darrell\").","- P21(\"Melissa\", \"Darrell\").","- P22(\"Melissa\", \"Darrell\").","- P23(\"Melissa\", \"Ebony\").","P24(\"Darrell\", \"Ebony\").","- P25(\"Darrell\", \"Ebony\").","- P26(\"Darrell\", \"Ebony\")."],"noisy_facts":["P27(\"Melissa\", \"Darrell\").","- P28(\"Melissa\").","- P30(\"Darrell\").","P32(\"Wendy\", \"Melissa\").","- P36(\"Melissa\", \"Darrell\").","- P34(\"Melissa\", \"Darrell\").","P33(\"Wendy\", \"Ebony\").","- P31(\"Wendy\", \"Melissa\")."],"min_fact_dicts_for_query":["- P13(\"Wendy\").","- P16(\"Wendy\", \"Melissa\").","- P17(\"Melissa\", \"Darrell\").","- P18(\"Melissa\", \"Darrell\").","- P19(\"Melissa\", \"Ebony\")."],"noiseless_rules":["P12(V1) :- - P2(V3), P7(V0, V1), not P10(V1, V3).","- P0(V1, V2) :- - P13(V0), - P16(V0, V1), - P17(V1, V2), - P18(V1, V2), - P19(V1, V3).","P1(V1, V2) :- - P13(V0), - P16(V0, V1), - P17(V1, V2), - P18(V1, V2), - P19(V1, V3).","- P2(V2) :- - P0(V1, V2), not P3(V1, V2), not -P8(V1, V2).","- P3(V1, V2) :- P14(V1, V3), - P23(V1, V3), P24(V2, V3), not P25(V2, V3), not P26(V2, V3).","- P4(V1) :- P14(V1, V3), - P23(V1, V3), P24(V2, V3), not P25(V2, V3), not P26(V2, V3).","P5(V2) :- P14(V1, V3), - P23(V1, V3), P24(V2, V3), not P25(V2, V3), not P26(V2, V3).","P6(V1, V1) :- - P4(V1).","P7(V1, V1) :- P1(V1, V2), not -P5(V2), not -P20(V1, V2), not P21(V1, V2), not P22(V1, V2).","P8(V1, V2) :- P1(V1, V2), not -P5(V2), not -P20(V1, V2), not P21(V1, V2), not P22(V1, V2).","P9(V2) :- P1(V1, V2), not -P5(V2), not -P20(V1, V2), not P21(V1, V2), not P22(V1, V2).","- P10(V2, V3) :- P6(V2, V3), not -P9(V3), not -P11(V2, V3).","P11(V2, V1) :- - P0(V1, V2), not -P1(V1, V2), not -P15(V1, V2), not P21(V1, V2)."],"noisy_rules":{"a":["- P12(V1) :- - P1(V1, V2), P3(V1, V2).","- P12(V2) :- - P6(V2, V3)."],"b":["- P20(V1, V2) :- P0(V1, V2), - P5(V2), - P12(V1).","P10(V1, V3) :- P0(V1, V2), - P1(V1, V2), P10(V1, V3), - P12(V1)."],"c":["- P7(V2, V1) :- P4(V1), - P5(V2).","P2(V3) :- P10(V1, V3)."],"d":["P4(V1) :- not P1(V1, V2), P2(V3), not P8(V1, V2), not P11(V2, V3), P27(V1, V2).","P3(V1, V2) :- P2(V3), P4(V1), - P8(V1, V2), not P28(V1)."],"e":["P29(V1, V2) :- - P30(V2), - P31(V0, V1), P32(V0, V1), P33(V0, V3), - P34(V1, V2).","- P35(V2) :- - P36(V1, V2)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_78_7_8_3_5_0.5_1.0_5_2_3","seed":78,"num_facts":5,"num_rules":9,"num_related_predicates":14,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"fuel_system(\"Mark\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["- northumbria(\"Tamara\", \"Timothy\").","- elaterid_beetle(\"Tamara\", \"Mark\").","- cigar(\"Tamara\", \"Mark\").","mauritanian(\"Timothy\", \"Frederick\").","scratch(\"Timothy\", \"Mark\")."],"noisy_facts":["alto(\"Tamara\", \"Timothy\").","bite(\"Tamara\", \"Timothy\").","- subdivision(\"Mark\").","- diamonds(\"Timothy\", \"Frederick\").","acardia(\"Tamara\", \"Frederick\").","ferrari(\"Tamara\", \"Frederick\")."],"min_fact_dicts_for_query":["- northumbria(\"Tamara\", \"Timothy\").","- cigar(\"Tamara\", \"Mark\").","mauritanian(\"Timothy\", \"Frederick\")."],"noiseless_rules":["fuel_system(V3) :- ophiurida(V3), not sheep(V3).","- place(V0, V1) :- - northumbria(V0, V1), - cigar(V0, V3), mauritanian(V1, V2), not -scratch(V1, V3).","- proscenium(V0, V1) :- - northumbria(V0, V1), - cigar(V0, V3), mauritanian(V1, V2), not -scratch(V1, V3).","symbion_pandora(V0, V3) :- - elaterid_beetle(V0, V3).","curtain(V3) :- - place(V0, V1), - cigar(V0, V3).","- birds(V0, V3) :- - place(V0, V1), - cigar(V0, V3).","bird(V2) :- curtain(V2).","ophiurida(V3) :- - proscenium(V0, V1), - birds(V0, V3), not elaterid_beetle(V0, V3).","- sheep(V3) :- symbion_pandora(V0, V3), not -bird(V3)."],"noisy_rules":{"a":["- fuel_system(V3) :- birds(V0, V3).","- fuel_system(V3) :- proscenium(V0, V1), sheep(V3)."],"b":["- symbion_pandora(V3, V3) :- - fuel_system(V3).","elaterid_beetle(V3, V3) :- - fuel_system(V3)."],"c":["proscenium(V0, V1) :- place(V0, V1), - curtain(V2), - ophiurida(V3), sheep(V3).","sheep(V3) :- place(V0, V1), proscenium(V0, V1), not symbion_pandora(V0, V3), not -birds(V0, V3), - bird(V3)."],"d":["sheep(V3) :- place(V0, V1), - curtain(V2), birds(V0, V3), not ophiurida(V3), alto(V0, V1).","birds(V3, V3) :- not ophiurida(V3), - subdivision(V3)."],"e":["graft(V0, V1) :- acardia(V0, V2), ferrari(V0, V2), - diamonds(V1, V2).","aileron(V0, V1) :- bite(V0, V1)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_39_10_14_14_15_0.5_1.0_5_2_3","seed":39,"num_facts":18,"num_rules":15,"num_related_predicates":33,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.2222222222222223,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":" P14(\"Michelle\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P15(\"John\", \"Michelle\").","- P16(\"Maria\", \"Michelle\").","- P17(\"Sharon\", \"Michelle\").","P18(\"Sharon\").","P19(\"Sharon\", \"Maria\").","- P20(\"Sharon\", \"Maria\").","P21(\"Sharon\", \"Michelle\").","- P22(\"John\", \"Maria\").","- P23(\"John\", \"Maria\").","P24(\"John\", \"Michelle\").","P25(\"John\", \"Michelle\").","- P26(\"John\", \"Michelle\").","P27(\"Sharon\", \"John\").","- P28(\"Sharon\", \"John\").","P29(\"Sharon\", \"John\").","- P30(\"Sharon\", \"John\").","P31(\"John\", \"Maria\").","- P32(\"John\", \"Michelle\")."],"noisy_facts":["P33(\"Sharon\", \"Michelle\").","P38(\"Sharon\").","- P34(\"Sharon\", \"Michelle\").","P42(\"Michelle\").","- P40(\"Michelle\").","- P39(\"Sharon\", \"Michelle\").","- P35.","P43(\"Sharon\", \"Michelle\")."],"min_fact_dicts_for_query":["- P15(\"John\", \"Michelle\").","- P17(\"Sharon\", \"Michelle\").","P18(\"Sharon\").","P19(\"Sharon\", \"Maria\").","- P20(\"Sharon\", \"Maria\").","P21(\"Sharon\", \"Michelle\").","- P22(\"John\", \"Maria\").","- P23(\"John\", \"Maria\").","P31(\"John\", \"Maria\")."],"noiseless_rules":["- P14(V3) :- - P2(V3), P4(V0, V2), not -P6(V0, V3).","P0(V0, V3) :- P3(V0), P7(V0, V3), P31(V1, V2), not P32(V1, V3).","P1(V0) :- P3(V0), P7(V0, V3), P31(V1, V2), not P32(V1, V3).","- P2(V3) :- P13(V0, V1), - P15(V1, V3).","P3(V0) :- P13(V0, V1), - P15(V1, V3).","P4(V0, V3) :- P0(V0, V3), not P8(V0, V3), not P10(V0, V3), not -P12(V0, V3).","P5(V2, V3) :- - P16(V2, V3).","P6(V0, V3) :- - P17(V0, V3), - P23(V1, V2), not -P24(V1, V3), not -P25(V1, V3), not P26(V1, V3).","P7(V0, V3) :- - P17(V0, V3), - P23(V1, V2), not -P24(V1, V3), not -P25(V1, V3), not P26(V1, V3).","- P8(V0, V3) :- - P17(V0, V3), - P23(V1, V2), not -P24(V1, V3), not -P25(V1, V3), not P26(V1, V3).","- P9(V0, V1) :- - P17(V0, V3), - P23(V1, V2), not -P24(V1, V3), not -P25(V1, V3), not P26(V1, V3).","- P10(V2, V3) :- P5(V2, V3), not -P11(V2, V3).","P11(V1, V0) :- P1(V0), P13(V0, V1).","P12(V0, V1) :- - P9(V0, V1), not -P27(V0, V1), not P28(V0, V1), not -P29(V0, V1), not P30(V0, V1).","P13(V0, V1) :- P18(V0), P19(V0, V2), - P20(V0, V2), P21(V0, V3), - P22(V1, V2)."],"noisy_rules":{"a":["P14(V0) :- - P3(V0).","P14(V3) :- not P0(V0, V3), - P7(V0, V3)."],"b":["P22(V1, V3) :- - P0(V0, V3), - P7(V0, V3), P8(V0, V3), - P13(V0, V1), not -P14(V3).","- P12(V0, V3) :- - P1(V0), - P7(V0, V3), not -P14(V3)."],"c":["- P29(V0, V0) :- not P0(V0, V3), - P6(V0, V3).","P10(V0, V3) :- - P4(V0, V2), - P7(V0, V3)."],"d":["- P31(V3, V0) :- - P0(V0, V3), - P6(V0, V3), not P12(V0, V3), P33(V0, V3), - P34(V0, V3).","- P36(V3, V2) :- - P11(V2, V3), not P35."],"e":["P37(V0, V3) :- P38(V0), - P39(V0, V3).","- P41(V3) :- - P40(V3), P42(V3), P43(V0, V3)."]}},"num_min_facts_for_query":9,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_26_8_7_3_6_0.5_1.0_5_2_3","seed":26,"num_facts":7,"num_rules":8,"num_related_predicates":15,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" placental(\"Jonathan\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["if(\"Eric\", \"Jonathan\").","canine(\"Jonathan\").","yellowbelly_marmot(\"Scott\", \"Jonathan\").","soup(\"Jonathan\").","waiting_for_friends(\"Karen\", \"Jonathan\").","cow(\"Eric\", \"Jonathan\").","bull(\"Eric\", \"Jonathan\")."],"noisy_facts":[],"min_fact_dicts_for_query":["if(\"Eric\", \"Jonathan\").","canine(\"Jonathan\").","yellowbelly_marmot(\"Scott\", \"Jonathan\").","soup(\"Jonathan\").","waiting_for_friends(\"Karen\", \"Jonathan\").","cow(\"Eric\", \"Jonathan\").","bull(\"Eric\", \"Jonathan\")."],"noiseless_rules":["placental(V3) :- carnivore(V3), rodent(V3), waiting_for_friends(V1, V3), cow(V2, V3), bull(V2, V3).","squirrel(V3) :- chipmunk(V2, V3), grandfather_clock(V2, V3), cow(V2, V3).","chipmunk(V2, V3) :- if(V2, V3).","carnivore(V3) :- rodent(V3), canine(V3).","grandfather_clock(V2, V3) :- liquid_food(V2, V3).","rodent(V3) :- squirrel(V3), marmot(V3).","marmot(V3) :- yellowbelly_marmot(V0, V3).","liquid_food(V3, V3) :- marmot(V3), soup(V3)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_10_6_8_6_7_0.5_1.0_3_3_4","seed":10,"num_facts":8,"num_rules":9,"num_related_predicates":17,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"P8(\"Cynthia\", \"Katherine\", \"Timothy\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P9(\"Katherine\", \"Alyssa\").","- P10(\"Timothy\", \"Alyssa\").","P11(\"Katherine\", \"Alyssa\").","- P12(\"Cynthia\", \"Timothy\", \"Alyssa\").","- P13(\"Cynthia\", \"Taylor\", \"Katherine\").","P14(\"Cynthia\", \"Katherine\", \"Timothy\").","- P15(\"Cynthia\", \"Katherine\", \"Timothy\").","P16(\"Taylor\", \"Timothy\", \"Alyssa\")."],"noisy_facts":["P20(\"Cynthia\", \"Katherine\").","P25(\"Taylor\", \"Katherine\", \"Timothy\").","- P23(\"Cynthia\", \"Katherine\", \"Alyssa\").","- P17(\"Taylor\", \"Katherine\", \"Timothy\").","- P18(\"Taylor\", \"Katherine\", \"Timothy\").","- P21(\"Cynthia\", \"Taylor\", \"Katherine\").","- P19(\"Cynthia\", \"Katherine\", \"Timothy\")."],"min_fact_dicts_for_query":["- P9(\"Katherine\", \"Alyssa\").","- P10(\"Timothy\", \"Alyssa\").","P11(\"Katherine\", \"Alyssa\").","- P12(\"Cynthia\", \"Timothy\", \"Alyssa\").","- P13(\"Cynthia\", \"Taylor\", \"Katherine\").","P16(\"Taylor\", \"Timothy\", \"Alyssa\")."],"noiseless_rules":["P8(V0, V2, V3) :- - P0(V1), - P3(V0, V3), - P4(V1, V2, V3).","- P0(V1) :- - P9(V2, V4), P16(V1, V3, V4).","- P1(V2, V4) :- - P9(V2, V4), P16(V1, V3, V4).","- P2(V0, V2, V3) :- P5(V0), P11(V2, V4), - P12(V0, V3, V4).","- P3(V0, V3) :- - P2(V0, V2, V3), not P6(V0, V2, V3), not P15(V0, V2, V3).","- P4(V1, V2, V3) :- - P1(V2, V4), - P7(V1, V3, V4), not -P16(V1, V3, V4).","P5(V0) :- - P10(V3, V4), - P13(V0, V1, V2), not -P14(V0, V2, V3).","- P6(V0, V2, V3) :- - P10(V3, V4), - P13(V0, V1, V2), not -P14(V0, V2, V3).","- P7(V1, V3, V4) :- - P10(V3, V4), - P13(V0, V1, V2), not -P14(V0, V2, V3)."],"noisy_rules":{"a":["- P8(V0, V2, V3) :- P0(V1), not -P3(V0, V3), P6(V0, V2, V3).","- P8(V0, V2, V3) :- P0(V1), P2(V0, V2, V3)."],"b":["P12(V0, V3, V0) :- - P8(V0, V2, V3).","- P14(V0, V2, V3) :- P4(V1, V2, V3), - P8(V0, V2, V3)."],"c":["P10(V3, V4) :- P1(V2, V4), P3(V0, V3), not P5(V0).","P0(V1) :- P2(V0, V2, V3), not -P6(V0, V2, V3), P7(V1, V3, V4)."],"d":["- P16(V1, V3, V2) :- P4(V1, V2, V3), not P17(V1, V2, V3), - P18(V1, V2, V3).","P6(V0, V2, V3) :- not -P2(V0, V2, V3), P4(V1, V2, V3), - P19(V0, V2, V3)."],"e":["P22(V2, V4) :- P20(V0, V2), - P21(V0, V1, V2), - P23(V0, V2, V4).","P24(V1, V2, V3) :- P25(V1, V2, V3)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_29_8_10_8_10_0.5_1.0_5_2_3","seed":29,"num_facts":12,"num_rules":11,"num_related_predicates":23,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.5714285714285714,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P10(\"Susan\", \"Guy\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P11(\"Nichole\", \"Guy\").","- P12(\"Nichole\", \"Guy\").","- P13(\"Susan\", \"Guy\").","P14(\"Nichole\").","- P15(\"Nichole\", \"Guy\").","- P16(\"Nichole\", \"Guy\").","- P17(\"Nichole\", \"Guy\").","- P18(\"Nichole\", \"Guy\").","P19(\"Susan\").","P20(\"Nichole\", \"Susan\").","P21(\"Susan\", \"Guy\").","P22(\"Susan\", \"Guy\")."],"noisy_facts":["- P30(\"Nichole\").","P28(\"Robert\", \"Guy\").","P31(\"Susan\").","P33(\"Nichole\", \"Guy\").","- P34(\"Susan\", \"Robert\").","- P32(\"Nichole\", \"Robert\").","P27(\"Susan\", \"Robert\").","- P24(\"Guy\").","P26(\"Nichole\", \"Robert\").","P23(\"Susan\")."],"min_fact_dicts_for_query":["- P11(\"Nichole\", \"Guy\").","- P12(\"Nichole\", \"Guy\").","P14(\"Nichole\").","P19(\"Susan\").","P20(\"Nichole\", \"Susan\").","P21(\"Susan\", \"Guy\")."],"noiseless_rules":["P10(V1, V3) :- P4(V0), P5(V3), - P8(V3), P9(V0, V1), not P18(V0, V3).","- P0(V0, V3) :- - P11(V0, V3), not P15(V0, V3), not P16(V0, V3), not P17(V0, V3), not P18(V0, V3).","- P1(V3, V3) :- - P11(V0, V3), not P15(V0, V3), not P16(V0, V3), not P17(V0, V3), not P18(V0, V3).","- P2(V2, V2) :- - P0(V0, V2).","P3(V2, V2) :- - P0(V0, V2).","P4(V0) :- - P12(V0, V3), not P18(V0, V3).","P5(V3) :- - P1(V2, V3), - P2(V1, V3), not P6(V1, V3).","- P6(V1, V3) :- - P13(V1, V3).","- P7(V1) :- - P13(V1, V3).","- P8(V2) :- P3(V1, V2), not P7(V1).","P9(V0, V1) :- P14(V0), P19(V1), P20(V0, V1), P21(V1, V3), not -P22(V1, V3)."],"noisy_rules":{"a":["- P10(V1, V3) :- P2(V1, V3), - P3(V1, V2), - P5(V3), P8(V3).","- P10(V1, V1) :- P7(V1)."],"b":["- P5(V3) :- P0(V0, V2), - P4(V0), - P10(V1, V3).","P2(V1, V3) :- - P5(V3), - P10(V1, V3)."],"c":["- P3(V1, V1) :- P2(V1, V3).","P11(V0, V3) :- P0(V0, V2), P2(V1, V3), not P3(V1, V2)."],"d":["- P22(V1, V1) :- P7(V1), not -P23(V1).","- P14(V3) :- P8(V3), not P24(V3)."],"e":["- P25(V2, V3) :- P26(V0, V2), P27(V1, V2), P28(V2, V3).","P29(V0, V1) :- - P30(V0), P31(V1), - P32(V0, V2), P33(V0, V3), not P34(V1, V2)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_87_6_6_3_6_0.5_1.0_5_2_3","seed":87,"num_facts":5,"num_rules":7,"num_related_predicates":12,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" zipper(\"Jared\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["- chick(\"Bradley\").","belt(\"Bradley\", \"Jared\").","creature(\"Jennifer\", \"Angela\").","- trousers(\"Bradley\", \"Jared\").","bird(\"Bradley\", \"Angela\")."],"noisy_facts":["- heat(\"Bradley\", \"Jared\").","peruvian_cotton(\"Bradley\", \"Angela\").","- levant_cotton(\"Angela\").","captain_boat(\"Jennifer\", \"Jared\").","- wild_cotton(\"Angela\").","- duck(\"Jennifer\", \"Bradley\").","- feel_sad(\"Jared\", \"Angela\").","- nest(\"Jennifer\", \"Bradley\").","- want_sweet(\"Jared\", \"Angela\")."],"min_fact_dicts_for_query":["- chick(\"Bradley\").","belt(\"Bradley\", \"Jared\").","creature(\"Jennifer\", \"Angela\").","- trousers(\"Bradley\", \"Jared\")."],"noiseless_rules":["- zipper(V2) :- pants(V2), - chicken(V0, V1), not dress(V1, V2).","animal(V1, V3) :- - chick(V1), creature(V0, V3), - trousers(V1, V2), not -bird(V1, V3).","- legs(V1) :- - chick(V1), creature(V0, V3), - trousers(V1, V2), not -bird(V1, V3).","pants(V2) :- belt(V1, V2).","- chicken(V0, V1) :- wallet(V0, V1).","- dress(V1, V3) :- animal(V1, V3), - chicken(V0, V1), not -creature(V0, V3).","wallet(V1, V1) :- animal(V1, V3), not legs(V1)."],"noisy_rules":{"a":["zipper(V0) :- legs(V1), - wallet(V0, V1).","zipper(V2) :- - animal(V1, V3), legs(V1), - pants(V2), not -chicken(V0, V1), - wallet(V0, V1)."],"b":["- pants(V2) :- dress(V1, V2), - wallet(V0, V1), zipper(V2).","trousers(V1, V2) :- - pants(V2), chicken(V0, V1), - wallet(V0, V1), zipper(V2)."],"c":["trousers(V1, V2) :- - animal(V1, V3), legs(V1), - pants(V2), not -dress(V1, V2), - wallet(V0, V1).","legs(V1) :- - animal(V1, V3), - pants(V2), chicken(V0, V1), dress(V1, V2), not wallet(V0, V1)."],"d":["- bird(V1, V1) :- chicken(V0, V1), - wallet(V0, V1), not nest(V0, V1).","- animal(V1, V0) :- legs(V1), dress(V1, V2), not wallet(V0, V1), - duck(V0, V1)."],"e":["- hotness(V3) :- captain_boat(V0, V2), - heat(V1, V2), not want_sweet(V2, V3), - feel_sad(V2, V3).","cotton(V1) :- not levant_cotton(V3), - wild_cotton(V3), peruvian_cotton(V1, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_74_4_5_2_5_0.5_1.0_5_2_3","seed":74,"num_facts":4,"num_rules":6,"num_related_predicates":10,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6666666666666667,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" creation(\"Todd\", \"Valerie\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- gastronomy(\"Shawn\", \"Valerie\").","painting(\"Shawn\", \"Valerie\").","re_creation(\"Shawn\", \"Valerie\").","creating_by_removal(\"Todd\", \"Valerie\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- gastronomy(\"Shawn\", \"Valerie\").","re_creation(\"Shawn\", \"Valerie\").","creating_by_removal(\"Todd\", \"Valerie\")."],"noiseless_rules":["- creation(V2, V3) :- creating_from_raw_materials(V3), pornography(V3), art(V0, V1), re_creation(V0, V3), creating_by_removal(V2, V3).","creating_from_raw_materials(V3) :- mantis(V0, V3), not baking(V0, V3), not -re_creation(V0, V3).","pornography(V3) :- - baking(V0, V3), not gastronomy(V0, V3).","mantis(V0, V3) :- - baking(V0, V3), not gastronomy(V0, V3).","art(V0, V3) :- - gastronomy(V0, V3), not -painting(V0, V3).","- baking(V0, V3) :- - gastronomy(V0, V3), not -painting(V0, V3)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_87_8_9_7_10_0.5_1.0_3_3_4","seed":87,"num_facts":11,"num_rules":10,"num_related_predicates":21,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.7142857142857142,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"groove(\"Richard\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- avalanche(\"Valerie\", \"Alyssa\").","season_stew(\"Valerie\", \"Robert\").","- triple_cream(\"Valerie\", \"Alyssa\").","- similar_awareness_of_time(\"Valerie\", \"Robert\", \"Richard\").","- table_talk(\"Valerie\", \"Robert\").","- horned_screamer(\"Valerie\", \"Robert\").","wrongdoing(\"Valerie\", \"John\", \"Robert\").","- taller_than_plants(\"Valerie\", \"Robert\", \"Richard\").","- bowel_movement(\"Valerie\", \"Robert\", \"Richard\").","- transactinide(\"Valerie\", \"Robert\", \"Richard\").","- law(\"Valerie\", \"Robert\", \"Richard\")."],"noisy_facts":["bull_market(\"Valerie\", \"Alyssa\", \"Robert\").","- perform_implosion_experiment(\"John\", \"Robert\", \"Richard\").","- adults(\"Valerie\", \"Alyssa\").","moving(\"Valerie\", \"Robert\", \"Richard\").","gull(\"Robert\", \"Richard\")."],"min_fact_dicts_for_query":["- avalanche(\"Valerie\", \"Alyssa\").","season_stew(\"Valerie\", \"Robert\").","- table_talk(\"Valerie\", \"Robert\").","- taller_than_plants(\"Valerie\", \"Robert\", \"Richard\")."],"noiseless_rules":["groove(V4) :- flea(V3, V4), - pis_aller(V0, V1, V2), not box(V0, V2, V4).","flea(V3, V4) :- - avalanche(V0, V1), - table_talk(V0, V3), - taller_than_plants(V0, V3, V4).","- tube_foot(V0, V0, V3) :- season_stew(V0, V3), not table_talk(V0, V3), not horned_screamer(V0, V3).","hide(V3) :- season_stew(V0, V3), not table_talk(V0, V3), not horned_screamer(V0, V3).","- pis_aller(V0, V1, V1) :- - tube_foot(V0, V1, V4), not -bomber_jacket(V0, V1, V4), not -member(V0, V1, V4).","- box(V0, V2, V4) :- - winters_bark(V0, V4), - integer(V2, V4), wrongdoing(V0, V2, V3).","bomber_jacket(V0, V1, V4) :- - triple_cream(V0, V1), - law(V0, V3, V4).","- winters_bark(V0, V4) :- - triple_cream(V0, V1), - law(V0, V3, V4).","- integer(V4, V4) :- - similar_awareness_of_time(V0, V3, V4), not transactinide(V0, V3, V4), not law(V0, V3, V4).","member(V0, V0, V4) :- hide(V3), - taller_than_plants(V0, V3, V4), not bowel_movement(V0, V3, V4)."],"noisy_rules":{"a":["- groove(V1) :- pis_aller(V0, V1, V2).","- groove(V4) :- - bomber_jacket(V0, V1, V4), not member(V0, V1, V4)."],"b":["similar_awareness_of_time(V0, V4, V4) :- tube_foot(V0, V1, V4), - groove(V4).","- bomber_jacket(V0, V1, V4) :- - member(V0, V1, V4), - groove(V4)."],"c":["- member(V0, V1, V4) :- box(V0, V2, V4), - bomber_jacket(V0, V1, V4), not -winters_bark(V0, V4).","triple_cream(V0, V1) :- pis_aller(V0, V1, V2), winters_bark(V0, V4), not -integer(V2, V4)."],"d":["tube_foot(V4, V4, V4) :- not flea(V3, V4), gull(V3, V4).","box(V0, V4, V4) :- - bomber_jacket(V0, V1, V4)."],"e":["- spindlelegs(V3) :- bull_market(V0, V1, V3), moving(V0, V3, V4), - perform_implosion_experiment(V2, V3, V4).","mango(V0, V1) :- - adults(V0, V1)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_87_6_6_5_7_0.5_1.0_3_2_3","seed":87,"num_facts":7,"num_rules":7,"num_related_predicates":14,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"court_game(\"Theresa\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- attending_classical_concert(\"Jacob\", \"Theresa\").","- music(\"Robert\", \"Jacob\").","- tip_off(\"Robert\", \"Theresa\").","- creation(\"Jacob\", \"Lisa\").","attack_people(\"Jacob\", \"Lisa\").","- kids(\"Jacob\", \"Lisa\").","dance(\"Jacob\", \"Lisa\")."],"noisy_facts":["- bomb(\"Jacob\", \"Theresa\").","buses(\"Jacob\", \"Lisa\").","- cloud(\"Jacob\", \"Lisa\").","midnight_sun(\"Theresa\", \"Lisa\")."],"min_fact_dicts_for_query":["- attending_classical_concert(\"Jacob\", \"Theresa\").","- music(\"Robert\", \"Jacob\").","dance(\"Jacob\", \"Lisa\")."],"noiseless_rules":["court_game(V2) :- rebound(V2), - listening(V0, V1), not -basketball(V1, V2).","rebound(V2) :- - attending_classical_concert(V1, V2), dance(V1, V3).","- enjoying_music(V1, V3) :- - attending_classical_concert(V1, V2), dance(V1, V3).","- listening(V0, V1) :- - music(V0, V1).","- basketball_shot(V1, V3) :- - beginning(V1, V3), not kids(V1, V3), not -dance(V1, V3).","basketball(V2, V2) :- rebound(V2), - basketball_shot(V0, V2), not tip_off(V0, V2).","- beginning(V1, V3) :- - enjoying_music(V1, V3), not creation(V1, V3), not -attack_people(V1, V3)."],"noisy_rules":{"a":["- court_game(V1) :- listening(V0, V1).","- court_game(V2) :- listening(V0, V1), - basketball(V1, V2)."],"b":["- rebound(V2) :- - court_game(V2).","enjoying_music(V1, V0) :- listening(V0, V1), not -basketball_shot(V0, V2), - court_game(V2)."],"c":["- dance(V1, V1) :- listening(V0, V1).","tip_off(V3, V1) :- enjoying_music(V1, V3)."],"d":["tip_off(V0, V2) :- basketball_shot(V0, V2).","- rebound(V3) :- enjoying_music(V1, V3), not -buses(V1, V3)."],"e":["- atmospheric_phenomenon(V3) :- - cloud(V1, V3), midnight_sun(V2, V3).","- destroying_things(V1) :- - bomb(V1, V2)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_89_9_11_11_13_0.5_1.0_3_3_4","seed":89,"num_facts":14,"num_rules":12,"num_related_predicates":26,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P11(\"Rachael\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P12(\"Rachael\", \"Derek\").","P13(\"Catherine\", \"Derek\").","P14(\"Rachael\").","P15(\"Yvonne\", \"Andrew\", \"Catherine\").","- P16(\"Rachael\", \"Catherine\", \"Derek\").","P17(\"Yvonne\", \"Andrew\", \"Catherine\").","P18(\"Yvonne\", \"Rachael\", \"Derek\").","- P19(\"Andrew\", \"Rachael\", \"Catherine\").","P20(\"Yvonne\", \"Andrew\", \"Rachael\").","- P21(\"Andrew\", \"Rachael\", \"Derek\").","- P22(\"Rachael\", \"Catherine\").","P23(\"Rachael\", \"Catherine\").","- P24(\"Yvonne\").","- P25(\"Yvonne\")."],"noisy_facts":["P30(\"Catherine\", \"Derek\").","P27(\"Yvonne\", \"Andrew\", \"Catherine\").","- P28(\"Rachael\", \"Catherine\").","P32(\"Andrew\", \"Rachael\").","- P26(\"Yvonne\", \"Andrew\", \"Rachael\")."],"min_fact_dicts_for_query":["- P12(\"Rachael\", \"Derek\").","P13(\"Catherine\", \"Derek\").","P15(\"Yvonne\", \"Andrew\", \"Catherine\").","P18(\"Yvonne\", \"Rachael\", \"Derek\").","- P19(\"Andrew\", \"Rachael\", \"Catherine\")."],"noiseless_rules":["- P11(V2) :- - P3(V0, V1, V2), P6(V0, V1, V3), not -P8(V0, V1, V3).","P0(V0, V3, V0) :- P6(V0, V1, V3), not P10(V0, V1, V3), not -P17(V0, V1, V3).","P1(V0, V4) :- - P12(V2, V4), P15(V0, V1, V3), not P16(V2, V3, V4).","P2(V4) :- - P12(V2, V4), P15(V0, V1, V3), not P16(V2, V3, V4).","- P3(V0, V1, V2) :- P13(V3, V4), P18(V0, V2, V4), - P19(V1, V2, V3).","- P4(V0, V1, V4) :- P13(V3, V4), P18(V0, V2, V4), - P19(V1, V2, V3).","- P5(V2, V3) :- P13(V3, V4), P18(V0, V2, V4), - P19(V1, V2, V3).","P6(V0, V1, V3) :- P1(V0, V4), - P4(V0, V1, V4), P15(V0, V1, V3).","- P7(V0) :- P14(V2), P20(V0, V1, V2), - P21(V1, V2, V4).","P8(V0, V2, V2) :- P0(V0, V2, V4), not -P2(V4), not P9(V0, V2, V4).","- P9(V3, V2, V2) :- - P5(V2, V3), not P22(V2, V3), not -P23(V2, V3).","- P10(V0, V0, V0) :- - P7(V0), not P24(V0), not P25(V0)."],"noisy_rules":{"a":["P11(V2) :- - P1(V0, V4), P3(V0, V1, V2), P9(V0, V2, V4).","P11(V2) :- - P1(V0, V4), P5(V2, V3), P10(V0, V1, V3)."],"b":["- P15(V0, V1, V3) :- - P1(V0, V4), P10(V0, V1, V3), P11(V2).","P5(V2, V4) :- not P1(V0, V4), P9(V0, V2, V4), P11(V2)."],"c":["- P20(V0, V1, V0) :- P7(V0), - P8(V0, V1, V3).","P5(V2, V0) :- - P0(V0, V2, V4), P7(V0)."],"d":["- P2(V0) :- not -P3(V0, V1, V2), - P26(V0, V1, V2).","P5(V3, V3) :- not P6(V0, V1, V3), P10(V0, V1, V3), P27(V0, V1, V3)."],"e":["- P29(V4) :- - P28(V2, V3), P30(V3, V4).","P31(V2) :- P32(V1, V2)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_76_10_11_9_12_0.5_1.0_5_3_4","seed":76,"num_facts":12,"num_rules":12,"num_related_predicates":24,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P11(\"Alexander\", \"Shannon\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P12(\"Walter\", \"Shannon\").","P13(\"Benjamin\", \"Walter\", \"Shannon\").","- P14(\"Alexander\", \"Walter\", \"Shannon\").","P15(\"Walter\", \"Shannon\").","P16(\"Walter\", \"Shannon\").","P17(\"Walter\", \"Shannon\").","- P18(\"Benjamin\", \"Alexander\", \"Walter\").","P19(\"Benjamin\", \"Alexander\", \"Walter\").","- P20(\"Benjamin\", \"Alexander\", \"Walter\").","- P21(\"Alexander\", \"Todd\").","P22(\"Benjamin\", \"Alexander\", \"Shannon\").","P23(\"Benjamin\", \"Alexander\", \"Shannon\")."],"noisy_facts":["P27(\"Benjamin\", \"Walter\", \"Todd\").","P29(\"Alexander\", \"Walter\").","- P25(\"Benjamin\", \"Walter\").","- P24(\"Benjamin\", \"Walter\", \"Todd\")."],"min_fact_dicts_for_query":["P13(\"Benjamin\", \"Walter\", \"Shannon\").","- P21(\"Alexander\", \"Todd\").","P22(\"Benjamin\", \"Alexander\", \"Shannon\")."],"noiseless_rules":["- P11(V1, V4) :- P1(V0, V2), - P3(V1, V4), not -P5(V2, V4), not -P17(V2, V4), not P18(V0, V1, V2).","- P0(V2, V3) :- P2(V0, V2, V3).","P1(V0, V2) :- P4(V0, V2, V3).","P2(V0, V2, V3) :- - P6(V0, V2, V3).","- P3(V1, V4) :- - P9(V0, V2), - P21(V1, V3), P22(V0, V1, V4), not -P23(V0, V1, V4).","P4(V0, V2, V3) :- - P9(V0, V2), - P21(V1, V3), P22(V0, V1, V4), not -P23(V0, V1, V4).","P5(V2, V4) :- P8(V2, V4), not P10(V2, V4), not -P15(V2, V4), not -P16(V2, V4), not -P17(V2, V4).","- P6(V2, V2, V2) :- - P12(V2, V4), not -P16(V2, V4).","P7(V4, V4) :- - P12(V2, V4), not -P16(V2, V4).","P8(V2, V4) :- - P0(V2, V3), P7(V3, V4), - P18(V0, V1, V2), not -P19(V0, V1, V2), not P20(V0, V1, V2).","- P9(V0, V2) :- P13(V0, V2, V4).","- P10(V2, V4) :- - P14(V1, V2, V4)."],"noisy_rules":{"a":["P11(V3, V4) :- - P1(V0, V2), - P7(V3, V4), not P8(V2, V4).","P11(V1, V4) :- P3(V1, V4), P6(V0, V2, V3), - P8(V2, V4), P9(V0, V2)."],"b":["P14(V1, V4, V4) :- P11(V1, V4).","P18(V0, V1, V2) :- P0(V2, V3), - P2(V0, V2, V3), not -P6(V0, V2, V3), P11(V1, V4)."],"c":["- P4(V4, V2, V3) :- P0(V2, V3), P3(V1, V4), not -P10(V2, V4).","- P5(V2, V4) :- P0(V2, V3), - P1(V0, V2), not -P6(V0, V2, V3), not P7(V3, V4), P10(V2, V4)."],"d":["P10(V2, V4) :- - P2(V0, V2, V3), P3(V1, V4), not P7(V3, V4), not P24(V0, V2, V3).","P3(V0, V4) :- - P1(V0, V2), P9(V0, V2), P10(V2, V4), - P25(V0, V2)."],"e":["- P26(V2, V3) :- P27(V0, V2, V3).","P28(V1, V2) :- P29(V1, V2)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_41_6_9_6_9_0.5_1.0_5_2_3","seed":41,"num_facts":8,"num_rules":10,"num_related_predicates":18,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"P9(\"Patrick\", \"David\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P10(\"Patrick\", \"Jeffrey\").","P11(\"Donna\", \"David\").","- P12(\"Jeffrey\").","P13(\"Jeffrey\").","- P14(\"Jeffrey\").","P15(\"Patrick\", \"David\").","P16(\"Patrick\", \"David\").","- P17(\"Patrick\", \"David\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- P10(\"Patrick\", \"Jeffrey\").","P11(\"Donna\", \"David\").","P15(\"Patrick\", \"David\")."],"noiseless_rules":["P9(V0, V3) :- - P3(V3), P5(V0, V3), P11(V1, V3).","P0(V3) :- - P10(V0, V2), P15(V0, V3), not -P16(V0, V3), not P17(V0, V3).","- P1(V2) :- - P10(V0, V2), P15(V0, V3), not -P16(V0, V3), not P17(V0, V3).","P2(V0, V3) :- - P10(V0, V2), P15(V0, V3), not -P16(V0, V3), not P17(V0, V3).","- P3(V3) :- P0(V3), not -P4(V3), not P8(V3).","P4(V2) :- - P1(V2), not -P6(V2), not P12(V2), not -P13(V2), not P14(V2).","P5(V0, V3) :- P0(V3), P2(V0, V3), P11(V1, V3).","P6(V1) :- P0(V3), P2(V0, V3), P11(V1, V3).","- P7(V0, V3) :- P0(V3), P2(V0, V3), P11(V1, V3).","- P8(V3) :- P2(V0, V3), not P7(V0, V3)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_70_6_8_5_5_0.5_1.0_5_2_3","seed":70,"num_facts":6,"num_rules":9,"num_related_predicates":15,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"mechanical_system(\"Andrea\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["vegetarians(\"Andrea\").","- bulbul(\"Martin\", \"Andrea\").","area_of_cardiac_dullness(\"Martin\", \"Erin\").","sex(\"Andrea\", \"Carmen\").","- aquatic_bird(\"Carmen\", \"Erin\").","safflower_oil."],"noisy_facts":["cinema(\"Andrea\", \"Carmen\").","wading_bird(\"Andrea\", \"Carmen\").","- purple(\"Martin\", \"Andrea\").","- misrepresentation(\"Andrea\", \"Carmen\").","bluish_green(\"Andrea\", \"Erin\")."],"min_fact_dicts_for_query":["vegetarians(\"Andrea\").","- bulbul(\"Martin\", \"Andrea\").","area_of_cardiac_dullness(\"Martin\", \"Erin\").","sex(\"Andrea\", \"Carmen\")."],"noiseless_rules":["mechanical_system(V1) :- - pupose_of_laundromat(V3), - loin(V0, V1), not -outflow(V1, V3).","- decision(V1, V2) :- vegetarians(V1), - bulbul(V0, V1), area_of_cardiac_dullness(V0, V3), sex(V1, V2), not aquatic_bird(V2, V3).","shoeful(V1, V2) :- vegetarians(V1), - bulbul(V0, V1), area_of_cardiac_dullness(V0, V3), sex(V1, V2), not aquatic_bird(V2, V3).","- translation(V2) :- vegetarians(V1), - bulbul(V0, V1), area_of_cardiac_dullness(V0, V3), sex(V1, V2), not aquatic_bird(V2, V3).","- pupose_of_laundromat(V1) :- - decision(V1, V2), not -facility(V1, V2).","- loin(V2, V1) :- shoeful(V1, V2).","press(V2) :- shoeful(V1, V2).","facility(V2, V2) :- press(V2).","outflow(V2, V2) :- - translation(V2), not -safflower_oil."],"noisy_rules":{"a":["- mechanical_system(V1) :- loin(V0, V1).","- mechanical_system(V1) :- decision(V1, V2), - press(V2)."],"b":["pupose_of_laundromat(V1) :- decision(V1, V2), not press(V2), not facility(V1, V2), not mechanical_system(V1).","decision(V1, V1) :- - mechanical_system(V1)."],"c":["translation(V2) :- decision(V1, V2), pupose_of_laundromat(V3), loin(V0, V1).","- vegetarians(V1) :- decision(V1, V2), pupose_of_laundromat(V3), loin(V0, V1)."],"d":["translation(V2) :- - facility(V1, V2), - misrepresentation(V1, V2).","translation(V2) :- not shoeful(V1, V2), - facility(V1, V2), not -wading_bird(V1, V2), not -cinema(V1, V2)."],"e":["- reynard(V0) :- - purple(V0, V1).","dad(V1, V3) :- bluish_green(V1, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_68_5_8_5_8_0.5_1.0_5_1_2","seed":68,"num_facts":6,"num_rules":9,"num_related_predicates":15,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" P8(\"Johnny\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P9.","P10(\"Johnny\").","P11(\"Johnny\").","P12(\"Johnny\").","P13.","- P14."],"noisy_facts":["- P24(\"Johnny\").","P22(\"Johnny\").","- P25(\"Johnny\").","P17.","- P19(\"Johnny\").","- P15.","P21(\"Johnny\").","- P26(\"Johnny\").","- P16.","P27(\"Johnny\").","P20(\"Johnny\")."],"min_fact_dicts_for_query":["P9.","P10(\"Johnny\")."],"noiseless_rules":["- P8(V2) :- P1(V2), not P5(V2), not -P12(V2).","P0(V2) :- - P2(V2), not -P6(V2), not -P10(V2), not -P11(V2), not -P12(V2).","P1(V2) :- P0(V2), not P3(V2), not -P7(V2).","- P2(V2) :- P9, P10(V2), not -P12(V2).","- P3(V2) :- P9, P10(V2), not -P12(V2).","P4(V2) :- P9, P10(V2), not -P12(V2).","- P5(V1) :- P4(V1), not -P13, not P14.","P6(V1) :- P4(V1), not -P13, not P14.","P7(V1) :- P4(V1), not -P13, not P14."],"noisy_rules":{"a":["P8(V2) :- - P1(V2), not -P2(V2).","P8(V2) :- - P6(V2), not P7(V2)."],"b":["- P0(V2) :- not P1(V2), P2(V2), not -P3(V2), not -P5(V2), P8(V2).","- P0(V2) :- not -P3(V2), - P6(V2), P8(V2)."],"c":["P2(V2) :- not -P5(V2), not P6(V2), - P7(V2).","- P0(V2) :- not P1(V2), P2(V2), not -P3(V2), - P4(V1), - P6(V2)."],"d":["- P1(V2) :- not P0(V2), P2(V2), - P4(V1), - P15, not P16.","- P4(V2) :- - P7(V2), P17."],"e":["- P18(V2) :- - P19(V2), not -P20(V2), not -P21(V2), not -P22(V2).","P23(V2) :- not P24(V2), not P25(V2), not P26(V2), P27(V2)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_98_7_7_7_8_0.5_1.0_3_3_4","seed":98,"num_facts":11,"num_rules":8,"num_related_predicates":19,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6666666666666667,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"P7(\"Matthew\", \"Nicholas\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P8(\"Vanessa\", \"Nicholas\").","P9(\"Latoya\", \"Matthew\").","- P10(\"Latoya\", \"Gregory\", \"Nicholas\").","P11(\"Matthew\", \"Vanessa\", \"Gregory\").","- P12(\"Latoya\", \"Matthew\", \"Gregory\").","P13(\"Matthew\", \"Vanessa\", \"Gregory\").","- P14(\"Latoya\", \"Vanessa\", \"Nicholas\").","- P15(\"Latoya\", \"Gregory\", \"Nicholas\").","- P16(\"Latoya\", \"Gregory\", \"Nicholas\").","P17(\"Vanessa\", \"Gregory\", \"Nicholas\").","P18(\"Vanessa\", \"Gregory\", \"Nicholas\")."],"noisy_facts":["- P21(\"Matthew\", \"Gregory\", \"Nicholas\").","P23(\"Matthew\", \"Nicholas\").","- P27(\"Matthew\", \"Vanessa\", \"Gregory\").","- P26(\"Latoya\", \"Matthew\", \"Vanessa\").","- P19(\"Latoya\", \"Matthew\", \"Vanessa\").","P24(\"Vanessa\", \"Gregory\", \"Nicholas\")."],"min_fact_dicts_for_query":["- P8(\"Vanessa\", \"Nicholas\").","P9(\"Latoya\", \"Matthew\").","- P12(\"Latoya\", \"Matthew\", \"Gregory\").","- P15(\"Latoya\", \"Gregory\", \"Nicholas\")."],"noiseless_rules":["P7(V1, V4) :- - P0(V3, V4), P4(V0, V1, V2), not P14(V0, V2, V4).","- P0(V3, V4) :- P1(V3), P3(V1, V3, V4).","P1(V3) :- - P8(V2, V4), - P12(V0, V1, V3), not -P13(V1, V2, V3).","- P2(V1, V4) :- - P8(V2, V4), - P12(V0, V1, V3), not -P13(V1, V2, V3).","P3(V1, V3, V4) :- P9(V0, V1), - P15(V0, V3, V4).","P4(V1, V1, V4) :- - P2(V1, V4), not P5(V1, V4), not P6(V1, V4).","- P5(V0, V4) :- - P10(V0, V3, V4), not P15(V0, V3, V4), not P16(V0, V3, V4).","- P6(V1, V4) :- P11(V1, V2, V3), P17(V2, V3, V4), not -P18(V2, V3, V4)."],"noisy_rules":{"a":["- P7(V1, V4) :- P0(V3, V4), - P1(V3), P2(V1, V4).","- P7(V1, V4) :- P0(V3, V4), P2(V1, V4), - P3(V1, V3, V4)."],"b":["- P17(V1, V4, V4) :- not -P5(V1, V4), P6(V1, V4), - P7(V1, V4).","P15(V1, V4, V4) :- P5(V1, V4), not -P6(V1, V4), not P7(V1, V4)."],"c":["P14(V0, V2, V0) :- - P4(V0, V1, V2).","P8(V3, V4) :- P0(V3, V4), - P1(V3)."],"d":["- P20(V1, V4) :- - P4(V0, V1, V2), P5(V1, V4), not P19(V0, V1, V2).","- P17(V3, V3, V4) :- not P3(V1, V3, V4), - P21(V1, V3, V4)."],"e":["P22(V1, V4) :- P23(V1, V4), P24(V2, V3, V4).","- P25(V1) :- - P26(V0, V1, V2), - P27(V1, V2, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_22_4_3_3_6_0.5_1.0_3_3_4","seed":22,"num_facts":5,"num_rules":4,"num_related_predicates":9,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.3333333333333333,"num_noise_rules_per_type":2,"num_rules_with_default_negation":3,"target_query":" impeller(\"Michelle\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- aunt(\"Joseph\", \"Jeffery\", \"Michelle\").","- receive_punishment_for_crimes_commited(\"Joseph\", \"Jeffery\", \"Michelle\").","- bone_cell(\"Joseph\", \"Jeffery\", \"Michelle\").","- peanut(\"Joseph\", \"Jeffery\", \"Michelle\").","- moussaka(\"Joseph\", \"Jeffery\", \"Michelle\")."],"noisy_facts":["- soothe(\"Joseph\", \"Caleb\", \"Michelle\").","- mould(\"Mike\", \"Michelle\").","- brewers_mole(\"Joseph\", \"Mike\", \"Jeffery\").","- couch(\"Joseph\", \"Jeffery\", \"Michelle\").","goat_cheese(\"Joseph\", \"Jeffery\", \"Michelle\").","- golden_fur(\"Mike\").","having_lunch(\"Jeffery\", \"Michelle\").","- examination(\"Joseph\", \"Mike\", \"Jeffery\")."],"min_fact_dicts_for_query":["- aunt(\"Joseph\", \"Jeffery\", \"Michelle\").","- receive_punishment_for_crimes_commited(\"Joseph\", \"Jeffery\", \"Michelle\")."],"noiseless_rules":["- impeller(V4) :- - catholic(V4), woodwind_instrument(V3, V4), - aunt(V0, V3, V4).","- catholic(V4) :- date(V0, V3, V4), not aunt(V0, V3, V4).","woodwind_instrument(V3, V4) :- date(V0, V3, V4), not bone_cell(V0, V3, V4), not moussaka(V0, V3, V4).","date(V0, V3, V4) :- - receive_punishment_for_crimes_commited(V0, V3, V4), not bone_cell(V0, V3, V4), not peanut(V0, V3, V4)."],"noisy_rules":{"a":["impeller(V4) :- catholic(V4).","impeller(V4) :- - date(V0, V3, V4)."],"b":["aunt(V4, V4, V4) :- impeller(V4).","- date(V0, V3, V4) :- - date(V0, V3, V4), not -impeller(V4)."],"c":["receive_punishment_for_crimes_commited(V0, V3, V4) :- catholic(V4), - woodwind_instrument(V3, V4), - date(V0, V3, V4).","bone_cell(V0, V3, V4) :- catholic(V4), - woodwind_instrument(V3, V4), - date(V0, V3, V4)."],"d":["receive_punishment_for_crimes_commited(V0, V3, V4) :- - date(V0, V3, V4), not couch(V0, V3, V4), not -goat_cheese(V0, V3, V4).","combustible(V3, V3) :- not -catholic(V4), not woodwind_instrument(V3, V4), having_lunch(V3, V4)."],"e":["- canal(V0, V2, V4) :- - mould(V2, V4), - brewers_mole(V0, V2, V3).","birthday_treat(V0, V1) :- - golden_fur(V2), - soothe(V0, V1, V4), - examination(V0, V2, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_93_8_11_6_9_0.5_1.0_5_2_3","seed":93,"num_facts":8,"num_rules":12,"num_related_predicates":20,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"handful(\"Sheryl\", \"Anna\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["haunch(\"Anna\").","- party(\"Sierra\", \"Anna\").","northern_bobwhite(\"Sierra\", \"Anna\").","sports_bat(\"Sierra\", \"Anna\").","- perspiration(\"Anna\").","chaffinch(\"Sierra\", \"Anna\").","chow_mein(\"Sheryl\", \"Jose\").","pentagon(\"Anna\", \"Jose\")."],"noisy_facts":[],"min_fact_dicts_for_query":["haunch(\"Anna\").","chow_mein(\"Sheryl\", \"Jose\")."],"noiseless_rules":["handful(V1, V2) :- - more_water(V1, V2), - play_music(V2, V3), not barnyard(V2, V3), not arthropod(V2, V3).","- more_water(V1, V2) :- vision_organ(V1, V2), not luncher(V1, V2).","- play_music(V2, V3) :- haunch(V2), chow_mein(V1, V3), not -pentagon(V2, V3).","vision_organ(V1, V2) :- haunch(V2), chow_mein(V1, V3), not -pentagon(V2, V3).","nuclear_weapon(V1) :- haunch(V2), chow_mein(V1, V3), not -pentagon(V2, V3).","neuron(V1, V1) :- nuclear_weapon(V1).","- born(V1) :- nuclear_weapon(V1).","- cold_turkey(V1) :- nuclear_weapon(V1).","- luncher(V0, V2) :- neuron(V0, V2), not female_sibling(V0, V2), not party(V0, V2).","- barnyard(V2, V3) :- - born(V2), - perspiration(V2), pentagon(V2, V3).","- arthropod(V2, V2) :- - cold_turkey(V2).","- female_sibling(V0, V2) :- - party(V0, V2), not -northern_bobwhite(V0, V2), not -sports_bat(V0, V2), not perspiration(V2), not -chaffinch(V0, V2)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_51_6_8_4_4_0.5_1.0_3_3_4","seed":51,"num_facts":6,"num_rules":9,"num_related_predicates":15,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" P8(\"Dalton\", \"Gary\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P9(\"Dalton\", \"Jessica\", \"Gary\").","P10(\"Gary\", \"Cynthia\").","P11(\"Dalton\", \"Corey\", \"Jessica\").","P12(\"Corey\", \"Jessica\", \"Cynthia\").","- P13(\"Dalton\", \"Gary\").","P14(\"Dalton\", \"Corey\", \"Cynthia\")."],"noisy_facts":["- P18(\"Dalton\", \"Corey\").","P15(\"Corey\", \"Gary\", \"Cynthia\").","P19(\"Gary\", \"Cynthia\").","P17(\"Dalton\", \"Gary\").","P16(\"Corey\", \"Gary\", \"Cynthia\").","P20(\"Dalton\", \"Jessica\", \"Cynthia\").","P24(\"Gary\", \"Cynthia\").","P23(\"Dalton\", \"Gary\")."],"min_fact_dicts_for_query":["P9(\"Dalton\", \"Jessica\", \"Gary\").","P10(\"Gary\", \"Cynthia\").","P11(\"Dalton\", \"Corey\", \"Jessica\")."],"noiseless_rules":["- P8(V0, V3) :- - P6(V0, V1, V3).","P0(V0, V3) :- P9(V0, V2, V3).","P1(V0, V3) :- P9(V0, V2, V3).","P2(V2, V3) :- P10(V3, V4), P11(V0, V1, V2), not -P12(V1, V2, V4).","- P3(V0, V1, V4) :- P10(V3, V4), P11(V0, V1, V2), not -P12(V1, V2, V4).","- P4(V3, V3, V3) :- P0(V0, V3), P2(V2, V3), not P13(V0, V3).","- P5(V2, V2, V2) :- P0(V0, V3), P2(V2, V3), not P13(V0, V3).","- P6(V0, V1, V3) :- P1(V0, V3), - P4(V1, V3, V4), not P7(V0, V3).","- P7(V0, V2) :- - P3(V0, V1, V4), - P5(V1, V2, V4), not -P14(V0, V1, V4)."],"noisy_rules":{"a":["P8(V3, V3) :- - P2(V2, V3).","P8(V0, V3) :- P3(V0, V1, V4), P4(V1, V3, V4), P6(V0, V1, V3)."],"b":["P6(V0, V3, V3) :- - P0(V0, V3), not -P8(V0, V3).","P7(V0, V3) :- P8(V0, V3)."],"c":["P4(V1, V3, V4) :- - P1(V0, V3), - P2(V2, V3), P3(V0, V1, V4).","- P0(V0, V3) :- - P1(V0, V3)."],"d":["P5(V1, V3, V4) :- not -P4(V1, V3, V4), P15(V1, V3, V4), not -P16(V1, V3, V4).","- P10(V3, V3) :- P7(V0, V3), P17(V0, V3)."],"e":["P21(V0, V1, V3) :- - P18(V0, V1), P19(V3, V4), P20(V0, V2, V4).","P22(V0, V3) :- P23(V0, V3), P24(V3, V4)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_18_10_12_8_10_0.5_1.0_3_2_3","seed":18,"num_facts":11,"num_rules":13,"num_related_predicates":24,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" armenian_church(\"Samuel\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["south(\"Francisco\", \"Patricia\").","tuna_fish_salad(\"Francisco\").","high_tea.","carpet(\"Caitlin\", \"Samuel\").","- spoiled_child(\"Caitlin\", \"Patricia\").","kibble(\"Samuel\", \"Patricia\").","- new_zealand_dollar(\"Samuel\", \"Patricia\").","- dinner(\"Francisco\", \"Patricia\").","- outerwear(\"Samuel\", \"Patricia\").","- pronoun(\"Patricia\").","granny(\"Patricia\")."],"noisy_facts":["- nuthatch(\"Caitlin\", \"Francisco\").","- update(\"Francisco\", \"Samuel\").","relaxing(\"Caitlin\", \"Samuel\").","sundress(\"Francisco\", \"Samuel\").","sargasso_sea(\"Francisco\", \"Samuel\").","two_legged_animal(\"Francisco\", \"Samuel\").","- superficies(\"Francisco\", \"Patricia\")."],"min_fact_dicts_for_query":["south(\"Francisco\", \"Patricia\").","tuna_fish_salad(\"Francisco\").","carpet(\"Caitlin\", \"Samuel\").","- spoiled_child(\"Caitlin\", \"Patricia\").","kibble(\"Samuel\", \"Patricia\").","- dinner(\"Francisco\", \"Patricia\").","- outerwear(\"Samuel\", \"Patricia\")."],"noiseless_rules":["- armenian_church(V2) :- several_diamonds(V2), golgi_body(V0, V2).","prairie_gourd(V1, V2) :- dance(V1, V2), not volt(V1, V2).","- shirt(V3) :- south(V1, V3), kibble(V2, V3), not new_zealand_dollar(V2, V3).","cytosol(V3) :- south(V1, V3), kibble(V2, V3), not new_zealand_dollar(V2, V3).","bridge_whist(V1, V2) :- south(V1, V3), kibble(V2, V3), not new_zealand_dollar(V2, V3).","dance(V1, V2) :- tuna_fish_salad(V1), - dinner(V1, V3), - outerwear(V2, V3).","- strum(V3, V3) :- - shirt(V3), not pronoun(V3), not -granny(V3).","several_diamonds(V2) :- prairie_gourd(V1, V2), not strum(V1, V2), not putting_in_computer(V1, V2).","- volt(V3, V3) :- cytosol(V3), not -baby_hen(V3).","golgi_body(V0, V2) :- - use(V2), carpet(V0, V2), - spoiled_child(V0, V3).","- putting_in_computer(V3, V3) :- high_tea, granny(V3).","baby_hen(V1) :- bridge_whist(V1, V2), not putting_in_computer(V1, V2).","- use(V2) :- bridge_whist(V1, V2), not putting_in_computer(V1, V2)."],"noisy_rules":{"a":["armenian_church(V2) :- volt(V1, V2), - baby_hen(V3).","armenian_church(V2) :- - prairie_gourd(V1, V2), not -putting_in_computer(V1, V2)."],"b":["- prairie_gourd(V2, V2) :- armenian_church(V2).","- several_diamonds(V2) :- shirt(V3), - several_diamonds(V2), not -armenian_church(V2)."],"c":["- granny(V2) :- - prairie_gourd(V1, V2), - several_diamonds(V2), not -use(V2).","- prairie_gourd(V1, V2) :- - cytosol(V3), strum(V1, V2), - baby_hen(V3)."],"d":["- several_diamonds(V2) :- - prairie_gourd(V1, V2), sundress(V1, V2).","- high_tea(V1) :- shirt(V3), not -strum(V1, V2), - update(V1, V2)."],"e":["- silkworm_seed(V0, V2) :- - nuthatch(V0, V1), sargasso_sea(V1, V2).","- services(V3) :- relaxing(V0, V2), two_legged_animal(V1, V2), - superficies(V1, V3)."]}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_92_6_7_5_7_0.5_1.0_5_2_3","seed":92,"num_facts":9,"num_rules":8,"num_related_predicates":17,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"blank_check(\"Jacqueline\", \"Tina\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- basinet(\"Tina\").","teaching_people(\"Michael\", \"Tina\").","- area.","street(\"Tina\").","- insects_live_and_die(\"Jacqueline\", \"Tina\").","- eat_things_off_of(\"Jacqueline\", \"Zoe\").","- wild_ass(\"Jacqueline\", \"Michael\").","reviewing_restaurant(\"Jacqueline\", \"Michael\").","- move_itself_about(\"Zoe\", \"Tina\")."],"noisy_facts":["northamptonshire(\"Michael\").","- water_butt(\"Jacqueline\", \"Zoe\").","cardiac_massage(\"Zoe\", \"Michael\").","vending_stand(\"Jacqueline\", \"Zoe\").","- disk(\"Jacqueline\", \"Zoe\").","sou(\"Michael\", \"Tina\").","- club(\"Jacqueline\", \"Michael\").","forehead(\"Jacqueline\", \"Zoe\").","barbecue(\"Jacqueline\", \"Tina\").","- palestine(\"Jacqueline\", \"Tina\")."],"min_fact_dicts_for_query":["- basinet(\"Tina\").","- area.","- eat_things_off_of(\"Jacqueline\", \"Zoe\").","- wild_ass(\"Jacqueline\", \"Michael\")."],"noiseless_rules":["blank_check(V0, V3) :- peach(V3), - tabbouleh(V3), - yurt(V0, V1), not brick(V0, V3), not insects_live_and_die(V0, V3).","peach(V3) :- - basinet(V3), - eat_things_off_of(V0, V1), - wild_ass(V0, V2), not -reviewing_restaurant(V0, V2), not move_itself_about(V1, V3).","- litter(V2, V3) :- - basinet(V3), - eat_things_off_of(V0, V1), - wild_ass(V0, V2), not -reviewing_restaurant(V0, V2), not move_itself_about(V1, V3).","- tabbouleh(V3) :- - litter(V2, V3), not act_badly(V2, V3), not office_furniture(V2, V3).","- act_badly(V2, V3) :- teaching_people(V2, V3).","- yurt(V0, V2) :- - area, - wild_ass(V0, V2).","- office_furniture(V2, V0) :- - area, - wild_ass(V0, V2).","- brick(V3, V3) :- peach(V3), not -street(V3)."],"noisy_rules":{"a":["- blank_check(V0, V3) :- tabbouleh(V3), yurt(V0, V1), office_furniture(V2, V3), brick(V0, V3).","- blank_check(V3, V3) :- - peach(V3)."],"b":["office_furniture(V2, V3) :- litter(V2, V3), act_badly(V2, V3), yurt(V0, V1), brick(V0, V3), - blank_check(V0, V3).","insects_live_and_die(V0, V3) :- - peach(V3), tabbouleh(V3), act_badly(V2, V3), - blank_check(V0, V3)."],"c":["yurt(V0, V0) :- not peach(V3), not -litter(V2, V3), not -tabbouleh(V3), act_badly(V2, V3), brick(V0, V3).","area(V3, V3) :- not -tabbouleh(V3), office_furniture(V2, V3)."],"d":["- wall(V1, V3) :- litter(V2, V3), not -yurt(V0, V1), not -brick(V0, V3), - water_butt(V0, V1).","- place_of_learning(V1, V3) :- - peach(V3), yurt(V0, V1), not -brick(V0, V3), not disk(V0, V1), vending_stand(V0, V1)."],"e":["- comb(V2, V3) :- barbecue(V0, V3), sou(V2, V3).","drinking_with_guys(V1) :- northamptonshire(V2), forehead(V0, V1), - club(V0, V2), - palestine(V0, V3), cardiac_massage(V1, V2)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_52_10_10_7_9_0.5_1.0_5_2_3","seed":52,"num_facts":12,"num_rules":11,"num_related_predicates":23,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.2222222222222223,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" grill(\"Christine\", \"Thomas\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- jumper(\"Christine\", \"Teresa\").","fertilization(\"Christine\", \"David\").","- gaviiform_seabird(\"Thomas\", \"Teresa\").","- pemmican(\"Teresa\").","- flea(\"Thomas\", \"Teresa\").","washington(\"Christine\", \"Thomas\").","comedy(\"Teresa\").","drake(\"Christine\", \"Teresa\").","- girdle(\"Thomas\", \"David\").","break(\"David\", \"Teresa\").","ways_of_world(\"Christine\", \"Thomas\").","- education(\"Christine\", \"Thomas\")."],"noisy_facts":["pedstrians.","providing_for_needs(\"Christine\", \"David\").","puzzle.","- inside(\"David\").","cleaning(\"David\", \"Teresa\").","drown(\"Christine\", \"Teresa\").","- on_walls(\"Christine\").","usually_in_city(\"Thomas\", \"Teresa\").","- students_to_socialize_in(\"Christine\", \"Thomas\").","people_who_can_afford_groceries(\"Christine\", \"Teresa\")."],"min_fact_dicts_for_query":["- jumper(\"Christine\", \"Teresa\").","- gaviiform_seabird(\"Thomas\", \"Teresa\")."],"noiseless_rules":["- grill(V0, V1) :- sugar_bowl(V0), - cell(V1), not blood(V1), not -dollar(V0, V1), not -washington(V0, V1).","sugar_bowl(V0) :- - jumper(V0, V3).","lunchroom(V0, V2) :- fertilization(V0, V2).","- measuring_worm(V0) :- economy_of_scale(V1), images_embossed_on_both_sides(V0, V1).","economy_of_scale(V1) :- - umbrella(V0, V1).","- cell(V1) :- - gaviiform_seabird(V1, V3).","- borrow_money_from_banks(V2) :- - pemmican(V3), comedy(V3), drake(V0, V3), - girdle(V1, V2), not -break(V2, V3).","images_embossed_on_both_sides(V0, V1) :- - pemmican(V3), comedy(V3), drake(V0, V3), - girdle(V1, V2), not -break(V2, V3).","- blood(V1) :- - gaviiform_seabird(V1, V3), not flea(V1, V3).","dollar(V0, V2) :- lunchroom(V0, V2), not measuring_worm(V0), not borrow_money_from_banks(V2).","- umbrella(V0, V1) :- images_embossed_on_both_sides(V0, V1), not -ways_of_world(V0, V1), not education(V0, V1)."],"noisy_rules":{"a":["grill(V0, V1) :- - economy_of_scale(V1), not -blood(V1), not dollar(V0, V1), umbrella(V0, V1).","grill(V0, V1) :- - economy_of_scale(V1), borrow_money_from_banks(V2), - images_embossed_on_both_sides(V0, V1), - dollar(V0, V1)."],"b":["flea(V1, V1) :- grill(V0, V1).","blood(V1) :- not sugar_bowl(V0), grill(V0, V1)."],"c":["blood(V1) :- umbrella(V0, V1).","measuring_worm(V0) :- - lunchroom(V0, V2)."],"d":["- drake(V0, V0) :- - sugar_bowl(V0), - economy_of_scale(V1), cell(V1), borrow_money_from_banks(V2), not -pedstrians.","pemmican(V0) :- - lunchroom(V0, V2), cell(V1), not -puzzle."],"e":["poison_ivy(V0, V1) :- not on_walls(V0), - students_to_socialize_in(V0, V1), providing_for_needs(V0, V2).","muskellunge(V1, V3) :- - inside(V2), people_who_can_afford_groceries(V0, V3), drown(V0, V3), usually_in_city(V1, V3), cleaning(V2, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_1_6_5_5_8_0.5_1.0_5_1_2","seed":1,"num_facts":7,"num_rules":6,"num_related_predicates":13,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.4,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" birth_anniversary(\"Gregory\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- tender(\"James\").","flavorer.","groundhog.","- sausage_meat.","every_time(\"Gregory\").","- print.","tabby_cat(\"James\")."],"noisy_facts":[],"min_fact_dicts_for_query":["flavorer.","groundhog.","- sausage_meat.","every_time(\"Gregory\")."],"noiseless_rules":["- birth_anniversary(V0) :- pull_cart(V0), not -every_time(V0).","reef(V1) :- - card_game(V1), not necrosis(V1), not -tabby_cat(V1).","- card_game(V1) :- - tender(V1).","pull_cart(V1) :- - necrosis(V1), not -seat_cushion(V1).","- necrosis(V0) :- flavorer, groundhog, - sausage_meat, every_time(V0), not print.","seat_cushion(V1) :- reef(V1), not necrosis(V1)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_48_8_9_6_8_0.5_1.0_5_3_4","seed":48,"num_facts":10,"num_rules":10,"num_related_predicates":20,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.5714285714285714,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"somewhere(\"Timothy\", \"Colin\", \"Alexander\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["bomblet(\"Alexander\").","- reviewing_book(\"Timothy\", \"Colin\", \"Alexander\").","sweden(\"Timothy\", \"Colin\", \"Alexander\").","- money_store(\"Alexander\").","- mail_orders(\"Timothy\", \"William\").","- farrow(\"Timothy\", \"Colin\", \"Jennifer\").","baboon(\"Timothy\", \"Jennifer\", \"Alexander\").","trepan(\"Timothy\", \"Jennifer\", \"Alexander\").","- cheerfulness(\"Timothy\", \"Jennifer\", \"Alexander\").","chinchilla(\"Timothy\", \"Jennifer\", \"Alexander\")."],"noisy_facts":["steel(\"Timothy\", \"William\", \"Alexander\").","drawing(\"Colin\", \"William\", \"Alexander\").","independent_country(\"Timothy\", \"Colin\", \"Alexander\").","cookie(\"Timothy\", \"William\", \"Jennifer\").","old_catholic_church(\"Colin\", \"Jennifer\").","roll(\"William\", \"Jennifer\", \"Alexander\").","- ninian(\"Colin\", \"Jennifer\").","sperm(\"Timothy\", \"William\", \"Alexander\").","shell(\"Timothy\", \"Colin\", \"Alexander\")."],"min_fact_dicts_for_query":["bomblet(\"Alexander\").","sweden(\"Timothy\", \"Colin\", \"Alexander\").","- mail_orders(\"Timothy\", \"William\").","- farrow(\"Timothy\", \"Colin\", \"Jennifer\").","- cheerfulness(\"Timothy\", \"Jennifer\", \"Alexander\")."],"noiseless_rules":["somewhere(V0, V1, V4) :- - robin(V0, V3), - warm_hands(V1, V2), - beldam(V0, V1, V4), not playing_game_of_chess(V0, V1, V4), not -hold_oranges(V0, V2, V4).","- robin(V0, V3) :- treaty(V0), elver(V4), - cheerfulness(V0, V3, V4), not -chinchilla(V0, V3, V4).","- warm_hands(V1, V2) :- bomblet(V4), - mail_orders(V0, V2), - farrow(V0, V1, V3), not -baboon(V0, V3, V4), not -trepan(V0, V3, V4).","- trigger(V4) :- bomblet(V4), - mail_orders(V0, V2), - farrow(V0, V1, V3), not -baboon(V0, V3, V4), not -trepan(V0, V3, V4).","- flowing(V1, V1, V4) :- - playing_game_of_chess(V0, V1, V4), not reviewing_book(V0, V1, V4).","- beldam(V0, V1, V4) :- sweden(V0, V1, V4).","treaty(V0) :- sweden(V0, V1, V4).","elver(V4) :- - trigger(V4), not money_store(V4).","- playing_game_of_chess(V4, V4, V4) :- - trigger(V4).","hold_oranges(V1, V2, V4) :- - flowing(V1, V2, V4)."],"noisy_rules":{"a":["- somewhere(V0, V1, V4) :- not -trigger(V4), beldam(V0, V1, V4), - treaty(V0), - elver(V4), - hold_oranges(V0, V2, V4).","- somewhere(V0, V1, V4) :- flowing(V1, V2, V4), beldam(V0, V1, V4), - elver(V4), not hold_oranges(V0, V2, V4)."],"b":["trigger(V4) :- not -trigger(V4), not treaty(V0), playing_game_of_chess(V0, V1, V4), - somewhere(V0, V1, V4).","flowing(V1, V2, V4) :- flowing(V1, V2, V4), not -beldam(V0, V1, V4), - somewhere(V0, V1, V4)."],"c":["mail_orders(V0, V2) :- trigger(V4), flowing(V1, V2, V4), playing_game_of_chess(V0, V1, V4).","- chinchilla(V0, V0, V4) :- beldam(V0, V1, V4), - treaty(V0), not -playing_game_of_chess(V0, V1, V4)."],"d":["- chinchilla(V0, V4, V4) :- - elver(V4), playing_game_of_chess(V0, V1, V4), not -independent_country(V0, V1, V4).","- chinchilla(V0, V0, V4) :- - elver(V4), - hold_oranges(V0, V2, V4), steel(V0, V2, V4), sperm(V0, V2, V4)."],"e":["- timing(V4) :- drawing(V1, V2, V4).","appellate_court(V1, V2, V4) :- not -old_catholic_church(V1, V3), not ninian(V1, V3), shell(V0, V1, V4), not -cookie(V0, V2, V3), roll(V2, V3, V4)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_23_3_2_1_3_0.5_1.0_3_2_3","seed":23,"num_facts":3,"num_rules":3,"num_related_predicates":6,"max_depth_of_rule_graph":1,"average_depth_of_rule_graph":1.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":2,"target_query":" curtain(\"Michele\", \"Michael\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- testing(\"Michele\").","horizontal_bar(\"Michele\", \"Michael\").","dark(\"Michele\", \"Michael\")."],"noisy_facts":["farmer(\"Michael\").","bombs(\"Derek\").","setter(\"Michael\").","- aerial_bomb(\"Rachel\", \"Derek\").","antler(\"Michele\", \"Derek\").","bevel(\"Michael\").","bomb(\"Michael\", \"Derek\")."],"min_fact_dicts_for_query":["- testing(\"Michele\").","horizontal_bar(\"Michele\", \"Michael\")."],"noiseless_rules":["- curtain(V0, V1) :- - theater_curtain(V1), - shower_curtain(V0, V1).","- theater_curtain(V1) :- - testing(V0), horizontal_bar(V0, V1), not -dark(V0, V1).","- shower_curtain(V0, V1) :- horizontal_bar(V0, V1), not -dark(V0, V1)."],"noisy_rules":{"a":["curtain(V0, V1) :- theater_curtain(V1), shower_curtain(V0, V1).","curtain(V1, V1) :- theater_curtain(V1)."],"b":["- dark(V0, V1) :- curtain(V0, V1).","shower_curtain(V0, V1) :- curtain(V0, V1)."],"c":["shower_curtain(V1, V1) :- theater_curtain(V1).","testing(V0) :- not -theater_curtain(V1), shower_curtain(V0, V1)."],"d":["beak(V1, V1) :- theater_curtain(V1), not -setter(V1), farmer(V1).","- edge(V1) :- not -theater_curtain(V1), bevel(V1)."],"e":["- deer(V0, V3) :- antler(V0, V3).","- destroy_city(V1, V3) :- bombs(V3), bomb(V1, V3), - aerial_bomb(V2, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_14_5_7_3_5_0.5_1.0_5_2_3","seed":14,"num_facts":4,"num_rules":8,"num_related_predicates":12,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" memory(\"Mike\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["parking_lot(\"Karen\").","- poland(\"Mike\", \"Karen\").","- abdominal_breathing(\"Mike\", \"Candace\").","leicester(\"Mike\", \"Candace\")."],"noisy_facts":["ectoparasite(\"Katherine\", \"Candace\").","- horn(\"Mike\", \"Karen\").","- back(\"Katherine\", \"Karen\").","- release(\"Mike\", \"Karen\").","- compressor(\"Mike\", \"Candace\").","- giving_as_gift(\"Katherine\").","truncation(\"Katherine\", \"Mike\").","- rhode_island_red(\"Mike\", \"Karen\").","- lahar(\"Mike\", \"Candace\").","- listen(\"Mike\", \"Candace\").","- soul_patch(\"Candace\")."],"min_fact_dicts_for_query":["parking_lot(\"Karen\").","- poland(\"Mike\", \"Karen\").","- abdominal_breathing(\"Mike\", \"Candace\")."],"noiseless_rules":["- memory(V1) :- works_council(V1, V2), - production(V1, V3), not -buy_things_with(V2, V3).","works_council(V1, V2) :- parking_lot(V2), - poland(V1, V2), - abdominal_breathing(V1, V3), not -leicester(V1, V3).","- speak(V1, V3) :- parking_lot(V2), - poland(V1, V2), - abdominal_breathing(V1, V3), not -leicester(V1, V3).","red_blue(V3) :- parking_lot(V2), - poland(V1, V2), - abdominal_breathing(V1, V3), not -leicester(V1, V3).","- production(V1, V3) :- red_blue(V3), eternal_life(V1, V3), not -master_bedroom(V1, V3), not abdominal_breathing(V1, V3).","buy_things_with(V1, V3) :- - speak(V1, V3).","eternal_life(V1, V3) :- - speak(V1, V3).","master_bedroom(V3, V3) :- red_blue(V3)."],"noisy_rules":{"a":["memory(V2) :- - buy_things_with(V2, V3).","memory(V1) :- - works_council(V1, V2), - red_blue(V3), not eternal_life(V1, V3)."],"b":["speak(V1, V3) :- not -speak(V1, V3), - red_blue(V3), not master_bedroom(V1, V3), memory(V1).","- leicester(V1, V3) :- - works_council(V1, V2), speak(V1, V3), - red_blue(V3), - eternal_life(V1, V3), memory(V1)."],"c":["- master_bedroom(V1, V3) :- production(V1, V3), - buy_things_with(V2, V3).","abdominal_breathing(V1, V3) :- - works_council(V1, V2), speak(V1, V3), not red_blue(V3), - eternal_life(V1, V3), not master_bedroom(V1, V3)."],"d":["speak(V1, V3) :- not eternal_life(V1, V3), - master_bedroom(V1, V3), not listen(V1, V3).","- parking_lot(V2) :- - works_council(V1, V2), - eternal_life(V1, V3), not rhode_island_red(V1, V2), - release(V1, V2), not horn(V1, V2)."],"e":["- class(V3) :- - giving_as_gift(V0), not soul_patch(V3), not -ectoparasite(V0, V3), - compressor(V1, V3), - lahar(V1, V3).","- mother_of_pearl(V0, V1) :- truncation(V0, V1), - back(V0, V2)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_9_10_14_14_14_0.5_1.0_5_2_3","seed":9,"num_facts":16,"num_rules":15,"num_related_predicates":31,"max_depth_of_rule_graph":7,"average_depth_of_rule_graph":3.888888888888889,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"bovid(\"Christopher\", \"John\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["giving_gift(\"Chris\", \"Bruce\").","- brahman(\"Chris\", \"John\").","harnessed_antelope(\"John\").","- kudu(\"John\").","dik_dik(\"John\").","- gnu(\"John\").","- show_membership_card(\"John\", \"Bruce\").","oklahoman(\"John\", \"Bruce\").","cow(\"Chris\").","ruminant(\"Chris\").","- beef(\"Chris\").","- teacup(\"Christopher\", \"John\").","payment(\"Christopher\", \"John\").","- lap(\"John\", \"Bruce\").","pudge(\"John\", \"Bruce\").","- horn(\"Chris\", \"John\")."],"noisy_facts":["mist(\"John\").","bill(\"Chris\", \"Christopher\").","graceful(\"Christopher\", \"John\").","consumption(\"Chris\", \"Bruce\").","hoofed_mammals_oink(\"Chris\", \"John\").","sense_smell(\"Chris\").","entertaining_people(\"Bruce\").","- certificate(\"Chris\")."],"min_fact_dicts_for_query":["giving_gift(\"Chris\", \"Bruce\").","- teacup(\"Christopher\", \"John\").","- horn(\"Chris\", \"John\")."],"noiseless_rules":["bovid(V1, V2) :- bison(V1, V2), not -old_world_buffalo(V1, V2).","bison(V1, V2) :- forest_goat(V0, V1), - horn(V0, V2).","goat(V0, V1) :- forest_goat(V0, V1), - horn(V0, V2).","forest_goat(V0, V1) :- giving_gift(V0, V3), - teacup(V1, V2), not -payment(V1, V2), not lap(V2, V3), not -pudge(V2, V3).","- blackbuck(V2) :- giving_gift(V0, V3), - teacup(V1, V2), not -payment(V1, V2), not lap(V2, V3), not -pudge(V2, V3).","- bovine(V0) :- - brahman(V0, V2).","old_world_buffalo(V1, V2) :- parties(V3), cattle(V1, V2), not -antelope(V2, V3), not show_membership_card(V2, V3), not -oklahoman(V2, V3).","house(V0) :- goat(V0, V1), not -rent(V0, V1), not -ox(V0, V1).","parties(V3) :- sheep(V1, V3).","withers(V1) :- sheep(V1, V3).","cattle(V0, V0) :- - bovine(V0), not -house(V0), not -cow(V0), not -ruminant(V0), not beef(V0).","antelope(V2, V2) :- - blackbuck(V2), not -harnessed_antelope(V2), not kudu(V2), not -dik_dik(V2), not gnu(V2).","rent(V2, V2) :- - blackbuck(V2), not -harnessed_antelope(V2), not kudu(V2), not -dik_dik(V2), not gnu(V2).","sheep(V2, V2) :- - blackbuck(V2), not -harnessed_antelope(V2), not kudu(V2), not -dik_dik(V2), not gnu(V2).","ox(V1, V1) :- withers(V1)."],"noisy_rules":{"a":["- bovid(V1, V2) :- bovine(V0), - antelope(V2, V3), - sheep(V1, V3).","- bovid(V1, V1) :- not goat(V0, V1), - forest_goat(V0, V1)."],"b":["bovine(V0) :- - cattle(V1, V2), - antelope(V2, V3), - ox(V0, V1), not bovid(V1, V2).","- ruminant(V0) :- not forest_goat(V0, V1), bovine(V0), not house(V0), - bovid(V1, V2)."],"c":["show_membership_card(V2, V3) :- - goat(V0, V1), not old_world_buffalo(V1, V2), - antelope(V2, V3), not ox(V0, V1).","- old_world_buffalo(V1, V2) :- - forest_goat(V0, V1), blackbuck(V2), bovine(V0), not house(V0), not cattle(V1, V2)."],"d":["horn(V0, V0) :- - house(V0), - certificate(V0).","- payment(V1, V0) :- - rent(V0, V1), not -bill(V0, V1)."],"e":["making_laugh(V0, V1) :- sense_smell(V0), entertaining_people(V3), hoofed_mammals_oink(V0, V2), consumption(V0, V3), graceful(V1, V2).","- spider_man(V2) :- mist(V2)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_0_5_7_6_7_0.5_1.0_3_2_3","seed":0,"num_facts":7,"num_rules":8,"num_related_predicates":15,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" two_kidneys(\"Mary\", \"Eddie\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- animal(\"Mary\", \"Eddie\").","- two_legs(\"Mary\", \"Scott\").","canary(\"Mary\", \"Eddie\").","- chick(\"Mary\", \"Eddie\").","geese(\"Mary\", \"Eddie\").","tiles(\"Mary\", \"Eddie\").","- laser(\"Mary\", \"Eddie\")."],"noisy_facts":["goods_for_kissing(\"Mary\", \"Eddie\").","- legionella_pneumophilia(\"Eddie\").","tooth(\"Mary\", \"Mark\").","punt(\"Mark\", \"Eddie\").","- barcarole(\"Mary\", \"Scott\").","hold_peanuts(\"Mary\", \"Scott\").","- get_good_atmosphere(\"Eddie\").","mackinaw(\"Mary\", \"Eddie\")."],"min_fact_dicts_for_query":["- animal(\"Mary\", \"Eddie\").","- two_legs(\"Mary\", \"Scott\").","- chick(\"Mary\", \"Eddie\")."],"noiseless_rules":["- two_kidneys(V0, V3) :- - normally_people(V0, V3), - bird(V0, V3), duck(V2, V3).","- normally_people(V0, V3) :- - chicken(V0), - one_head(V0, V1), - chick(V0, V3).","hen(V0, V3) :- - chicken(V0), - one_head(V0, V1), - chick(V0, V3).","- bird(V0, V3) :- nest(V3), - two_legs(V0, V1), not -canary(V0, V3).","- chicken(V0) :- nest(V3), - two_legs(V0, V1), not -canary(V0, V3).","duck(V3, V3) :- hen(V0, V3), not -geese(V0, V3), not -tiles(V0, V3).","- one_head(V0, V3) :- - animal(V0, V3), not chick(V0, V3), not laser(V0, V3).","nest(V3) :- - animal(V0, V3), not chick(V0, V3), not laser(V0, V3)."],"noisy_rules":{"a":["two_kidneys(V0, V3) :- chicken(V0), - nest(V3).","two_kidneys(V0, V3) :- bird(V0, V3), not nest(V3)."],"b":["bird(V0, V3) :- - hen(V0, V3), bird(V0, V3), two_kidneys(V0, V3).","- geese(V0, V3) :- two_kidneys(V0, V3)."],"c":["two_legs(V0, V0) :- normally_people(V0, V3), not -bird(V0, V3).","animal(V0, V3) :- bird(V0, V3), not -chicken(V0), - duck(V2, V3)."],"d":["one_head(V0, V3) :- not -normally_people(V0, V3), - hen(V0, V3), not -goods_for_kissing(V0, V3).","chick(V3, V3) :- not nest(V3), - get_good_atmosphere(V3), not legionella_pneumophilia(V3)."],"e":["song(V0) :- - barcarole(V0, V1), tooth(V0, V2).","boat(V1, V3) :- hold_peanuts(V0, V1), mackinaw(V0, V3), punt(V2, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_32_9_12_11_14_0.5_1.0_5_3_4","seed":32,"num_facts":14,"num_rules":13,"num_related_predicates":27,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" trip_light_fantastic(\"Michael\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["evening(\"Crystal\", \"Michael\", \"Kristopher\").","young_mammal(\"Crystal\", \"Kristopher\", \"Janice\").","- decrease(\"Crystal\", \"Michael\").","- chinese_cabbage(\"Emily\", \"Kristopher\").","- government(\"Michael\", \"Kristopher\").","- testing_new_flavor(\"Michael\", \"Kristopher\", \"Janice\").","- bicycle(\"Crystal\", \"Kristopher\", \"Janice\").","provider(\"Michael\", \"Kristopher\", \"Janice\").","combat_pilot(\"Crystal\", \"Kristopher\", \"Janice\").","high_table(\"Crystal\", \"Kristopher\", \"Janice\").","- step(\"Michael\", \"Kristopher\").","- part_hair(\"Michael\", \"Kristopher\").","milk_animal(\"Michael\", \"Kristopher\").","- merit_badge(\"Crystal\", \"Emily\", \"Janice\")."],"noisy_facts":[],"min_fact_dicts_for_query":["evening(\"Crystal\", \"Michael\", \"Kristopher\").","young_mammal(\"Crystal\", \"Kristopher\", \"Janice\").","- decrease(\"Crystal\", \"Michael\").","- chinese_cabbage(\"Emily\", \"Kristopher\").","- bicycle(\"Crystal\", \"Kristopher\", \"Janice\").","provider(\"Michael\", \"Kristopher\", \"Janice\").","combat_pilot(\"Crystal\", \"Kristopher\", \"Janice\")."],"noiseless_rules":["- trip_light_fantastic(V2) :- counter(V2), - might_have_been(V0, V4), - american_sport(V1, V2), not merit_badge(V0, V1, V4).","counter(V2) :- - plutonium(V4), rocket(V0, V2), - chinese_cabbage(V1, V3), not government(V2, V3), not testing_new_flavor(V2, V3, V4).","seat(V2, V3, V4) :- evening(V0, V2, V3), combat_pilot(V0, V3, V4).","- might_have_been(V0, V4) :- young_mammal(V0, V3, V4), not -combat_pilot(V0, V3, V4).","- do_leave_fingerprints(V0, V3) :- young_mammal(V0, V3, V4), not -combat_pilot(V0, V3, V4).","- plutonium(V4) :- peanut(V3, V4), seeing(V1, V2, V3).","- american_sport(V1, V2) :- gonion(V0, V2, V3), - occasions(V1, V2, V4).","rocket(V0, V2) :- gonion(V0, V2, V3), - occasions(V1, V2, V4).","peanut(V3, V4) :- gonion(V0, V2, V3), - occasions(V1, V2, V4).","seeing(V2, V2, V3) :- - do_leave_fingerprints(V2, V3), not -ostrich(V2, V3), not step(V2, V3), not part_hair(V2, V3), not -milk_animal(V2, V3).","gonion(V0, V2, V3) :- - decrease(V0, V2), provider(V2, V3, V4).","- occasions(V3, V2, V4) :- seat(V2, V3, V4), - bicycle(V0, V3, V4), not -provider(V2, V3, V4), not -combat_pilot(V0, V3, V4), not -high_table(V0, V3, V4).","ostrich(V2, V3) :- seat(V2, V3, V4), - bicycle(V0, V3, V4), not -provider(V2, V3, V4), not -combat_pilot(V0, V3, V4), not -high_table(V0, V3, V4)."],"noisy_rules":{}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_80_6_7_2_5_0.5_1.0_5_1_2","seed":80,"num_facts":4,"num_rules":8,"num_related_predicates":12,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" jump_moons(\"Gary\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["animist(\"Gary\").","- domino.","prosthion(\"Gary\").","- pal(\"Gary\")."],"noisy_facts":["criminals(\"Jennifer\").","singing(\"Jennifer\").","honor_word_with_truth(\"Gary\").","fairy(\"Gary\").","bounce(\"Gary\").","- rapper(\"Gary\").","- gelechiid(\"Gary\").","- justice(\"Gary\")."],"min_fact_dicts_for_query":["- domino.","prosthion(\"Gary\")."],"noiseless_rules":["- jump_moons(V1) :- greenland(V1), not -prosthion(V1), not pal(V1).","greenland(V1) :- - garden_snail(V1), not -lawn_chair(V1), not -sugar_bowl(V1), not sequence(V1).","- garden_snail(V1) :- sugar_bowl(V1), not -states_rights_democratic_party(V1).","lawn_chair(V1) :- states_rights_democratic_party(V1), not -animist(V1).","sugar_bowl(V1) :- states_rights_democratic_party(V1), not -animist(V1).","- sheet(V1) :- - domino, prosthion(V1).","- sequence(V2) :- - sheet(V2).","states_rights_democratic_party(V2) :- - sheet(V2)."],"noisy_rules":{"a":["jump_moons(V1) :- - sugar_bowl(V1), sheet(V2), not states_rights_democratic_party(V1).","jump_moons(V2) :- sheet(V2)."],"b":["- greenland(V1) :- not greenland(V1), not -garden_snail(V1), - sugar_bowl(V1), not -sequence(V1), jump_moons(V1).","- prosthion(V1) :- not -garden_snail(V1), sequence(V1), jump_moons(V1)."],"c":["garden_snail(V1) :- not greenland(V1), sequence(V1), not states_rights_democratic_party(V1).","- prosthion(V1) :- - greenland(V1), - lawn_chair(V1), - sugar_bowl(V1), sheet(V2), not states_rights_democratic_party(V1)."],"d":["- greenland(V1) :- sequence(V1), not -bounce(V1), - rapper(V1).","pal(V1) :- not greenland(V1), garden_snail(V1), not lawn_chair(V1), honor_word_with_truth(V1)."],"e":["drying_oil(V2) :- singing(V2), not -criminals(V2).","basket_oak(V1) :- not gelechiid(V1), - justice(V1), not -fairy(V1)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_25_7_11_11_13_0.5_1.0_5_3_4","seed":25,"num_facts":13,"num_rules":12,"num_related_predicates":25,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P11(\"Jeffrey\", \"Brandon\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P12(\"Brandon\").","P13(\"Amanda\", \"Sierra\", \"Brandon\").","- P14(\"Amanda\", \"Sierra\", \"Brandon\").","P15(\"Amanda\", \"Sierra\", \"Brandon\").","- P16(\"Amanda\", \"Jeffrey\", \"Rachel\").","- P17(\"Sierra\", \"Rachel\").","P18(\"Jeffrey\", \"Brandon\").","- P19(\"Amanda\", \"Sierra\", \"Jeffrey\").","- P20(\"Sierra\", \"Jeffrey\", \"Brandon\").","P21(\"Amanda\", \"Brandon\", \"Rachel\").","P22(\"Amanda\", \"Brandon\", \"Rachel\").","P23(\"Amanda\", \"Brandon\", \"Rachel\").","P24(\"Amanda\", \"Sierra\", \"Brandon\")."],"noisy_facts":["P29(\"Jeffrey\", \"Brandon\").","- P26(\"Sierra\", \"Jeffrey\").","P28(\"Brandon\").","P31(\"Amanda\", \"Sierra\", \"Rachel\").","- P30(\"Amanda\", \"Sierra\", \"Brandon\").","P34(\"Amanda\", \"Jeffrey\", \"Brandon\").","- P32(\"Amanda\", \"Brandon\", \"Rachel\").","P33(\"Jeffrey\", \"Brandon\").","- P25(\"Amanda\", \"Brandon\", \"Rachel\").","P35(\"Jeffrey\", \"Brandon\", \"Rachel\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- P11(V2, V3) :- P0(V0, V2), - P7(V1, V3), - P9(V3, V4), not P10(V3, V4), not P16(V0, V2, V4).","P0(V0, V2) :- - P12(V3), - P17(V1, V4), P18(V2, V3), - P19(V0, V1, V2), not P20(V1, V2, V3).","P1(V0, V2, V3) :- - P12(V3), - P17(V1, V4), P18(V2, V3), - P19(V0, V1, V2), not P20(V1, V2, V3).","- P2(V0, V1, V3) :- - P12(V3), - P17(V1, V4), P18(V2, V3), - P19(V0, V1, V2), not P20(V1, V2, V3).","P3(V1) :- - P12(V3), - P17(V1, V4), P18(V2, V3), - P19(V0, V1, V2), not P20(V1, V2, V3).","P4(V3, V2) :- P1(V0, V2, V3).","P5(V0, V2, V3) :- P1(V0, V2, V3).","- P6(V0, V3, V1) :- - P2(V0, V1, V3), P4(V1, V2), not P8(V0, V1, V3), not P14(V0, V1, V3), not -P15(V0, V1, V3).","- P7(V1, V3) :- P13(V0, V1, V3).","- P8(V0, V1, V3) :- P13(V0, V1, V3).","- P9(V3, V4) :- P5(V1, V2, V3), - P6(V0, V3, V4), not -P21(V0, V3, V4), not -P22(V0, V3, V4), not -P23(V0, V3, V4).","- P10(V3, V4) :- P3(V1), - P14(V0, V1, V3), - P17(V1, V4), not -P24(V0, V1, V3)."],"noisy_rules":{"a":["P11(V2, V3) :- P2(V0, V1, V3), - P4(V1, V2).","P11(V2, V3) :- - P5(V1, V2, V3)."],"b":["P17(V1, V4) :- - P5(V1, V2, V3), P6(V0, V3, V4), P10(V3, V4), not -P11(V2, V3).","- P15(V0, V1, V3) :- - P0(V0, V2), - P3(V1), P6(V0, V3, V4), not -P10(V3, V4), P11(V2, V3)."],"c":["P9(V3, V0) :- - P0(V0, V2), - P5(V1, V2, V3).","P12(V3) :- - P3(V1), P9(V3, V4), not -P10(V3, V4)."],"d":["P14(V0, V1, V3) :- P6(V0, V3, V4), P7(V1, V3), not P25(V0, V3, V4).","- P18(V2, V3) :- - P4(V1, V2), - P5(V1, V2, V3), not P26(V1, V2)."],"e":["- P27(V0, V2) :- P28(V3), P29(V2, V3), not P30(V0, V1, V3), P31(V0, V1, V4), not P32(V0, V3, V4).","P36(V0, V3, V4) :- P33(V2, V3), P34(V0, V2, V3), P35(V2, V3, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_70_6_6_6_8_0.5_1.0_3_2_3","seed":70,"num_facts":9,"num_rules":7,"num_related_predicates":16,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"payment(\"Sydney\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["rhinorrhea(\"Regina\", \"Sydney\").","bed(\"Kathleen\").","experience(\"Regina\", \"Sydney\").","- cheap_money(\"Sydney\", \"Kathleen\").","anapsida(\"Regina\", \"Kathleen\").","noumenon(\"Sydney\", \"Casey\").","- smother(\"Regina\", \"Sydney\").","seat(\"Regina\", \"Kathleen\").","rest(\"Regina\", \"Sydney\")."],"noisy_facts":[],"min_fact_dicts_for_query":["rhinorrhea(\"Regina\", \"Sydney\").","bed(\"Kathleen\").","anapsida(\"Regina\", \"Kathleen\").","noumenon(\"Sydney\", \"Casey\").","- smother(\"Regina\", \"Sydney\")."],"noiseless_rules":["payment(V1) :- credit(V3), - pillows(V0, V1), not -saber_toothed_tiger(V1, V3).","- export_credit(V1, V2) :- rhinorrhea(V0, V1), anapsida(V0, V2), noumenon(V1, V3).","credit(V2) :- - export_credit(V1, V2), not relaxing(V1, V2), not cheap_money(V1, V2).","- pillows(V0, V1) :- bed(V2), - smother(V0, V1), not -seat(V0, V2).","- sleeping(V0, V2) :- bed(V2), - smother(V0, V1), not -seat(V0, V2).","- relaxing(V1, V2) :- - sleeping(V0, V2), - smother(V0, V1), not -rest(V0, V1).","saber_toothed_tiger(V1, V1) :- - pillows(V0, V1), not -experience(V0, V1)."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_56_5_8_3_4_0.5_1.0_5_3_4","seed":56,"num_facts":5,"num_rules":9,"num_related_predicates":14,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" escape(\"Caitlin\", \"Andrea\", \"Deborah\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["sleeping(\"Caitlin\", \"Renee\").","- act(\"Kathryn\", \"Renee\", \"Deborah\").","- nuclear_fuel(\"Andrea\", \"Deborah\").","means(\"Kathryn\", \"Renee\").","decision_making(\"Caitlin\", \"Andrea\", \"Deborah\")."],"noisy_facts":["- carpenters_level(\"Caitlin\", \"Deborah\").","- street(\"Caitlin\", \"Andrea\", \"Kathryn\").","cirrostratus(\"Caitlin\", \"Andrea\", \"Deborah\").","wet_bar(\"Caitlin\", \"Kathryn\", \"Renee\").","sushi_bar(\"Andrea\", \"Renee\")."],"min_fact_dicts_for_query":["sleeping(\"Caitlin\", \"Renee\").","- act(\"Kathryn\", \"Renee\", \"Deborah\").","- nuclear_fuel(\"Andrea\", \"Deborah\").","means(\"Kathryn\", \"Renee\")."],"noiseless_rules":["- escape(V0, V1, V4) :- - evasion(V0), skedaddle(V4), - exodus(V0, V1), not -getaway(V0, V4).","- evasion(V0) :- sleeping(V0, V3), - nuclear_fuel(V1, V4), means(V2, V3), not -decision_making(V0, V1, V4).","wings(V0, V1, V2) :- sleeping(V0, V3), - nuclear_fuel(V1, V4), means(V2, V3), not -decision_making(V0, V1, V4).","- implementation(V0, V3, V4) :- sleeping(V0, V3), - nuclear_fuel(V1, V4), means(V2, V3), not -decision_making(V0, V1, V4).","skedaddle(V4) :- - act(V2, V3, V4).","stepping_stone(V2, V3, V4) :- - act(V2, V3, V4).","- exodus(V0, V1) :- wings(V0, V1, V2), not -road(V0, V1, V2).","getaway(V0, V4) :- - implementation(V0, V3, V4), stepping_stone(V2, V3, V4), not -means(V2, V3).","road(V0, V0, V2) :- - implementation(V0, V3, V4), stepping_stone(V2, V3, V4), not -means(V2, V3)."],"noisy_rules":{"a":["escape(V0, V1, V2) :- - road(V0, V1, V2).","escape(V0, V1, V2) :- not -evasion(V0), - wings(V0, V1, V2)."],"b":["- means(V1, V1) :- evasion(V0), escape(V0, V1, V4).","- means(V2, V3) :- - wings(V0, V1, V2), - skedaddle(V4), - stepping_stone(V2, V3, V4), not road(V0, V1, V2), not -escape(V0, V1, V4)."],"c":["exodus(V0, V3) :- implementation(V0, V3, V4), - skedaddle(V4).","act(V2, V3, V4) :- evasion(V0), - wings(V0, V1, V2), implementation(V0, V3, V4), - road(V0, V1, V2)."],"d":["- skedaddle(V4) :- - stepping_stone(V2, V3, V4).","- skedaddle(V4) :- implementation(V0, V3, V4), - road(V0, V1, V2), - street(V0, V1, V2)."],"e":["cloud(V0) :- cirrostratus(V0, V1, V4).","bar(V0, V3, V4) :- - carpenters_level(V0, V4), sushi_bar(V1, V3), wet_bar(V0, V2, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_51_8_8_7_8_0.5_1.0_3_2_3","seed":51,"num_facts":11,"num_rules":9,"num_related_predicates":20,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5714285714285716,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" saving_money(\"Mark\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["side(\"Kathryn\", \"Mark\").","rudder(\"Mark\").","display(\"Paige\", \"Mark\").","neigh(\"Kathryn\", \"Paige\").","balloon(\"Paige\", \"Mark\").","obtaining_vitamins_and_proteins(\"Amanda\", \"Mark\").","cantillation(\"Kathryn\", \"Mark\").","atoll(\"Mark\").","market(\"Paige\", \"Mark\").","eating_steak(\"Kathryn\", \"Paige\").","doorkeeper(\"Kathryn\", \"Paige\")."],"noisy_facts":[],"min_fact_dicts_for_query":["side(\"Kathryn\", \"Mark\").","rudder(\"Mark\").","display(\"Paige\", \"Mark\").","neigh(\"Kathryn\", \"Paige\").","balloon(\"Paige\", \"Mark\").","obtaining_vitamins_and_proteins(\"Amanda\", \"Mark\").","cantillation(\"Kathryn\", \"Mark\").","atoll(\"Mark\").","market(\"Paige\", \"Mark\").","eating_steak(\"Kathryn\", \"Paige\").","doorkeeper(\"Kathryn\", \"Paige\")."],"noiseless_rules":["saving_money(V3) :- firebomb(V1, V3), noon(V1, V3).","shoulder_bag(V1, V3) :- inside(V0, V1), side(V0, V3).","play_piano(V3) :- rudder(V3), atoll(V3), market(V1, V3).","rainbow(V1, V3) :- display(V1, V3).","firebomb(V1, V3) :- shoulder_bag(V1, V3), rainbow(V1, V3), bombie(V1, V3).","annoy(V0, V3) :- neigh(V0, V1), balloon(V1, V3), obtaining_vitamins_and_proteins(V2, V3).","inside(V0, V3) :- play_piano(V3), annoy(V0, V3), cantillation(V0, V3).","noon(V1, V1) :- inside(V0, V1), eating_steak(V0, V1), doorkeeper(V0, V1).","bombie(V1, V1) :- inside(V0, V1), eating_steak(V0, V1), doorkeeper(V0, V1)."],"noisy_rules":{}},"num_min_facts_for_query":7,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_47_8_7_3_6_0.5_1.0_3_2_3","seed":47,"num_facts":7,"num_rules":8,"num_related_predicates":15,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" P7(\"Kristin\", \"Katie\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P8(\"Kristin\", \"Katie\").","P9(\"Kristin\", \"Katie\").","P10(\"Scott\", \"Michael\").","- P11(\"Kristin\", \"Scott\").","- P12(\"Scott\", \"Michael\").","P13(\"Kristin\", \"Katie\").","- P14(\"Kristin\", \"Katie\")."],"noisy_facts":["- P17.","P19(\"Scott\", \"Michael\").","- P18(\"Kristin\", \"Michael\").","P22(\"Kristin\", \"Scott\").","- P24(\"Scott\", \"Katie\").","P23(\"Kristin\", \"Michael\").","- P15."],"min_fact_dicts_for_query":["P9(\"Kristin\", \"Katie\").","- P11(\"Kristin\", \"Scott\").","P13(\"Kristin\", \"Katie\")."],"noiseless_rules":["- P7(V0, V2) :- P2(V0), P4(V0, V2), not P5(V0, V2).","- P0(V0, V0) :- P4(V0, V2), not -P8(V0, V2).","- P1(V2, V3) :- P6(V2, V3).","P2(V0) :- P9(V0, V2).","P3(V1, V3) :- P10(V1, V3).","P4(V0, V2) :- - P11(V0, V1), P13(V0, V2), not P14(V0, V2).","- P5(V2, V2) :- - P1(V2, V3), P3(V1, V3), not P12(V1, V3).","P6(V3, V3) :- - P0(V0, V3), - P11(V0, V1), not P12(V1, V3)."],"noisy_rules":{"a":["P7(V0, V1) :- P0(V0, V3), - P3(V1, V3).","P7(V0, V2) :- - P3(V1, V3), - P4(V0, V2), - P6(V2, V3)."],"b":["- P4(V0, V2) :- P7(V0, V2).","- P10(V1, V3) :- - P3(V1, V3), P7(V0, V2)."],"c":["- P3(V2, V3) :- P0(V0, V3), P5(V0, V2).","- P10(V3, V3) :- not -P1(V2, V3), P5(V0, V2), - P6(V2, V3)."],"d":["P11(V2, V3) :- P1(V2, V3), not P15.","P16(V0, V3) :- - P2(V0), - P3(V1, V3), not P17."],"e":["- P20(V1) :- - P18(V0, V3), P19(V1, V3).","P21(V1, V3) :- P22(V0, V1), P23(V0, V3), - P24(V1, V2)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_62_8_12_5_6_0.5_1.0_5_1_2","seed":62,"num_facts":7,"num_rules":13,"num_related_predicates":20,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" overgarment(\"Robert\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["coffee_can(\"Lauren\").","- jumper.","double_breasted_jacket.","- bolero.","mao_jacket.","- record_jacket(\"Robert\").","mackinaw."],"noisy_facts":["creation.","manitoba(\"Lauren\").","squab(\"Robert\").","rock_dove(\"Robert\").","- plaything.","- passenger_pigeon(\"Robert\").","- dove(\"Robert\").","pouter_pigeon(\"Robert\")."],"min_fact_dicts_for_query":["- jumper.","double_breasted_jacket.","- bolero.","mao_jacket.","- record_jacket(\"Robert\")."],"noiseless_rules":["- overgarment(V2) :- - ammunition(V2), not -round(V2), not -coat(V2), not womans_clothing(V2), not record_jacket(V2).","- mother_hubbard(V0) :- coffee_can(V0).","- ammunition(V2) :- - shell(V2).","round(V0) :- - mother_hubbard(V0), not -blanket(V0), not -artifact(V0).","jacket(V2) :- - jumper, double_breasted_jacket, - bolero, mao_jacket, - record_jacket(V2).","double_breasted_suit(V2) :- - jumper, double_breasted_jacket, - bolero, mao_jacket, - record_jacket(V2).","- dress(V2) :- - jumper, double_breasted_jacket, - bolero, mao_jacket, - record_jacket(V2).","coat(V1) :- jacket(V1), not -mackinaw.","- shell(V1) :- jacket(V1), not -mackinaw.","blanket(V1) :- jacket(V1), not -mackinaw.","fabric(V1) :- jacket(V1), not -mackinaw.","artifact(V2) :- double_breasted_suit(V2), not -fabric(V2).","- womans_clothing(V1) :- - dress(V1)."],"noisy_rules":{"a":["overgarment(V2) :- mother_hubbard(V0), not coat(V2), not -shell(V2), - fabric(V2).","overgarment(V2) :- - double_breasted_suit(V2), dress(V1), not -shell(V2)."],"b":["record_jacket(V2) :- shell(V2), - fabric(V2), - artifact(V0), not -overgarment(V2).","dress(V0) :- mother_hubbard(V0), not double_breasted_suit(V2), shell(V2), not -overgarment(V2)."],"c":["ammunition(V2) :- not round(V2), shell(V2).","- jacket(V1) :- dress(V1), not blanket(V0), - fabric(V2), - artifact(V0), womans_clothing(V2)."],"d":["- artifact(V1) :- - round(V2), dress(V1), not -creation.","- artifact(V0) :- mother_hubbard(V0), - blanket(V0), - fabric(V2), - plaything."],"e":["- pigeon(V2) :- not dove(V2), rock_dove(V2), not passenger_pigeon(V2), pouter_pigeon(V2), not -squab(V2).","- canada(V0) :- manitoba(V0)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_1_7_8_4_5_0.5_1.0_3_2_3","seed":1,"num_facts":7,"num_rules":9,"num_related_predicates":16,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"belief(\"Jamie\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["fairy(\"Eric\", \"Lisa\").","address(\"Eric\", \"Lisa\").","hoofed_mammals_oink(\"Eric\", \"Lisa\").","persian_deity.","angel(\"Jamie\", \"Lisa\").","percept(\"Jamie\", \"Lisa\").","irredenta(\"Eric\", \"Lisa\")."],"noisy_facts":[],"min_fact_dicts_for_query":["fairy(\"Eric\", \"Lisa\").","address(\"Eric\", \"Lisa\").","hoofed_mammals_oink(\"Eric\", \"Lisa\").","persian_deity.","angel(\"Jamie\", \"Lisa\").","percept(\"Jamie\", \"Lisa\").","irredenta(\"Eric\", \"Lisa\")."],"noiseless_rules":["belief(V2) :- spiritual_being(V2, V3), values(V2, V3).","egyptian_deity(V1) :- protons(V2), cock_leekie(V1, V2), irredenta(V1, V3).","spiritual_being(V2, V3) :- fairy(V1, V3), angel(V2, V3), percept(V2, V3).","protons(V2) :- fairy(V1, V3), angel(V2, V3), percept(V2, V3).","demiurge(V1) :- fairy(V1, V3), angel(V2, V3), percept(V2, V3).","values(V2, V3) :- geographic_point(V1, V3), deity(V2, V3).","geographic_point(V1, V3) :- address(V1, V3).","cock_leekie(V1, V1) :- geographic_point(V1, V3), hoofed_mammals_oink(V1, V3).","deity(V1, V1) :- egyptian_deity(V1), demiurge(V1), persian_deity."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_67_5_4_1_4_0.5_1.0_3_1_2","seed":67,"num_facts":2,"num_rules":5,"num_related_predicates":7,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":3,"target_query":"P4(\"Peter\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":2,"asp_program_dlv2":{"noiseless_facts":["- P5.","- P6(\"Peter\")."],"noisy_facts":["- P11(\"Robert\").","P13(\"Robert\").","- P7(\"Robert\").","P8(\"Peter\").","P12(\"Robert\").","- P14(\"Robert\")."],"min_fact_dicts_for_query":["- P5.","- P6(\"Peter\")."],"noiseless_rules":["P4(V0) :- - P2(V0), not P6(V0).","P0(V0) :- - P5, - P6(V0).","P1(V1) :- P0(V1), not P3(V1).","- P2(V1) :- P0(V1), not -P1(V1).","- P3(V1) :- P0(V1)."],"noisy_rules":{"a":["- P4(V1) :- - P0(V1), not P1(V1).","- P4(V1) :- - P1(V1)."],"b":["P2(V0) :- - P4(V0).","- P1(V1) :- - P0(V1), - P4(V0)."],"c":["- P0(V1) :- - P1(V1), P2(V0), not -P3(V1).","P6(V0) :- P2(V0), P3(V1)."],"d":["- P1(V1) :- - P7(V1).","- P9(V0) :- P2(V0), not -P8(V0)."],"e":["- P10(V1) :- not P11(V1), P12(V1).","- P15(V1) :- P13(V1), not P14(V1)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_81_9_9_8_11_0.5_1.0_3_1_2","seed":81,"num_facts":11,"num_rules":10,"num_related_predicates":21,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" learning_new_things(\"Austin\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["waist(\"Bradley\").","emergency_procedure(\"Austin\").","chicken_roundworm.","bills.","monitor.","work_of_art(\"Austin\").","libertine(\"Austin\").","emotional(\"Bradley\").","descent(\"Bradley\").","vapour(\"Austin\").","geodesic_dome(\"Austin\")."],"noisy_facts":[],"min_fact_dicts_for_query":["waist(\"Bradley\").","emergency_procedure(\"Austin\").","chicken_roundworm.","bills.","monitor.","work_of_art(\"Austin\").","libertine(\"Austin\").","emotional(\"Bradley\").","descent(\"Bradley\").","vapour(\"Austin\").","geodesic_dome(\"Austin\")."],"noiseless_rules":["learning_new_things(V2) :- plutonium(V2), botanical_garden(V2), scanner(V2).","plutonium(V2) :- mugs_game(V2), work_of_art(V2), libertine(V2).","mugs_game(V2) :- freight_elevator(V2), flying_animal(V2), geodesic_dome(V2).","occiput(V1) :- waist(V1), emotional(V1), descent(V1).","botanical_garden(V2) :- emergency_procedure(V2), vapour(V2), geodesic_dome(V2).","freight_elevator(V2) :- recording_information(V2).","flying_animal(V1) :- occiput(V1), waist(V1).","scanner(V2) :- chicken_roundworm, libertine(V2).","denim(V2) :- chicken_roundworm, libertine(V2).","recording_information(V1) :- denim(V1), bills, monitor."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_67_6_6_1_3_0.5_1.0_5_2_3","seed":67,"num_facts":5,"num_rules":7,"num_related_predicates":12,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" P6(\"Bridget\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["P7(\"Christopher\", \"Crystal\").","- P8(\"Christopher\", \"Crystal\").","- P9(\"Bridget\", \"Crystal\").","- P10(\"Christopher\", \"Crystal\").","P11(\"Bridget\", \"Crystal\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P7(\"Christopher\", \"Crystal\").","- P8(\"Christopher\", \"Crystal\").","- P9(\"Bridget\", \"Crystal\")."],"noiseless_rules":["- P6(V1) :- P2(V1), P4(V3), not -P11(V1, V3).","- P0(V0, V3) :- P7(V0, V3), - P9(V1, V3).","P1(V0, V3) :- - P8(V0, V3).","P2(V1) :- - P9(V1, V3), not -P11(V1, V3).","P3(V3, V3) :- - P9(V1, V3), not -P11(V1, V3).","P4(V3) :- - P0(V0, V3), P1(V0, V3), P3(V2, V3), not P5(V0, V3).","- P5(V0, V3) :- - P10(V0, V3)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_9_10_14_8_11_0.5_1.0_3_2_3","seed":9,"num_facts":10,"num_rules":15,"num_related_predicates":25,"max_depth_of_rule_graph":7,"average_depth_of_rule_graph":3.888888888888889,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"sleeping(\"Mitchell\", \"Guy\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["buying_hamburger(\"Sean\").","party(\"Sean\", \"Mitchell\").","food(\"Sean\", \"Guy\").","- eating_hamburger(\"Mitchell\", \"Guy\").","eating(\"Mitchell\", \"Guy\").","getting_exercise(\"Mitchell\", \"Guy\").","- nest(\"Sean\", \"Guy\").","- mattress(\"Mitchell\", \"Guy\").","- traveler(\"Sean\", \"Guy\").","dining_table(\"Sean\", \"Guy\")."],"noisy_facts":["- chew(\"Sean\", \"Mitchell\").","- dance(\"Mitchell\", \"Guy\").","chatelaine(\"Guy\", \"David\").","- much_taller_than_others(\"Guy\")."],"min_fact_dicts_for_query":["buying_hamburger(\"Sean\").","food(\"Sean\", \"Guy\").","- eating_hamburger(\"Mitchell\", \"Guy\").","dining_table(\"Sean\", \"Guy\")."],"noiseless_rules":["sleeping(V1, V2) :- nourishment(V1, V2), not -cot(V1, V2).","nourishment(V1, V2) :- eating_quickly(V2), food(V0, V2), - eating_hamburger(V1, V2).","speed(V0, V1) :- eating_quickly(V2), food(V0, V2), - eating_hamburger(V1, V2).","eating_quickly(V2) :- buying_hamburger(V0), dining_table(V0, V2).","- eating_dinner(V2) :- buying_hamburger(V0), dining_table(V0, V2).","- social_activity(V0, V2) :- party(V0, V1), eating(V1, V2), not -getting_exercise(V1, V2).","cot(V1, V2) :- - bird(V0, V1), - pillow(V0, V2), - satisfying_hunger(V2, V3).","- valued_human_activity(V0, V1) :- speed(V0, V1), not -eating_beef(V0, V1), not making_love(V0, V1).","- bird(V0, V1) :- reducing_hunger(V0), - nest(V0, V2), - mattress(V1, V2).","bed(V0, V2) :- reducing_hunger(V0), - nest(V0, V2), - mattress(V1, V2).","- pillow(V0, V2) :- - social_activity(V0, V2), - valued_human_activity(V2, V3), not traveler(V0, V2).","- satisfying_hunger(V2, V2) :- - eating_dinner(V2), - eating_hamburger(V1, V2), not -eating(V1, V2).","eating_beef(V2, V1) :- - eating_dinner(V2), - eating_hamburger(V1, V2), not -eating(V1, V2).","reducing_hunger(V2) :- - eating_dinner(V2), - eating_hamburger(V1, V2), not -eating(V1, V2).","- making_love(V0, V0) :- bed(V0, V2), not -dining_table(V0, V2)."],"noisy_rules":{"a":["- sleeping(V1, V2) :- - cot(V1, V2), pillow(V0, V2).","- sleeping(V1, V2) :- - nourishment(V1, V2), - cot(V1, V2), - bed(V0, V2)."],"b":["- reducing_hunger(V0) :- - eating_quickly(V2), - eating_beef(V0, V1), not sleeping(V1, V2).","- speed(V1, V1) :- - sleeping(V1, V2)."],"c":["- eating(V1, V1) :- - speed(V0, V1), not eating_beef(V0, V1), - reducing_hunger(V0).","bird(V0, V1) :- - speed(V0, V1), valued_human_activity(V2, V3), not reducing_hunger(V0)."],"d":["making_love(V2, V1) :- - nourishment(V1, V2), - dance(V1, V2).","chessboard(V2, V3) :- chatelaine(V2, V3)."],"e":["P29(V0, V1) :- - chew(V0, V1).","- fields(V2) :- - much_taller_than_others(V2)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_91_9_11_11_14_0.5_1.0_5_2_3","seed":91,"num_facts":14,"num_rules":12,"num_related_predicates":26,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" living_thing(\"Robert\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["creature.","- biped(\"Timothy\").","- gaggle(\"Ricky\", \"Timothy\").","region(\"Mason\").","east(\"Mason\").","- slave(\"Mason\").","south(\"Mason\").","- yacht_club(\"Ricky\", \"Robert\").","king(\"Robert\", \"Mason\").","object(\"Mason\", \"Timothy\").","left(\"Mason\", \"Timothy\").","- embryo(\"Robert\", \"Mason\").","- chordate(\"Robert\", \"Mason\").","- female(\"Mason\", \"Timothy\")."],"noisy_facts":["mechanization(\"Mason\").","- body_part(\"Ricky\", \"Mason\").","many_windows(\"Ricky\", \"Mason\").","- roots(\"Mason\", \"Timothy\").","checkmating_on(\"Ricky\", \"Mason\").","listen(\"Ricky\", \"Timothy\")."],"min_fact_dicts_for_query":["creature.","- slave(\"Mason\").","- yacht_club(\"Ricky\", \"Robert\").","king(\"Robert\", \"Mason\").","object(\"Mason\", \"Timothy\")."],"noiseless_rules":["- living_thing(V1) :- cell(V2), - yacht_club(V0, V1), king(V1, V2), object(V2, V3), not -left(V2, V3).","cell(V2) :- - head(V1), whole(V0, V2), - life(V0, V3), not biont(V1, V2).","- worker(V2) :- creature, - slave(V2).","- wildlife(V2, V2) :- creature, - slave(V2).","- person(V2, V2) :- creature, - slave(V2).","- head(V2) :- - worker(V2), not -region(V2), not -east(V2), not slave(V2), not -south(V2).","- location(V2, V2) :- - worker(V2), not -region(V2), not -east(V2), not slave(V2), not -south(V2).","whole(V2, V2) :- - location(V1, V2).","animal(V1, V3) :- - biped(V3), - embryo(V1, V2), not chordate(V1, V2), not female(V2, V3).","- life(V0, V3) :- - wildlife(V0, V3), not organism(V0, V3), not gaggle(V0, V3).","- biont(V0, V0) :- - organism(V0, V3), not gaggle(V0, V3).","- organism(V1, V3) :- - person(V1, V2), animal(V1, V3)."],"noisy_rules":{"a":["living_thing(V1) :- biont(V1, V2).","living_thing(V1) :- - animal(V1, V3), not -life(V0, V3), biont(V1, V2), organism(V0, V3)."],"b":["- whole(V0, V2) :- - whole(V0, V2), living_thing(V1).","- object(V2, V3) :- head(V1), location(V1, V2), - whole(V0, V2), life(V0, V3), living_thing(V1)."],"c":["chordate(V1, V2) :- person(V1, V2), head(V1), life(V0, V3).","- south(V2) :- worker(V2), person(V1, V2)."],"d":["yacht_club(V0, V1) :- person(V1, V2), - whole(V0, V2), life(V0, V3), many_windows(V0, V2), checkmating_on(V0, V2).","organism(V0, V3) :- - cell(V2), - whole(V0, V2), life(V0, V3), biont(V1, V2), not body_part(V0, V2)."],"e":["- condition(V2) :- mechanization(V2), - roots(V2, V3).","- ears(V0, V3) :- listen(V0, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_0_10_13_4_7_0.5_1.0_3_2_3","seed":0,"num_facts":8,"num_rules":14,"num_related_predicates":22,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"bistro(\"Erica\", \"Diana\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- wool_animal(\"Erica\", \"Diana\").","pony.","mine(\"Erica\", \"Tina\").","- law(\"Erica\", \"Diana\").","- filaria(\"Erica\", \"Diana\").","- golden_pheasant(\"Erica\", \"Diana\").","cargo_ship(\"Erica\", \"Diana\").","- creation(\"Erica\", \"Diana\")."],"noisy_facts":["colony(\"Erica\", \"Diana\").","shelfful(\"Erica\", \"Tina\").","sea_island_cotton(\"Erica\", \"Diana\").","bikes(\"Angela\", \"Diana\").","- slav(\"Erica\", \"Angela\").","catbird(\"Erica\", \"Angela\").","araguaia(\"Erica\", \"Tina\").","- annulet(\"Erica\", \"Angela\")."],"min_fact_dicts_for_query":["- wool_animal(\"Erica\", \"Diana\").","mine(\"Erica\", \"Tina\").","- law(\"Erica\", \"Diana\").","- golden_pheasant(\"Erica\", \"Diana\")."],"noiseless_rules":["bistro(V0, V3) :- - scyphozoan(V0, V3), - one_of_boys(V0, V3), misrepresentation(V2, V3).","- scyphozoan(V0, V3) :- - exercise(V0), - golden_pheasant(V0, V3).","reactionary(V0, V3) :- - exercise(V0), - golden_pheasant(V0, V3).","- gills(V0, V1) :- writing_surface(V0, V1), kentucky(V0, V2), - pollution(V2, V3).","- one_of_boys(V0, V3) :- reactionary(V0, V3), not -boiling(V0, V3), not law(V0, V3).","writing_surface(V0, V0) :- reactionary(V0, V3), not -boiling(V0, V3), not law(V0, V3).","- candy_cane(V0, V3) :- - wool_animal(V0, V3), not filaria(V0, V3), not golden_pheasant(V0, V3).","kentucky(V0, V3) :- boiling(V0, V3), not -pony.","- hypophysial_dwarf(V0, V0) :- boiling(V0, V3), not -pony.","- sand(V0, V1) :- - gills(V0, V1).","- exercise(V0) :- mine(V0, V1).","misrepresentation(V2, V3) :- - candy_cane(V0, V3), - hypophysial_dwarf(V1, V2), not sand(V0, V2).","- pollution(V0, V3) :- - law(V0, V3), not -cargo_ship(V0, V3), not creation(V0, V3).","boiling(V0, V3) :- - law(V0, V3), not -cargo_ship(V0, V3), not creation(V0, V3)."],"noisy_rules":{"a":["- bistro(V0, V3) :- - kentucky(V0, V2), - boiling(V0, V3).","- bistro(V0, V3) :- - writing_surface(V0, V1), - boiling(V0, V3)."],"b":["- writing_surface(V0, V1) :- gills(V0, V1), - writing_surface(V0, V1), - bistro(V0, V3).","gills(V0, V3) :- - bistro(V0, V3)."],"c":["one_of_boys(V0, V3) :- - kentucky(V0, V2), hypophysial_dwarf(V1, V2), - boiling(V0, V3).","filaria(V0, V3) :- scyphozoan(V0, V3)."],"d":["- misrepresentation(V0, V3) :- - reactionary(V0, V3), not -one_of_boys(V0, V3), not -sea_island_cotton(V0, V3).","- misrepresentation(V2, V0) :- sand(V0, V2), catbird(V0, V2), - slav(V0, V2)."],"e":["panopticon(V0) :- araguaia(V0, V1), - annulet(V0, V2).","flare(V1, V3) :- shelfful(V0, V1), not -colony(V0, V3), bikes(V2, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_43_9_10_10_11_0.5_1.0_3_3_4","seed":43,"num_facts":14,"num_rules":11,"num_related_predicates":25,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P10(\"Laura\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P11(\"Travis\", \"Laura\").","- P12(\"Tara\").","- P13(\"Travis\", \"Tara\").","- P14(\"Travis\", \"Laura\", \"Xavier\").","P15(\"Laura\", \"Xavier\").","- P16(\"Xavier\", \"Tara\").","P17(\"Jeffery\", \"Tara\").","P18(\"Travis\", \"Xavier\", \"Tara\").","P19(\"Laura\", \"Tara\").","- P20(\"Laura\", \"Tara\").","P21(\"Xavier\", \"Tara\").","- P22(\"Laura\", \"Jeffery\", \"Xavier\").","- P23(\"Laura\", \"Jeffery\", \"Tara\").","P24(\"Travis\", \"Laura\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- P12(\"Tara\").","- P13(\"Travis\", \"Tara\").","- P14(\"Travis\", \"Laura\", \"Xavier\").","P15(\"Laura\", \"Xavier\").","- P22(\"Laura\", \"Jeffery\", \"Xavier\")."],"noiseless_rules":["- P10(V1) :- - P4(V0, V1), - P5(V0, V3), - P8(V2, V3).","P0(V1, V2, V4) :- P11(V0, V1), P17(V2, V4), P18(V0, V3, V4).","- P1(V3, V4) :- - P12(V4), P15(V1, V3), not P16(V3, V4).","- P2(V1, V4) :- - P12(V4), P15(V1, V3), not P16(V3, V4).","- P3(V3, V4) :- - P13(V0, V4), - P22(V1, V2, V3), not P23(V1, V2, V4).","- P4(V0, V1) :- - P13(V0, V4), - P22(V1, V2, V3), not P23(V1, V2, V4).","- P5(V0, V3) :- - P14(V0, V1, V3).","- P6(V4, V4) :- - P3(V3, V4), not -P7(V3, V4), not -P21(V3, V4).","P7(V1, V4) :- P0(V1, V2, V4), - P4(V0, V1), not -P24(V0, V1).","- P8(V4, V3) :- - P1(V3, V4), - P6(V1, V4), not -P9(V1, V4).","P9(V1, V4) :- - P2(V1, V4), not -P19(V1, V4), not P20(V1, V4)."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_79_6_7_5_5_0.5_1.0_3_2_3","seed":79,"num_facts":7,"num_rules":8,"num_related_predicates":15,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" tiger(\"Kristin\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["milk_cows(\"William\", \"Sean\").","last_life_time(\"William\", \"Sean\").","own_health(\"Kristin\", \"Sean\").","treasure(\"Kristin\", \"Sean\").","perpetration(\"Kristin\", \"Sean\").","bootlace(\"William\", \"Kristin\").","broiler(\"William\", \"Kristin\")."],"noisy_facts":["yellowbelly_marmot(\"Teresa\", \"Kristin\").","- stabilizer_bar(\"Teresa\", \"Kristin\").","bohemianism(\"William\", \"Kristin\").","- ewe(\"William\", \"Kristin\").","communicate(\"William\", \"Kristin\").","- pike(\"William\", \"Kristin\").","muskhogean(\"Kristin\").","entrance_onto_airplane(\"Teresa\", \"Kristin\").","aeroplanes(\"William\", \"Kristin\")."],"min_fact_dicts_for_query":["milk_cows(\"William\", \"Sean\").","last_life_time(\"William\", \"Sean\").","own_health(\"Kristin\", \"Sean\").","treasure(\"Kristin\", \"Sean\")."],"noiseless_rules":["- tiger(V2) :- plants(V0, V2), not halfback(V0, V2), not -gaggle(V0, V2).","plants(V0, V2) :- entertainment(V3), - council_of_basel_ferrara_florence(V0, V3), own_health(V2, V3).","entertainment(V3) :- milk_cows(V0, V3).","- halfback(V0, V2) :- - arrowhead(V2), bootlace(V0, V2), not -broiler(V0, V2).","gaggle(V0, V2) :- last_life_time(V0, V3), treasure(V2, V3), not -perpetration(V2, V3).","- council_of_basel_ferrara_florence(V0, V3) :- last_life_time(V0, V3), treasure(V2, V3), not -perpetration(V2, V3).","emotional(V3) :- last_life_time(V0, V3), treasure(V2, V3), not -perpetration(V2, V3).","- arrowhead(V3) :- emotional(V3)."],"noisy_rules":{"a":["tiger(V2) :- - gaggle(V0, V2).","tiger(V3) :- - entertainment(V3)."],"b":["- emotional(V2) :- tiger(V2).","- perpetration(V2, V2) :- tiger(V2)."],"c":["arrowhead(V2) :- - gaggle(V0, V2).","- entertainment(V3) :- - gaggle(V0, V2), council_of_basel_ferrara_florence(V0, V3)."],"d":["- treasure(V2, V2) :- - plants(V0, V2), halfback(V0, V2), aeroplanes(V0, V2).","council_of_basel_ferrara_florence(V0, V0) :- halfback(V0, V2), - pike(V0, V2), not -bohemianism(V0, V2)."],"e":["meat(V0, V2) :- - ewe(V0, V2), communicate(V0, V2), entrance_onto_airplane(V1, V2).","sex(V2) :- not -muskhogean(V2), - stabilizer_bar(V1, V2), yellowbelly_marmot(V1, V2)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_61_8_10_9_11_0.5_1.0_5_3_4","seed":61,"num_facts":12,"num_rules":11,"num_related_predicates":23,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"P10(\"Michelle\", \"Christina\", \"Eric\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P11(\"Michelle\", \"Devin\").","P12(\"Michelle\", \"Eric\", \"Devin\").","P13(\"Denise\").","P14(\"Michelle\", \"Denise\").","P15(\"Eric\", \"Denise\").","P16(\"Eric\", \"Denise\").","P17(\"Michelle\", \"Christina\", \"Denise\").","P18(\"Michelle\", \"Devin\").","P19(\"Michelle\", \"Christina\", \"Denise\").","P20(\"Michelle\", \"Eric\", \"Denise\").","P21(\"Christina\", \"Denise\", \"Devin\").","P22(\"Michelle\", \"Christina\", \"Eric\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P11(\"Michelle\", \"Devin\").","P12(\"Michelle\", \"Eric\", \"Devin\").","P13(\"Denise\").","P14(\"Michelle\", \"Denise\").","P15(\"Eric\", \"Denise\").","P16(\"Eric\", \"Denise\").","P17(\"Michelle\", \"Christina\", \"Denise\").","P18(\"Michelle\", \"Devin\").","P19(\"Michelle\", \"Christina\", \"Denise\").","P20(\"Michelle\", \"Eric\", \"Denise\").","P21(\"Christina\", \"Denise\", \"Devin\").","P22(\"Michelle\", \"Christina\", \"Eric\")."],"noiseless_rules":["P10(V0, V1, V2) :- P0(V0, V1, V2), P1(V1, V2, V3), P4(V1, V2, V3).","P0(V0, V1, V2) :- P9(V0, V1), P12(V0, V2, V4).","P1(V1, V2, V3) :- P11(V0, V4), P18(V0, V4), P19(V0, V1, V3), P20(V0, V2, V3), P21(V1, V3, V4).","P2(V0, V3, V4) :- P11(V0, V4), P18(V0, V4), P19(V0, V1, V3), P20(V0, V2, V3), P21(V1, V3, V4).","P3(V0, V2, V4) :- P11(V0, V4), P18(V0, V4), P19(V0, V1, V3), P20(V0, V2, V3), P21(V1, V3, V4).","P4(V3, V0, V3) :- P2(V0, V3, V4), P5(V0, V3, V4), P6(V0, V3, V4), P8(V0, V3, V4).","P5(V0, V2, V4) :- P12(V0, V2, V4).","P6(V0, V3, V4) :- P3(V0, V2, V4), P19(V0, V1, V3).","P7(V0, V1, V2) :- P3(V0, V2, V4), P19(V0, V1, V3).","P8(V0, V0, V1) :- P7(V0, V1, V2), P22(V0, V1, V2).","P9(V0, V1) :- P13(V3), P14(V0, V3), P15(V2, V3), P16(V2, V3), P17(V0, V1, V3)."],"noisy_rules":{}},"num_min_facts_for_query":10,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_40_9_13_7_9_0.5_1.0_5_1_2","seed":40,"num_facts":10,"num_rules":14,"num_related_predicates":24,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" P13(\"Christopher\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P14.","P15(\"Christopher\").","- P16(\"Christopher\").","P17.","- P18.","- P19.","P20(\"Christopher\").","- P21(\"Christopher\").","P22(\"Christopher\").","P23(\"Christopher\")."],"noisy_facts":["P31(\"Daniel\").","- P25.","- P33(\"Daniel\").","P37(\"Bryan\").","- P32(\"Daniel\").","- P30(\"Daniel\").","- P27.","P29(\"Daniel\").","P26.","P36(\"Bryan\").","- P24(\"Christopher\").","- P39(\"Bryan\").","- P35(\"Bryan\").","- P38(\"Bryan\")."],"min_fact_dicts_for_query":["- P14.","P15(\"Christopher\")."],"noiseless_rules":["- P13(V1) :- - P0(V1), not P2(V1), not P4(V1), not P10(V1).","- P0(V1) :- - P14, P15(V1).","- P1(V1) :- - P14, P15(V1).","- P2(V0) :- - P1(V0), not P12(V0), not -P17, not P18, not P19.","- P3(V0) :- - P1(V0), not P12(V0), not -P17, not P18, not P19.","- P4(V1) :- P5(V1), not -P9(V1).","P5(V1) :- - P6(V1), not P11(V1), not P16(V1).","- P6(V1) :- P15(V1), not -P20(V1), not P21(V1), not -P22(V1), not -P23(V1).","P7(V1) :- P15(V1), not -P20(V1), not P21(V1), not -P22(V1), not -P23(V1).","P8(V1) :- P15(V1), not -P20(V1), not P21(V1), not -P22(V1), not -P23(V1).","P9(V1) :- - P3(V1), not -P7(V1).","- P10(V1) :- P8(V1).","- P11(V1) :- P8(V1).","- P12(V1) :- - P16(V1)."],"noisy_rules":{"a":["P13(V1) :- - P5(V1), not -P6(V1), - P7(V1), not P8(V1), not -P10(V1).","P13(V1) :- not -P4(V1), - P5(V1), P11(V1)."],"b":["- P17(V1) :- P12(V0), P13(V1).","P12(V0) :- P12(V0), P13(V1)."],"c":["P0(V1) :- - P5(V1), not -P6(V1), not P7(V1), not P9(V1).","P14(V1) :- P10(V1)."],"d":["P3(V1) :- not -P2(V1), - P24(V1).","- P9(V0) :- P1(V0), - P25, not -P26, - P27."],"e":["P28(V0) :- P29(V0), not P30(V0), P31(V0), not P32(V0), - P33(V0).","P34(V2) :- not P35(V2), P36(V2), not -P37(V2), - P38(V2), - P39(V2)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_99_10_12_12_13_0.5_1.0_5_3_4","seed":99,"num_facts":16,"num_rules":13,"num_related_predicates":29,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" catch_buzz(\"William\", \"Wendy\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["northeast(\"William\").","lighter(\"Monica\", \"Wendy\", \"Jessica\").","- asthenosphere(\"Monica\", \"William\", \"Wendy\").","humpty_dumpty(\"Monica\", \"Tracy\", \"Wendy\").","- field(\"Tracy\", \"William\", \"Wendy\").","hell(\"Tracy\", \"William\", \"Wendy\").","- outside(\"Tracy\", \"William\", \"Wendy\").","- trouble_spot(\"Monica\", \"William\", \"Wendy\").","- upper_mantle(\"Monica\", \"William\", \"Wendy\").","- troposphere(\"Monica\", \"William\", \"Wendy\").","cell_wall(\"Monica\", \"William\", \"Wendy\").","- buying_steak(\"Monica\", \"William\").","southeast(\"Monica\", \"Jessica\").","appalachians(\"Tracy\", \"William\", \"Wendy\").","cutting_cheese(\"Tracy\", \"William\", \"Jessica\").","rolled_tobacco(\"Tracy\", \"Wendy\", \"Jessica\")."],"noisy_facts":["- cars(\"Monica\", \"William\", \"Jessica\").","- food(\"Wendy\").","- launching_platform(\"Monica\", \"William\", \"Jessica\").","- mistake(\"Monica\", \"Jessica\").","sheet(\"Tracy\", \"William\", \"Wendy\").","- car(\"Monica\", \"William\", \"Wendy\").","- tien_shan(\"Monica\", \"William\")."],"min_fact_dicts_for_query":["lighter(\"Monica\", \"Wendy\", \"Jessica\").","- asthenosphere(\"Monica\", \"William\", \"Wendy\").","humpty_dumpty(\"Monica\", \"Tracy\", \"Wendy\").","- trouble_spot(\"Monica\", \"William\", \"Wendy\")."],"noiseless_rules":["- catch_buzz(V2, V3) :- - cause_disease_and_death(V2, V3), crust(V0, V2, V3).","area(V0, V2) :- - safety(V0, V1, V3), - trouble_spot(V0, V2, V3).","east(V0, V1) :- northeast(V2), southeast(V0, V4), appalachians(V1, V2, V3), not -cutting_cheese(V1, V2, V4), not -rolled_tobacco(V1, V3, V4).","- cigarettes(V0, V3) :- lighter(V0, V3, V4).","poll(V4) :- lighter(V0, V3, V4).","- cause_disease_and_death(V2, V3) :- area(V0, V2), - cigarettes(V0, V3), not layer(V0, V2), not -location(V0, V2), not buying_steak(V0, V2).","crust(V0, V2, V3) :- - asthenosphere(V0, V2, V3), not trouble_spot(V0, V2, V3), not upper_mantle(V0, V2, V3), not troposphere(V0, V2, V3), not -cell_wall(V0, V2, V3).","- layer(V0, V2) :- - asthenosphere(V0, V2, V3), not trouble_spot(V0, V2, V3), not upper_mantle(V0, V2, V3), not troposphere(V0, V2, V3), not -cell_wall(V0, V2, V3).","- plant_cell(V3, V3, V2) :- - asthenosphere(V0, V2, V3), not trouble_spot(V0, V2, V3), not upper_mantle(V0, V2, V3), not troposphere(V0, V2, V3), not -cell_wall(V0, V2, V3).","location(V0, V0) :- east(V0, V1), not region(V0, V1).","top(V4, V4, V4) :- poll(V4).","- region(V4, V1) :- - plant_cell(V1, V3, V4), top(V1, V2, V3), not field(V1, V2, V3), not -hell(V1, V2, V3), not outside(V1, V2, V3).","- safety(V0, V1, V3) :- humpty_dumpty(V0, V1, V3)."],"noisy_rules":{"a":["catch_buzz(V2, V3) :- cigarettes(V0, V3), - poll(V4), not -layer(V0, V2), - top(V1, V2, V3).","catch_buzz(V2, V3) :- not east(V0, V1), - location(V0, V2), not -region(V0, V1), safety(V0, V1, V3)."],"b":["- rolled_tobacco(V1, V3, V4) :- cigarettes(V0, V3), - poll(V4), region(V0, V1), catch_buzz(V2, V3).","region(V0, V2) :- - area(V0, V2), not -cause_disease_and_death(V2, V3), layer(V0, V2), catch_buzz(V2, V3)."],"c":["field(V1, V2, V3) :- - area(V0, V2), - poll(V4), not -plant_cell(V1, V3, V4), - top(V1, V2, V3).","- crust(V0, V2, V3) :- - area(V0, V2), - east(V0, V1), cigarettes(V0, V3), not top(V1, V2, V3), not -safety(V0, V1, V3)."],"d":["swans_down(V2, V0) :- - area(V0, V2), not tien_shan(V0, V2).","- cell_wall(V2, V2, V3) :- - top(V1, V2, V3), not -sheet(V1, V2, V3)."],"e":["- launching_satelites(V0, V2, V4) :- - launching_platform(V0, V2, V4).","cost_money(V0, V3) :- - food(V3), - mistake(V0, V4), - car(V0, V2, V3), not cars(V0, V2, V4)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_85_10_12_12_13_0.5_1.0_5_3_4","seed":85,"num_facts":16,"num_rules":13,"num_related_predicates":29,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P12(\"Danielle\", \"James\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P13(\"Megan\").","P14(\"Megan\").","P15(\"Jessica\", \"Megan\", \"Robert\").","- P16(\"Jessica\", \"Megan\", \"Robert\").","P17(\"Danielle\", \"James\", \"Robert\").","P18(\"Danielle\", \"James\", \"Robert\").","- P19(\"Jessica\", \"Megan\").","P20(\"Jessica\", \"James\", \"Megan\").","- P21(\"Jessica\", \"James\", \"Robert\").","- P22(\"James\", \"Megan\", \"Robert\").","P23(\"Danielle\", \"James\").","- P24(\"Jessica\", \"James\").","- P25(\"Jessica\", \"Robert\").","P26(\"Danielle\", \"Megan\", \"Robert\").","- P27(\"Danielle\", \"James\", \"Robert\").","- P28(\"Jessica\", \"Megan\", \"Robert\")."],"noisy_facts":["P36(\"James\").","- P33(\"Jessica\", \"Robert\").","- P39(\"Danielle\", \"Megan\", \"Robert\").","- P40(\"Jessica\", \"James\", \"Robert\").","P32(\"Danielle\", \"Jessica\").","P35(\"Jessica\", \"James\", \"Megan\").","P37(\"Robert\").","- P34(\"Danielle\", \"Jessica\", \"Megan\").","P31(\"Jessica\").","P38(\"James\", \"Robert\").","- P29(\"Jessica\", \"Megan\")."],"min_fact_dicts_for_query":["P13(\"Megan\").","P14(\"Megan\").","P15(\"Jessica\", \"Megan\", \"Robert\").","P23(\"Danielle\", \"James\").","- P24(\"Jessica\", \"James\").","- P25(\"Jessica\", \"Robert\").","- P27(\"Danielle\", \"James\", \"Robert\").","- P28(\"Jessica\", \"Megan\", \"Robert\")."],"noiseless_rules":["- P12(V0, V2) :- P0(V2, V3), P2(V0, V2, V3), - P5(V1, V3, V4), not P9(V2, V3, V4).","P0(V2, V3) :- P13(V3), - P27(V0, V2, V4), - P28(V1, V3, V4).","P1(V0, V2, V4) :- P13(V3), - P27(V0, V2, V4), - P28(V1, V3, V4).","P2(V0, V2, V3) :- P14(V3), P23(V0, V2), - P24(V1, V2), - P25(V1, V4), not -P26(V0, V3, V4).","- P3(V1, V3) :- P14(V3), P23(V0, V2), - P24(V1, V2), - P25(V1, V4), not -P26(V0, V3, V4).","- P4(V0, V2) :- P14(V3), P23(V0, V2), - P24(V1, V2), - P25(V1, V4), not -P26(V0, V3, V4).","- P5(V1, V3, V4) :- P15(V1, V3, V4).","P6(V1, V3, V3) :- - P3(V1, V3).","- P7(V2, V2, V0) :- - P4(V0, V2).","P8(V1, V4) :- - P10(V1, V3), - P19(V1, V3), P20(V1, V2, V3), - P21(V1, V2, V4), not P22(V2, V3, V4).","- P9(V2, V3, V4) :- - P7(V2, V3, V4), - P11(V1, V2), not P24(V1, V2).","- P10(V1, V3) :- - P16(V1, V3, V4).","- P11(V1, V2) :- P1(V0, V2, V4), P6(V2, V3, V4), P8(V1, V4), not -P17(V0, V2, V4), not -P18(V0, V2, V4)."],"noisy_rules":{"a":["P12(V4, V2) :- P9(V2, V3, V4), P11(V1, V2).","P12(V2, V2) :- P5(V1, V3, V4), P7(V2, V3, V4)."],"b":["- P20(V1, V2, V3) :- - P6(V2, V3, V4), not -P7(V2, V3, V4), P9(V2, V3, V4), P11(V1, V2), P12(V0, V2).","P22(V2, V3, V3) :- P3(V1, V3), P10(V1, V3), P11(V1, V2), P12(V0, V2)."],"c":["- P13(V3) :- P9(V2, V3, V4).","P28(V4, V3, V4) :- P7(V2, V3, V4)."],"d":["P25(V1, V3) :- P3(V1, V3).","P10(V1, V3) :- P3(V1, V3), not P29(V1, V3)."],"e":["P30(V1, V2, V4) :- P31(V1), P32(V0, V1), - P33(V1, V4), not P34(V0, V1, V3), P35(V1, V2, V3).","- P41(V1, V3) :- P36(V2), P37(V4), P38(V2, V4), - P39(V0, V3, V4), - P40(V1, V2, V4)."]}},"num_min_facts_for_query":8,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_39_10_12_12_13_0.5_1.0_5_3_4","seed":39,"num_facts":16,"num_rules":13,"num_related_predicates":29,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.2222222222222223,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P12(\"Kaitlyn\", \"Michael\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P13(\"Michael\").","- P14(\"Megan\", \"Joshua\", \"Bryan\").","P15(\"Michael\", \"Joshua\", \"Bryan\").","P16(\"Kaitlyn\", \"Michael\", \"Joshua\").","- P17(\"Kaitlyn\", \"Megan\", \"Bryan\").","- P18(\"Kaitlyn\", \"Michael\", \"Joshua\").","- P19(\"Megan\", \"Michael\", \"Joshua\").","P20(\"Megan\", \"Michael\", \"Joshua\").","- P21(\"Kaitlyn\", \"Megan\", \"Bryan\").","- P22(\"Kaitlyn\", \"Michael\", \"Bryan\").","- P23(\"Kaitlyn\", \"Joshua\", \"Bryan\").","- P24(\"Kaitlyn\").","- P25(\"Kaitlyn\").","P26(\"Kaitlyn\").","P27(\"Kaitlyn\", \"Joshua\", \"Bryan\").","- P28(\"Kaitlyn\", \"Joshua\", \"Bryan\")."],"noisy_facts":["- P32(\"Kaitlyn\").","- P35(\"Kaitlyn\", \"Megan\", \"Joshua\").","- P30(\"Michael\", \"Joshua\").","- P33(\"Kaitlyn\", \"Michael\").","P37(\"Kaitlyn\", \"Megan\", \"Michael\").","- P29(\"Kaitlyn\", \"Joshua\").","P34(\"Kaitlyn\", \"Megan\", \"Joshua\")."],"min_fact_dicts_for_query":["- P13(\"Michael\").","P15(\"Michael\", \"Joshua\", \"Bryan\").","P16(\"Kaitlyn\", \"Michael\", \"Joshua\").","- P17(\"Kaitlyn\", \"Megan\", \"Bryan\").","- P18(\"Kaitlyn\", \"Michael\", \"Joshua\").","- P21(\"Kaitlyn\", \"Megan\", \"Bryan\")."],"noiseless_rules":["- P12(V0, V2) :- - P2(V0, V3), P4(V2, V3).","P0(V2, V3) :- P3(V2), P6(V0, V3), - P21(V0, V1, V4), not P22(V0, V2, V4), not P23(V0, V3, V4).","P1(V0) :- P3(V2), P6(V0, V3), - P21(V0, V1, V4), not P22(V0, V2, V4), not P23(V0, V3, V4).","- P2(V0, V3) :- - P13(V2), - P17(V0, V1, V4), - P18(V0, V2, V3), not P19(V1, V2, V3), not -P20(V1, V2, V3).","P3(V2) :- - P13(V2), - P17(V0, V1, V4), - P18(V0, V2, V3), not P19(V1, V2, V3), not -P20(V1, V2, V3).","P4(V2, V3) :- P0(V2, V3), not P8(V2, V3), not P10(V2, V3).","P5(V1, V3, V4) :- - P14(V1, V3, V4).","P6(V0, V3) :- P11(V0, V2, V3), P15(V2, V3, V4).","- P7(V0, V3, V4) :- P11(V0, V2, V3), P15(V2, V3, V4).","- P8(V3, V3) :- P5(V1, V3, V4), not P9(V1, V3, V4).","- P9(V0, V3, V2) :- P1(V0), P11(V0, V2, V3), not P24(V0), not P25(V0), not -P26(V0).","- P10(V0, V3) :- - P7(V0, V3, V4), not -P27(V0, V3, V4), not P28(V0, V3, V4).","P11(V0, V2, V3) :- P16(V0, V2, V3)."],"noisy_rules":{"a":["P12(V0, V3) :- P2(V0, V3), - P5(V1, V3, V4), P9(V1, V3, V4).","P12(V0, V2) :- - P0(V2, V3), - P1(V0), P10(V2, V3)."],"b":["- P20(V1, V2, V3) :- - P0(V2, V3), P9(V1, V3, V4), P12(V0, V2).","P18(V0, V2, V3) :- - P0(V2, V3), - P5(V1, V3, V4), not -P8(V2, V3), P12(V0, V2)."],"c":["P23(V3, V3, V2) :- - P0(V2, V3), not -P8(V2, V3), not -P10(V2, V3).","- P0(V2, V2) :- - P3(V2)."],"d":["P8(V3, V3) :- P2(V0, V3), P7(V0, V3, V4), - P29(V0, V3).","- P26(V2) :- P10(V2, V3), not P30(V2, V3)."],"e":["P31(V2, V3) :- - P32(V0), - P33(V0, V2), P34(V0, V1, V3), not P35(V0, V1, V3).","- P36(V0, V2) :- P37(V0, V1, V2)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_42_8_8_8_10_0.5_1.0_5_1_2","seed":42,"num_facts":13,"num_rules":9,"num_related_predicates":22,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8571428571428572,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"birthday_parties(\"Randy\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- plainness(\"Joseph\").","- squeaker.","core(\"Randy\").","- couples(\"Randy\").","basenji(\"Joseph\").","- appear_in_movie(\"Joseph\").","- head_covering(\"Joseph\").","- precipitation(\"Joseph\").","store_things(\"Joseph\").","- scratch_themselves_on_trees(\"Joseph\").","- gyrfalcon(\"Joseph\").","- individual(\"Joseph\").","swim(\"Randy\")."],"noisy_facts":["- pasch(\"Randy\").","- on_road(\"Joseph\").","making_investment(\"Joseph\").","- part.","grab_bag.","- subaltern(\"Randy\")."],"min_fact_dicts_for_query":["- squeaker.","core(\"Randy\")."],"noiseless_rules":["birthday_parties(V2) :- frozen_water(V2), not planes(V2), not -containerful(V2), not -record_player(V2), not -swim(V2).","- birthmark(V0) :- - plainness(V0), not appear_in_movie(V0), not head_covering(V0), not precipitation(V0), not -store_things(V0).","frozen_water(V2) :- - squeaker, core(V2).","- ear(V2) :- - squeaker, core(V2).","- planes(V2) :- core(V2).","containerful(V0) :- - birthmark(V0), not -fruit_trees(V0).","fruit_trees(V0) :- - ear(V0), not break_window(V0), not scratch_themselves_on_trees(V0), not gyrfalcon(V0), not individual(V0).","record_player(V2) :- - couples(V2).","- break_window(V0) :- basenji(V0), not individual(V0)."],"noisy_rules":{"a":["- birthday_parties(V0) :- birthmark(V0).","- birthday_parties(V0) :- ear(V0), not fruit_trees(V0)."],"b":["birthmark(V2) :- - birthday_parties(V2).","- store_things(V0) :- birthmark(V0), - birthday_parties(V2)."],"c":["gyrfalcon(V0) :- birthmark(V0), not frozen_water(V2), - containerful(V2), - record_player(V2).","planes(V2) :- birthmark(V0), - containerful(V2), not -break_window(V0)."],"d":["- sliced(V2) :- not frozen_water(V2), planes(V2), not containerful(V2), - subaltern(V2).","consuming_nutrients(V2) :- planes(V2), not part, grab_bag."],"e":["- tapping(V2) :- - pasch(V2).","entering_room(V0) :- making_investment(V0), not on_road(V0)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_5_6_6_2_3_0.5_1.0_3_2_3","seed":5,"num_facts":6,"num_rules":7,"num_related_predicates":13,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"speaking(\"Timothy\", \"Nathan\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- nocturnal_flying_rodents(\"Susan\", \"Steven\").","platform(\"Susan\", \"Timothy\").","delaware.","- hares(\"Susan\", \"Nathan\").","- cumulus(\"Steven\", \"Timothy\").","- storybook(\"Steven\", \"Nathan\")."],"noisy_facts":["- ringer(\"Susan\", \"Timothy\").","optical_disk(\"Steven\", \"Nathan\").","doctrine(\"Steven\").","- commercialized_holiday(\"Timothy\", \"Nathan\").","- weddings(\"Steven\", \"Timothy\")."],"min_fact_dicts_for_query":["- nocturnal_flying_rodents(\"Susan\", \"Steven\").","platform(\"Susan\", \"Timothy\").","- hares(\"Susan\", \"Nathan\").","- cumulus(\"Steven\", \"Timothy\")."],"noiseless_rules":["speaking(V2, V3) :- - trombidiid(V3), - cascara(V0, V2), not -loop(V0, V3).","- trombidiid(V3) :- - dew(V0, V1), - jonathan(V0, V2), - red_flag(V0, V3).","- dew(V0, V1) :- - nocturnal_flying_rodents(V0, V1).","- cascara(V0, V2) :- platform(V0, V2).","loop(V0, V0) :- - nocturnal_flying_rodents(V0, V1), not -delaware.","- jonathan(V0, V0) :- - nocturnal_flying_rodents(V0, V1), not -delaware.","- red_flag(V0, V3) :- - hares(V0, V3), - cumulus(V1, V2), not storybook(V1, V3)."],"noisy_rules":{"a":["- speaking(V2, V3) :- trombidiid(V3), cascara(V0, V2), not -red_flag(V0, V3).","- speaking(V2, V0) :- cascara(V0, V2)."],"b":["- delaware(V2, V3) :- not -trombidiid(V3), - speaking(V2, V3).","jonathan(V0, V2) :- dew(V0, V1), - speaking(V2, V3)."],"c":["hares(V0, V0) :- jonathan(V0, V2).","trombidiid(V0) :- dew(V0, V1)."],"d":["- delaware(V2, V3) :- - commercialized_holiday(V2, V3).","red_flag(V0, V2) :- cascara(V0, V2), not ringer(V0, V2)."],"e":["- confetti(V1, V3) :- doctrine(V1), optical_disk(V1, V3).","journey_into_space(V1, V2) :- - weddings(V1, V2)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_48_6_8_3_6_0.5_1.0_3_3_4","seed":48,"num_facts":5,"num_rules":9,"num_related_predicates":14,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P8(\"Andrew\", \"Victoria\", \"Kelli\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P9(\"Andrew\", \"Victoria\", \"Jeffrey\").","- P10(\"Andrew\", \"Julia\", \"Kelli\").","P11(\"Andrew\", \"Julia\", \"Kelli\").","- P12(\"Victoria\", \"Julia\", \"Kelli\").","- P13(\"Victoria\", \"Julia\", \"Kelli\")."],"noisy_facts":["P19(\"Andrew\", \"Julia\", \"Jeffrey\").","P17(\"Victoria\", \"Julia\", \"Kelli\").","- P15(\"Andrew\", \"Victoria\", \"Jeffrey\").","P14(\"Andrew\", \"Victoria\", \"Kelli\").","P20(\"Andrew\", \"Julia\", \"Kelli\").","P18(\"Victoria\", \"Julia\")."],"min_fact_dicts_for_query":["P9(\"Andrew\", \"Victoria\", \"Jeffrey\").","- P10(\"Andrew\", \"Julia\", \"Kelli\").","P11(\"Andrew\", \"Julia\", \"Kelli\")."],"noiseless_rules":["P8(V0, V1, V4) :- P0(V1, V2), P5(V1, V4), - P7(V0, V1, V3).","P0(V1, V2) :- - P1(V3), - P4(V1, V2), not P6(V1, V2, V3).","- P1(V3) :- P9(V0, V1, V3), P11(V0, V2, V4), not P12(V1, V2, V4).","- P2(V0, V1, V4) :- P9(V0, V1, V3), P11(V0, V2, V4), not P12(V1, V2, V4).","P3(V1, V2, V4) :- P9(V0, V1, V3), P11(V0, V2, V4), not P12(V1, V2, V4).","- P4(V1, V1) :- - P2(V0, V1, V4), P9(V0, V1, V3).","P5(V1, V4) :- P3(V1, V2, V4), not P13(V1, V2, V4).","- P6(V1, V2, V4) :- P3(V1, V2, V4), not P13(V1, V2, V4).","- P7(V0, V1, V4) :- P5(V1, V4), - P10(V0, V2, V4), not -P11(V0, V2, V4)."],"noisy_rules":{"a":["- P8(V0, V1, V4) :- P1(V3), P2(V0, V1, V4), - P5(V1, V4).","- P8(V0, V1, V4) :- P2(V0, V1, V4), - P3(V1, V2, V4), P7(V0, V1, V3)."],"b":["P7(V0, V1, V1) :- - P0(V1, V2), - P5(V1, V4), - P8(V0, V1, V4).","- P0(V1, V0) :- - P8(V0, V1, V4)."],"c":["P1(V3) :- P6(V1, V2, V3).","- P5(V1, V0) :- P1(V3), P4(V1, V2), P7(V0, V1, V3)."],"d":["- P3(V1, V2, V4) :- - P0(V1, V2), P2(V0, V1, V4), not -P14(V0, V1, V4).","P10(V0, V1, V3) :- P7(V0, V1, V3), not P15(V0, V1, V3)."],"e":["- P16(V4) :- P17(V1, V2, V4).","P21(V1, V2, V4) :- P18(V1, V2), P19(V0, V2, V3), P20(V0, V2, V4)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_81_8_12_4_6_0.5_1.0_5_1_2","seed":81,"num_facts":7,"num_rules":13,"num_related_predicates":20,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"mauna_loa(\"Jeremy\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["gunters_chain.","- brother.","- indefinite_quantity(\"Jeremy\").","mammal_family(\"Jeremy\").","- text(\"Jeremy\").","- ball_cartridge(\"Jeremy\").","green_peafowl(\"Jeremy\")."],"noisy_facts":["- test(\"Wesley\").","- smoking_and_drinking(\"Wesley\").","- stock_saddle(\"Wesley\").","use_jacuzzi(\"Jeremy\").","dam(\"Jeremy\").","- loin(\"Jeremy\").","bullpen(\"Wesley\")."],"min_fact_dicts_for_query":["gunters_chain.","- indefinite_quantity(\"Jeremy\")."],"noiseless_rules":["mauna_loa(V2) :- - launching(V2), not output(V2), not -fly_airplane(V2), not humate(V2), not jewels(V2).","- launching(V2) :- - head_cabbage(V2), not -peacock(V2).","- output(V2) :- communicating_artery(V2), not -few(V2), not -fix_collar(V2), not -mammal_family(V2), not text(V2).","- head_cabbage(V2) :- communicating_artery(V2), not -few(V2), not -fix_collar(V2), not -mammal_family(V2), not text(V2).","communicating_artery(V2) :- gunters_chain, - indefinite_quantity(V2).","- closet(V2) :- gunters_chain, - indefinite_quantity(V2).","fly_airplane(V1) :- - closet(V1).","few(V1) :- - closet(V1).","peacock(V2) :- fix_collar(V2), not brother.","branch(V2) :- fix_collar(V2), not brother.","- humate(V0) :- branch(V0).","- jewels(V2) :- - indefinite_quantity(V2), not ball_cartridge(V2), not -green_peafowl(V2).","fix_collar(V2) :- - indefinite_quantity(V2), not ball_cartridge(V2), not -green_peafowl(V2)."],"noisy_rules":{"a":["- mauna_loa(V2) :- - few(V2).","- mauna_loa(V2) :- launching(V2), not -head_cabbage(V2), - branch(V0), not -humate(V2), jewels(V2)."],"b":["jewels(V2) :- not -output(V2), not few(V2), not peacock(V2), - fix_collar(V2), not mauna_loa(V2).","- communicating_artery(V2) :- - communicating_artery(V2), - fly_airplane(V2), - few(V2), - branch(V0), - mauna_loa(V2)."],"c":["jewels(V2) :- head_cabbage(V2), - few(V2), - peacock(V2), - branch(V0), not -humate(V2).","- communicating_artery(V2) :- not -head_cabbage(V2), - few(V2), not -humate(V2)."],"d":["- green_peafowl(V2) :- not -launching(V2), - fly_airplane(V2), not peacock(V2), not -dam(V2).","closet(V1) :- - stock_saddle(V1)."],"e":["- iq_of_100_by_definition(V2) :- use_jacuzzi(V2), not loin(V2).","pilot_bit(V1) :- not -bullpen(V1), - test(V1), not smoking_and_drinking(V1)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_69_10_11_4_6_0.5_1.0_3_3_4","seed":69,"num_facts":8,"num_rules":12,"num_related_predicates":20,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.7777777777777777,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" limbs(\"Eric\", \"Kimberly\", \"Steven\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["slap(\"Eric\", \"Steven\").","- chicken(\"Eric\", \"Kimberly\", \"Steven\").","- stick(\"Eric\", \"Kimberly\", \"Steven\").","trees(\"Eric\", \"Steven\").","bell(\"Steven\").","- minister(\"Steven\").","banks(\"Kimberly\", \"Steven\").","- leaf(\"Scott\", \"Eric\", \"Sharon\")."],"noisy_facts":["upper_class(\"Eric\", \"Steven\", \"Sharon\").","barrow(\"Scott\", \"Eric\", \"Kimberly\").","american(\"Eric\", \"Sharon\").","nest(\"Scott\", \"Eric\", \"Sharon\").","squirrel(\"Scott\", \"Eric\", \"Sharon\").","- phrygian_deity(\"Eric\").","indefinite_quantity(\"Scott\", \"Steven\")."],"min_fact_dicts_for_query":["slap(\"Eric\", \"Steven\").","- stick(\"Eric\", \"Kimberly\", \"Steven\")."],"noiseless_rules":["- limbs(V1, V2, V3) :- - steeple(V3), - stick(V1, V2, V3).","bump(V3) :- slap(V1, V3).","small(V2) :- - chicken(V1, V2, V3), not stick(V1, V2, V3).","impact(V3, V3) :- bump(V3), not -bell(V3), not minister(V3).","church(V3, V3) :- bump(V3), not -bell(V3), not minister(V3).","ring(V3, V3, V3) :- bump(V3), not -bell(V3), not minister(V3).","- big(V4, V4) :- impact(V1, V4), not branches(V1, V4).","- steeple(V3) :- church(V1, V3), - big(V3, V4), not leaves(V1, V3).","- leaves(V1, V1) :- ring(V0, V1, V4), not tree(V0, V1, V4), not -cathedral(V0, V1, V4).","- tree(V1, V1, V1) :- - stick(V1, V2, V3).","- branches(V1, V4) :- trees(V1, V3), banks(V2, V3), - leaf(V0, V1, V4).","cathedral(V2, V2, V2) :- small(V2)."],"noisy_rules":{"a":["limbs(V1, V0, V0) :- tree(V0, V1, V4).","limbs(V1, V1, V3) :- steeple(V3), tree(V0, V1, V4)."],"b":["tree(V2, V1, V1) :- steeple(V3), limbs(V1, V2, V3).","tree(V3, V1, V3) :- not bump(V3), leaves(V1, V3), limbs(V1, V2, V3)."],"c":["steeple(V3) :- - bump(V3), tree(V0, V1, V4).","- church(V1, V4) :- - cathedral(V0, V1, V4)."],"d":["big(V4, V4) :- tree(V0, V1, V4), not cathedral(V0, V1, V4), not -squirrel(V0, V1, V4).","branches(V1, V4) :- tree(V0, V1, V4), nest(V0, V1, V4)."],"e":["stone(V0, V1) :- - phrygian_deity(V1), indefinite_quantity(V0, V3), upper_class(V1, V3, V4).","citizen_of_america(V0, V2, V4) :- american(V1, V4), barrow(V0, V1, V2)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_84_9_10_9_12_0.5_1.0_3_3_4","seed":84,"num_facts":13,"num_rules":11,"num_related_predicates":24,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"nolle_prosequi(\"Dana\", \"Gregory\", \"Sabrina\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- form_of_mass_transit(\"Gregory\", \"Sabrina\").","- bomb(\"Dana\", \"Gregory\").","- anthracite.","shenzhen(\"Dana\", \"Gregory\").","mess(\"Dana\", \"Mary\", \"Sabrina\").","studs(\"Curtis\", \"Dana\", \"Mary\").","- ping(\"Curtis\", \"Gregory\", \"Sabrina\").","- roller_skating(\"Dana\", \"Mary\", \"Gregory\").","atlantic_coast(\"Gregory\", \"Sabrina\").","self_fertilization(\"Gregory\", \"Sabrina\").","- mustangs_and_bmws(\"Dana\", \"Sabrina\").","- english_saddle(\"Curtis\", \"Mary\", \"Gregory\").","- pointing_at(\"Dana\", \"Mary\", \"Sabrina\")."],"noisy_facts":["- panel(\"Curtis\", \"Dana\", \"Mary\").","- botanical_garden(\"Curtis\").","bodily_fluid(\"Curtis\").","cpu(\"Curtis\").","computer_memory_unit(\"Curtis\", \"Dana\", \"Gregory\")."],"min_fact_dicts_for_query":["- form_of_mass_transit(\"Gregory\", \"Sabrina\").","- bomb(\"Dana\", \"Gregory\").","atlantic_coast(\"Gregory\", \"Sabrina\").","- mustangs_and_bmws(\"Dana\", \"Sabrina\").","- english_saddle(\"Curtis\", \"Mary\", \"Gregory\")."],"noiseless_rules":["nolle_prosequi(V1, V3, V4) :- - knee_piece(V1, V2), atlantic_coast(V3, V4), not pointing_at(V1, V2, V4).","edible_harvest(V3, V3, V4) :- - form_of_mass_transit(V3, V4), not -atlantic_coast(V3, V4), not -self_fertilization(V3, V4).","- weep(V4) :- - form_of_mass_transit(V3, V4), not -atlantic_coast(V3, V4), not -self_fertilization(V3, V4).","- perfection(V4) :- edible_harvest(V2, V3, V4), not -pear(V2, V3, V4).","war_crime(V1, V2, V3) :- - bomb(V1, V3), - mustangs_and_bmws(V1, V4), - english_saddle(V0, V2, V3).","fly_paper(V0, V2) :- visiting(V1, V2), - third_month(V0, V1, V4), not -mess(V1, V2, V4).","visiting(V4, V4) :- - anthracite, atlantic_coast(V3, V4), not -self_fertilization(V3, V4).","wilderness(V4, V3, V3) :- - anthracite, atlantic_coast(V3, V4), not -self_fertilization(V3, V4).","pear(V2, V2, V1) :- - weep(V1), wilderness(V0, V1, V2), not -studs(V0, V1, V2).","- third_month(V0, V1, V4) :- shenzhen(V1, V3), - ping(V0, V3, V4), - roller_skating(V1, V2, V3).","- knee_piece(V1, V2) :- - perfection(V0), war_crime(V1, V2, V3), not -fly_paper(V0, V2)."],"noisy_rules":{"a":["- nolle_prosequi(V1, V3, V2) :- weep(V1), - war_crime(V1, V2, V3), - fly_paper(V0, V2).","- nolle_prosequi(V4, V3, V4) :- - pear(V2, V3, V4)."],"b":["anthracite(V1, V3, V4) :- - nolle_prosequi(V1, V3, V4).","english_saddle(V0, V2, V3) :- - fly_paper(V0, V2), - visiting(V1, V2), - nolle_prosequi(V1, V3, V4)."],"c":["weep(V4) :- - edible_harvest(V2, V3, V4), perfection(V0), not pear(V2, V3, V4).","perfection(V2) :- - pear(V2, V3, V4)."],"d":["ping(V0, V3, V2) :- perfection(V0), - war_crime(V1, V2, V3), cpu(V0).","third_month(V0, V1, V1) :- perfection(V0), knee_piece(V1, V2), not botanical_garden(V0)."],"e":["- panama(V0, V1, V2) :- bodily_fluid(V0), - panel(V0, V1, V2).","butler(V0, V1, V3) :- computer_memory_unit(V0, V1, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_70_8_12_2_5_0.5_1.0_3_2_3","seed":70,"num_facts":5,"num_rules":13,"num_related_predicates":18,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"courthouse(\"Carol\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- rifle_grenade(\"Debra\", \"Carol\").","stay(\"Debra\", \"Austin\").","bandstand(\"Debra\", \"Michael\").","- zebra(\"Debra\", \"Austin\").","- buttock(\"Debra\", \"Austin\")."],"noisy_facts":["- bird(\"Carol\", \"Austin\").","townhouse(\"Debra\", \"Austin\").","money_place(\"Debra\", \"Michael\").","maid(\"Debra\", \"Michael\")."],"min_fact_dicts_for_query":["- rifle_grenade(\"Debra\", \"Carol\").","- buttock(\"Debra\", \"Austin\")."],"noiseless_rules":["courthouse(V1) :- - van(V3), getting_food(V0, V1), not hypertrophy(V1, V3).","- eating_out(V1, V2) :- - rifle_grenade(V0, V1), - buttock(V0, V2).","scene(V1, V2) :- - rifle_grenade(V0, V1), - buttock(V0, V2).","- van(V1) :- - eating_out(V1, V2), not roadster(V1, V2), not -gulf_of_saint_lawrence(V1, V2).","- roadster(V2, V2) :- stay(V0, V2), not zebra(V0, V2), not buttock(V0, V2).","- restoration(V2) :- stay(V0, V2), not zebra(V0, V2), not buttock(V0, V2).","tending_garden(V2) :- stay(V0, V2), not zebra(V0, V2), not buttock(V0, V2).","hurt(V0, V1) :- - restoration(V1), - rifle_grenade(V0, V1).","getting_food(V2, V1) :- - eating_out(V1, V2), not -scene(V1, V2), not -tending_garden(V2).","gulf_of_saint_lawrence(V1, V2) :- - eating_out(V1, V2), not -scene(V1, V2), not -tending_garden(V2).","output(V1, V1) :- - eating_out(V1, V2), not -scene(V1, V2), not -tending_garden(V2).","- hypertrophy(V0, V3) :- hurt(V0, V3), not -output(V0, V3), not -clamshell(V0, V3).","clamshell(V0, V3) :- bandstand(V0, V3)."],"noisy_rules":{"a":["- courthouse(V1) :- restoration(V1).","- courthouse(V2) :- - tending_garden(V2)."],"b":["- hurt(V0, V3) :- hypertrophy(V1, V3), - clamshell(V0, V3), not courthouse(V1).","van(V2) :- - tending_garden(V2), - gulf_of_saint_lawrence(V1, V2), not courthouse(V1)."],"c":["- scene(V1, V2) :- - gulf_of_saint_lawrence(V1, V2).","eating_out(V2, V2) :- - tending_garden(V2)."],"d":["buttock(V0, V3) :- - hurt(V0, V3), not -maid(V0, V3).","higher_pressure_beneath(V0, V0) :- - clamshell(V0, V3)."],"e":["arena(V1, V2) :- - bird(V1, V2).","ensuring_proper_nutrition(V2) :- townhouse(V0, V2), money_place(V0, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_11_6_8_6_8_0.5_1.0_3_2_3","seed":11,"num_facts":8,"num_rules":9,"num_related_predicates":17,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" section(\"Julie\", \"Andrew\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["migratory_quail(\"Taylor\", \"Julie\").","living_thing(\"Andrew\", \"Johnny\").","music(\"Taylor\", \"Johnny\").","excitability(\"Julie\", \"Andrew\").","- article(\"Julie\", \"Andrew\").","nosebag(\"Andrew\", \"Johnny\").","picture_book(\"Andrew\", \"Johnny\").","papyrus(\"Julie\", \"Andrew\")."],"noisy_facts":["- written_communication(\"Taylor\", \"Andrew\").","climb(\"Julie\", \"Johnny\").","sword(\"Andrew\", \"Johnny\").","coinage(\"Andrew\", \"Johnny\").","- fizzy(\"Taylor\", \"Julie\")."],"min_fact_dicts_for_query":["migratory_quail(\"Taylor\", \"Julie\").","living_thing(\"Andrew\", \"Johnny\").","music(\"Taylor\", \"Johnny\").","excitability(\"Julie\", \"Andrew\").","- article(\"Julie\", \"Andrew\")."],"noiseless_rules":["- section(V1, V2) :- book(V0, V1), - album(V1, V3), - above(V2, V3).","book(V0, V1) :- - stamp_album(V0, V2), - document(V1, V3), not -picture_book(V2, V3).","photograph_album(V1, V2) :- - stamp_album(V0, V2), - document(V1, V3), not -picture_book(V2, V3).","writing(V1, V3) :- migratory_quail(V0, V1), music(V0, V3), excitability(V1, V2).","- patent(V2, V3) :- migratory_quail(V0, V1), music(V0, V3), excitability(V1, V2).","- album(V1, V3) :- photograph_album(V1, V2), writing(V1, V3), not article(V1, V2).","- above(V2, V3) :- living_thing(V2, V3), not -nosebag(V2, V3), not -picture_book(V2, V3).","- stamp_album(V2, V2) :- living_thing(V2, V3), not -nosebag(V2, V3), not -picture_book(V2, V3).","- document(V1, V3) :- - patent(V2, V3), - article(V1, V2), not -papyrus(V1, V2)."],"noisy_rules":{"a":["section(V3, V2) :- not -patent(V2, V3), above(V2, V3), stamp_album(V0, V2).","section(V1, V1) :- - book(V0, V1), album(V1, V3)."],"b":["- music(V3, V3) :- album(V1, V3), section(V1, V2).","- writing(V1, V3) :- - photograph_album(V1, V2), document(V1, V3), not -section(V1, V2)."],"c":["- book(V1, V1) :- - writing(V1, V3), not -album(V1, V3).","album(V1, V3) :- - book(V0, V1), patent(V2, V3), not -stamp_album(V0, V2)."],"d":["above(V2, V0) :- not -stamp_album(V0, V2), - written_communication(V0, V2).","- writing(V1, V1) :- - book(V0, V1), - fizzy(V0, V1)."],"e":["- going(V1, V2) :- climb(V1, V3), sword(V2, V3).","minibar(V2, V3) :- coinage(V2, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_67_7_11_3_6_0.5_1.0_3_2_3","seed":67,"num_facts":5,"num_rules":12,"num_related_predicates":17,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" natural_gas(\"Tamara\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- steam_coal.","- watercourse(\"Richard\", \"Tamara\").","- canal(\"Richard\", \"Ashley\").","rill(\"Ashley\", \"Angela\").","petroleum(\"Richard\", \"Angela\")."],"noisy_facts":["golden_fur(\"Richard\", \"Angela\").","- razorblade(\"Richard\", \"Tamara\").","peanut(\"Richard\", \"Angela\").","rudder_blade(\"Angela\").","impeller(\"Tamara\", \"Angela\").","- receive_punishment_for_crimes_commited(\"Richard\", \"Angela\")."],"min_fact_dicts_for_query":["- watercourse(\"Richard\", \"Tamara\").","- canal(\"Richard\", \"Ashley\").","rill(\"Ashley\", \"Angela\")."],"noiseless_rules":["- natural_gas(V1) :- channel(V1), - body_of_water(V3), not -vegetable_matter(V1, V3).","- nuclear_fuel(V0, V0) :- - anthracite(V0, V1), not steam_coal.","- lake(V1, V1) :- - anthracite(V0, V1), not steam_coal.","- coal(V0, V0) :- - anthracite(V0, V1), not steam_coal.","- fuel(V0, V0) :- - nuclear_fuel(V0, V3), not -combustible(V0, V3), not fossil_fuel(V0, V3).","inlet(V1, V1) :- - fuel(V0, V1), not anthracite(V0, V1).","channel(V1) :- - watercourse(V0, V1), - canal(V0, V2), rill(V2, V3).","combustible(V0, V3) :- - watercourse(V0, V1), - canal(V0, V2), rill(V2, V3).","- anthracite(V0, V1) :- - watercourse(V0, V1), - canal(V0, V2), rill(V2, V3).","- body_of_water(V1) :- - lake(V1, V2), not -inlet(V1, V2), not -channel(V1).","vegetable_matter(V0, V3) :- - nuclear_fuel(V0, V3), not coal(V0, V3), not -petroleum(V0, V3).","- fossil_fuel(V0, V3) :- - nuclear_fuel(V0, V3), not coal(V0, V3), not -petroleum(V0, V3)."],"noisy_rules":{"a":["natural_gas(V1) :- nuclear_fuel(V0, V3), - inlet(V1, V2), not -anthracite(V0, V1).","natural_gas(V1) :- - channel(V1), body_of_water(V3)."],"b":["fossil_fuel(V1, V3) :- - vegetable_matter(V1, V3), natural_gas(V1).","lake(V1, V1) :- natural_gas(V1)."],"c":["- vegetable_matter(V1, V3) :- lake(V1, V2), body_of_water(V3).","- inlet(V1, V2) :- lake(V1, V2), - channel(V1)."],"d":["- petroleum(V0, V3) :- nuclear_fuel(V0, V3), - vegetable_matter(V1, V3), not receive_punishment_for_crimes_commited(V0, V3).","canal(V0, V3) :- not -coal(V0, V3), golden_fur(V0, V3)."],"e":["child(V0, V3) :- peanut(V0, V3).","blade(V0, V3) :- rudder_blade(V3), - razorblade(V0, V1), not -impeller(V1, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_78_6_6_1_2_0.5_1.0_3_2_3","seed":78,"num_facts":4,"num_rules":7,"num_related_predicates":11,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"many_windows(\"Harold\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["devices(\"Harry\", \"Amy\").","- bullock(\"Harry\", \"Harold\").","taste(\"Harold\").","mouse(\"Harry\", \"Amy\")."],"noisy_facts":[],"min_fact_dicts_for_query":["devices(\"Harry\", \"Amy\").","- bullock(\"Harry\", \"Harold\")."],"noiseless_rules":["many_windows(V3) :- - screw_thread(V3), not -vulva(V3).","- cane(V0, V1) :- devices(V0, V1).","canto(V0, V3) :- - bullock(V0, V3).","golden_retriever(V0) :- - bullock(V0, V3).","- screw_thread(V3) :- - cane(V0, V1), canto(V0, V3), not -mouse(V0, V1).","vulva(V0) :- golden_retriever(V0), not chutney(V0).","- chutney(V3) :- - screw_thread(V3), not -taste(V3)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_8_7_9_4_5_0.5_1.0_5_2_3","seed":8,"num_facts":6,"num_rules":10,"num_related_predicates":16,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.6666666666666667,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" waterfowl(\"Daniel\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["opening(\"Christina\", \"Daniel\").","entertainment(\"Daniel\").","powder_blue(\"Larry\", \"Christina\").","- lower_landing_gear(\"Christina\", \"Daniel\").","- swazi(\"Christina\", \"Daniel\").","jay(\"Christina\", \"Daniel\")."],"noisy_facts":["- pushed_opne(\"Daniel\").","- massachusetts(\"Christina\", \"Daniel\").","- grown_ups(\"Larry\").","- gel(\"Christina\", \"Daniel\").","- type(\"Christina\", \"Daniel\").","media(\"Jamie\", \"Christina\").","dumbbell(\"Jamie\", \"Daniel\").","apron(\"Larry\", \"Jamie\")."],"min_fact_dicts_for_query":["opening(\"Christina\", \"Daniel\").","entertainment(\"Daniel\").","powder_blue(\"Larry\", \"Christina\")."],"noiseless_rules":["- waterfowl(V3) :- bedroom(V3), kill_people(V0, V3), boulder(V1, V2), not -enjoy_sex(V2, V3).","bedroom(V3) :- whiskers(V2, V3), not survival(V2, V3).","whiskers(V2, V3) :- opening(V2, V3).","donna(V2) :- opening(V2, V3).","kill_people(V0, V3) :- entertainment(V3), powder_blue(V0, V2), not lower_landing_gear(V2, V3), not swazi(V2, V3), not -jay(V2, V3).","silage(V2) :- entertainment(V3), powder_blue(V0, V2), not lower_landing_gear(V2, V3), not swazi(V2, V3), not -jay(V2, V3).","- both_kittens_and_dogs(V3) :- entertainment(V3), powder_blue(V0, V2), not lower_landing_gear(V2, V3), not swazi(V2, V3), not -jay(V2, V3).","- survival(V2, V2) :- donna(V2), not -silage(V2).","boulder(V2, V2) :- donna(V2).","enjoy_sex(V3, V3) :- - both_kittens_and_dogs(V3)."],"noisy_rules":{"a":["waterfowl(V3) :- - silage(V2), survival(V2, V3).","waterfowl(V3) :- - whiskers(V2, V3), - donna(V2), - silage(V2), both_kittens_and_dogs(V3), - boulder(V1, V2)."],"b":["survival(V3, V3) :- waterfowl(V3).","- entertainment(V3) :- not donna(V2), both_kittens_and_dogs(V3), - boulder(V1, V2), - enjoy_sex(V2, V3), not -waterfowl(V3)."],"c":["- jay(V2, V3) :- - donna(V2), - kill_people(V0, V3), - silage(V2), - boulder(V1, V2).","- entertainment(V3) :- - donna(V2), - kill_people(V0, V3), - boulder(V1, V2), not enjoy_sex(V2, V3)."],"d":["survival(V2, V3) :- - bedroom(V3), not whiskers(V2, V3), not massachusetts(V2, V3), - type(V2, V3).","lower_landing_gear(V2, V3) :- - enjoy_sex(V2, V3), - gel(V2, V3)."],"e":["staying_in_shape(V0, V3) :- - grown_ups(V0), apron(V0, V1), media(V1, V2), dumbbell(V1, V3).","- whiteness(V3) :- - pushed_opne(V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_26_8_10_8_9_0.5_1.0_3_1_2","seed":26,"num_facts":10,"num_rules":11,"num_related_predicates":21,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"P10(\"Susan\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P11.","P12(\"Susan\").","P13(\"Susan\").","- P14(\"Susan\").","P15(\"Susan\").","P16(\"Susan\").","- P17.","- P18(\"Susan\").","P19(\"Susan\").","P20."],"noisy_facts":[],"min_fact_dicts_for_query":["- P11.","P16(\"Susan\")."],"noiseless_rules":["P10(V2) :- - P0(V2), not -P4(V2), not P6(V2).","- P0(V2) :- - P2(V2), not P5(V2), not -P16(V2).","P1(V2) :- - P2(V2), not P5(V2), not -P16(V2).","- P2(V2) :- - P11, P16(V2), not P17.","P3(V2) :- - P11, P16(V2), not P17.","P4(V2) :- P12(V2), not -P13(V2), not P14(V2).","- P5(V2) :- - P9(V2), not P18(V2), not -P19(V2).","- P6(V2) :- P1(V2), not P7(V2), not -P15(V2).","- P7(V1) :- P3(V1), not -P20.","P8(V1) :- P3(V1), not -P20.","- P9(V0) :- P8(V0)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_70_6_9_3_5_0.5_1.0_3_2_3","seed":70,"num_facts":4,"num_rules":10,"num_related_predicates":14,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":" P9(\"Bryan\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P10(\"Lawrence\").","- P11(\"Bryan\", \"Tyler\").","- P12(\"Bryan\", \"Lawrence\").","P13(\"Tyler\")."],"noisy_facts":["P17(\"Bryan\", \"Tyler\").","P14(\"Bryan\", \"Tyler\").","- P15(\"Bryan\", \"Tyler\").","P18(\"Tyler\", \"Lawrence\").","P20(\"Bryan\", \"Tyler\")."],"min_fact_dicts_for_query":["- P10(\"Lawrence\").","- P11(\"Bryan\", \"Tyler\")."],"noiseless_rules":["- P9(V1) :- - P3(V3), - P4(V0, V1), not -P8(V1, V3).","P0(V1, V2) :- - P10(V3), - P11(V1, V2), not P12(V1, V3).","P1(V1, V2) :- - P10(V3), - P11(V1, V2), not P12(V1, V3).","P2(V2) :- - P10(V3), - P11(V1, V2), not P12(V1, V3).","- P3(V2) :- P0(V1, V2), not P7(V1, V2).","- P4(V2, V1) :- P1(V1, V2), not -P2(V2).","- P5(V2) :- P1(V1, V2), not -P2(V2).","P6(V2, V1) :- P1(V1, V2), not -P2(V2).","- P7(V2, V2) :- P2(V2), not P5(V2).","P8(V2, V3) :- P2(V2), P6(V2, V3), not -P13(V2)."],"noisy_rules":{"a":["P9(V1) :- P4(V0, V1).","P9(V2) :- P5(V2)."],"b":["P11(V1, V2) :- P3(V3), - P6(V2, V3), P9(V1).","P5(V2) :- P4(V0, V1), - P6(V2, V3), not -P9(V1)."],"c":["P5(V2) :- - P1(V1, V2), P4(V0, V1).","P7(V1, V2) :- - P1(V1, V2)."],"d":["- P0(V1, V2) :- P5(V2), P7(V1, V2), not -P14(V1, V2).","P4(V2, V1) :- - P1(V1, V2), not -P7(V1, V2), - P15(V1, V2)."],"e":["P16(V1, V2) :- P17(V1, V2), P18(V2, V3).","P19(V2) :- P20(V1, V2)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_98_7_7_5_7_0.5_1.0_3_2_3","seed":98,"num_facts":9,"num_rules":8,"num_related_predicates":17,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6666666666666667,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"armor_plate(\"Kelsey\", \"Jasmine\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["skid_lid(\"Kelsey\", \"Jasmine\").","bugs(\"Jasmine\", \"Angela\").","casquet(\"Jasmine\", \"Angela\").","camail(\"Kelsey\", \"Jasmine\").","cannon(\"Kelsey\", \"Jasmine\").","water_butt(\"Jasmine\", \"Angela\").","area(\"Jasmine\", \"Angela\").","place_of_learning(\"Jasmine\", \"Angela\").","reviewing_restaurant(\"Jasmine\", \"Angela\")."],"noisy_facts":[],"min_fact_dicts_for_query":["skid_lid(\"Kelsey\", \"Jasmine\").","bugs(\"Jasmine\", \"Angela\").","casquet(\"Jasmine\", \"Angela\").","camail(\"Kelsey\", \"Jasmine\").","cannon(\"Kelsey\", \"Jasmine\").","water_butt(\"Jasmine\", \"Angela\").","area(\"Jasmine\", \"Angela\").","place_of_learning(\"Jasmine\", \"Angela\").","reviewing_restaurant(\"Jasmine\", \"Angela\")."],"noiseless_rules":["armor_plate(V0, V2) :- beaver(V0, V2), helmet(V0, V2), cannon(V0, V2).","beaver(V0, V2) :- insects_live_and_die(V0, V3), small_animals(V2, V3), place_of_learning(V2, V3).","insects_live_and_die(V0, V3) :- skid_lid(V0, V2), bugs(V2, V3).","crash_helmet(V0) :- skid_lid(V0, V2), bugs(V2, V3).","small_animals(V2, V3) :- bugs(V2, V3), water_butt(V2, V3), reviewing_restaurant(V2, V3).","helmet(V0, V0) :- crash_helmet(V0), casque(V0), basinet(V0).","casque(V3) :- casquet(V2, V3), water_butt(V2, V3), area(V2, V3).","basinet(V0) :- camail(V0, V2)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_19_8_8_8_11_0.5_1.0_5_3_4","seed":19,"num_facts":11,"num_rules":9,"num_related_predicates":20,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"media(\"Hannah\", \"Stephen\", \"Rhonda\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["compass_point(\"Gary\", \"Hannah\", \"Rhonda\").","scallop_shell(\"Hannah\").","imbibe(\"Stephen\", \"Rhonda\", \"Ann\").","skeleton_part(\"Gary\", \"Hannah\", \"Stephen\").","scrapbook(\"Gary\", \"Hannah\", \"Rhonda\").","inch(\"Stephen\", \"Rhonda\", \"Ann\").","numismatic_value(\"Stephen\", \"Rhonda\", \"Ann\").","footbridge(\"Gary\", \"Hannah\", \"Stephen\").","jack(\"Gary\", \"Hannah\", \"Stephen\").","masters(\"Gary\", \"Hannah\", \"Stephen\").","hamburger_bun(\"Hannah\", \"Stephen\", \"Rhonda\")."],"noisy_facts":[],"min_fact_dicts_for_query":["compass_point(\"Gary\", \"Hannah\", \"Rhonda\").","scallop_shell(\"Hannah\").","imbibe(\"Stephen\", \"Rhonda\", \"Ann\").","skeleton_part(\"Gary\", \"Hannah\", \"Stephen\").","scrapbook(\"Gary\", \"Hannah\", \"Rhonda\").","inch(\"Stephen\", \"Rhonda\", \"Ann\").","numismatic_value(\"Stephen\", \"Rhonda\", \"Ann\").","footbridge(\"Gary\", \"Hannah\", \"Stephen\").","jack(\"Gary\", \"Hannah\", \"Stephen\").","masters(\"Gary\", \"Hannah\", \"Stephen\").","hamburger_bun(\"Hannah\", \"Stephen\", \"Rhonda\")."],"noiseless_rules":["media(V1, V2, V3) :- surgeon(V3), hamburger_bun(V1, V2, V3).","river_dolphin(V0, V1, V3) :- compass_point(V0, V1, V3).","fruit_juice(V3) :- compass_point(V0, V1, V3).","surgeon(V3) :- river_dolphin(V0, V1, V3), bell(V0, V1, V3).","field_grade_officer(V1, V4) :- festering(V0, V1, V2), tissue(V0, V2, V4).","bell(V0, V1, V0) :- field_grade_officer(V1, V4), festering(V0, V1, V2), masters(V0, V1, V2).","hair_coloring(V0, V2, V3) :- scallop_shell(V1), skeleton_part(V0, V1, V2), scrapbook(V0, V1, V3), inch(V2, V3, V4), numismatic_value(V2, V3, V4).","festering(V3, V3, V2) :- imbibe(V2, V3, V4), numismatic_value(V2, V3, V4).","tissue(V0, V2, V2) :- fruit_juice(V3), hair_coloring(V0, V2, V3), footbridge(V0, V1, V2), jack(V0, V1, V2), masters(V0, V1, V2)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_54_5_6_6_9_0.5_1.0_5_2_3","seed":54,"num_facts":8,"num_rules":7,"num_related_predicates":15,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"P6(\"Amy\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P7.","- P8.","- P9(\"Amy\").","P10(\"Amy\").","P11(\"Amy\", \"Meredith\").","P12(\"John\", \"Samantha\").","P13(\"John\", \"Samantha\").","P14(\"John\", \"Samantha\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- P7.","- P9(\"Amy\").","P10(\"Amy\").","P11(\"Amy\", \"Meredith\")."],"noiseless_rules":["P6(V2) :- - P0(V2), P3(V2), - P9(V2), P10(V2), P11(V2, V3).","- P0(V2) :- - P1(V0, V3), P4(V1, V2), not P5(V2, V3).","- P1(V2, V2) :- - P7, P10(V2).","- P2(V2, V2) :- - P7, P10(V2).","P3(V3) :- - P1(V0, V3), not P8.","P4(V3, V0) :- - P1(V0, V3), not P8.","- P5(V2, V2) :- - P2(V0, V1), P4(V1, V2), not -P12(V0, V1), not -P13(V0, V1), not -P14(V0, V1)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_52_10_14_8_10_0.5_1.0_5_2_3","seed":52,"num_facts":13,"num_rules":15,"num_related_predicates":28,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.888888888888889,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" seal(\"Daniel\", \"Ricky\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["sunrise(\"Daniel\", \"Grace\").","- darkness(\"Ricky\", \"Charles\").","pledger(\"Ricky\", \"Grace\").","- arthrospore(\"Charles\").","- bear_cub(\"Ricky\", \"Charles\").","lie_down(\"Daniel\", \"Grace\").","- slasher(\"Daniel\", \"Grace\").","affair(\"Daniel\", \"Grace\").","stalking_horse(\"Daniel\", \"Grace\").","vehicle(\"Daniel\", \"Ricky\").","integumentary_system(\"Daniel\", \"Ricky\").","well(\"Ricky\", \"Grace\").","- employee(\"Ricky\", \"Charles\")."],"noisy_facts":["- tissue(\"Daniel\", \"Grace\").","measuring(\"Ricky\", \"Charles\").","- fall_from_tree(\"Charles\").","tamarind(\"Daniel\", \"Grace\").","see(\"Ricky\", \"Grace\").","instar(\"Daniel\", \"Ricky\").","pool_ball(\"Daniel\", \"Grace\").","lift(\"Ricky\")."],"min_fact_dicts_for_query":["sunrise(\"Daniel\", \"Grace\").","pledger(\"Ricky\", \"Grace\")."],"noiseless_rules":["- seal(V0, V1) :- - inion(V0), dairy(V1), not -plaything(V1), not account(V0, V1), not ring(V0, V1).","- inion(V0) :- sunrise(V0, V2), not -lie_down(V0, V2), not slasher(V0, V2), not -affair(V0, V2), not -stalking_horse(V0, V2).","- macaroni(V1, V3) :- - darkness(V1, V3), not bear_cub(V1, V3).","- sleep(V0, V2) :- - hatchel(V0, V2), - cottonseed(V1, V2).","- hatchel(V0, V0) :- - account(V0, V1), not spear(V0, V1).","- dart(V0) :- - account(V0, V1), not spear(V0, V1).","dairy(V1) :- pledger(V1, V2).","- cottonseed(V1, V2) :- pledger(V1, V2).","plaything(V1) :- - arthrospore(V3), vehicle(V0, V1), integumentary_system(V0, V1), well(V1, V2), not employee(V1, V3).","letting(V0, V3) :- - arthrospore(V3), vehicle(V0, V1), integumentary_system(V0, V1), well(V1, V2), not employee(V1, V3).","scut(V2) :- - arthrospore(V3), vehicle(V0, V1), integumentary_system(V0, V1), well(V1, V2), not employee(V1, V3).","- account(V1, V1) :- - bear_cub(V1, V3).","- fuddy_duddy(V1, V3) :- - bear_cub(V1, V3).","- ring(V0, V1) :- - macaroni(V1, V3), - sleep(V0, V2), not dart(V0), not -letting(V0, V3).","- spear(V2, V1) :- scut(V2), - fuddy_duddy(V1, V2)."],"noisy_rules":{"a":["seal(V0, V1) :- macaroni(V1, V3), account(V0, V1).","seal(V0, V1) :- - plaything(V1), account(V0, V1)."],"b":["- sunrise(V0, V2) :- hatchel(V0, V2), dart(V0), seal(V0, V1).","- dairy(V1) :- hatchel(V0, V2), seal(V0, V1)."],"c":["cottonseed(V1, V0) :- inion(V0), dart(V0), ring(V0, V1), not -spear(V0, V1).","bear_cub(V1, V3) :- dart(V0), - letting(V0, V3), - scut(V2), fuddy_duddy(V1, V2), not -ring(V0, V1)."],"d":["dart(V1) :- - plaything(V1), lift(V1).","darkness(V1, V3) :- macaroni(V1, V3), sleep(V0, V2), - scut(V2), not -fuddy_duddy(V1, V2), not -pool_ball(V0, V2)."],"e":["- brother(V1, V3) :- - fall_from_tree(V3), instar(V0, V1), - tissue(V0, V2), not -measuring(V1, V3).","animal_skin(V0, V2) :- tamarind(V0, V2), see(V1, V2)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_10_8_12_11_13_0.5_1.0_5_1_2","seed":10,"num_facts":14,"num_rules":13,"num_related_predicates":27,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5714285714285716,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"drink(\"James\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["cornea.","- zebra.","ununpentium(\"James\").","atlanta(\"James\").","- pear(\"James\").","- coat_surfaces(\"James\").","- beta_cell(\"James\").","- quarter_section(\"James\").","- glaze(\"James\").","- cargo.","- union.","blue_ribbon.","- liver(\"James\").","division(\"James\")."],"noisy_facts":["- winners_circle(\"James\").","tail(\"James\").","- positive_identification(\"Heather\").","- foothill(\"Heather\").","nature(\"Heather\").","fuel_system(\"Heather\")."],"min_fact_dicts_for_query":["cornea.","atlanta(\"James\")."],"noiseless_rules":["drink(V2) :- - dolmas(V2), not -execration(V2), not coronion(V2), not taupe(V2), not liver(V2).","- dolmas(V2) :- cornea, atlanta(V2).","- small_boat(V2) :- cornea, atlanta(V2).","carib(V2) :- cornea, atlanta(V2).","execration(V2) :- - gossip(V2), not -barnyard(V2), not tent_caterpillar_moth(V2), not -atlanta(V2), not pear(V2).","- coronion(V2) :- - drop_forge(V2), not coat_surfaces(V2), not beta_cell(V2), not quarter_section(V2), not glaze(V2).","- gossip(V2) :- - drop_forge(V2), not coat_surfaces(V2), not beta_cell(V2), not quarter_section(V2), not glaze(V2).","barnyard(V1) :- - small_boat(V1), not brother(V1), not viand(V1).","- brother(V1) :- carib(V1).","- tent_caterpillar_moth(V2) :- - zebra, - cargo, - union, blue_ribbon, - liver(V2).","- viand(V2) :- - zebra, - cargo, - union, blue_ribbon, - liver(V2).","- taupe(V2) :- ununpentium(V2), not -division(V2).","- drop_forge(V2) :- ununpentium(V2), not -division(V2)."],"noisy_rules":{"a":["- drink(V2) :- - carib(V1), gossip(V2), not -viand(V1).","- drink(V2) :- not -dolmas(V2), tent_caterpillar_moth(V2), not -drop_forge(V2)."],"b":["coat_surfaces(V2) :- dolmas(V2), - carib(V1), not drink(V2).","beta_cell(V2) :- small_boat(V1), coronion(V2), not barnyard(V2), not -brother(V1), not drink(V2)."],"c":["- atlanta(V2) :- gossip(V2), not -tent_caterpillar_moth(V2).","liver(V2) :- brother(V1), drop_forge(V2)."],"d":["union(V1) :- brother(V1).","- barnyard(V2) :- dolmas(V2), not -gossip(V2), tent_caterpillar_moth(V2), drop_forge(V2), not -tail(V2)."],"e":["sports_bat(V1) :- nature(V1), - positive_identification(V1), - foothill(V1), not -fuel_system(V1).","- on_road(V2) :- - winners_circle(V2)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_97_10_11_10_13_0.5_1.0_5_3_4","seed":97,"num_facts":14,"num_rules":12,"num_related_predicates":26,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.6666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" united_kingdom(\"Edward\", \"Briana\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- horse(\"Edward\", \"Heather\").","ox(\"Edward\", \"Heather\").","- rhode_island_red(\"Edward\", \"Briana\", \"Colin\").","- egg(\"Edward\", \"Heather\").","- paper(\"Edward\", \"Heather\").","smoke(\"Edward\", \"Heather\").","- wood(\"Edward\", \"Heather\").","milk(\"Edward\", \"Heather\").","chicken(\"Edward\", \"Briana\").","- chick(\"Edward\", \"Briana\").","sheep(\"Edward\", \"Colin\").","- leicester(\"Edward\", \"Peter\", \"Colin\").","- severn(\"Heather\", \"Briana\", \"Colin\").","- cheviot_hills(\"Heather\", \"Peter\", \"Colin\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- horse(\"Edward\", \"Heather\").","- rhode_island_red(\"Edward\", \"Briana\", \"Colin\").","chicken(\"Edward\", \"Briana\").","- chick(\"Edward\", \"Briana\").","sheep(\"Edward\", \"Colin\").","- leicester(\"Edward\", \"Peter\", \"Colin\").","- severn(\"Heather\", \"Briana\", \"Colin\")."],"noiseless_rules":["- united_kingdom(V0, V2) :- barnyard(V0, V4), england(V1, V2, V3), not cow(V1, V3, V4).","barnyard(V0, V4) :- - farm(V0, V1), country(V0, V1), chicken(V0, V2), - chick(V0, V2), sheep(V0, V4).","england(V1, V2, V3) :- - berkshire(V0), - leicester(V0, V3, V4), - severn(V1, V2, V4), not cheviot_hills(V1, V3, V4).","- living(V0, V2, V3) :- animal(V0, V2, V3).","- farm(V0, V1) :- - horse(V0, V1).","- cow(V1, V1, V0) :- - horse(V0, V1), not -ox(V0, V1), not -milk(V0, V1).","poland(V0) :- - horse(V0, V1), not -ox(V0, V1), not -milk(V0, V1).","reading(V0, V4) :- - rhode_island_red(V0, V2, V4).","- product(V0) :- - egg(V0, V1), not paper(V0, V1), not -smoke(V0, V1), not wood(V0, V1), not -milk(V0, V1).","country(V0, V1) :- - farm(V0, V1), not -poland(V0).","animal(V0, V1, V0) :- - farm(V0, V1), not -poland(V0).","- berkshire(V0) :- - living(V0, V2, V3), reading(V0, V4), not product(V0)."],"noisy_rules":{}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_81_10_10_8_8_0.5_1.0_3_1_2","seed":81,"num_facts":12,"num_rules":11,"num_related_predicates":23,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" organism(\"Patricia\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["living_thing(\"Patricia\").","withers(\"Patricia\").","play_chess(\"Christina\").","- biped(\"Christina\").","- embryo(\"Christina\").","P16(\"Christina\").","- parasitic_plant(\"Patricia\").","- ectoparasite(\"Patricia\").","letting(\"Patricia\").","ophiurida(\"Patricia\").","- slave.","female."],"noisy_facts":["- raw_meat(\"Patricia\").","truncation(\"Christina\").","- petroglyph(\"Christina\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- organism(V2) :- - parasite(V2), not -biont(V2), not -body_part(V2).","- parasite(V2) :- - endoparasite(V2), not parasitic_plant(V2), not ectoparasite(V2).","- endoparasite(V2) :- - worker(V2), not -cell(V2).","- life(V1) :- person(V1), not animal(V1).","biont(V2) :- living_thing(V2), not -letting(V2), not -ophiurida(V2).","- worker(V1) :- creature(V1), not slave, not -female.","person(V1) :- creature(V1), not slave, not -female.","cell(V1) :- - life(V1).","body_part(V2) :- withers(V2).","creature(V1) :- play_chess(V1).","- animal(V1) :- - biped(V1), not embryo(V1), not -P16(V1)."],"noisy_rules":{"a":["organism(V2) :- - person(V1), - cell(V2), - body_part(V2).","organism(V2) :- parasite(V2), animal(V1)."],"b":["animal(V2) :- organism(V2).","parasitic_plant(V2) :- organism(V2)."],"c":["- living_thing(V2) :- life(V1), - biont(V2), - cell(V2).","biped(V1) :- worker(V2), - person(V1), animal(V1)."],"d":["- body_part(V2) :- - biont(V2).","worker(V2) :- - body_part(V2)."],"e":["meat(V2) :- - raw_meat(V2).","- carving(V1) :- truncation(V1), not petroglyph(V1)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_39_5_6_1_3_0.5_1.0_5_2_3","seed":39,"num_facts":3,"num_rules":7,"num_related_predicates":10,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" act(\"Diana\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["opisthobranchia(\"Jason\", \"Diana\").","- stepping_stone(\"Jason\", \"Diana\").","desperate_measure(\"Scott\", \"Diana\")."],"noisy_facts":["egg(\"Scott\", \"Lonnie\").","- wine(\"Jason\", \"Lonnie\").","- goat_cheese.","- bronco_busting(\"Jason\", \"Scott\").","- sheep(\"Scott\", \"Lonnie\").","paper(\"Jason\", \"Diana\").","- chicken(\"Scott\", \"Lonnie\").","- road(\"Diana\")."],"min_fact_dicts_for_query":["opisthobranchia(\"Jason\", \"Diana\").","- stepping_stone(\"Jason\", \"Diana\").","desperate_measure(\"Scott\", \"Diana\")."],"noiseless_rules":["- act(V3) :- - activity(V3), - implementation(V0, V2), not motivation(V0, V3).","- activity(V3) :- - motivation(V0, V3), not -opisthobranchia(V0, V3).","- class(V0, V3) :- - motivation(V0, V3), not -opisthobranchia(V0, V3).","- wings(V3) :- - stepping_stone(V0, V3), desperate_measure(V1, V3).","- means(V3) :- - stepping_stone(V0, V3), desperate_measure(V1, V3).","- implementation(V0, V0) :- - class(V0, V3), not wings(V3).","- motivation(V0, V3) :- - means(V3), opisthobranchia(V0, V3)."],"noisy_rules":{"a":["act(V3) :- class(V0, V3).","act(V3) :- motivation(V0, V3)."],"b":["motivation(V3, V3) :- act(V3).","- desperate_measure(V0, V3) :- wings(V3), means(V3), motivation(V0, V3), not -act(V3)."],"c":["stepping_stone(V0, V3) :- activity(V3), class(V0, V3), wings(V3), means(V3), implementation(V0, V2).","motivation(V0, V3) :- activity(V3), not -class(V0, V3), implementation(V0, V2)."],"d":["means(V3) :- wings(V3), not road(V3).","implementation(V3, V3) :- activity(V3), wings(V3), means(V3), not goat_cheese."],"e":["- rodeo(V0, V1) :- - bronco_busting(V0, V1).","white(V0) :- not wine(V0, V2), paper(V0, V3), not chicken(V1, V2), egg(V1, V2), not sheep(V1, V2)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_87_6_9_3_3_0.5_1.0_5_2_3","seed":87,"num_facts":5,"num_rules":10,"num_related_predicates":15,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"negotiator(\"Joseph\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["- creature(\"Mark\").","disturbance(\"Matthew\", \"Joseph\").","- slave(\"Austin\", \"Matthew\").","- communicator(\"Austin\", \"Mark\").","- sailing_boat(\"Austin\", \"Mark\")."],"noisy_facts":["- plutonium(\"Matthew\", \"Mark\").","- soup(\"Matthew\", \"Joseph\").","- bruin(\"Austin\", \"Matthew\").","metallic_element(\"Mark\").","sport(\"Austin\", \"Matthew\")."],"min_fact_dicts_for_query":["- creature(\"Mark\").","disturbance(\"Matthew\", \"Joseph\").","- slave(\"Austin\", \"Matthew\")."],"noiseless_rules":["negotiator(V2) :- - whole(V2), - waffler(V0, V1), not living_thing(V1, V2).","person(V1, V3) :- - creature(V3), - slave(V0, V1), not communicator(V0, V3), not sailing_boat(V0, V3).","- gossip(V1) :- - creature(V3), - slave(V0, V1), not communicator(V0, V3), not sailing_boat(V0, V3).","boat(V0, V1) :- - creature(V3), - slave(V0, V1), not communicator(V0, V3), not sailing_boat(V0, V3).","- whole(V2) :- disturbance(V1, V2).","- waffler(V3, V1) :- person(V1, V3), not quoter(V1, V3).","organism(V1) :- person(V1, V3), not quoter(V1, V3).","- living_thing(V1, V1) :- - gossip(V1), not -organism(V1), not -life(V1).","- quoter(V1, V0) :- boat(V0, V1).","life(V1) :- boat(V0, V1)."],"noisy_rules":{"a":["- negotiator(V2) :- gossip(V1), whole(V2).","- negotiator(V1) :- - organism(V1)."],"b":["communicator(V0, V3) :- gossip(V1), waffler(V0, V1), quoter(V1, V3), - negotiator(V2).","- person(V1, V1) :- waffler(V0, V1), living_thing(V1, V2), - negotiator(V2)."],"c":["sailing_boat(V2, V3) :- whole(V2), living_thing(V1, V2), quoter(V1, V3).","sailing_boat(V1, V3) :- - person(V1, V3), not organism(V1), - life(V1)."],"d":["waffler(V0, V1) :- not boat(V0, V1), not -whole(V2), living_thing(V1, V2), not life(V1), sport(V0, V1).","whole(V2) :- - person(V1, V3), living_thing(V1, V2), not -quoter(V1, V3), not soup(V1, V2)."],"e":["- chemical_element(V1, V3) :- metallic_element(V3), - plutonium(V1, V3).","bear(V0, V1) :- - bruin(V0, V1)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_54_10_15_15_17_0.5_1.0_5_2_3","seed":54,"num_facts":19,"num_rules":16,"num_related_predicates":35,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.888888888888889,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":"dish(\"Jesse\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["eggdrop_soup(\"Caroline\", \"Alicia\").","- goulash(\"Jesse\").","rocket(\"Alicia\", \"Jesse\").","pasta_salad(\"Alicia\", \"Jesse\").","case(\"Alicia\", \"Jesse\").","dessert_spoon(\"Alicia\", \"Jesse\").","chicken_soup(\"Alicia\", \"Jesse\").","- round_toy(\"Alicia\", \"Jesse\").","plutonium(\"Alicia\", \"Jesse\").","- trip_light_fantastic(\"Alicia\", \"Jesse\").","seat(\"Alicia\", \"Jesse\").","- gas_line(\"Caroline\", \"Jesus\").","- lobster_stew(\"Jesus\").","- salad_nicoise(\"Alicia\", \"Jesse\").","screen_actor(\"Alicia\", \"Jesse\").","bigos(\"Alicia\", \"Jesus\").","- crab_louis(\"Alicia\", \"Jesse\").","- potato_salad(\"Alicia\", \"Jesse\").","coleslaw(\"Alicia\", \"Jesse\")."],"noisy_facts":["acardia(\"Alicia\", \"Jesus\").","catch_crop(\"Jesse\", \"Jesus\").","seeing(\"Caroline\", \"Alicia\").","- field_crop(\"Caroline\", \"Jesus\").","cash_crop(\"Alicia\", \"Jesse\").","cover_crop(\"Jesse\").","- macrocephaly(\"Caroline\", \"Alicia\").","- dispatch_case.","- amastia(\"Jesse\", \"Jesus\")."],"min_fact_dicts_for_query":["eggdrop_soup(\"Caroline\", \"Alicia\").","chicken_soup(\"Alicia\", \"Jesse\")."],"noiseless_rules":["dish(V2) :- soup(V0, V2), not P10(V0, V2), not -pepper_steak(V0, V2).","- bowl(V1, V3) :- spoon(V0, V1), mousse(V1, V3).","- dessert(V0, V1) :- spoon(V0, V1), mousse(V1, V3).","soup(V0, V2) :- eggdrop_soup(V0, V1), chicken_soup(V1, V2).","- scanner(V1, V2) :- eggdrop_soup(V0, V1), chicken_soup(V1, V2).","- stew(V3) :- - goulash(V2), - lobster_stew(V3), - salad_nicoise(V1, V2), not -screen_actor(V1, V2), not -bigos(V1, V3).","actor(V1, V2) :- - goulash(V2), - lobster_stew(V3), - salad_nicoise(V1, V2), not -screen_actor(V1, V2), not -bigos(V1, V3).","spoon(V2, V1) :- rocket(V1, V2), not -case(V1, V2), not -dessert_spoon(V1, V2), not -chicken_soup(V1, V2), not round_toy(V1, V2).","- escalope_de_veau_orloff(V2, V1) :- rocket(V1, V2), not -case(V1, V2), not -dessert_spoon(V1, V2), not -chicken_soup(V1, V2), not round_toy(V1, V2).","casserole(V2, V1) :- rocket(V1, V2), not -case(V1, V2), not -dessert_spoon(V1, V2), not -chicken_soup(V1, V2), not round_toy(V1, V2).","mousse(V3, V3) :- - stew(V3), - escalope_de_veau_orloff(V2, V3).","- P10(V0, V2) :- - bowl(V1, V3), - scanner(V1, V2), casserole(V0, V3), not -sugar_bowl(V0, V3), not gas_line(V0, V3).","sugar_bowl(V0, V0) :- - dessert(V0, V1), not salad(V0, V1).","pepper_steak(V1, V2) :- actor(V1, V2), not -potpie(V1, V2), not -plutonium(V1, V2), not trip_light_fantastic(V1, V2), not -seat(V1, V2).","- salad(V1, V1) :- pasta_salad(V1, V2), not salad_nicoise(V1, V2), not crab_louis(V1, V2), not potato_salad(V1, V2), not -coleslaw(V1, V2).","potpie(V1, V2) :- pasta_salad(V1, V2), not salad_nicoise(V1, V2), not crab_louis(V1, V2), not potato_salad(V1, V2), not -coleslaw(V1, V2)."],"noisy_rules":{"a":["- dish(V2) :- bowl(V1, V3), stew(V3), - mousse(V1, V3), - pepper_steak(V0, V2), - potpie(V1, V2).","- dish(V2) :- escalope_de_veau_orloff(V2, V3)."],"b":["stew(V2) :- - dish(V2).","stew(V3) :- bowl(V1, V3), - spoon(V0, V1), - dish(V2)."],"c":["escalope_de_veau_orloff(V2, V3) :- stew(V3), not casserole(V0, V3), P10(V0, V2).","- actor(V1, V2) :- dessert(V0, V1), - soup(V0, V2), not -scanner(V1, V2), - spoon(V0, V1), not pepper_steak(V0, V2)."],"d":["- bigos(V1, V3) :- stew(V3), - spoon(V0, V1), not -seeing(V0, V1).","- case(V3, V3) :- - casserole(V0, V3), not dispatch_case."],"e":["- abnormality(V1, V2) :- - macrocephaly(V0, V1), acardia(V1, V3), - amastia(V2, V3).","crop(V0, V1) :- not -cover_crop(V2), - field_crop(V0, V3), cash_crop(V1, V2), catch_crop(V2, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_70_7_8_2_5_0.5_1.0_3_2_3","seed":70,"num_facts":5,"num_rules":9,"num_related_predicates":14,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8333333333333333,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" continuing_education(\"Donald\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- hairbrush(\"Donald\", \"Elizabeth\").","common_eel(\"Donald\").","- decayed_bodies(\"Donald\", \"Elizabeth\").","merchant(\"Donald\", \"Elizabeth\").","- cortex(\"Donald\", \"Elizabeth\")."],"noisy_facts":["- black_sheep(\"Donald\", \"Elizabeth\").","- closet(\"Jessica\", \"Donald\").","creation(\"Donald\", \"Elizabeth\").","hot_air_balloon(\"Donald\", \"Elizabeth\").","gatherer(\"Donald\")."],"min_fact_dicts_for_query":["- hairbrush(\"Donald\", \"Elizabeth\").","common_eel(\"Donald\")."],"noiseless_rules":["- continuing_education(V1) :- - raglan(V3), - carry_personal_belongings(V0, V1), not sheets(V1, V3).","feminine(V1, V2) :- jury(V1), - hairbrush(V1, V2), not cortex(V1, V2).","- horse(V1, V2) :- jury(V1), - hairbrush(V1, V2), not cortex(V1, V2).","- raglan(V1) :- feminine(V1, V2), not package(V1, V2), not -tendency(V1, V2).","jury(V1) :- common_eel(V1).","- package(V1, V2) :- feminine(V1, V2).","- carry_personal_belongings(V2, V1) :- - horse(V1, V2), not -jury(V1).","- sheets(V1, V2) :- - decayed_bodies(V1, V2), not -merchant(V1, V2), not cortex(V1, V2).","tendency(V1, V2) :- - decayed_bodies(V1, V2), not -merchant(V1, V2), not cortex(V1, V2)."],"noisy_rules":{"a":["continuing_education(V1) :- raglan(V3), package(V1, V2).","continuing_education(V1) :- raglan(V3), package(V1, V2), not tendency(V1, V2)."],"b":["- jury(V1) :- - tendency(V1, V2), not -continuing_education(V1).","hairbrush(V1, V1) :- continuing_education(V1)."],"c":["- merchant(V1, V1) :- carry_personal_belongings(V0, V1).","- jury(V1) :- horse(V1, V2), sheets(V1, V3), - tendency(V1, V2)."],"d":["cortex(V1, V2) :- raglan(V3), package(V1, V2), not -hot_air_balloon(V1, V2).","sheets(V1, V2) :- - tendency(V1, V2)."],"e":["- linen(V0, V1) :- - closet(V0, V1).","- you(V1, V2) :- gatherer(V1), creation(V1, V2), not black_sheep(V1, V2)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_18_7_9_7_10_0.5_1.0_5_2_3","seed":18,"num_facts":8,"num_rules":10,"num_related_predicates":18,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" trinitarian(\"Eric\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["aristotelean(\"Joseph\").","- sikh(\"Kristen\").","monophysite(\"Steven\", \"Eric\").","rasta(\"Joseph\", \"Kristen\").","animist(\"Eric\", \"Kristen\").","sheep(\"Joseph\", \"Eric\").","skinnerian(\"Joseph\", \"Eric\").","- leech(\"Joseph\", \"Eric\")."],"noisy_facts":["- gelechiid(\"Steven\", \"Eric\").","- auriculare(\"Steven\", \"Joseph\").","acanthion(\"Eric\", \"Kristen\").","hinayanist(\"Joseph\").","jugale(\"Eric\").","- dualist(\"Joseph\").","- bounce(\"Steven\", \"Eric\").","honor_word_with_truth(\"Steven\", \"Eric\").","- humming(\"Joseph\", \"Eric\").","- taoist(\"Joseph\").","gnathion(\"Steven\", \"Eric\").","- prosthion(\"Steven\")."],"min_fact_dicts_for_query":["aristotelean(\"Joseph\").","- sikh(\"Kristen\").","monophysite(\"Steven\", \"Eric\")."],"noiseless_rules":["- trinitarian(V2) :- bahai(V1), imposter(V1, V2), - shintoist(V1, V3).","disciple(V1, V2) :- aristotelean(V1), - sikh(V3), monophysite(V0, V2), not -rasta(V1, V3), not -animist(V2, V3).","- bookshop(V0, V2) :- aristotelean(V1), - sikh(V3), monophysite(V0, V2), not -rasta(V1, V3), not -animist(V2, V3).","follower(V2) :- disciple(V1, V2), not -sheep(V1, V2), not -skinnerian(V1, V2), not leech(V1, V2).","bahai(V1) :- - bookshop(V0, V2), imposter(V1, V2), not -mahayanist(V0, V2), not -monophysite(V0, V2).","imposter(V3, V3) :- follower(V3), not sikh(V3).","amoralist(V3) :- follower(V3), not sikh(V3).","mahayanist(V0, V2) :- fairy(V0, V2).","- shintoist(V2, V2) :- amoralist(V2).","fairy(V2, V2) :- amoralist(V2)."],"noisy_rules":{"a":["trinitarian(V3) :- - follower(V3).","trinitarian(V3) :- - follower(V3), shintoist(V1, V3)."],"b":["shintoist(V1, V0) :- - disciple(V1, V2), - mahayanist(V0, V2), not -trinitarian(V2).","- disciple(V1, V2) :- - bahai(V1), not amoralist(V2), - mahayanist(V0, V2), shintoist(V1, V3), not -trinitarian(V2)."],"c":["- sheep(V1, V2) :- - disciple(V1, V2), bookshop(V0, V2), not bahai(V1), - imposter(V1, V2), not amoralist(V2).","- fairy(V1, V3) :- shintoist(V1, V3)."],"d":["- disciple(V1, V2) :- - bahai(V1), - amoralist(V2), - dualist(V1), not taoist(V1), hinayanist(V1).","- sheep(V1, V2) :- - imposter(V1, V2), not fairy(V0, V2), not -honor_word_with_truth(V0, V2), - bounce(V0, V2), - gelechiid(V0, V2)."],"e":["singing(V1, V2) :- - humming(V1, V2).","- craniometric_point(V0, V3) :- not prosthion(V0), not -jugale(V2), - auriculare(V0, V1), gnathion(V0, V2), acanthion(V2, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_14_10_10_7_10_0.5_1.0_3_2_3","seed":14,"num_facts":12,"num_rules":11,"num_related_predicates":23,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" vegetarians(\"Jennifer\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["values(\"Jennifer\", \"Heather\").","migratory_quail(\"Gerald\", \"Jennifer\").","outlive_owners(\"Gerald\", \"Melissa\").","- jog_on_track(\"Gerald\", \"Jennifer\").","- nourishment(\"Gerald\", \"Heather\").","- recipe(\"Jennifer\", \"Melissa\").","- sword(\"Jennifer\", \"Heather\").","- take_people_away_from_planet_earth(\"Jennifer\").","limit(\"Melissa\", \"Heather\").","- peppercorn_rent(\"Jennifer\", \"Melissa\").","point(\"Jennifer\", \"Melissa\").","malecite(\"Gerald\", \"Heather\")."],"noisy_facts":["- yield(\"Gerald\", \"Jennifer\").","- product(\"Gerald\", \"Melissa\").","direction(\"Jennifer\", \"Melissa\").","roast(\"Jennifer\", \"Heather\").","in_north_america(\"Jennifer\", \"Melissa\").","- wingspread(\"Melissa\", \"Heather\")."],"min_fact_dicts_for_query":["values(\"Jennifer\", \"Heather\").","migratory_quail(\"Gerald\", \"Jennifer\").","outlive_owners(\"Gerald\", \"Melissa\").","malecite(\"Gerald\", \"Heather\")."],"noiseless_rules":["- vegetarians(V1) :- float(V1, V2), - planking(V1, V3), not -limit(V2, V3).","vanity(V1, V3) :- values(V1, V3).","- stigmatism(V0, V1) :- migratory_quail(V0, V1), malecite(V0, V3).","autotelism(V0, V1) :- outlive_owners(V0, V2), - recipe(V1, V2), - sword(V1, V3).","- melon(V1) :- - jog_on_track(V0, V1), - peppercorn_rent(V1, V2), not -point(V1, V2).","mute_swan(V0, V1) :- autotelism(V0, V1), not melon(V1), not -carpet(V0, V1).","float(V1, V2) :- - stigmatism(V0, V1), outlive_owners(V0, V2).","carpet(V0, V1) :- - stigmatism(V0, V1), outlive_owners(V0, V2).","- pocket(V0, V3) :- - nourishment(V0, V3), not -malecite(V0, V3).","head_crash(V1) :- vanity(V1, V3), mute_swan(V0, V1), not pocket(V0, V3).","- planking(V1, V3) :- vanity(V1, V3), not -head_crash(V1), not take_people_away_from_planet_earth(V1)."],"noisy_rules":{"a":["vegetarians(V1) :- planking(V1, V3).","vegetarians(V1) :- stigmatism(V0, V1), not mute_swan(V0, V1), planking(V1, V3)."],"b":["melon(V1) :- - mute_swan(V0, V1), vegetarians(V1).","- migratory_quail(V1, V1) :- - head_crash(V1), vegetarians(V1)."],"c":["- vanity(V1, V1) :- - autotelism(V0, V1).","- autotelism(V1, V1) :- - float(V1, V2)."],"d":["- limit(V2, V2) :- - float(V1, V2), direction(V1, V2).","melon(V1) :- not -stigmatism(V0, V1), - yield(V0, V1)."],"e":["tea_ceremony(V1, V3) :- roast(V1, V3).","- terrorist(V0, V1) :- - product(V0, V2), in_north_america(V1, V2), - wingspread(V2, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_81_10_10_7_10_0.5_1.0_3_2_3","seed":81,"num_facts":11,"num_rules":11,"num_related_predicates":22,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P10(\"Jeffrey\", \"John\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P11(\"Jeffrey\", \"John\").","P12(\"Gabriela\", \"John\").","- P13(\"Jeffrey\").","P14(\"Gabriela\", \"John\").","P15(\"Jeffrey\", \"John\").","- P16(\"Jeffrey\", \"John\").","- P17(\"Jeffrey\", \"John\").","P18(\"Jeffrey\", \"John\").","P19(\"Jeffrey\", \"Gabriela\").","P20(\"Gabriela\", \"John\").","P21(\"Gabriela\", \"John\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P12(\"Gabriela\", \"John\").","- P13(\"Jeffrey\").","P19(\"Jeffrey\", \"Gabriela\").","P20(\"Gabriela\", \"John\")."],"noiseless_rules":["P10(V1, V3) :- P0(V1, V3), P3(V2, V3), not P7(V2, V3).","P0(V1, V3) :- P1(V1, V3), not -P15(V1, V3).","P1(V1, V3) :- - P4(V1, V2), P6(V1, V3).","- P2(V1, V3) :- - P5(V1, V3), - P9(V2, V3).","P3(V1, V3) :- - P2(V1, V3), not P11(V1, V3).","- P4(V1, V3) :- - P8(V1, V3), not -P15(V1, V3), not P16(V1, V3).","- P5(V1, V3) :- - P8(V1, V3), not -P15(V1, V3), not P16(V1, V3).","P6(V1, V3) :- - P2(V1, V3), not P17(V1, V3), not -P18(V1, V3).","- P7(V2, V3) :- P12(V2, V3).","- P8(V1, V3) :- - P13(V1), P19(V1, V2), P20(V2, V3).","- P9(V2, V3) :- P12(V2, V3), not -P14(V2, V3), not -P21(V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_53_6_6_4_6_0.5_1.0_5_3_4","seed":53,"num_facts":7,"num_rules":7,"num_related_predicates":14,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"torrent(\"Taylor\", \"Patricia\", \"Jeremy\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["animal_place(\"Patricia\", \"Jeremy\").","horn_button(\"Taylor\", \"Erin\").","- fall_out_of_love(\"Taylor\", \"Patricia\", \"Jeremy\").","warhead(\"Taylor\", \"Jeremy\").","quail(\"Taylor\", \"Kathleen\", \"Patricia\").","- iron_shirt(\"Taylor\", \"Patricia\", \"Erin\").","living_life(\"Taylor\", \"Patricia\", \"Erin\")."],"noisy_facts":["- biriani(\"Taylor\", \"Kathleen\", \"Patricia\").","sign_autographs(\"Kathleen\", \"Patricia\", \"Erin\").","- cocoa_powder(\"Taylor\", \"Erin\", \"Jeremy\").","soccer(\"Taylor\", \"Kathleen\", \"Erin\").","- seating(\"Taylor\", \"Erin\", \"Jeremy\").","house(\"Taylor\", \"Kathleen\", \"Patricia\")."],"min_fact_dicts_for_query":["animal_place(\"Patricia\", \"Jeremy\").","horn_button(\"Taylor\", \"Erin\").","- fall_out_of_love(\"Taylor\", \"Patricia\", \"Jeremy\").","warhead(\"Taylor\", \"Jeremy\").","quail(\"Taylor\", \"Kathleen\", \"Patricia\")."],"noiseless_rules":["torrent(V0, V2, V4) :- breeder_reactor(V0, V2), strengthener(V0, V4), not -somewhere(V0, V4), not -hotel_room(V2, V4).","breeder_reactor(V0, V2) :- - baa_lamb(V0, V2).","strengthener(V0, V4) :- animal_place(V2, V4), - fall_out_of_love(V0, V2, V4).","- baa_lamb(V0, V2) :- thunk(V0, V1, V2).","somewhere(V0, V4) :- horn_button(V0, V3), warhead(V0, V4), quail(V0, V1, V2), not iron_shirt(V0, V2, V3), not -living_life(V0, V2, V3).","thunk(V0, V1, V2) :- horn_button(V0, V3), warhead(V0, V4), quail(V0, V1, V2), not iron_shirt(V0, V2, V3), not -living_life(V0, V2, V3).","hotel_room(V2, V4) :- - fall_out_of_love(V0, V2, V4), not -warhead(V0, V4)."],"noisy_rules":{"a":["- torrent(V0, V2, V4) :- - breeder_reactor(V0, V2), - strengthener(V0, V4), not somewhere(V0, V4), - thunk(V0, V1, V2).","- torrent(V0, V2, V4) :- baa_lamb(V0, V2), - thunk(V0, V1, V2), - hotel_room(V2, V4)."],"b":["- horn_button(V0, V2) :- not breeder_reactor(V0, V2), - strengthener(V0, V4), - somewhere(V0, V4), not hotel_room(V2, V4), - torrent(V0, V2, V4).","- strengthener(V0, V4) :- not strengthener(V0, V4), - hotel_room(V2, V4), - torrent(V0, V2, V4)."],"c":["- quail(V0, V4, V2) :- - strengthener(V0, V4), baa_lamb(V0, V2), not somewhere(V0, V4).","- animal_place(V2, V4) :- - strengthener(V0, V4), baa_lamb(V0, V2)."],"d":["- imac(V0, V2, V1) :- not breeder_reactor(V0, V2), not -baa_lamb(V0, V2), - thunk(V0, V1, V2), not -house(V0, V1, V2), not biriani(V0, V1, V2).","- batting(V2, V0) :- - thunk(V0, V1, V2)."],"e":["- equality_for_everyone(V0, V1, V3) :- soccer(V0, V1, V3).","- noise(V1, V2, V4) :- - seating(V0, V3, V4), not cocoa_powder(V0, V3, V4), sign_autographs(V1, V2, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_70_9_9_9_12_0.5_1.0_3_2_3","seed":70,"num_facts":13,"num_rules":10,"num_related_predicates":23,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"rice_rat(\"Scott\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- bay(\"Christine\").","coffin(\"Nancy\").","pacifism(\"Nancy\", \"Ashley\").","- clamshell(\"Nancy\", \"Scott\").","playing(\"Scott\", \"Christine\").","sphenopsida(\"Scott\", \"Christine\").","- socializing(\"Nancy\", \"Scott\").","- selectivity(\"Scott\", \"Christine\").","- talking(\"Scott\", \"Ashley\").","- need_repair(\"Ashley\", \"Christine\").","american(\"Nancy\", \"Ashley\").","- drink(\"Scott\", \"Christine\").","- liquid_crystal(\"Nancy\", \"Scott\")."],"noisy_facts":["- traveler(\"Scott\", \"Christine\").","entertaining_others(\"Scott\", \"Ashley\").","character.","bill_of_attainder(\"Nancy\", \"Ashley\").","making_sandwich(\"Scott\", \"Ashley\")."],"min_fact_dicts_for_query":["- bay(\"Christine\").","coffin(\"Nancy\").","- socializing(\"Nancy\", \"Scott\").","- selectivity(\"Scott\", \"Christine\").","- talking(\"Scott\", \"Ashley\").","american(\"Nancy\", \"Ashley\").","- drink(\"Scott\", \"Christine\")."],"noiseless_rules":["rice_rat(V1) :- quick_bread(V3), distillery(V0, V1), not -inhaler(V1, V3).","- playing_baseball_with_team(V1, V2) :- - acre(V0, V1), american(V0, V2), - drink(V1, V3).","quick_bread(V3) :- - bay(V3), - talking(V1, V2), not need_repair(V2, V3).","- cold_cream(V2) :- - bay(V3), - talking(V1, V2), not need_repair(V2, V3).","- acre(V0, V1) :- coffin(V0), - socializing(V0, V1), - selectivity(V1, V3).","- slope(V2) :- pacifism(V0, V2).","playing_with(V0, V3) :- breathing(V0, V3), playing(V1, V3), not -sphenopsida(V1, V3).","breathing(V0, V0) :- - acre(V0, V1), not clamshell(V0, V1), not liquid_crystal(V0, V1).","distillery(V2, V1) :- - playing_baseball_with_team(V1, V2), not cold_cream(V2), not slope(V2).","inhaler(V1, V3) :- playing_with(V0, V3), distillery(V0, V1), not bay(V3)."],"noisy_rules":{"a":["- rice_rat(V0) :- not quick_bread(V3), cold_cream(V2), - breathing(V0, V3).","- rice_rat(V1) :- cold_cream(V2), - playing_with(V0, V3), - distillery(V0, V1)."],"b":["- playing(V1, V1) :- - rice_rat(V1).","- breathing(V2, V2) :- playing_baseball_with_team(V1, V2), - rice_rat(V1)."],"c":["slope(V0) :- - quick_bread(V3), - breathing(V0, V3).","- pacifism(V0, V3) :- - breathing(V0, V3)."],"d":["- quick_bread(V3) :- cold_cream(V2), - inhaler(V1, V3), - traveler(V1, V3).","liquid_crystal(V2, V2) :- cold_cream(V2), not -slope(V2), not -character."],"e":["- justify_war(V0, V1) :- bill_of_attainder(V0, V2), entertaining_others(V1, V2).","killing(V1, V2) :- making_sandwich(V1, V2)."]}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_80_7_10_2_4_0.5_1.0_3_1_2","seed":80,"num_facts":4,"num_rules":11,"num_related_predicates":15,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" four_legs(\"Chelsea\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- jockey(\"Chelsea\").","- living.","hay(\"Chelsea\").","bird."],"noisy_facts":["- getting_food(\"Chelsea\").","extension_course(\"Chelsea\").","blind_alley(\"Chelsea\").","course_of_lectures(\"Chelsea\").","- cot(\"Chelsea\")."],"min_fact_dicts_for_query":["- living.","hay(\"Chelsea\")."],"noiseless_rules":["- four_legs(V1) :- bed(V1), not -horse(V1), not sheep(V1).","bed(V1) :- asking_for_more_food(V1), not animal(V1), not big_ears(V1).","horse(V1) :- - sheep(V1), not jockey(V1), not -hay(V1).","asking_for_more_food(V1) :- - living, hay(V1), not -bird.","- flying_animal(V1) :- - living, hay(V1), not -bird.","- squirrel(V1) :- - living, hay(V1), not -bird.","- animal(V1) :- - flying_animal(V1).","rabbit(V1) :- - flying_animal(V1).","- sheep(V2) :- - squirrel(V2).","elephant(V2) :- - squirrel(V2).","- big_ears(V1) :- rabbit(V1), not -elephant(V1)."],"noisy_rules":{"a":["four_legs(V1) :- - bed(V1), squirrel(V2), not -sheep(V1).","four_legs(V1) :- animal(V1), not elephant(V1)."],"b":["living(V1) :- animal(V1), not -four_legs(V1).","- elephant(V1) :- four_legs(V1)."],"c":["sheep(V1) :- big_ears(V1).","flying_animal(V2) :- squirrel(V2)."],"d":["sleeping(V1) :- not bed(V1), - cot(V1).","- trunk(V1) :- - elephant(V1)."],"e":["- america(V1) :- - getting_food(V1).","course(V1) :- not -course_of_lectures(V1), extension_course(V1), blind_alley(V1)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_36_9_10_6_9_0.5_1.0_3_2_3","seed":36,"num_facts":8,"num_rules":11,"num_related_predicates":19,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.375,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"lectures(\"Zachary\", \"Tracey\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- staging_area(\"Zachary\", \"Amy\").","sodium_cyanide(\"Zachary\", \"Amy\").","puzzle(\"Zachary\", \"Anthony\").","slide(\"Amy\", \"Anthony\").","olla_podrida(\"Zachary\", \"Amy\").","inside_and_outside(\"Zachary\", \"Anthony\").","court(\"Zachary\", \"Amy\").","beast(\"Amy\", \"Tracey\")."],"noisy_facts":["- shenzhen(\"Zachary\", \"Amy\").","foundling(\"Zachary\").","hisser(\"Zachary\", \"Amy\").","- cheetah(\"Amy\").","idea."],"min_fact_dicts_for_query":["- staging_area(\"Zachary\", \"Amy\").","olla_podrida(\"Zachary\", \"Amy\").","court(\"Zachary\", \"Amy\").","beast(\"Amy\", \"Tracey\")."],"noiseless_rules":["lectures(V0, V2) :- - snakes(V0), court(V0, V1), beast(V1, V2).","superior(V0) :- - crucifix(V3), olla_podrida(V0, V1), not -inside_and_outside(V0, V3).","- snakes(V0) :- - newt(V0), record_jacket(V0, V1), doubloon(V1, V2).","- newt(V0) :- superior(V0), not -pigment(V0).","sleep_in(V0) :- superior(V0), not -pigment(V0).","record_jacket(V0, V0) :- sleep_in(V0).","doubloon(V1, V0) :- record_jacket(V0, V1), not -pigment(V0), not having_fun(V0).","- crucifix(V1) :- - staging_area(V0, V1).","- wild_ass(V0, V1) :- - staging_area(V0, V1).","pigment(V0) :- sodium_cyanide(V0, V1), puzzle(V0, V3), not -slide(V1, V3).","- having_fun(V0) :- - wild_ass(V0, V1), not staging_area(V0, V1)."],"noisy_rules":{"a":["- lectures(V0, V0) :- - superior(V0), not -having_fun(V0).","- lectures(V0, V1) :- newt(V0), not sleep_in(V0), - record_jacket(V0, V1)."],"b":["- slide(V1, V3) :- crucifix(V3), wild_ass(V0, V1), - lectures(V0, V2).","- sleep_in(V0) :- - lectures(V0, V2)."],"c":["having_fun(V0) :- newt(V0), - doubloon(V1, V2), not -wild_ass(V0, V1).","- record_jacket(V0, V1) :- - sleep_in(V0), wild_ass(V0, V1)."],"d":["newt(V0) :- - record_jacket(V0, V1), - doubloon(V1, V2), not -hisser(V0, V1).","- doubloon(V0, V0) :- having_fun(V0), idea."],"e":["- feast_day(V0) :- foundling(V0).","spanish_oak(V0, V1) :- not cheetah(V1), - shenzhen(V0, V1)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_16_8_10_9_11_0.5_1.0_3_3_4","seed":16,"num_facts":11,"num_rules":11,"num_related_predicates":22,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"dish(\"Cheryl\", \"Elizabeth\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- salad_bowl(\"Jennifer\", \"Marissa\").","waist(\"Tracy\", \"Jennifer\").","chicken_roundworm(\"Tracy\", \"Cheryl\", \"Elizabeth\").","pinworm(\"Cheryl\", \"Jennifer\", \"Marissa\").","- pubes(\"Tracy\", \"Cheryl\", \"Elizabeth\").","recording_information(\"Jennifer\", \"Marissa\", \"Elizabeth\").","- porringer(\"Cheryl\", \"Marissa\", \"Elizabeth\").","- fishbowl(\"Cheryl\", \"Marissa\", \"Elizabeth\").","botanical_garden(\"Cheryl\", \"Jennifer\").","monitor(\"Cheryl\", \"Jennifer\").","geodesic_dome(\"Tracy\", \"Cheryl\", \"Elizabeth\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- salad_bowl(\"Jennifer\", \"Marissa\").","waist(\"Tracy\", \"Jennifer\").","chicken_roundworm(\"Tracy\", \"Cheryl\", \"Elizabeth\").","pinworm(\"Cheryl\", \"Jennifer\", \"Marissa\").","- pubes(\"Tracy\", \"Cheryl\", \"Elizabeth\").","recording_information(\"Jennifer\", \"Marissa\", \"Elizabeth\").","- porringer(\"Cheryl\", \"Marissa\", \"Elizabeth\")."],"noiseless_rules":["dish(V1, V4) :- scanner(V1, V3), bowl(V1, V2, V4), not casserole(V1, V2, V4).","scanner(V1, V3) :- nematode(V1, V2, V3), aquarium(V1, V2, V4), not -body_part(V1, V3, V4).","nematode(V1, V2, V3) :- - trichina(V1), chicken_roundworm(V0, V1, V4), pinworm(V1, V2, V3).","bowl(V1, V2, V4) :- - salad_bowl(V2, V3), - porringer(V1, V3, V4), not fishbowl(V1, V3, V4).","aquarium(V1, V2, V4) :- - salad_bowl(V2, V3), - porringer(V1, V3, V4), not fishbowl(V1, V3, V4).","withers(V1, V2) :- - salad_bowl(V2, V3), - porringer(V1, V3, V4), not fishbowl(V1, V3, V4).","area(V0, V1, V3) :- waist(V0, V2), - pubes(V0, V1, V4), recording_information(V2, V3, V4).","- emotional(V0, V1, V4) :- waist(V0, V2), - pubes(V0, V1, V4), recording_information(V2, V3, V4).","- casserole(V1, V2, V2) :- withers(V1, V2), not -botanical_garden(V1, V2), not -monitor(V1, V2).","body_part(V1, V3, V2) :- withers(V1, V2), area(V0, V1, V3).","- trichina(V1) :- - emotional(V0, V1, V4), not pubes(V0, V1, V4), not -geodesic_dome(V0, V1, V4)."],"noisy_rules":{}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_66_8_11_4_5_0.5_1.0_3_2_3","seed":66,"num_facts":7,"num_rules":12,"num_related_predicates":19,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5714285714285716,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"prostitute(\"Todd\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["excitement(\"Jonathan\", \"Cameron\").","- hold_drink(\"Todd\", \"Cameron\").","mattress(\"Todd\", \"Cameron\").","great_time_for_socialization.","- perfection(\"Todd\").","decoupage(\"Todd\").","fairy_tale_for_adults(\"Todd\", \"Cameron\")."],"noisy_facts":["penetration_bomb(\"Cameron\").","- bra(\"Cameron\").","wall_street(\"Nicholas\", \"Cameron\").","- important_person(\"Jonathan\", \"Todd\").","ago(\"Nicholas\").","- foundling(\"Jonathan\", \"Cameron\").","jellyfish(\"Todd\", \"Nicholas\").","horseman(\"Jonathan\", \"Todd\")."],"min_fact_dicts_for_query":["excitement(\"Jonathan\", \"Cameron\").","- hold_drink(\"Todd\", \"Cameron\").","fairy_tale_for_adults(\"Todd\", \"Cameron\")."],"noiseless_rules":["prostitute(V1) :- - canal(V3), - merry(V1, V2), not -race_with_car(V1, V3).","pod(V0, V3) :- excitement(V0, V3), fairy_tale_for_adults(V1, V3).","- handful(V3) :- excitement(V0, V3), fairy_tale_for_adults(V1, V3).","- canal(V3) :- pod(V0, V3), not -crustacean(V0, V3), not ram(V0, V3).","- harp(V0, V0) :- pod(V0, V3), not -crustacean(V0, V3), not ram(V0, V3).","- nonattendance(V1, V3) :- - hold_drink(V1, V3).","- corps(V1) :- - hold_drink(V1, V3).","crustacean(V1, V3) :- - nonattendance(V1, V3), not -mattress(V1, V3).","- ram(V3, V3) :- - handful(V3), - nonattendance(V1, V3), not -great_time_for_socialization.","- very_independant_animals(V1, V1) :- - handful(V3), - nonattendance(V1, V3), not -great_time_for_socialization.","- merry(V1, V1) :- - corps(V1), not perfection(V1), not -decoupage(V1).","race_with_car(V1, V2) :- - harp(V0, V1), - very_independant_animals(V1, V2)."],"noisy_rules":{"a":["- prostitute(V3) :- not -handful(V3), canal(V3).","- prostitute(V1) :- nonattendance(V1, V3), very_independant_animals(V1, V2), - race_with_car(V1, V3)."],"b":["handful(V1) :- - prostitute(V1).","ram(V1, V1) :- corps(V1), not prostitute(V1)."],"c":["- excitement(V1, V1) :- corps(V1).","- mattress(V1, V3) :- - crustacean(V0, V3), - race_with_car(V1, V3)."],"d":["canal(V3) :- handful(V3), harp(V0, V1), not -horseman(V0, V1).","harp(V0, V1) :- - important_person(V0, V1)."],"e":["- broadbill(V0, V3) :- - bra(V3), penetration_bomb(V3), - foundling(V0, V3).","- puppies_and_rabbits(V1, V2) :- ago(V2), jellyfish(V1, V2), wall_street(V2, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_87_8_10_8_11_0.5_1.0_3_2_3","seed":87,"num_facts":11,"num_rules":11,"num_related_predicates":22,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.7142857142857142,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"play_violin(\"Sheila\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- master(\"Lisa\", \"Amanda\").","fishing(\"Lisa\", \"Amanda\").","- lemon(\"Lisa\").","boarding_steamship(\"Lisa\", \"Amanda\").","- jugale(\"Lisa\", \"Amanda\").","customers(\"Lisa\", \"Sheila\").","- wooly(\"Lisa\", \"Anthony\").","trying_cases(\"Lisa\", \"Anthony\").","target_organ(\"Lisa\").","nave(\"Lisa\", \"Anthony\").","clock(\"Sheila\", \"Amanda\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- master(\"Lisa\", \"Amanda\").","fishing(\"Lisa\", \"Amanda\").","boarding_steamship(\"Lisa\", \"Amanda\").","clock(\"Sheila\", \"Amanda\")."],"noiseless_rules":["play_violin(V2) :- deal_with_dog(V2), - burning(V0, V1), not spread_eagle(V1, V2).","deal_with_dog(V2) :- - master(V0, V3), boarding_steamship(V0, V3), clock(V2, V3).","- sewage_system(V0) :- fishing(V0, V3), not -boarding_steamship(V0, V3), not jugale(V0, V3).","- making_fast_food_restaurant_rich(V0, V3) :- fishing(V0, V3), not -boarding_steamship(V0, V3), not jugale(V0, V3).","heart(V0, V0) :- fishing(V0, V3), not -boarding_steamship(V0, V3), not jugale(V0, V3).","- burning(V1, V1) :- - sewage_system(V1), not coat_surface(V1), not soccer_ball(V1).","- spread_eagle(V1, V2) :- getting_to_work_on_time(V0, V1), - enemy(V0, V1), customers(V0, V2).","- coat_surface(V1) :- - lemon(V0), target_organ(V0), nave(V0, V1).","getting_to_work_on_time(V0, V1) :- - lemon(V0), target_organ(V0), nave(V0, V1).","- enemy(V0, V1) :- - making_fast_food_restaurant_rich(V0, V1), not -trying_cases(V0, V1), not -nave(V0, V1).","- soccer_ball(V1) :- heart(V0, V2), - wooly(V0, V1), not -trying_cases(V0, V1)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_28_7_10_6_8_0.5_1.0_5_2_3","seed":28,"num_facts":10,"num_rules":11,"num_related_predicates":21,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" calendar_day(\"Michele\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- ore(\"Tiffany\", \"Michele\").","temporal_property(\"Tiffany\", \"Michele\").","being(\"Tiffany\", \"Andrew\").","- air(\"Andrew\").","home(\"Michele\", \"Tony\").","- houses(\"Michele\", \"Tony\").","selectivity(\"Tiffany\", \"Michele\").","connectivity(\"Tiffany\", \"Tony\").","tactile_property(\"Tiffany\", \"Andrew\").","- size(\"Tiffany\", \"Andrew\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- ore(\"Tiffany\", \"Michele\").","temporal_property(\"Tiffany\", \"Michele\").","being(\"Tiffany\", \"Andrew\").","selectivity(\"Tiffany\", \"Michele\").","connectivity(\"Tiffany\", \"Tony\").","tactile_property(\"Tiffany\", \"Andrew\")."],"noiseless_rules":["- calendar_day(V1) :- date(V1), bedrooms(V1), earning_money(V0, V3), not -provincial_capital(V1, V3).","date(V1) :- - ore(V0, V1), being(V0, V3).","- house(V1, V3) :- - ore(V0, V1), being(V0, V3).","property(V3) :- temporal_property(V0, V1), selectivity(V0, V1), connectivity(V0, V2), tactile_property(V0, V3), not size(V0, V3).","bed(V2) :- temporal_property(V0, V1), selectivity(V0, V1), connectivity(V0, V2), tactile_property(V0, V3), not size(V0, V3).","attribute(V3, V3) :- property(V3), not -state(V3), not -quality(V3).","bedrooms(V1) :- - house(V1, V3), bed(V2), not -attribute(V1, V2), not -home(V1, V2), not houses(V1, V2).","earning_money(V0, V3) :- being(V0, V3).","state(V3) :- being(V0, V3).","provincial_capital(V3, V3) :- state(V3), not air(V3).","quality(V3) :- state(V3), not air(V3)."],"noisy_rules":{}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_53_8_12_8_10_0.5_1.0_5_2_3","seed":53,"num_facts":10,"num_rules":13,"num_related_predicates":23,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.5714285714285716,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"alive(\"Eric\", \"Michael\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["sleeping(\"Luke\", \"Christopher\").","widow(\"Christopher\", \"Eric\").","chicken(\"Christopher\", \"Eric\").","- animal(\"Christopher\", \"Eric\").","- body(\"Christopher\", \"Eric\").","hole(\"Christopher\", \"Eric\").","- trace_element(\"Christopher\", \"Michael\").","nest(\"Christopher\", \"Eric\").","- mattress(\"Christopher\", \"Michael\").","- cot(\"Eric\", \"Michael\")."],"noisy_facts":["mouth(\"Christopher\", \"Eric\").","alabaster(\"Christopher\").","- realization(\"Christopher\", \"Michael\").","- pack(\"Christopher\").","oil(\"Christopher\", \"Eric\")."],"min_fact_dicts_for_query":["sleeping(\"Luke\", \"Christopher\").","widow(\"Christopher\", \"Eric\").","chicken(\"Christopher\", \"Eric\").","hole(\"Christopher\", \"Eric\").","- trace_element(\"Christopher\", \"Michael\").","nest(\"Christopher\", \"Eric\").","- mattress(\"Christopher\", \"Michael\")."],"noiseless_rules":["alive(V2, V3) :- location(V1), rib(V2), - legs(V0, V1), - dead(V1, V2), - trace_element(V1, V3).","location(V1) :- - place(V0, V1), corpse(V1, V2), - address(V1, V3).","- bed(V1, V3) :- sleeping(V0, V1), nest(V1, V2), - mattress(V1, V3), not cot(V2, V3).","relaxing(V1, V2) :- sleeping(V0, V1), nest(V1, V2), - mattress(V1, V3), not cot(V2, V3).","rib(V2) :- - limbs(V0, V2), hole(V1, V2).","- legs(V1, V1) :- - bed(V1, V3), chicken(V1, V2), not animal(V1, V2), not body(V1, V2), not -hole(V1, V2).","- limbs(V1, V2) :- - bed(V1, V3), chicken(V1, V2), not animal(V1, V2), not body(V1, V2), not -hole(V1, V2).","grave(V1, V2) :- - bed(V1, V3), chicken(V1, V2), not animal(V1, V2), not body(V1, V2), not -hole(V1, V2).","- place(V1, V1) :- grave(V1, V2).","burial(V1, V2) :- grave(V1, V2).","- dead(V1, V2) :- widow(V1, V2), not body(V1, V2).","corpse(V1, V2) :- widow(V1, V2), not body(V1, V2).","- address(V1, V3) :- relaxing(V1, V2), burial(V1, V3)."],"noisy_rules":{"a":["- alive(V2, V1) :- dead(V1, V2).","- alive(V2, V2) :- - relaxing(V1, V2), legs(V0, V1), not -limbs(V0, V2), not -dead(V1, V2), not corpse(V1, V2)."],"b":["- chicken(V3, V2) :- - alive(V2, V3).","body(V3, V2) :- - alive(V2, V3)."],"c":["- burial(V1, V1) :- - rib(V2), legs(V0, V1), limbs(V0, V2), not corpse(V1, V2).","dead(V1, V2) :- not grave(V1, V2), - corpse(V1, V2)."],"d":["- sleeping(V1, V1) :- bed(V1, V3), not realization(V1, V3).","- hole(V1, V2) :- bed(V1, V3), not grave(V1, V2), not burial(V1, V3), mouth(V1, V2)."],"e":["- petrol(V2) :- oil(V1, V2).","chinook_salmon(V1) :- alabaster(V1), - pack(V1)."]}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_26_8_12_5_7_0.5_1.0_5_1_2","seed":26,"num_facts":7,"num_rules":13,"num_related_predicates":20,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"tongues(\"Brian\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["external_ear.","reading_material(\"Brian\").","head(\"Brian\").","- tablespoon.","ceiling.","- sense_smell.","- parking_lot(\"Brian\")."],"noisy_facts":["- coat_surfaces.","places_to_go(\"Michelle\").","common_canary(\"Christopher\").","carry_freight_or_cargo(\"Christopher\").","- cheese(\"Michelle\").","- mnemonic(\"Christopher\").","destorying_things_from_high_above.","- buttering(\"Michelle\").","perpetration(\"Michelle\")."],"min_fact_dicts_for_query":["external_ear.","head(\"Brian\")."],"noiseless_rules":["tongues(V2) :- - communicating_artery(V2), not -conchologist(V2), not -salt_mine(V2).","- communicating_artery(V2) :- - hypostasis(V2), not ibero_mesornis(V2), not -whack(V2).","- goats(V2) :- - hypostasis(V2), not ibero_mesornis(V2), not -whack(V2).","- hypostasis(V2) :- external_ear, head(V2), not tablespoon, not -ceiling, not sense_smell.","sever(V2) :- external_ear, head(V2), not tablespoon, not -ceiling, not sense_smell.","conchologist(V2) :- reading_material(V2).","- ibero_mesornis(V2) :- - hypostasis(V2), not pet(V2), not -playing_game(V2), not -head(V2), not parking_lot(V2).","salt_mine(V2) :- - goats(V2), not plantation(V2).","- pet(V1) :- sever(V1).","- plantation(V1) :- sever(V1).","- lift_weights(V1) :- sever(V1).","whack(V0) :- - lift_weights(V0).","playing_game(V0) :- - lift_weights(V0)."],"noisy_rules":{"a":["- tongues(V2) :- hypostasis(V2), not salt_mine(V2), pet(V2), not -plantation(V2), not whack(V2).","- tongues(V2) :- - sever(V1), - conchologist(V2), - salt_mine(V2), lift_weights(V0)."],"b":["lift_weights(V2) :- communicating_artery(V2), goats(V2), not conchologist(V2), not whack(V2), - tongues(V2).","- ceiling(V2) :- goats(V2), not -ibero_mesornis(V2), lift_weights(V0), not playing_game(V2), - tongues(V2)."],"c":["- ceiling(V2) :- communicating_artery(V2), not -goats(V2), pet(V2), not whack(V2).","goats(V2) :- hypostasis(V2), - sever(V1), - salt_mine(V2), not -pet(V2), plantation(V2)."],"d":["pet(V2) :- - sever(V1), - whack(V2), - coat_surfaces.","ibero_mesornis(V2) :- lift_weights(V0), - playing_game(V2), destorying_things_from_high_above."],"e":["- contest(V0) :- not -places_to_go(V0), - buttering(V0), not cheese(V0), not -perpetration(V0).","myrmecophyte(V1) :- not -common_canary(V1), - mnemonic(V1), carry_freight_or_cargo(V1)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_63_9_14_14_17_0.5_1.0_5_2_3","seed":63,"num_facts":17,"num_rules":15,"num_related_predicates":32,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.125,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" vision(\"Amanda\", \"Kelly\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["bicycle_race(\"Kevin\", \"Amanda\").","- fly_helicopter(\"Kevin\", \"Amanda\").","- salisbury_steak(\"Kevin\").","- grampus(\"Kelly\").","specimen_bottle(\"Kevin\", \"Amanda\").","nard(\"Amanda\", \"Kelly\").","lightening(\"Kelly\", \"Patrick\").","- grease(\"Kevin\", \"Amanda\").","- coral_reef(\"Kevin\", \"Patrick\").","palm(\"Kevin\", \"Patrick\").","- giving_money(\"Kelly\", \"Patrick\").","skybox(\"Kevin\", \"Amanda\").","- concerts(\"Kevin\", \"Amanda\").","galloway(\"Kevin\", \"Amanda\").","passenger(\"Kevin\", \"Amanda\").","bangladesh(\"Kevin\", \"Amanda\").","- arm(\"Kevin\", \"Amanda\")."],"noisy_facts":["- repair(\"Kevin\", \"Amanda\").","- eat_lunch(\"Kevin\", \"Kelly\").","- domestic(\"Amanda\", \"Kelly\").","- fir_cone.","acromicria(\"Kevin\", \"Amanda\").","crow(\"Amanda\", \"Kelly\")."],"min_fact_dicts_for_query":["- salisbury_steak(\"Kevin\").","- grampus(\"Kelly\").","specimen_bottle(\"Kevin\", \"Amanda\").","nard(\"Amanda\", \"Kelly\").","lightening(\"Kelly\", \"Patrick\").","- grease(\"Kevin\", \"Amanda\").","- coral_reef(\"Kevin\", \"Patrick\")."],"noiseless_rules":["- vision(V1, V2) :- atrium(V2), - people_gathering(V0, V1), not -up(V0, V1), not -owensboro(V0, V1), not cut(V1, V2).","atrium(V2) :- wood_rat(V0, V2), not -domesticated_animals(V0, V2).","- people_gathering(V0, V1) :- - artificial_respiration(V2), - grease(V0, V1), - coral_reef(V0, V3), not -palm(V0, V3), not giving_money(V2, V3).","euascomycetes(V0, V1) :- - artificial_respiration(V2), - grease(V0, V1), - coral_reef(V0, V3), not -palm(V0, V3), not giving_money(V2, V3).","up(V0, V1) :- bicycle_race(V0, V1).","lying(V1) :- bicycle_race(V0, V1).","- moisture(V1) :- euascomycetes(V0, V1), not important_person(V0, V1), not -good_thing(V0, V1), not -galloway(V0, V1).","owensboro(V0, V1) :- domesticated_animals(V0, V2), bicycle_race(V0, V1), not fly_helicopter(V0, V1).","- cut(V1, V2) :- - salisbury_steak(V0), - grampus(V2), specimen_bottle(V0, V1), nard(V1, V2), lightening(V2, V3).","wood_rat(V0, V2) :- - salisbury_steak(V0), - grampus(V2), specimen_bottle(V0, V1), nard(V1, V2), lightening(V2, V3).","- artificial_respiration(V2) :- - salisbury_steak(V0), - grampus(V2), specimen_bottle(V0, V1), nard(V1, V2), lightening(V2, V3).","- important_person(V0, V1) :- - salisbury_steak(V0), - grampus(V2), specimen_bottle(V0, V1), nard(V1, V2), lightening(V2, V3).","ants(V0, V1) :- - salisbury_steak(V0), - grampus(V2), specimen_bottle(V0, V1), nard(V1, V2), lightening(V2, V3).","domesticated_animals(V0, V1) :- - moisture(V1), skybox(V0, V1), not concerts(V0, V1), not -galloway(V0, V1), not -passenger(V0, V1).","good_thing(V0, V1) :- lying(V1), ants(V0, V1), not -bangladesh(V0, V1), not arm(V0, V1)."],"noisy_rules":{"a":["vision(V1, V2) :- cut(V1, V2).","vision(V1, V2) :- - atrium(V2), important_person(V0, V1)."],"b":["- lying(V1) :- - ants(V0, V1), vision(V1, V2).","grampus(V2) :- - ants(V0, V1), vision(V1, V2)."],"c":["- euascomycetes(V0, V1) :- - atrium(V2), people_gathering(V0, V1), not lying(V1), - owensboro(V0, V1), not -cut(V1, V2).","- good_thing(V0, V1) :- artificial_respiration(V2), important_person(V0, V1)."],"d":["- passenger(V0, V1) :- - up(V0, V1), not -important_person(V0, V1), not repair(V0, V1).","- lightening(V1, V0) :- - up(V0, V1), - fir_cone."],"e":["- brunei_dollar(V1, V2) :- crow(V1, V2).","storage_space(V0, V1) :- acromicria(V0, V1), - eat_lunch(V0, V2), - domestic(V1, V2)."]}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_1_7_6_1_4_0.5_1.0_5_3_4","seed":1,"num_facts":4,"num_rules":7,"num_related_predicates":11,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"P6(\"Mary\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P7(\"Joan\", \"Jennifer\", \"Mary\").","- P8(\"Joan\", \"Jennifer\", \"Mary\").","P9(\"Joan\", \"Jennifer\", \"Mary\").","P10(\"Joan\", \"Mary\")."],"noisy_facts":["- P15(\"David\").","P16(\"Joan\", \"David\").","- P21(\"Joan\", \"Jennifer\").","- P22(\"Jennifer\", \"Mary\").","- P13(\"Joan\", \"Jennifer\", \"Mary\").","P17(\"Joan\", \"Mary\").","- P12(\"Joan\", \"Jennifer\", \"Mary\").","- P24(\"Joan\", \"James\", \"Mary\").","P19(\"Jennifer\", \"James\", \"Mary\").","P18(\"James\", \"Mary\").","P25(\"Joan\", \"David\", \"Mary\").","P23(\"Joan\", \"Jennifer\", \"Mary\")."],"min_fact_dicts_for_query":["- P7(\"Joan\", \"Jennifer\", \"Mary\").","- P8(\"Joan\", \"Jennifer\", \"Mary\")."],"noiseless_rules":["P6(V4) :- P1(V1, V4), - P2(V2, V4), - P5(V0, V1, V4).","- P0(V0, V4) :- - P4(V0, V2, V4).","P1(V1, V4) :- - P5(V0, V1, V4), not P7(V0, V1, V4).","- P2(V0, V4) :- - P3(V0, V1, V4), not P5(V0, V1, V4).","- P3(V0, V1, V4) :- - P8(V0, V1, V4).","- P4(V0, V4, V4) :- - P7(V0, V1, V4), not -P9(V0, V1, V4).","- P5(V0, V0, V4) :- - P0(V0, V4), not -P10(V0, V4)."],"noisy_rules":{"a":["- P6(V4) :- P0(V0, V4), P4(V0, V2, V4).","- P6(V4) :- not -P0(V0, V4), - P1(V1, V4), P3(V0, V1, V4), P5(V0, V1, V4)."],"b":["P4(V0, V0, V4) :- P0(V0, V4), - P1(V1, V4), not -P5(V0, V1, V4), - P6(V4).","P3(V0, V1, V4) :- P0(V0, V4), - P1(V1, V4), not -P3(V0, V1, V4), not P6(V4)."],"c":["P8(V0, V0, V4) :- P0(V0, V4), P2(V2, V4).","- P1(V1, V4) :- P3(V0, V1, V4), P4(V0, V2, V4), P5(V0, V1, V4)."],"d":["P11(V4) :- not -P0(V0, V4), P3(V0, V1, V4), P4(V0, V2, V4), P5(V0, V1, V4), - P12(V0, V1, V4).","- P10(V0, V4) :- - P1(V1, V4), P4(V0, V2, V4), not -P5(V0, V1, V4), not P13(V0, V1, V4)."],"e":["- P14(V0, V4) :- - P15(V3), P16(V0, V3), not -P17(V0, V4), P18(V2, V4), P19(V1, V2, V4).","P20(V0, V1, V2) :- - P21(V0, V1), - P22(V1, V4), P23(V0, V1, V4), - P24(V0, V2, V4), P25(V0, V3, V4)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_18_9_13_10_11_0.5_1.0_3_2_3","seed":18,"num_facts":13,"num_rules":14,"num_related_predicates":27,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"P13(\"Alec\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P14(\"Thomas\", \"Peter\").","- P15(\"Thomas\", \"Alec\").","- P16(\"Thomas\", \"Peter\").","- P17(\"Peter\", \"Alec\").","P18(\"Thomas\", \"Alec\").","- P19(\"Thomas\", \"Alec\").","- P20(\"Thomas\", \"Alyssa\").","P21(\"Thomas\", \"Peter\").","- P22(\"Peter\", \"Alec\").","P23(\"Peter\", \"Alyssa\").","P24(\"Thomas\", \"Alec\").","- P25(\"Alec\", \"Alyssa\").","P26(\"Peter\", \"Alyssa\")."],"noisy_facts":["P28(\"Thomas\", \"Peter\").","- P31(\"Peter\", \"Alec\").","P27(\"Peter\").","- P33(\"Thomas\", \"Alyssa\").","P30(\"Alyssa\").","P32(\"Alec\", \"Alyssa\")."],"min_fact_dicts_for_query":["P14(\"Thomas\", \"Peter\").","- P17(\"Peter\", \"Alec\").","P24(\"Thomas\", \"Alec\").","- P25(\"Alec\", \"Alyssa\")."],"noiseless_rules":["P13(V2) :- P2(V1), - P6(V1, V2), P10(V1, V3).","P0(V1, V2) :- P14(V0, V1), P24(V0, V2), - P25(V2, V3).","P1(V0, V2) :- P14(V0, V1), P24(V0, V2), - P25(V2, V3).","P2(V1) :- P4(V1), - P7(V1, V3), not -P23(V1, V3).","P3(V1, V2) :- - P15(V0, V2), - P17(V1, V2), P26(V1, V3).","P4(V1) :- P0(V1, V2), not -P3(V1, V2), not P22(V1, V2).","- P5(V1, V2) :- P0(V1, V2), not -P3(V1, V2), not P22(V1, V2).","- P6(V1, V2) :- - P5(V1, V2), not -P8(V1, V2), not P11(V1, V2).","- P7(V1, V2) :- - P5(V1, V2), not -P8(V1, V2), not P11(V1, V2).","P8(V1, V2) :- P1(V0, V2), - P17(V1, V2), not -P18(V0, V2).","- P9(V0, V1) :- P1(V0, V2), - P17(V1, V2), not -P18(V0, V2).","P10(V1, V0) :- - P9(V0, V1), not -P12(V0, V1), not -P21(V0, V1).","- P11(V1, V2) :- - P16(V0, V1), - P19(V0, V2), - P20(V0, V3).","P12(V0, V1) :- - P16(V0, V1), - P19(V0, V2), - P20(V0, V3)."],"noisy_rules":{"a":["- P13(V2) :- - P1(V0, V2).","- P13(V2) :- - P3(V1, V2)."],"b":["P16(V2, V2) :- - P13(V2).","P6(V1, V2) :- - P4(V1), - P13(V2)."],"c":["P5(V1, V2) :- - P3(V1, V2).","P17(V1, V2) :- - P3(V1, V2), P7(V1, V3), not P10(V1, V3)."],"d":["P17(V1, V1) :- - P4(V1), not -P27(V1).","P22(V1, V1) :- not P12(V0, V1), P28(V0, V1)."],"e":["- P29(V1, V2) :- P30(V3), - P31(V1, V2), P32(V2, V3).","- P34(V3) :- - P33(V0, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_33_9_11_5_8_0.5_1.0_5_0_1","seed":33,"num_facts":9,"num_rules":12,"num_related_predicates":21,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"P11.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P12.","- P13.","P14.","P15.","- P16.","P17.","P18.","P19.","P20."],"noisy_facts":["- P25.","- P28.","P30.","P31.","P21.","- P24.","- P26.","- P32.","- P29."],"min_fact_dicts_for_query":["P15."],"noiseless_rules":["P11 :- - P1, not -P8, not -P9.","- P0 :- - P6.","- P1 :- - P10, not P12, not -P20.","- P2 :- - P10, not P12, not -P20.","- P3 :- - P13.","- P4 :- - P13.","- P5 :- - P2, not P3, not P7, not P10.","- P6 :- - P4, not P5.","- P7 :- P14, not P16, not -P17, not -P18, not -P19.","P8 :- - P0, not P12.","P9 :- P15, not -P18.","- P10 :- P15, not -P18."],"noisy_rules":{"a":["- P11 :- P2, not P8.","- P11 :- P1, P4, P6, not -P10."],"b":["P4 :- P6, P7, - P11.","P12 :- not -P1, not P8, - P11."],"c":["- P17 :- P1, P5, P7, not P8, - P9.","P6 :- P10."],"d":["P0 :- P6, not P9, not -P21.","- P22 :- P6, not -P7, not -P10."],"e":["P23 :- - P24, not P25, - P26.","P27 :- - P28, - P29, not -P30, not -P31, - P32."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_3_10_10_3_6_0.5_1.0_3_2_3","seed":3,"num_facts":6,"num_rules":11,"num_related_predicates":17,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" P10(\"Mark\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P11(\"Jonathan\", \"Miranda\").","P12(\"Miguel\", \"Mark\").","- P13(\"Miguel\", \"Mark\").","- P14(\"Miranda\", \"Mark\").","- P15(\"Miguel\", \"Mark\").","P16(\"Miguel\", \"Mark\")."],"noisy_facts":["P19(\"Miranda\", \"Mark\").","- P17(\"Miranda\", \"Mark\").","- P23(\"Miguel\", \"Mark\").","P21(\"Miranda\", \"Miguel\")."],"min_fact_dicts_for_query":["- P11(\"Jonathan\", \"Miranda\").","- P14(\"Miranda\", \"Mark\").","- P15(\"Miguel\", \"Mark\")."],"noiseless_rules":["- P10(V3) :- P1(V2, V3), not -P3(V2, V3).","P0(V1, V3) :- - P9(V1, V3).","P1(V1, V3) :- P0(V1, V3), not P6(V1, V3).","- P2(V2, V3) :- - P11(V0, V1), - P14(V1, V3), - P15(V2, V3).","P3(V2, V3) :- P12(V2, V3).","P4(V2, V3) :- P12(V2, V3).","- P5(V2, V3) :- - P8(V2, V3).","- P6(V2, V3) :- P3(V2, V3), not P7(V2, V3).","- P7(V2, V3) :- P4(V2, V3), not -P12(V2, V3).","- P8(V2, V3) :- - P7(V2, V3), not P13(V2, V3), not -P16(V2, V3).","- P9(V3, V3) :- - P2(V2, V3), not P5(V2, V3)."],"noisy_rules":{"a":["P10(V3) :- P9(V1, V3).","P10(V3) :- - P0(V1, V3), - P1(V2, V3), P7(V2, V3)."],"b":["- P16(V2, V3) :- P8(V2, V3), P9(V1, V3), not -P10(V3).","- P4(V2, V3) :- P6(V1, V3), P8(V2, V3), not -P10(V3)."],"c":["- P0(V3, V3) :- P5(V2, V3), P8(V2, V3).","P15(V2, V3) :- - P1(V2, V3), P2(V2, V3), not -P5(V2, V3)."],"d":["- P18(V3) :- P6(V1, V3), not P17(V1, V3).","- P3(V2, V3) :- - P4(V2, V3), not -P6(V1, V3), P19(V1, V3)."],"e":["- P20(V2) :- P21(V1, V2).","- P22(V2, V3) :- - P23(V2, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_49_8_9_9_10_0.5_1.0_5_2_3","seed":49,"num_facts":13,"num_rules":10,"num_related_predicates":23,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8571428571428572,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"exercise_device(\"Michael\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["sensory_organs(\"Robert\").","- loriot(\"Kyle\", \"Michael\").","not_often(\"Kyle\", \"Michael\").","- craft(\"Robert\").","- narrowbody_aircraft(\"Kyle\", \"Michael\").","bully(\"Jonathan\").","- natural_disaster(\"Kyle\", \"Jonathan\").","- dinner(\"Michael\", \"Jonathan\").","catsup_bottle(\"Robert\", \"Jonathan\").","berber(\"Robert\").","- musical_instrument(\"Kyle\", \"Michael\").","sweet_corn(\"Michael\", \"Jonathan\").","- scissors(\"Robert\", \"Jonathan\")."],"noisy_facts":["courthouse(\"Kyle\", \"Jonathan\").","- dorking(\"Michael\", \"Jonathan\").","- saucer(\"Jonathan\").","vibrato(\"Kyle\", \"Jonathan\").","- wagram(\"Robert\", \"Jonathan\").","buttocks(\"Kyle\", \"Robert\").","- horse(\"Kyle\", \"Jonathan\").","kingbolt(\"Kyle\", \"Robert\")."],"min_fact_dicts_for_query":["sensory_organs(\"Robert\").","- loriot(\"Kyle\", \"Michael\").","not_often(\"Kyle\", \"Michael\").","- craft(\"Robert\").","bully(\"Jonathan\").","- natural_disaster(\"Kyle\", \"Jonathan\").","- dinner(\"Michael\", \"Jonathan\").","berber(\"Robert\").","- musical_instrument(\"Kyle\", \"Michael\").","sweet_corn(\"Michael\", \"Jonathan\")."],"noiseless_rules":["exercise_device(V1) :- - bush(V0, V1), - baa(V0, V1), - baby(V0, V2).","- salmon(V0, V3) :- sensory_organs(V2), berber(V2), - musical_instrument(V0, V1), sweet_corn(V1, V3), not scissors(V2, V3).","forest(V1) :- sensory_organs(V2), berber(V2), - musical_instrument(V0, V1), sweet_corn(V1, V3), not scissors(V2, V3).","- bush(V0, V1) :- - loriot(V0, V1).","- motor(V0) :- not_often(V0, V1), not narrowbody_aircraft(V0, V1).","- atmosphere(V0, V1) :- not_often(V0, V1), not narrowbody_aircraft(V0, V1).","- baa(V0, V1) :- - craft(V2), bully(V3), - natural_disaster(V0, V3), - dinner(V1, V3), not -catsup_bottle(V2, V3).","- up(V0) :- - salmon(V0, V3).","- baby(V0, V1) :- forest(V1), - motor(V0), not up(V0), not skyscrapers(V0), not narrowbody_aircraft(V0, V1).","- skyscrapers(V0) :- - atmosphere(V0, V1)."],"noisy_rules":{"a":["- exercise_device(V1) :- salmon(V0, V3), - forest(V1), up(V0), baby(V0, V2).","- exercise_device(V1) :- - forest(V1), motor(V0), baby(V0, V2)."],"b":["bush(V0, V1) :- salmon(V0, V3), up(V0), baby(V0, V2), not -skyscrapers(V0), - exercise_device(V1).","- catsup_bottle(V1, V3) :- salmon(V0, V3), not forest(V1), motor(V0), not -atmosphere(V0, V1), - exercise_device(V1)."],"c":["- not_often(V0, V1) :- - forest(V1), bush(V0, V1), not -atmosphere(V0, V1).","scissors(V0, V0) :- motor(V0)."],"d":["ununquadium(V1) :- - forest(V1), not -bush(V0, V1), atmosphere(V0, V1).","- not_often(V0, V1) :- salmon(V0, V3), - forest(V1), not -vibrato(V0, V3)."],"e":["- walrus(V0, V3) :- not saucer(V3), courthouse(V0, V3).","- white_pelican(V0, V2) :- not -kingbolt(V0, V2), buttocks(V0, V2), not horse(V0, V3), - dorking(V1, V3), not wagram(V2, V3)."]}},"num_min_facts_for_query":10,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_89_9_10_10_13_0.5_1.0_3_0_1","seed":89,"num_facts":13,"num_rules":11,"num_related_predicates":24,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":"advantage.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- small_bug.","- harmful.","- waiter.","strings.","rhinorrhea.","pull.","- expedience.","- state.","space.","hunt_mice.","- asset.","- partying.","- negative."],"noisy_facts":["- kissing.","porte.","- juvenile_court.","- atheist.","- supreme_court.","- aerospace.","fingers.","- weeb."],"min_fact_dicts_for_query":["- small_bug."],"noiseless_rules":["advantage :- good, not -pull, not expedience.","write_computer_software :- favor, not homecourt_advantage, not -hunt_mice.","- attribute :- - small_bug, not state, not -space.","- handicap :- - small_bug, not state, not -space.","leverage :- - harmful, not asset, not negative.","destructive :- - harmful, not asset, not negative.","favor :- - attribute, not -leverage, not -hunt_mice.","unsupportive :- - waiter, not negative.","good :- write_computer_software, not handicap, not superiority.","- superiority :- destructive, not -strings, not -rhinorrhea.","- homecourt_advantage :- unsupportive, not asset, not partying."],"noisy_rules":{"a":["- advantage :- not -superiority, homecourt_advantage.","- advantage :- handicap, - leverage, - favor."],"b":["asset :- - advantage.","- favor :- - advantage."],"c":["small_bug :- not -handicap, superiority.","small_bug :- handicap, not leverage."],"d":["- space :- not leverage, - aerospace, not kissing.","- leverage :- - unsupportive."],"e":["court :- porte, - supreme_court, - juvenile_court.","- play_guitar :- not -fingers, - atheist, not weeb."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_55_10_15_15_15_0.5_1.0_5_2_3","seed":55,"num_facts":17,"num_rules":16,"num_related_predicates":33,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":12,"target_query":"servant(\"Cheyenne\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- hip(\"George\").","- sleeping(\"Jeremiah\").","soccer_ball(\"Cheyenne\").","alum(\"Cheyenne\").","wirer(\"Cheyenne\").","butterflies(\"Jeremiah\", \"Micheal\").","termite(\"Jeremiah\", \"Micheal\").","epauliere(\"Jeremiah\", \"Micheal\").","- hobby(\"Micheal\").","- arietta(\"George\", \"Jeremiah\").","cold(\"Cheyenne\", \"Jeremiah\").","- legal_entity(\"Cheyenne\", \"Micheal\").","head(\"George\", \"Cheyenne\").","brainstem(\"George\", \"Cheyenne\").","graylag(\"George\", \"Jeremiah\").","- ectrodactyly(\"George\", \"Micheal\").","childs_room."],"noisy_facts":["- coastal_diving_bird(\"George\", \"Cheyenne\").","- draw(\"Cheyenne\").","- tinting(\"Cheyenne\", \"Jeremiah\").","- family_court.","divining_rod(\"George\", \"Micheal\").","- levant_cotton(\"Cheyenne\", \"Micheal\")."],"min_fact_dicts_for_query":["- hip(\"George\").","- sleeping(\"Jeremiah\").","- hobby(\"Micheal\").","- arietta(\"George\", \"Jeremiah\").","cold(\"Cheyenne\", \"Jeremiah\").","head(\"George\", \"Cheyenne\").","brainstem(\"George\", \"Cheyenne\").","graylag(\"George\", \"Jeremiah\").","- ectrodactyly(\"George\", \"Micheal\")."],"noiseless_rules":["servant(V1) :- rabbit_ears(V0, V3), - help_reduce_weight(V1, V2), not -butterflies(V2, V3), not -termite(V2, V3), not -epauliere(V2, V3).","humanitarian(V3) :- - hip(V0), head(V0, V1), brainstem(V0, V1), graylag(V0, V2), - ectrodactyly(V0, V3).","light_rain(V0, V1) :- - sleeping(V2), - hobby(V3), - arietta(V0, V2), cold(V1, V2), not legal_entity(V1, V3).","- wool(V1) :- - sleeping(V2), - hobby(V3), - arietta(V0, V2), cold(V1, V2), not legal_entity(V1, V3).","tree_rodent(V2) :- - sleeping(V2), - hobby(V3), - arietta(V0, V2), cold(V1, V2), not legal_entity(V1, V3).","- width(V0, V1) :- - sleeping(V2), - hobby(V3), - arietta(V0, V2), cold(V1, V2), not legal_entity(V1, V3).","- diaper(V1) :- - sleeping(V2), - hobby(V3), - arietta(V0, V2), cold(V1, V2), not legal_entity(V1, V3).","store_shelf(V1, V1) :- light_rain(V0, V1), not -childs_room.","- bib(V1, V0) :- light_rain(V0, V1), not -childs_room.","- web(V0, V1) :- light_rain(V0, V1), not -childs_room.","- chincapin(V1, V1) :- - wool(V1), store_shelf(V1, V2), not -soccer_ball(V1), not -alum(V1), not -wirer(V1).","layer(V0, V3) :- - embellishment(V0, V2), growing_garden(V2, V3).","- embellishment(V2, V2) :- tree_rodent(V2).","rabbit_ears(V0, V3) :- humanitarian(V3), - width(V0, V1), not bib(V1, V3).","- help_reduce_weight(V3, V0) :- - web(V0, V3), not chincapin(V0, V3), not -layer(V0, V3).","growing_garden(V1, V1) :- - diaper(V1)."],"noisy_rules":{"a":["- servant(V2) :- - tree_rodent(V2).","- servant(V0) :- embellishment(V0, V2)."],"b":["- epauliere(V1, V1) :- - servant(V1).","- cold(V1, V2) :- diaper(V1), - store_shelf(V1, V2), embellishment(V0, V2), - servant(V1)."],"c":["- graylag(V1, V2) :- - humanitarian(V3), - tree_rodent(V2), - store_shelf(V1, V2), not -help_reduce_weight(V1, V2), not growing_garden(V2, V3).","- wirer(V1) :- diaper(V1), help_reduce_weight(V1, V2)."],"d":["- brainstem(V1, V1) :- - tree_rodent(V2), diaper(V1), not family_court.","web(V3, V3) :- - growing_garden(V2, V3)."],"e":["- having_food_to_eat(V1) :- not draw(V1), not coastal_diving_bird(V0, V1), divining_rod(V0, V3), - levant_cotton(V1, V3).","- bound(V2) :- - tinting(V1, V2)."]}},"num_min_facts_for_query":9,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_76_9_12_10_11_0.5_1.0_5_3_4","seed":76,"num_facts":14,"num_rules":13,"num_related_predicates":27,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.375,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P12(\"Charles\", \"Ricardo\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P13(\"Tony\", \"Lindsey\", \"Ricardo\").","P14(\"Tony\", \"Charles\").","- P15(\"Charles\", \"Samantha\", \"Ricardo\").","P16(\"Charles\", \"Samantha\", \"Ricardo\").","- P17(\"Charles\", \"Samantha\", \"Ricardo\").","P18(\"Charles\", \"Samantha\", \"Ricardo\").","P19(\"Charles\", \"Samantha\", \"Ricardo\").","P20(\"Charles\", \"Samantha\", \"Ricardo\").","P21(\"Charles\", \"Lindsey\").","P22(\"Samantha\", \"Ricardo\").","P23(\"Charles\", \"Lindsey\").","- P24(\"Samantha\", \"Lindsey\").","- P25(\"Tony\", \"Charles\", \"Ricardo\").","P26(\"Charles\", \"Samantha\", \"Lindsey\")."],"noisy_facts":["- P27(\"Tony\", \"Lindsey\", \"Ricardo\").","- P28(\"Charles\", \"Samantha\").","P30(\"Tony\", \"Samantha\", \"Lindsey\").","P32(\"Charles\", \"Samantha\")."],"min_fact_dicts_for_query":["- P13(\"Tony\", \"Lindsey\", \"Ricardo\").","- P15(\"Charles\", \"Samantha\", \"Ricardo\").","P18(\"Charles\", \"Samantha\", \"Ricardo\")."],"noiseless_rules":["P12(V1, V4) :- - P5(V1, V3), - P6(V0, V2, V4), not -P11(V1, V2, V3).","- P0(V2, V3) :- - P1(V4), - P3(V4), - P9(V1, V2), P21(V1, V3), not -P22(V2, V4).","- P1(V4) :- - P13(V0, V3, V4), P18(V1, V2, V4).","- P2(V0, V3, V4) :- - P13(V0, V3, V4), P18(V1, V2, V4).","- P3(V4) :- P14(V0, V1), P23(V1, V3), - P24(V2, V3), - P25(V0, V1, V4), not -P26(V1, V2, V3).","P4(V1, V2, V3) :- P14(V0, V1), P23(V1, V3), - P24(V2, V3), - P25(V0, V1, V4), not -P26(V1, V2, V3).","- P5(V1, V2) :- - P15(V1, V2, V4), not P17(V1, V2, V4), not -P18(V1, V2, V4), not -P19(V1, V2, V4), not -P20(V1, V2, V4).","- P6(V0, V0, V4) :- - P2(V0, V3, V4), not -P8(V0, V3, V4).","P7(V4) :- - P2(V0, V3, V4), not -P8(V0, V3, V4).","P8(V2, V3, V1) :- P4(V1, V2, V3).","- P9(V1, V2) :- P16(V1, V2, V4).","- P10(V1, V2, V4) :- P16(V1, V2, V4).","P11(V1, V2, V3) :- - P0(V2, V3), P7(V4), - P10(V1, V2, V4)."],"noisy_rules":{"a":["- P12(V3, V4) :- P1(V4), - P7(V4), - P8(V0, V3, V4).","- P12(V1, V4) :- P3(V4), P6(V0, V2, V4), - P8(V0, V3, V4), P10(V1, V2, V4)."],"b":["- P14(V4, V1) :- - P12(V1, V4).","- P18(V1, V2, V4) :- P0(V2, V3), P2(V0, V3, V4), P6(V0, V2, V4), - P12(V1, V4)."],"c":["- P4(V1, V2, V3) :- P0(V2, V3), P3(V4), - P11(V1, V2, V3).","P5(V1, V3) :- P1(V4), - P7(V4), P9(V1, V2), P10(V1, V2, V4), - P11(V1, V2, V3)."],"d":["P10(V0, V0, V4) :- P2(V0, V3, V4), P3(V4), not P7(V4), not P27(V0, V3, V4).","P3(V4) :- P1(V4), P9(V1, V2), not -P10(V1, V2, V4), not P28(V1, V2)."],"e":["- P29(V2, V3) :- P30(V0, V2, V3).","P31(V1, V2) :- P32(V1, V2)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_39_10_10_9_10_0.5_1.0_3_2_3","seed":39,"num_facts":14,"num_rules":11,"num_related_predicates":25,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" donor_card(\"Tyler\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["religion(\"Maureen\").","deflagration(\"Tyler\").","destroy_forests(\"Ricardo\", \"Tyler\").","- movable_feast(\"Madison\", \"Maureen\").","- longwool(\"Ricardo\").","- upper_mantle(\"Madison\", \"Tyler\").","- green(\"Madison\", \"Tyler\").","leotard(\"Ricardo\", \"Tyler\").","maraco(\"Madison\", \"Maureen\").","- growing_cornucopia(\"Madison\", \"Tyler\").","post_horse(\"Maureen\", \"Tyler\").","- bus_seats(\"Maureen\", \"Tyler\").","- female(\"Madison\", \"Tyler\").","fun(\"Tyler\")."],"noisy_facts":["- tooth(\"Ricardo\", \"Tyler\").","gasman(\"Madison\", \"Ricardo\").","cottonseed(\"Madison\", \"Ricardo\").","- cockpit(\"Madison\", \"Tyler\").","glamor(\"Madison\", \"Ricardo\").","cruise_missile(\"Ricardo\").","- spindlelegs(\"Madison\", \"Tyler\").","- quick_bread(\"Ricardo\", \"Maureen\").","dime(\"Madison\", \"Tyler\")."],"min_fact_dicts_for_query":["religion(\"Maureen\").","destroy_forests(\"Ricardo\", \"Tyler\").","maraco(\"Madison\", \"Maureen\").","- growing_cornucopia(\"Madison\", \"Tyler\")."],"noiseless_rules":["- donor_card(V3) :- makeing_music(V3), dark_eyed_junco(V0, V2), not female(V0, V3).","balloon(V0, V3) :- - tender(V0), vestibular_gland(V3), not upper_mantle(V0, V3).","makeing_music(V3) :- religion(V2), maraco(V0, V2), - growing_cornucopia(V0, V3).","- tender(V0) :- religion(V2), maraco(V0, V2), - growing_cornucopia(V0, V3).","dark_eyed_junco(V0, V0) :- balloon(V0, V3), not -first(V0, V3), not primary_colour(V0, V3).","use_with_meals(V3, V3) :- vestibular_gland(V3), not -deflagration(V3), not -fun(V3).","vestibular_gland(V3) :- destroy_forests(V1, V3).","first(V0, V3) :- use_with_meals(V0, V3), not -killing_enemy(V0, V3).","killing_enemy(V0, V3) :- - chicken_egg(V0, V3).","- primary_colour(V0, V3) :- - movable_feast(V0, V2), post_horse(V2, V3), not bus_seats(V2, V3).","- chicken_egg(V0, V3) :- - longwool(V1), - green(V0, V3), not -leotard(V1, V3)."],"noisy_rules":{"a":["donor_card(V3) :- - use_with_meals(V0, V3).","donor_card(V0) :- - dark_eyed_junco(V0, V2)."],"b":["primary_colour(V0, V3) :- tender(V0), not vestibular_gland(V3), donor_card(V3).","- dark_eyed_junco(V3, V3) :- donor_card(V3)."],"c":["- dark_eyed_junco(V0, V0) :- not vestibular_gland(V3), - killing_enemy(V0, V3).","primary_colour(V0, V3) :- - balloon(V0, V3), not vestibular_gland(V3)."],"d":["bus_seats(V0, V3) :- - use_with_meals(V0, V3), dime(V0, V3), not cockpit(V0, V3).","movable_feast(V0, V3) :- - balloon(V0, V3), - spindlelegs(V0, V3)."],"e":["- snakebird(V2) :- cottonseed(V0, V1), glamor(V0, V1), - quick_bread(V1, V2).","- outside(V1) :- cruise_missile(V1), gasman(V0, V1), - tooth(V1, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_81_6_6_5_7_0.5_1.0_3_2_3","seed":81,"num_facts":7,"num_rules":7,"num_related_predicates":14,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" P6(\"Shannon\", \"Laura\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P7(\"Laura\").","- P8(\"Shannon\", \"Laura\").","P9(\"Shannon\", \"Kathleen\").","- P10(\"Shannon\", \"Kathleen\").","- P11(\"Shannon\", \"Laura\").","- P12(\"Shannon\", \"Laura\").","P13(\"Kathleen\", \"Laura\")."],"noisy_facts":["- P20(\"Kathleen\", \"Laura\").","- P21(\"Kathleen\", \"Laura\").","P15(\"Shannon\", \"Laura\").","P19(\"Shannon\", \"Laura\").","- P17(\"Pamela\", \"Kathleen\")."],"min_fact_dicts_for_query":["P7(\"Laura\").","- P8(\"Shannon\", \"Laura\").","- P11(\"Shannon\", \"Laura\").","P13(\"Kathleen\", \"Laura\")."],"noiseless_rules":["- P6(V1, V3) :- P0(V1, V3), P1(V2, V3), not P2(V2, V3).","P0(V1, V3) :- P3(V1, V3), not P12(V1, V3).","P1(V2, V3) :- P7(V3), - P11(V1, V3), P13(V2, V3).","- P2(V2, V3) :- P5(V2, V3).","P3(V1, V3) :- - P8(V1, V3), not P11(V1, V3), not P12(V1, V3).","P4(V1, V1) :- - P8(V1, V3), not P11(V1, V3), not P12(V1, V3).","P5(V2, V2) :- P4(V1, V2), not -P9(V1, V2), not P10(V1, V2)."],"noisy_rules":{"a":["P6(V1, V3) :- - P0(V1, V3), P2(V2, V3), not P4(V1, V2).","P6(V1, V3) :- - P0(V1, V3)."],"b":["- P3(V1, V3) :- - P0(V1, V3), P2(V2, V3), P6(V1, V3).","P2(V2, V3) :- - P1(V2, V3), P6(V1, V3)."],"c":["P11(V1, V3) :- P2(V2, V3), not P3(V1, V3), - P4(V1, V2).","- P13(V2, V3) :- P2(V2, V3), - P4(V1, V2)."],"d":["P14(V1, V3) :- not P3(V1, V3), - P5(V2, V3), P15(V1, V3).","- P9(V2, V2) :- - P1(V2, V3)."],"e":["P16(V0, V2) :- - P17(V0, V2).","P18(V1, V2) :- P19(V1, V3), - P20(V2, V3), - P21(V2, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_2_6_8_2_4_0.5_1.0_3_1_2","seed":2,"num_facts":4,"num_rules":9,"num_related_predicates":13,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" P8(\"Caroline\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P9.","P10(\"Caroline\").","P11(\"Caroline\").","P12(\"Caroline\")."],"noisy_facts":["- P19(\"Caroline\").","P22(\"Cynthia\").","P18(\"Caroline\").","- P17(\"Caroline\").","P15(\"Caroline\").","P21(\"Cynthia\").","- P14(\"Caroline\")."],"min_fact_dicts_for_query":["P9.","P11(\"Caroline\")."],"noiseless_rules":["- P8(V0) :- - P2(V0), not P4(V0), not -P10(V0).","- P0(V0) :- P9, P11(V0).","P1(V0) :- P9, P11(V0).","- P2(V0) :- - P0(V0), not P5(V0), not -P6(V0).","- P3(V0) :- - P0(V0), not P5(V0), not -P6(V0).","- P4(V0) :- - P3(V0), not P7(V0).","- P5(V0) :- P10(V0), not -P11(V0), not -P12(V0).","P6(V1) :- P1(V1).","- P7(V1) :- P1(V1)."],"noisy_rules":{"a":["P8(V1) :- - P1(V1).","P8(V0) :- P4(V0)."],"b":["P0(V0) :- P2(V0), P3(V0), P8(V0).","P0(V0) :- P8(V0)."],"c":["- P6(V0) :- P3(V0), not -P4(V0).","P0(V0) :- P2(V0)."],"d":["P13(V0) :- - P14(V0).","- P9(V0) :- P3(V0), P15(V0)."],"e":["P16(V0) :- - P17(V0), P18(V0), not P19(V0).","- P20(V1) :- P21(V1), not -P22(V1)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_2_8_12_9_12_0.5_1.0_5_1_2","seed":2,"num_facts":11,"num_rules":13,"num_related_predicates":24,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"P12(\"William\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P13.","P14(\"William\").","P15(\"William\").","- P16(\"William\").","- P17(\"William\").","P18(\"William\").","P19(\"William\").","P20(\"William\").","P21(\"William\").","P22(\"William\").","P23(\"William\")."],"noisy_facts":["- P33(\"William\").","- P26(\"William\").","- P29(\"William\").","- P25(\"William\").","- P27(\"William\").","P24(\"William\").","P32(\"William\").","- P31(\"William\")."],"min_fact_dicts_for_query":["- P13.","P21(\"William\")."],"noiseless_rules":["P12(V0) :- P0(V0), not P4(V0), not -P6(V0), not P17(V0).","P0(V0) :- - P13, P21(V0).","P1(V0) :- - P13, P21(V0).","- P2(V0) :- - P13, P21(V0).","P3(V0) :- - P7(V0), not -P15(V0), not P16(V0), not P17(V0), not -P18(V0).","- P4(V0) :- - P5(V0), not P9(V0), not -P19(V0), not -P20(V0), not -P21(V0).","- P5(V0) :- P3(V0), not P8(V0), not P11(V0).","P6(V0) :- P1(V0), not P9(V0), not -P10(V0).","- P7(V0) :- P1(V0), not P9(V0), not -P10(V0).","- P8(V0) :- P1(V0), not P9(V0), not -P10(V0).","- P9(V0) :- P14(V0), not -P22(V0), not -P23(V0).","P10(V0) :- P14(V0), not -P22(V0), not -P23(V0).","- P11(V1) :- - P2(V1)."],"noisy_rules":{"a":["- P12(V0) :- P8(V0).","- P12(V0) :- P2(V1), P4(V0), P5(V0), not -P8(V0)."],"b":["- P3(V0) :- not -P4(V0), not -P5(V0), - P12(V0).","- P18(V0) :- - P12(V0)."],"c":["- P3(V0) :- P7(V0).","- P14(V0) :- P2(V1), not -P4(V0), - P6(V0), P7(V0), not -P8(V0)."],"d":["- P23(V0) :- not -P7(V0), P24(V0).","- P15(V0) :- not P1(V0), not P3(V0), P5(V0), P8(V0), - P25(V0)."],"e":["P28(V0) :- - P26(V0), not P27(V0), - P29(V0).","- P30(V0) :- not P31(V0), not -P32(V0), - P33(V0)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_11_8_11_6_9_0.5_1.0_5_2_3","seed":11,"num_facts":10,"num_rules":12,"num_related_predicates":22,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P11(\"Kathleen\", \"Hailey\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P12(\"Bobby\").","- P13(\"Bobby\", \"Hailey\").","- P14.","P15(\"Kathleen\", \"Hailey\").","P16(\"Bobby\", \"Justin\").","- P17(\"Kathleen\", \"Hailey\").","P18(\"Kathleen\", \"Hailey\").","P19(\"Hailey\", \"Justin\").","P20(\"Kathleen\", \"Hailey\").","P21(\"Kathleen\", \"Justin\")."],"noisy_facts":["- P29(\"Kathleen\", \"Justin\").","- P25(\"Kathleen\", \"Hailey\").","P27(\"Kathleen\").","P22(\"Bobby\", \"Hailey\").","- P28(\"Bobby\", \"Kathleen\").","P23(\"Bobby\", \"Hailey\")."],"min_fact_dicts_for_query":["- P12(\"Bobby\").","P15(\"Kathleen\", \"Hailey\").","P16(\"Bobby\", \"Justin\").","- P17(\"Kathleen\", \"Hailey\")."],"noiseless_rules":["P11(V1, V2) :- - P0(V0), P2(V0), - P4(V1), - P10(V0, V2), not -P15(V1, V2).","- P0(V2) :- - P4(V1), - P8(V1, V2).","P1(V1) :- - P4(V1), - P8(V1, V2).","P2(V3) :- P1(V3), not -P3(V3), not P5(V3), not P9(V3).","P3(V3) :- P6(V2), P7(V0, V2), P20(V1, V2), P21(V1, V3).","- P4(V1) :- - P12(V0), P16(V0, V3), - P17(V1, V2), not -P18(V1, V2), not -P19(V2, V3).","- P5(V3) :- - P12(V0), P16(V0, V3), - P17(V1, V2), not -P18(V1, V2), not -P19(V2, V3).","P6(V2) :- - P12(V0), P16(V0, V3), - P17(V1, V2), not -P18(V1, V2), not -P19(V2, V3).","P7(V0, V2) :- - P13(V0, V2).","- P8(V1, V1) :- - P4(V1), not P14.","- P9(V1) :- - P4(V1), not P14.","- P10(V1, V2) :- P15(V1, V2)."],"noisy_rules":{"a":["- P11(V1, V2) :- - P3(V3), P4(V1), not -P5(V3), - P7(V0, V2).","- P11(V3, V3) :- - P1(V3), not -P5(V3)."],"b":["- P2(V2) :- P5(V3), - P11(V1, V2).","P10(V0, V2) :- P0(V0), - P3(V3), - P6(V2), P10(V0, V2), - P11(V1, V2)."],"c":["- P19(V2, V2) :- - P2(V0), P4(V1), - P7(V0, V2).","- P16(V0, V3) :- - P2(V0), - P3(V3), - P6(V2), P8(V1, V2), P9(V3)."],"d":["- P7(V0, V2) :- P10(V0, V2).","P14(V2, V2) :- not P7(V0, V2), P22(V0, V2), not -P23(V0, V2)."],"e":["- P24(V1, V2) :- - P25(V1, V2).","P26(V1, V3) :- not -P27(V1), - P28(V0, V1), - P29(V1, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_75_9_12_5_7_0.5_1.0_3_3_4","seed":75,"num_facts":9,"num_rules":13,"num_related_predicates":22,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P12(\"Dean\", \"Jennifer\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P13(\"Tina\", \"Dean\", \"Jennifer\").","- P14(\"Bianca\", \"Dean\", \"Jennifer\").","P15(\"David\", \"Bianca\", \"Jennifer\").","- P16(\"Bianca\", \"Dean\", \"Jennifer\").","P17(\"Tina\", \"Bianca\", \"Jennifer\").","P18(\"Bianca\", \"Dean\", \"Jennifer\").","P19(\"Bianca\", \"Dean\", \"Jennifer\").","- P20(\"Bianca\", \"Dean\", \"Jennifer\").","- P21(\"Dean\", \"Jennifer\")."],"noisy_facts":["- P23(\"David\", \"Dean\", \"Jennifer\").","- P22(\"David\", \"Dean\", \"Jennifer\").","- P29(\"David\", \"Bianca\", \"Jennifer\").","P31(\"Tina\", \"Dean\", \"Jennifer\").","- P25(\"Tina\").","- P26(\"Bianca\", \"Dean\").","- P27(\"Tina\", \"Bianca\", \"Jennifer\").","- P30(\"David\", \"Bianca\", \"Jennifer\")."],"min_fact_dicts_for_query":["- P13(\"Tina\", \"Dean\", \"Jennifer\").","- P14(\"Bianca\", \"Dean\", \"Jennifer\").","P15(\"David\", \"Bianca\", \"Jennifer\").","P17(\"Tina\", \"Bianca\", \"Jennifer\").","P18(\"Bianca\", \"Dean\", \"Jennifer\").","P19(\"Bianca\", \"Dean\", \"Jennifer\")."],"noiseless_rules":["- P12(V3, V4) :- P3(V3, V4), P7(V0, V2, V4), not P9(V0, V2, V4).","P0(V2, V4) :- - P13(V1, V3, V4), P19(V2, V3, V4).","P1(V3, V4) :- - P13(V1, V3, V4), P19(V2, V3, V4).","- P2(V1) :- - P13(V1, V3, V4), P19(V2, V3, V4).","P3(V3, V4) :- P5(V0, V3, V4), P6(V1, V3, V4), - P8(V2, V3, V4).","- P4(V4, V2, V2) :- P0(V2, V4), not -P10(V2, V4).","P5(V3, V3, V4) :- - P14(V2, V3, V4), not -P19(V2, V3, V4), not P20(V2, V3, V4).","P6(V3, V3, V4) :- P1(V3, V4), not P21(V3, V4).","P7(V0, V2, V4) :- P15(V0, V2, V4), P17(V1, V2, V4), P18(V2, V3, V4).","- P8(V2, V3, V4) :- P15(V0, V2, V4), P17(V1, V2, V4), P18(V2, V3, V4).","- P9(V3, V2, V1) :- - P2(V1), - P4(V1, V2, V3), not P11(V1).","P10(V2, V4) :- - P16(V2, V3, V4), not -P18(V2, V3, V4).","- P11(V3) :- - P16(V2, V3, V4), not -P18(V2, V3, V4)."],"noisy_rules":{"a":["P12(V3, V4) :- - P6(V1, V3, V4), P9(V0, V2, V4).","P12(V3, V4) :- - P1(V3, V4), - P5(V0, V3, V4), - P10(V2, V4)."],"b":["P11(V4) :- P9(V0, V2, V4), P12(V3, V4).","P13(V4, V3, V4) :- P12(V3, V4)."],"c":["- P6(V1, V1, V1) :- P2(V1).","- P5(V4, V3, V4) :- - P0(V2, V4), P4(V1, V2, V3), not -P8(V2, V3, V4)."],"d":["- P3(V3, V4) :- - P5(V0, V3, V4), not P22(V0, V3, V4).","P9(V0, V0, V4) :- - P5(V0, V3, V4), - P23(V0, V3, V4)."],"e":["P24(V3, V4) :- - P25(V1), - P26(V2, V3), - P27(V1, V2, V4).","P28(V1, V3, V4) :- - P29(V0, V2, V4), - P30(V0, V2, V4), P31(V1, V3, V4)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_90_9_10_10_11_0.5_1.0_3_2_3","seed":90,"num_facts":15,"num_rules":11,"num_related_predicates":26,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P10(\"Vanessa\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P11(\"Stephanie\", \"Joshua\").","- P12(\"Vanessa\").","P13(\"Jennifer\", \"Joshua\").","P14(\"Joshua\").","P15(\"Stephanie\", \"Jennifer\").","- P16(\"Joshua\", \"Vanessa\").","- P17(\"Stephanie\", \"Joshua\").","- P18(\"Jennifer\", \"Vanessa\").","- P19(\"Joshua\", \"Vanessa\").","- P20(\"Stephanie\", \"Joshua\").","P21(\"Joshua\", \"Vanessa\").","P22(\"Jennifer\", \"Joshua\").","P23(\"Jennifer\", \"Joshua\").","- P24(\"Stephanie\", \"Jennifer\").","- P25(\"Stephanie\", \"Vanessa\")."],"noisy_facts":["P31(\"Stephanie\", \"Joshua\").","- P26(\"Jennifer\", \"Joshua\").","- P33(\"Jennifer\", \"Vanessa\").","- P32(\"Jennifer\", \"Joshua\").","- P30(\"Joshua\", \"Vanessa\").","- P28(\"Stephanie\", \"Jennifer\").","- P29(\"Jennifer\", \"Vanessa\")."],"min_fact_dicts_for_query":["- P11(\"Stephanie\", \"Joshua\").","- P12(\"Vanessa\").","P13(\"Jennifer\", \"Joshua\").","P14(\"Joshua\").","P15(\"Stephanie\", \"Jennifer\").","- P18(\"Jennifer\", \"Vanessa\").","- P20(\"Stephanie\", \"Joshua\").","P21(\"Joshua\", \"Vanessa\").","P23(\"Jennifer\", \"Joshua\").","- P24(\"Stephanie\", \"Jennifer\")."],"noiseless_rules":["- P10(V3) :- - P6(V1), - P7(V0, V1), - P8(V0, V3).","P0(V1, V2) :- - P11(V0, V2), P23(V1, V2).","- P1(V0, V2) :- P3(V0, V3), - P4(V1, V2), not P16(V2, V3).","- P2(V1, V2) :- P0(V1, V2), not -P5(V1, V2), not P9(V1, V2).","P3(V0, V3) :- - P12(V3), - P24(V0, V1), not P25(V0, V3).","- P4(V1, V2) :- P13(V1, V2), not -P22(V1, V2), not -P23(V1, V2).","P5(V1, V2) :- P13(V1, V2), not -P22(V1, V2), not -P23(V1, V2).","- P6(V1) :- P14(V2), - P18(V1, V3), not P19(V2, V3).","- P7(V0, V1) :- - P1(V0, V2), - P2(V1, V2), not P17(V0, V2).","- P8(V0, V3) :- P15(V0, V1), - P20(V0, V2), P21(V2, V3).","- P9(V1, V2) :- P15(V0, V1), - P20(V0, V2), P21(V2, V3)."],"noisy_rules":{"a":["P10(V3) :- - P0(V1, V2), P8(V0, V3).","P10(V1) :- P1(V0, V2), P4(V1, V2), not P5(V1, V2)."],"b":["- P14(V2) :- - P0(V1, V2), P10(V3).","P6(V3) :- P10(V3)."],"c":["P20(V0, V2) :- P2(V1, V2), P7(V0, V1).","P1(V2, V2) :- - P5(V1, V2)."],"d":["P9(V2, V2) :- P1(V0, V2).","P9(V1, V2) :- - P5(V1, V2), - P26(V1, V2)."],"e":["P27(V1) :- - P28(V0, V1), - P29(V1, V3), - P30(V2, V3).","P34(V2, V3) :- P31(V0, V2), not P32(V1, V2), - P33(V1, V3)."]}},"num_min_facts_for_query":10,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_70_8_9_8_9_0.5_1.0_5_2_3","seed":70,"num_facts":11,"num_rules":10,"num_related_predicates":21,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8571428571428572,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"bitter_chocolate(\"John\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- issue(\"John\", \"Mary\").","- balloon(\"Brian\").","- school_group(\"Brian\", \"John\").","- waiting_for_friends(\"Brian\", \"Mary\").","- reviewing_book(\"Brian\", \"Matthew\").","- learn_to_speak(\"John\", \"Matthew\").","bring_sorrow(\"John\", \"Matthew\").","blasting_cap(\"John\", \"Mary\").","musical_performance(\"Mary\", \"Matthew\").","winter_in_dens(\"Mary\", \"Matthew\").","- body_part(\"Mary\", \"Matthew\")."],"noisy_facts":["ivory_gull(\"John\", \"Mary\").","- bushy_tail(\"John\", \"Mary\").","episode(\"Mary\", \"Matthew\").","- stylus(\"Mary\", \"Matthew\").","fall_down(\"Mary\", \"Matthew\").","thick_skin(\"Brian\", \"Matthew\").","gravitation(\"Brian\", \"John\").","rule(\"Brian\", \"Mary\")."],"min_fact_dicts_for_query":["- issue(\"John\", \"Mary\").","- balloon(\"Brian\").","- waiting_for_friends(\"Brian\", \"Mary\").","- reviewing_book(\"Brian\", \"Matthew\").","- learn_to_speak(\"John\", \"Matthew\")."],"noiseless_rules":["bitter_chocolate(V1) :- - oxidation(V0, V1), jerkin(V0, V3).","getting_entertained(V1, V2) :- - issue(V1, V2).","- oxidation(V2, V1) :- getting_entertained(V1, V2), not -interest(V1, V2), not ham(V1, V2).","interest(V1, V2) :- - balloon(V0), - waiting_for_friends(V0, V2), - reviewing_book(V0, V3), - learn_to_speak(V1, V3), not -bring_sorrow(V1, V3).","- dish(V0, V2) :- - balloon(V0), - waiting_for_friends(V0, V2), - reviewing_book(V0, V3), - learn_to_speak(V1, V3), not -bring_sorrow(V1, V3).","- hammer(V1) :- - balloon(V0), - waiting_for_friends(V0, V2), - reviewing_book(V0, V3), - learn_to_speak(V1, V3), not -bring_sorrow(V1, V3).","tick(V2, V2) :- - dish(V0, V2).","- ham(V1, V2) :- getting_entertained(V1, V2), not hammer(V1).","jerkin(V2, V3) :- tick(V2, V3), not bevel(V2, V3).","- bevel(V2, V3) :- - school_group(V0, V1), blasting_cap(V1, V2), musical_performance(V2, V3), not -winter_in_dens(V2, V3), not body_part(V2, V3)."],"noisy_rules":{"a":["- bitter_chocolate(V0) :- dish(V0, V2).","- bitter_chocolate(V1) :- - getting_entertained(V1, V2), - jerkin(V0, V3)."],"b":["balloon(V0) :- - getting_entertained(V1, V2), - interest(V1, V2), hammer(V1), - jerkin(V0, V3), not bitter_chocolate(V1).","learn_to_speak(V1, V0) :- oxidation(V0, V1), - bitter_chocolate(V1)."],"c":["dish(V0, V2) :- - getting_entertained(V1, V2), - interest(V1, V2), hammer(V1), ham(V1, V2), - jerkin(V0, V3).","- tick(V2, V3) :- hammer(V1), ham(V1, V2), - jerkin(V0, V3), not -bevel(V2, V3)."],"d":["issue(V1, V2) :- ham(V1, V2), bevel(V2, V3), not bushy_tail(V1, V2).","- musical_performance(V2, V2) :- ham(V1, V2)."],"e":["- summer_treat(V0, V1) :- gravitation(V0, V1), not -rule(V0, V2), not -thick_skin(V0, V3), fall_down(V2, V3), episode(V2, V3).","- coelenteron(V1, V2) :- ivory_gull(V1, V2), - stylus(V2, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_52_10_14_13_13_0.5_1.0_5_2_3","seed":52,"num_facts":18,"num_rules":15,"num_related_predicates":33,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.888888888888889,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" remember_lines(\"Abigail\", \"Jacob\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["hold_fruit(\"Abigail\", \"Thomas\").","- living_room(\"Alicia\").","throbbing(\"Abigail\", \"Jacob\").","- overdrive(\"Abigail\", \"Jacob\").","- anteaters(\"Abigail\").","sussex_spaniel(\"Jacob\", \"Alicia\").","- hull(\"Jacob\", \"Thomas\").","sparkle(\"Alicia\", \"Thomas\").","transport(\"Alicia\", \"Thomas\").","conflagration(\"Alicia\").","duodecimal_digit(\"Abigail\", \"Alicia\").","record_images(\"Abigail\", \"Thomas\").","- pages(\"Alicia\", \"Thomas\").","origin(\"Abigail\").","- district(\"Abigail\", \"Jacob\").","domestic_cat(\"Abigail\", \"Thomas\").","- ballpoint_pen(\"Jacob\", \"Thomas\").","- land_on_runway(\"Jacob\", \"Alicia\")."],"noisy_facts":["africa(\"Abigail\").","- ceiling(\"Jacob\", \"Alicia\").","playing_cards(\"Jacob\", \"Thomas\").","- meteorological_balloon(\"Abigail\", \"Alicia\").","- loquat(\"Abigail\", \"Jacob\")."],"min_fact_dicts_for_query":["hold_fruit(\"Abigail\", \"Thomas\").","throbbing(\"Abigail\", \"Jacob\")."],"noiseless_rules":["- remember_lines(V0, V1) :- - flow(V0), moth_miller(V1), not -domestic_carp(V1), not fixed_intonation(V0, V1), not big_penises(V0, V1).","- flow(V0) :- hold_fruit(V0, V3).","- source_of_food_for_people(V0, V2) :- - living_room(V2), conflagration(V2), duodecimal_digit(V0, V2), record_images(V0, V3), not pages(V2, V3).","- elk(V0) :- - abdominal_breathing(V1), - slumber_party(V0, V1).","- abdominal_breathing(V1) :- - large_body_of_salt_water(V0, V3), sussex_spaniel(V1, V2), not hull(V1, V3), not -sparkle(V2, V3), not -transport(V2, V3).","- national_flag(V2) :- - large_body_of_salt_water(V0, V3), sussex_spaniel(V1, V2), not hull(V1, V3), not -sparkle(V2, V3), not -transport(V2, V3).","moth_miller(V1) :- throbbing(V0, V1).","- slumber_party(V0, V1) :- throbbing(V0, V1).","domestic_carp(V1) :- - overdrive(V0, V1), - land_on_runway(V1, V2).","finale(V2) :- - overdrive(V0, V1), - land_on_runway(V1, V2).","general_tsos_chicken(V0, V2) :- - overdrive(V0, V1), - land_on_runway(V1, V2).","- fixed_intonation(V0, V1) :- - anteaters(V0), origin(V0), - district(V0, V1), domestic_cat(V0, V3), not ballpoint_pen(V1, V3).","- archduchy(V0) :- - anteaters(V0), origin(V0), - district(V0, V1), domestic_cat(V0, V3), not ballpoint_pen(V1, V3).","- big_penises(V0, V2) :- - source_of_food_for_people(V0, V2), not elk(V0), not national_flag(V2), not -finale(V2).","- large_body_of_salt_water(V0, V2) :- general_tsos_chicken(V0, V2), not archduchy(V0)."],"noisy_rules":{"a":["remember_lines(V0, V0) :- flow(V0), - finale(V2), not -archduchy(V0).","remember_lines(V0, V1) :- not -elk(V0), big_penises(V0, V1)."],"b":["flow(V0) :- flow(V0), slumber_party(V0, V1), - finale(V2), not -remember_lines(V0, V1).","ballpoint_pen(V1, V1) :- abdominal_breathing(V1), remember_lines(V0, V1)."],"c":["- domestic_carp(V1) :- flow(V0), source_of_food_for_people(V0, V2), slumber_party(V0, V1), fixed_intonation(V0, V1).","archduchy(V0) :- source_of_food_for_people(V0, V2), not -elk(V0), not -national_flag(V2), - moth_miller(V1), slumber_party(V0, V1)."],"d":["large_body_of_salt_water(V0, V0) :- not -national_flag(V2), - general_tsos_chicken(V0, V2), not -fixed_intonation(V0, V1), - loquat(V0, V1).","living_room(V2) :- abdominal_breathing(V1), - finale(V2), - general_tsos_chicken(V0, V2), archduchy(V0), africa(V0)."],"e":["- baboon(V1, V3) :- playing_cards(V1, V3).","- intestine(V0, V2) :- - meteorological_balloon(V0, V2), - ceiling(V1, V2)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_31_9_12_10_10_0.5_1.0_3_2_3","seed":31,"num_facts":13,"num_rules":13,"num_related_predicates":26,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"kupffers_cell(\"Charles\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- automobile_horn(\"Charles\").","- conscience_money(\"Charles\", \"Janice\").","parakeet(\"Charles\", \"Leah\").","- play_baseball(\"Charles\", \"Leah\").","credit(\"Charles\", \"Leah\").","- talipot(\"Charles\", \"Brian\").","covey(\"Janice\", \"Brian\").","- distribution_cost(\"Charles\", \"Leah\").","- italy(\"Charles\").","lovebird(\"Janice\", \"Leah\").","popinjay(\"Brian\", \"Leah\").","- native_american(\"Janice\", \"Leah\").","- drama(\"Janice\", \"Leah\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- automobile_horn(\"Charles\").","parakeet(\"Charles\", \"Leah\").","- talipot(\"Charles\", \"Brian\").","covey(\"Janice\", \"Brian\").","lovebird(\"Janice\", \"Leah\").","popinjay(\"Brian\", \"Leah\")."],"noiseless_rules":["kupffers_cell(V0) :- sound(V0, V1), - parrot(V1, V3), not -outgo(V1, V3).","sound(V0, V1) :- - automobile_horn(V0), - talipot(V0, V2), covey(V1, V2).","handling_cost(V0, V3) :- efficiency_apartment(V1), - peafowl(V0, V1), crown_jewels(V0, V3).","cost(V0) :- handling_cost(V0, V3), not -payment(V0, V3), not distribution_cost(V0, V3).","payment(V0, V3) :- - conscience_money(V0, V1), - play_baseball(V0, V3), not -credit(V0, V3).","assets(V1) :- - conscience_money(V0, V1), - play_baseball(V0, V3), not -credit(V0, V3).","- crown(V1, V3) :- - conscience_money(V0, V1), - play_baseball(V0, V3), not -credit(V0, V3).","- parrot(V1, V3) :- parakeet(V0, V3), lovebird(V1, V3), popinjay(V2, V3).","efficiency_apartment(V1) :- parakeet(V0, V3), lovebird(V1, V3), popinjay(V2, V3).","outgo(V0, V0) :- cost(V0), not -rye(V0), not italy(V0).","- peafowl(V1, V1) :- assets(V1).","rye(V1) :- assets(V1).","crown_jewels(V3, V3) :- - crown(V1, V3), not native_american(V1, V3), not drama(V1, V3)."],"noisy_rules":{}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_58_7_6_6_9_0.5_1.0_3_2_3","seed":58,"num_facts":8,"num_rules":7,"num_related_predicates":15,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"stove(\"Thomas\", \"Mark\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- nest(\"Thomas\", \"Mark\").","- farm(\"Thomas\", \"Mark\").","plate(\"Thomas\", \"Mark\").","range(\"Thomas\", \"Mark\").","- vulva(\"Mark\").","golden_retriever(\"Mark\").","house(\"Thomas\", \"Mark\").","animal(\"Thomas\", \"Mark\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- farm(\"Thomas\", \"Mark\").","range(\"Thomas\", \"Mark\").","animal(\"Thomas\", \"Mark\")."],"noiseless_rules":["stove(V2, V3) :- - four_legs(V2), living(V1, V2), range(V2, V3).","- four_legs(V2) :- - quadrupeds(V3), animal(V2, V3).","cane(V3) :- dwelling(V3).","- quadrupeds(V3) :- cane(V3), not vulva(V3), not -golden_retriever(V3).","living(V3, V2) :- home(V2, V3), not -house(V2, V3), not -animal(V2, V3).","dwelling(V3) :- home(V2, V3), not nest(V2, V3).","home(V2, V3) :- - farm(V2, V3), not -plate(V2, V3), not -range(V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_56_5_8_4_4_0.5_1.0_5_3_4","seed":56,"num_facts":6,"num_rules":9,"num_related_predicates":15,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" P8(\"Zachary\", \"Lori\", \"Sean\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P9(\"Zachary\", \"Alexander\").","- P10(\"Lori\", \"Brittany\", \"Sean\").","- P11(\"Zachary\", \"Lori\", \"Alexander\").","P12(\"Zachary\", \"Lori\", \"Brittany\").","P13(\"Zachary\", \"Lori\", \"Sean\").","P14(\"Zachary\", \"Lori\", \"Sean\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P9(\"Zachary\", \"Alexander\").","- P10(\"Lori\", \"Brittany\", \"Sean\").","- P11(\"Zachary\", \"Lori\", \"Alexander\").","P12(\"Zachary\", \"Lori\", \"Brittany\").","P13(\"Zachary\", \"Lori\", \"Sean\")."],"noiseless_rules":["- P8(V0, V1, V4) :- - P0(V0), P3(V4), - P5(V0, V1), not -P6(V0, V4).","- P0(V0) :- P9(V0, V2), - P11(V0, V1, V2), P12(V0, V1, V3), P13(V0, V1, V4), not -P14(V0, V1, V4).","P1(V0, V1, V2) :- P9(V0, V2), - P11(V0, V1, V2), P12(V0, V1, V3), P13(V0, V1, V4), not -P14(V0, V1, V4).","- P2(V0, V3, V4) :- P9(V0, V2), - P11(V0, V1, V2), P12(V0, V1, V3), P13(V0, V1, V4), not -P14(V0, V1, V4).","P3(V4) :- - P10(V1, V3, V4).","P4(V1, V3, V4) :- - P10(V1, V3, V4).","- P5(V0, V1) :- P1(V0, V1, V2), not -P7(V0, V1, V2).","P6(V0, V4) :- - P2(V0, V3, V4), P4(V1, V3, V4).","P7(V0, V1, V0) :- - P2(V0, V3, V4), P4(V1, V3, V4)."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_8_8_9_7_10_0.5_1.0_5_0_1","seed":8,"num_facts":10,"num_rules":10,"num_related_predicates":20,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.5714285714285714,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P9.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P10.","- P11.","P12.","P13.","- P14.","P15.","- P16.","P17.","P18.","P19."],"noisy_facts":[],"min_fact_dicts_for_query":["- P11."],"noiseless_rules":["P9 :- P0, not P1, not -P6, not -P7.","P0 :- P8.","- P1 :- - P10, not P11.","P2 :- - P11.","P3 :- - P11.","P4 :- P12, not -P13, not P14, not -P15, not P16.","P5 :- P12, not -P13, not P14, not -P15, not P16.","P6 :- P4, not P11, not -P17, not -P18, not -P19.","P7 :- P2, not -P5.","P8 :- P3, not -P19."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_56_8_11_4_6_0.5_1.0_5_0_1","seed":56,"num_facts":8,"num_rules":12,"num_related_predicates":20,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.5714285714285714,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"P11.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P12.","- P13.","P14.","P15.","P16.","- P17.","P18.","P19."],"noisy_facts":["P29.","- P28.","- P32.","- P27.","P26.","- P25.","P20.","- P22.","P21."],"min_fact_dicts_for_query":["- P12."],"noiseless_rules":["P11 :- - P0, not -P4, not -P5, not P7, not P9.","- P0 :- - P12, not -P16, not P17, not -P18, not -P19.","- P1 :- - P12, not -P16, not P17, not -P18, not -P19.","P2 :- - P12, not -P16, not P17, not -P18, not -P19.","P3 :- - P12, not -P16, not P17, not -P18, not -P19.","P4 :- - P1, not P10.","P5 :- P2, not -P6.","P6 :- - P13.","- P7 :- P14.","- P8 :- P14.","- P9 :- P3, not P8, not -P18.","- P10 :- P14, not -P15."],"noisy_rules":{"a":["- P11 :- P0, not -P8, not -P9.","- P11 :- - P3."],"b":["P0 :- - P2, - P5, P7, not -P8, not P11.","- P6 :- - P2, - P5, - P6, not -P7, - P11."],"c":["P12 :- P0, - P2, - P4, not -P9, not -P10.","P9 :- - P2."],"d":["- P23 :- P9, not -P20, not -P21, not P22.","P24 :- P1, not P25, P26."],"e":["P30 :- - P27, not P28, not -P29.","- P31 :- - P32."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_38_10_9_9_12_0.5_1.0_5_0_1","seed":38,"num_facts":15,"num_rules":10,"num_related_predicates":25,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"pork.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["bird.","- trotter.","- chocolate_bar.","insects_live_and_die.","cormorant.","- bacon.","- steak.","cut_of_beef.","saddle.","fog.","- imbibe.","behavior.","- caddy.","- hot.","- compass_point."],"noisy_facts":["- collar.","- birthday.","- tissue.","beefsteak.","- fruit_juice.","- strap.","hair_coloring.","canadian_bacon.","hoop.","sleep_standing."],"min_fact_dicts_for_query":["insects_live_and_die."],"noiseless_rules":["pork :- - hog, not cut.","- meat :- bird.","- chop :- pigs_feet, not -pork_loin, not lamb_chop.","- hog :- salt_pork, not trotter, not caddy, not hot, not compass_point.","- cut :- - chop, not cut_of_pork, not steak, not -cut_of_beef, not -saddle.","pigs_feet :- - meat, not -salt_pork, not -fog, not imbibe, not -behavior.","pork_loin :- pigs_feet, not chocolate_bar, not -fog.","salt_pork :- insects_live_and_die.","- lamb_chop :- cormorant.","- cut_of_pork :- - bacon."],"noisy_rules":{"a":["- pork :- chop, not pigs_feet, not salt_pork, cut_of_pork.","- pork :- chop, - pigs_feet, not pork_loin, not -cut_of_pork."],"b":["hog :- - pork.","meat :- cut_of_pork, not pork."],"c":["- pigs_feet :- not -meat, not -chop, hog, not pork_loin, not salt_pork.","- salt_pork :- lamb_chop."],"d":["- pork_loin :- not -meat, not pigs_feet, not -cut_of_pork, canadian_bacon.","steak :- meat, - salt_pork, not -beefsteak."],"e":["year :- sleep_standing, - birthday, not tissue, hair_coloring, not fruit_juice.","band :- not collar, not strap, hoop."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_12_10_10_1_3_0.5_1.0_5_0_1","seed":12,"num_facts":6,"num_rules":11,"num_related_predicates":17,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"jars.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["- double_furniture.","feed.","- flat_dish.","- performances.","individualism.","chord."],"noisy_facts":["laughter.","mother_kittens.","- grammatical_relation.","lower_berth.","- bib.","eating_steak.","- ursines.","- appearance.","- golden_pheasant."],"min_fact_dicts_for_query":["feed."],"noiseless_rules":["jars :- - dolphin, not -facility.","monopsony :- tug, not -judgment_day.","- invention :- test.","artificial_intelligence :- - double_furniture, not -chord.","tug :- greenbelt.","- knowledge :- greenbelt.","- dolphin :- feed.","greenbelt :- - flat_dish.","facility :- monopsony, not invention, not -artificial_intelligence, not knowledge.","test :- judgment_day, not performances.","judgment_day :- - dolphin, not -individualism."],"noisy_rules":{"a":["- jars :- invention, knowledge, dolphin, - test.","- jars :- not monopsony, - tug, dolphin, not judgment_day."],"b":["invention :- - judgment_day, not jars.","- artificial_intelligence :- not monopsony, not tug, not judgment_day, - jars."],"c":["double_furniture :- - test, - judgment_day.","- artificial_intelligence :- knowledge, not -dolphin, - greenbelt, - facility, not judgment_day."],"d":["- fertilization :- - monopsony, not test, not -mother_kittens.","- test :- - monopsony, not ursines."],"e":["ratatouille :- - grammatical_relation, - bib, laughter, lower_berth, not -eating_steak.","subaltern :- - golden_pheasant, not appearance."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_63_8_9_7_10_0.5_1.0_5_3_4","seed":63,"num_facts":11,"num_rules":10,"num_related_predicates":21,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.4285714285714286,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P9(\"David\", \"Elizabeth\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P10(\"Shannon\").","P11(\"Janice\", \"Shannon\", \"Richard\").","P12(\"Richard\", \"David\", \"Elizabeth\").","P13(\"Richard\", \"David\", \"Elizabeth\").","P14(\"David\").","P15(\"Richard\", \"David\").","P16(\"Janice\", \"Shannon\", \"Elizabeth\").","P17(\"Janice\", \"Richard\", \"Elizabeth\").","P18(\"Janice\", \"Elizabeth\").","P19(\"Janice\", \"Shannon\", \"Richard\").","P20(\"Janice\", \"Richard\", \"Elizabeth\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P10(\"Shannon\").","P11(\"Janice\", \"Shannon\", \"Richard\").","P12(\"Richard\", \"David\", \"Elizabeth\").","P13(\"Richard\", \"David\", \"Elizabeth\").","P14(\"David\").","P15(\"Richard\", \"David\").","P16(\"Janice\", \"Shannon\", \"Elizabeth\").","P17(\"Janice\", \"Richard\", \"Elizabeth\").","P18(\"Janice\", \"Elizabeth\").","P19(\"Janice\", \"Shannon\", \"Richard\").","P20(\"Janice\", \"Richard\", \"Elizabeth\")."],"noiseless_rules":["P9(V3, V4) :- P0(V0, V2), P1(V2, V4), P7(V2, V3, V4), P8(V2, V3, V4).","P0(V0, V2) :- P5(V0), P14(V3), P15(V2, V3), P16(V0, V1, V4), P17(V0, V2, V4).","P1(V2, V4) :- P2(V0, V2, V4), P3(V0, V2, V4), P6(V0, V2, V4), P17(V0, V2, V4).","P2(V0, V2, V4) :- P10(V1), P18(V0, V4), P19(V0, V1, V2), P20(V0, V2, V4).","P3(V0, V2, V2) :- P11(V0, V1, V2), P19(V0, V1, V2).","P4(V0) :- P11(V0, V1, V2), P19(V0, V1, V2).","P5(V4) :- P8(V2, V3, V4), P12(V2, V3, V4).","P6(V4, V2, V4) :- P8(V2, V3, V4), P12(V2, V3, V4).","P7(V2, V3, V4) :- P13(V2, V3, V4).","P8(V0, V0, V0) :- P4(V0)."],"noisy_rules":{}},"num_min_facts_for_query":8,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_67_8_8_8_10_0.5_1.0_3_2_3","seed":67,"num_facts":11,"num_rules":9,"num_related_predicates":20,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"billy(\"Doris\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["shire(\"Kelly\", \"David\").","- leonberg(\"Kelly\", \"Melanie\").","bass_fiddle(\"Doris\").","early(\"Kelly\", \"Doris\").","- female(\"Doris\", \"David\").","- eat_breakfast(\"Doris\", \"Melanie\").","- whiteout(\"Melanie\", \"David\").","asteroid_belt(\"David\").","ammunition(\"David\").","keg(\"Doris\", \"Melanie\").","pine_siskin(\"Doris\", \"David\")."],"noisy_facts":["concussion(\"Kelly\", \"Doris\").","kosher_deli(\"Doris\", \"Melanie\").","- lime(\"Doris\").","hear_very_well(\"Kelly\", \"David\").","leech(\"Doris\", \"Melanie\")."],"min_fact_dicts_for_query":["shire(\"Kelly\", \"David\").","- eat_breakfast(\"Doris\", \"Melanie\")."],"noiseless_rules":["billy(V1) :- mug(V1), broadcaster(V3), not -vote(V1, V3).","mug(V1) :- shire(V0, V3), - eat_breakfast(V1, V2), not whiteout(V2, V3).","- leopard(V0, V3) :- shire(V0, V3), - eat_breakfast(V1, V2), not whiteout(V2, V3).","- games(V0, V3) :- steam_coal(V3), early(V0, V1), not female(V1, V3).","- moths(V3, V3) :- broadcaster(V3), not -asteroid_belt(V3), not -ammunition(V3).","steam_coal(V3) :- - leonberg(V0, V2), keg(V1, V2), pine_siskin(V1, V3).","broadcaster(V1) :- mug(V1), not -bass_fiddle(V1).","vote(V2, V3) :- - games(V0, V3), - moths(V2, V3), not -aitchbone(V0, V3).","aitchbone(V0, V3) :- - leopard(V0, V3)."],"noisy_rules":{"a":["- billy(V1) :- - broadcaster(V3), - vote(V1, V3).","- billy(V3) :- - broadcaster(V3), - aitchbone(V0, V3)."],"b":["female(V1, V3) :- - steam_coal(V3), - vote(V1, V3), not billy(V1).","female(V1, V1) :- - billy(V1)."],"c":["- steam_coal(V3) :- leopard(V0, V3).","- asteroid_belt(V3) :- moths(V2, V3)."],"d":["- broadcaster(V3) :- moths(V2, V3).","- asteroid_belt(V3) :- - broadcaster(V3)."],"e":["- fleur_de_lis(V1) :- - lime(V1), kosher_deli(V1, V2).","tuft(V0, V3) :- concussion(V0, V1), hear_very_well(V0, V3), leech(V1, V2)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_92_6_7_6_8_0.5_1.0_5_2_3","seed":92,"num_facts":10,"num_rules":8,"num_related_predicates":18,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P7(\"Paul\", \"Arthur\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P8(\"Arthur\").","P9(\"Ronald\", \"Arthur\").","- P10(\"Paul\", \"Ronald\").","P11(\"Arthur\").","- P12(\"Paul\", \"Arthur\").","- P13(\"Paul\", \"Alison\").","- P14(\"Paul\", \"Ronald\").","P15(\"Paul\", \"Ronald\").","- P16(\"Alison\", \"Arthur\").","P17(\"Paul\", \"Ronald\")."],"noisy_facts":["P28(\"Paul\", \"Ronald\").","- P30(\"Alison\", \"Ronald\").","- P21(\"Paul\", \"Alison\").","P31(\"Alison\", \"Arthur\").","- P29(\"Paul\", \"Arthur\").","P22(\"Paul\", \"Alison\").","- P24(\"Alison\", \"Arthur\").","P25(\"Ronald\", \"Arthur\").","- P18(\"Paul\", \"Alison\").","P27(\"Ronald\").","- P20(\"Paul\", \"Alison\")."],"min_fact_dicts_for_query":["- P8(\"Arthur\").","- P10(\"Paul\", \"Ronald\").","- P13(\"Paul\", \"Alison\").","- P14(\"Paul\", \"Ronald\")."],"noiseless_rules":["P7(V0, V3) :- P0(V3), - P2(V3), - P4(V0, V1), not P6(V0, V3), not P12(V0, V3).","P0(V3) :- - P8(V3), - P13(V0, V1), - P14(V0, V2), not -P15(V0, V2), not P16(V1, V3).","- P1(V2, V3) :- - P8(V3), - P13(V0, V1), - P14(V0, V2), not -P15(V0, V2), not P16(V1, V3).","- P2(V3) :- - P1(V2, V3), not P3(V2, V3), not P5(V2, V3).","- P3(V2, V3) :- P9(V2, V3).","- P4(V0, V0) :- - P10(V0, V2), not P14(V0, V2), not -P17(V0, V2).","- P5(V2, V0) :- - P10(V0, V2), not P14(V0, V2), not -P17(V0, V2).","- P6(V3, V3) :- P0(V3), not -P11(V3)."],"noisy_rules":{"a":["- P7(V0, V3) :- P2(V3), P4(V0, V1), P5(V2, V3), P6(V0, V3).","- P7(V3, V3) :- - P0(V3)."],"b":["P5(V2, V3) :- P1(V2, V3), P3(V2, V3), P4(V0, V1), P6(V0, V3), - P7(V0, V3).","P12(V0, V3) :- - P0(V3), P2(V3), P3(V2, V3), - P7(V0, V3)."],"c":["P4(V0, V0) :- not P0(V3), not -P1(V2, V3), not -P2(V3), P3(V2, V3), P6(V0, V3).","P10(V2, V2) :- not -P2(V3), P5(V2, V3)."],"d":["- P19(V0, V3) :- P1(V2, V3), not -P4(V0, V1), not -P6(V0, V3), - P18(V0, V1).","- P17(V0, V3) :- - P0(V3), not -P4(V0, V1), not P20(V0, V1), not P21(V0, V1), P22(V0, V1)."],"e":["P23(V1) :- - P24(V1, V3), P25(V2, V3).","P26(V1, V3) :- P27(V2), P28(V0, V2), - P29(V0, V3), - P30(V1, V2), P31(V1, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_54_5_5_5_8_0.5_1.0_3_1_2","seed":54,"num_facts":7,"num_rules":6,"num_related_predicates":13,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" membrane(\"Zachary\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["cranium.","- eye_socket(\"Zachary\").","- blastocoel(\"Zachary\").","- archenteron(\"Zachary\").","cornea(\"Zachary\").","endocranium(\"Zachary\").","skin."],"noisy_facts":["- airfoil(\"Stephen\").","- ununpentium(\"Zachary\").","drop_forge(\"Stephen\").","union(\"Brooke\").","- beta_cell(\"Brooke\").","- gladiolus."],"min_fact_dicts_for_query":["cranium.","- eye_socket(\"Zachary\")."],"noiseless_rules":["- membrane(V0) :- - matrix(V0), not -cornea(V0), not -endocranium(V0).","- matrix(V0) :- - skull(V0), not -cavity(V0), not -connective_tissue(V0).","- skull(V0) :- cranium, - eye_socket(V0), not -endocranium(V0).","- bone(V0) :- cranium, - eye_socket(V0), not -endocranium(V0).","cavity(V0) :- - eye_socket(V0), not blastocoel(V0), not archenteron(V0).","connective_tissue(V1) :- - bone(V1), not -cranium, not -skin."],"noisy_rules":{"a":["membrane(V0) :- - cavity(V0).","membrane(V0) :- skull(V0), not cavity(V0)."],"b":["- skin(V0) :- membrane(V0).","archenteron(V0) :- not cavity(V0), membrane(V0)."],"c":["- connective_tissue(V0) :- matrix(V0), skull(V0).","matrix(V0) :- not -skull(V0), not cavity(V0), - connective_tissue(V0)."],"d":["bone(V0) :- matrix(V0), not connective_tissue(V0), - gladiolus.","- endocranium(V0) :- - cavity(V0), not ununpentium(V0)."],"e":["- pear(V2) :- union(V2), - beta_cell(V2).","- device(V1) :- drop_forge(V1), not airfoil(V1)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_66_3_3_1_3_0.5_1.0_5_2_3","seed":66,"num_facts":2,"num_rules":4,"num_related_predicates":6,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":3,"target_query":" holding_up_pants(\"Joanne\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- lamboid_suture(\"Joanne\", \"Heather\").","event(\"Joanne\", \"Heather\")."],"noisy_facts":["carpet(\"Joanne\", \"Barbara\").","vegetable_gardens(\"David\", \"Barbara\").","- insect(\"Joanne\", \"Barbara\").","water_animal(\"David\", \"Barbara\").","- cocoa_plum(\"Heather\").","- sensing(\"Joanne\", \"Barbara\").","- lashes(\"David\", \"Heather\")."],"min_fact_dicts_for_query":["- lamboid_suture(\"Joanne\", \"Heather\").","event(\"Joanne\", \"Heather\")."],"noiseless_rules":["- holding_up_pants(V1) :- tank(V3), dormitory(V1, V2), not -event(V1, V3).","tank(V3) :- - lamboid_suture(V1, V3), not -event(V1, V3).","bug(V3, V3) :- - lamboid_suture(V1, V3), not -event(V1, V3).","dormitory(V1, V1) :- bug(V0, V3), event(V1, V3)."],"noisy_rules":{"a":["holding_up_pants(V3) :- - bug(V0, V3).","holding_up_pants(V1) :- - tank(V3), - bug(V0, V3), - dormitory(V1, V2)."],"b":["- dormitory(V1, V1) :- holding_up_pants(V1).","- event(V1, V3) :- not tank(V3), - bug(V0, V3), - dormitory(V1, V2), not -holding_up_pants(V1)."],"c":["- event(V1, V3) :- - tank(V3), - bug(V0, V3), - dormitory(V1, V2).","- dormitory(V0, V0) :- not tank(V3), - bug(V0, V3)."],"d":["- bug(V2, V2) :- not dormitory(V1, V2), - sensing(V1, V2), - insect(V1, V2), not -carpet(V1, V2).","- event(V1, V3) :- - bug(V0, V3), - dormitory(V1, V2), not lashes(V0, V3)."],"e":["- calendar_year(V3) :- - cocoa_plum(V3).","adult(V2) :- water_animal(V0, V2), not -vegetable_gardens(V0, V2)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_54_10_15_14_15_0.5_1.0_5_0_1","seed":54,"num_facts":18,"num_rules":16,"num_related_predicates":34,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.888888888888889,"num_noise_rules_per_type":2,"num_rules_with_default_negation":12,"target_query":"P15.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P16.","P17.","- P18.","- P19.","P20.","P21.","P22.","P23.","- P24.","P25.","- P26.","P27.","- P28.","P29.","P30.","P31.","P32.","P33."],"noisy_facts":[],"min_fact_dicts_for_query":["- P16."],"noiseless_rules":["P15 :- - P2, not -P10, not -P12, not -P20, not -P21.","- P0 :- P6, not P9.","- P1 :- P6, not P9.","- P2 :- - P16.","P3 :- - P16.","P4 :- P17.","- P5 :- P17.","P6 :- - P18, not -P22, not -P23, not P24, not -P25.","- P7 :- - P18, not -P22, not -P23, not P24, not -P25.","- P8 :- - P18, not -P22, not -P23, not P24, not -P25.","- P9 :- P4, not P7, not P28.","P10 :- - P0, not -P3, not P8, not -P11, not -P33.","P11 :- - P1, not -P13, not P26, not -P27, not P28.","P12 :- - P5, not -P14.","P13 :- - P19, not -P29, not -P30, not -P31, not -P32.","P14 :- - P19, not -P29, not -P30, not -P31, not -P32."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_84_8_10_2_4_0.5_1.0_3_0_1","seed":84,"num_facts":4,"num_rules":11,"num_related_predicates":15,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"innsbruck.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["fairy.","- laminar_flow_clean_room.","water_fowl.","registrar."],"noisy_facts":[],"min_fact_dicts_for_query":["fairy."],"noiseless_rules":["innsbruck :- - position, not -indian_leader, not -holding.","- holothuroidea :- indian_leader, not -plates, not -registrar.","ax :- - continue_ticking.","- position :- fairy.","indian_leader :- fairy.","- water_starwort :- fairy.","- space_shuttle :- - water_starwort, not captain_ship, not -water_fowl.","- continue_ticking :- - space_shuttle.","plates :- - laminar_flow_clean_room, not -water_fowl.","- captain_ship :- - laminar_flow_clean_room, not -water_fowl.","holding :- - holothuroidea, not -ax."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_48_10_14_13_13_0.5_1.0_5_2_3","seed":48,"num_facts":17,"num_rules":15,"num_related_predicates":32,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":" P14(\"Robert\", \"Natalie\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P15(\"Justin\", \"Robert\").","P16(\"Justin\").","P17(\"Robert\", \"Natalie\").","- P18(\"Justin\", \"Natalie\").","P19(\"Justin\", \"Robert\").","P20(\"Justin\", \"Natalie\").","P21(\"Justin\", \"Natalie\").","P22(\"Robert\", \"Natalie\").","P23(\"Justin\", \"Robert\").","P24(\"Justin\", \"Natalie\").","- P25(\"Robert\", \"Natalie\").","P26(\"Robert\", \"Natalie\").","P27(\"Robert\", \"Natalie\").","- P28(\"Robert\", \"Natalie\").","P29(\"Justin\").","- P30(\"Natalie\").","- P31(\"Justin\", \"Natalie\")."],"noisy_facts":["- P37(\"Justin\", \"Natalie\").","- P42(\"Robert\", \"Natalie\").","P33(\"Robert\", \"Natalie\").","P36(\"Justin\", \"Natalie\").","P39(\"Robert\", \"Natalie\").","P41(\"Justin\", \"Natalie\").","- P34.","P38(\"Robert\", \"Mary\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- P14(V1, V3) :- - P0(V1), - P3(V1, V3), not P4(V1, V3), not -P10(V1, V3).","- P0(V1) :- - P1(V0), P5(V3), P23(V0, V1), not -P24(V0, V3), not P25(V1, V3).","- P1(V0) :- - P15(V0, V1), P19(V0, V1), P20(V0, V3), not -P21(V0, V3), not -P22(V1, V3).","- P2(V1, V3) :- - P15(V0, V1), P19(V0, V1), P20(V0, V3), not -P21(V0, V3), not -P22(V1, V3).","- P3(V1, V3) :- P6(V0, V3), P9(V1, V3).","- P4(V1, V3) :- - P2(V1, V3), not -P12(V1, V3), not -P26(V1, V3), not -P27(V1, V3), not P28(V1, V3).","P5(V3) :- P16(V0), P29(V0), - P30(V3), not P31(V0, V3).","P6(V0, V3) :- P16(V0), P29(V0), - P30(V3), not P31(V0, V3).","- P7(V0) :- P16(V0), P29(V0), - P30(V3), not P31(V0, V3).","P8(V3) :- P16(V0), P29(V0), - P30(V3), not P31(V0, V3).","P9(V0, V0) :- - P7(V0).","P10(V1, V3) :- P17(V1, V3).","- P11(V3) :- P17(V1, V3).","P12(V3, V3) :- P8(V3), not P11(V3), not P13(V3).","- P13(V3) :- - P18(V0, V3)."],"noisy_rules":{"a":["P14(V3, V3) :- - P5(V3).","P14(V1, V3) :- - P8(V3), - P12(V1, V3), not -P13(V3)."],"b":["- P24(V1, V3) :- P0(V1), not P8(V3), - P10(V1, V3), P14(V1, V3).","- P24(V3, V3) :- P2(V1, V3), P14(V1, V3)."],"c":["P25(V1, V3) :- P4(V1, V3), - P5(V3), - P10(V1, V3).","- P19(V1, V1) :- P4(V1, V3)."],"d":["- P32(V1, V3) :- not -P4(V1, V3), not -P11(V3), - P12(V1, V3), not -P33(V1, V3).","P3(V0, V0) :- P1(V0), not -P7(V0), not P34."],"e":["- P35(V2) :- not -P36(V0, V3), - P37(V0, V3), P38(V1, V2), P39(V1, V3).","- P40(V1, V3) :- P41(V0, V3), - P42(V1, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_18_9_13_13_14_0.5_1.0_5_2_3","seed":18,"num_facts":16,"num_rules":14,"num_related_predicates":30,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":"design(\"Joseph\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["collar(\"Gloria\").","- wet_fly(\"Gloria\", \"Joseph\").","- power_drill(\"Krystal\", \"Joseph\").","- heraldry(\"Gloria\", \"Courtney\").","air_cushion(\"Gloria\", \"Courtney\").","- colors(\"Joseph\", \"Courtney\").","- strap(\"Courtney\").","hoop(\"Krystal\", \"Joseph\").","- sweatband(\"Gloria\", \"Courtney\").","ligature(\"Joseph\", \"Courtney\").","stabilizer(\"Krystal\", \"Gloria\").","- strengthener(\"Krystal\", \"Gloria\").","musical_instrument(\"Krystal\", \"Gloria\").","- breast_drill(\"Krystal\", \"Joseph\").","bit(\"Krystal\", \"Joseph\").","hand_drill(\"Krystal\", \"Joseph\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["design(V2) :- emblem(V1), - object(V1, V2), device(V1, V3).","band(V1, V2) :- collar(V1), - strap(V3), hoop(V0, V2), not sweatband(V1, V3), not -ligature(V2, V3).","neck(V0, V2) :- collar(V1), - strap(V3), hoop(V0, V2), not sweatband(V1, V3), not -ligature(V2, V3).","emblem(V1) :- garment(V0), - P7(V0, V1), - heraldry(V1, V3), air_cushion(V1, V3), - colors(V2, V3).","fly(V1, V2) :- - wet_fly(V1, V2).","garment(V1) :- band(V1, V2), not -fly(V1, V2).","- restraint(V2) :- band(V1, V2), not -fly(V1, V2).","- object(V2, V2) :- - restraint(V2), not -part(V2), not drill(V2).","- P7(V2, V2) :- - restraint(V2), not -part(V2), not drill(V2).","part(V2) :- neck(V0, V2), not -bit(V0, V2).","- key(V0, V0) :- neck(V0, V2), not -bit(V0, V2).","device(V1, V0) :- - key(V0, V1), not -airfoil(V0, V1), not -stabilizer(V0, V1), not strengthener(V0, V1), not -musical_instrument(V0, V1).","- drill(V2) :- - power_drill(V0, V2), not breast_drill(V0, V2), not -bit(V0, V2), not -hand_drill(V0, V2).","airfoil(V0, V0) :- - power_drill(V0, V2), not breast_drill(V0, V2), not -bit(V0, V2), not -hand_drill(V0, V2)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_67_7_11_9_12_0.5_1.0_5_3_4","seed":67,"num_facts":11,"num_rules":12,"num_related_predicates":23,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" keeping_clothing_from_stinking(\"Francisco\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- action(\"Mary\", \"Anthony\", \"Richard\").","laundry_room(\"Francisco\", \"Jamie\", \"Richard\").","- light_brown(\"Francisco\", \"Richard\").","- beaver(\"Mary\", \"Jamie\", \"Richard\").","pupose_of_laundromat(\"Francisco\", \"Jamie\", \"Richard\").","egg(\"Francisco\", \"Jamie\", \"Richard\").","- legs(\"Francisco\", \"Jamie\", \"Richard\").","hen(\"Francisco\", \"Jamie\", \"Richard\").","- jogging(\"Anthony\", \"Francisco\", \"Richard\").","- riding_bicycle(\"Anthony\", \"Francisco\", \"Richard\").","running_in_marathon(\"Anthony\", \"Francisco\", \"Richard\")."],"noisy_facts":["buying_beer(\"Francisco\", \"Richard\").","- water(\"Anthony\", \"Francisco\", \"Jamie\").","party(\"Mary\", \"Jamie\", \"Richard\").","- cheddar(\"Francisco\", \"Jamie\", \"Richard\").","private_gardening(\"Jamie\")."],"min_fact_dicts_for_query":["- action(\"Mary\", \"Anthony\", \"Richard\").","laundry_room(\"Francisco\", \"Jamie\", \"Richard\").","- light_brown(\"Francisco\", \"Richard\").","- legs(\"Francisco\", \"Jamie\", \"Richard\")."],"noiseless_rules":["- keeping_clothing_from_stinking(V2) :- - cleaning_clothes(V2), - satisfying_hunger(V3), - health(V0, V1), - light_brown(V2, V4), not beaver(V0, V3, V4).","- run(V1, V2, V4) :- - action(V0, V1, V4), - legs(V2, V3, V4).","getting_exercise(V0, V3, V4) :- - action(V0, V1, V4), - legs(V2, V3, V4).","- eating_vegetables(V1, V2, V4) :- - action(V0, V1, V4), - legs(V2, V3, V4).","eating(V2, V4) :- - run(V1, V2, V4), not chicken(V1, V2, V4), not hygeine(V1, V2, V4).","fly(V2, V4) :- eating(V2, V4), not -social_activity(V2, V4).","- cleaning_clothes(V2) :- laundry_room(V2, V3, V4), not -pupose_of_laundromat(V2, V3, V4), not -egg(V2, V3, V4), not legs(V2, V3, V4), not -hen(V2, V3, V4).","- chicken(V3, V2, V4) :- laundry_room(V2, V3, V4), not -pupose_of_laundromat(V2, V3, V4), not -egg(V2, V3, V4), not legs(V2, V3, V4), not -hen(V2, V3, V4).","social_activity(V2, V4) :- laundry_room(V2, V3, V4), not -pupose_of_laundromat(V2, V3, V4), not -egg(V2, V3, V4), not legs(V2, V3, V4), not -hen(V2, V3, V4).","- satisfying_hunger(V3) :- getting_exercise(V0, V3, V4), eating(V2, V4), not -fly(V3, V4).","- health(V2, V1) :- - eating_vegetables(V1, V2, V4), not cleaning_clothes(V2), not jogging(V1, V2, V4), not riding_bicycle(V1, V2, V4), not -running_in_marathon(V1, V2, V4).","- hygeine(V1, V2, V4) :- - eating_vegetables(V1, V2, V4), not cleaning_clothes(V2), not jogging(V1, V2, V4), not riding_bicycle(V1, V2, V4), not -running_in_marathon(V1, V2, V4)."],"noisy_rules":{"a":["keeping_clothing_from_stinking(V2) :- run(V1, V2, V4).","keeping_clothing_from_stinking(V2) :- - getting_exercise(V0, V3, V4), eating_vegetables(V1, V2, V4)."],"b":["eating_vegetables(V2, V2, V2) :- keeping_clothing_from_stinking(V2).","jogging(V1, V2, V4) :- run(V1, V2, V4), - eating(V2, V4), chicken(V1, V2, V4), satisfying_hunger(V3), keeping_clothing_from_stinking(V2)."],"c":["satisfying_hunger(V1) :- eating_vegetables(V1, V2, V4), not eating(V2, V4), not -cleaning_clothes(V2).","action(V0, V1, V4) :- run(V1, V2, V4), - fly(V3, V4), health(V0, V1)."],"d":["- social_activity(V2, V4) :- not getting_exercise(V0, V3, V4), - eating(V2, V4), not fly(V3, V4), satisfying_hunger(V3), party(V0, V3, V4).","cleaning_clothes(V3) :- satisfying_hunger(V3), not -private_gardening(V3)."],"e":["- serration(V2, V3, V4) :- - cheddar(V2, V3, V4).","quenching_thirst(V3, V4) :- buying_beer(V2, V4), - water(V1, V2, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_83_10_13_10_11_0.5_1.0_5_1_2","seed":83,"num_facts":13,"num_rules":14,"num_related_predicates":27,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.7777777777777777,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"nothing(\"Austin\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- rice(\"Lauren\").","- muskellunge.","growing_strong(\"Austin\").","- lesson.","- put_clothes_into_locker.","- eating_chips.","get_on_shoes(\"Austin\").","similar(\"Austin\").","- buzzards_bay(\"Austin\").","- artifact(\"Austin\").","- trees(\"Lauren\").","water_ouzel(\"Lauren\").","hatchel(\"Lauren\")."],"noisy_facts":["- garambulla(\"Austin\").","- fuzz(\"Lauren\").","menomini(\"Lauren\").","wet_fly(\"Austin\").","- having_more_time_in_day(\"Austin\").","- lift_weights.","- destruction(\"Lauren\").","jockey(\"Lauren\").","- kook(\"Austin\").","paint_portrait(\"Lauren\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["nothing(V1) :- submarine(V1), not -relish(V1), not organic_process(V1), not birds_house(V1).","min_(V0) :- - rice(V0), not trees(V0), not -water_ouzel(V0), not -hatchel(V0).","- part(V0) :- min_(V0).","shop_floor(V0) :- min_(V0).","submarine(V1) :- - part(V1), not bird_louse(V1).","relish(V1) :- contact(V1), not -message(V1).","- bird_louse(V0) :- shop_floor(V0), not -homecourt_advantage(V0), not lesson, not put_clothes_into_locker, not eating_chips.","- organic_process(V0) :- - rice(V0), not muskellunge.","beginning(V0) :- - rice(V0), not muskellunge.","- birds_house(V0) :- beginning(V0).","gnu(V0) :- beginning(V0).","contact(V1) :- growing_strong(V1), not -get_on_shoes(V1), not -similar(V1), not buzzards_bay(V1), not artifact(V1).","message(V0) :- gnu(V0).","homecourt_advantage(V0) :- gnu(V0)."],"noisy_rules":{"a":["- nothing(V1) :- part(V1), - shop_floor(V0), not -organic_process(V1), - beginning(V0).","- nothing(V1) :- - min_(V0), not -part(V1), organic_process(V1)."],"b":["- hatchel(V1) :- - submarine(V1), - contact(V1), - message(V1), - nothing(V1).","- message(V1) :- - shop_floor(V0), organic_process(V1), not gnu(V0), not nothing(V1)."],"c":["- relish(V0) :- - beginning(V0), - homecourt_advantage(V0).","muskellunge(V1) :- - submarine(V1), - beginning(V0), not contact(V1)."],"d":["- contact(V1) :- part(V1), - garambulla(V1).","- growing_strong(V0) :- - shop_floor(V0), - lift_weights."],"e":["- eating_beef(V0) :- menomini(V0), - fuzz(V0), paint_portrait(V0), not destruction(V0), not -jockey(V0).","- country_club(V1) :- not having_more_time_in_day(V1), - kook(V1), wet_fly(V1)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_0_10_13_11_12_0.5_1.0_3_3_4","seed":0,"num_facts":15,"num_rules":14,"num_related_predicates":29,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"squash_ball(\"Olivia\", \"Eric\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- withers(\"Mark\", \"Olivia\").","babbler(\"Michelle\", \"Linda\").","playing_game_of_chess(\"Mark\", \"Linda\").","- british_shilling(\"Mark\", \"Olivia\", \"Linda\").","- yoke(\"Olivia\", \"Linda\").","- limited_company(\"Mark\", \"Michelle\", \"Linda\").","cockatoo(\"Mark\", \"Linda\").","- skating(\"Mark\", \"Olivia\", \"Linda\").","birthday_parties(\"Mark\", \"Olivia\", \"Eric\").","flag(\"Olivia\", \"Eric\", \"Linda\").","salt_mine(\"Olivia\", \"Eric\").","- star_in_movie(\"Olivia\", \"Linda\").","quack(\"Olivia\").","- boot_camp(\"Linda\").","big_stream(\"Linda\")."],"noisy_facts":["- flavor(\"Mark\", \"Linda\").","night_bird(\"Michelle\", \"Olivia\", \"Linda\").","driving_machine(\"Mark\").","magnet(\"Mark\", \"Olivia\", \"Eric\").","nard(\"Mark\", \"Michelle\", \"Olivia\").","american_pastime(\"Mark\", \"Michelle\", \"Eric\").","- leydig_cell(\"Mark\", \"Michelle\", \"Eric\").","colloquium(\"Mark\", \"Olivia\", \"Eric\")."],"min_fact_dicts_for_query":["playing_game_of_chess(\"Mark\", \"Linda\").","cockatoo(\"Mark\", \"Linda\").","- skating(\"Mark\", \"Olivia\", \"Linda\").","salt_mine(\"Olivia\", \"Eric\")."],"noiseless_rules":["squash_ball(V2, V3) :- - way_to_express_yourself(V3, V4), - interleaf(V0, V1, V2), not -cathedral(V0, V1, V4).","- way_to_express_yourself(V3, V4) :- - cats_and_dogs(V0, V3), cockatoo(V0, V4), - skating(V0, V2, V4).","teeth(V2) :- - cats_and_dogs(V0, V3), cockatoo(V0, V4), - skating(V0, V2, V4).","- square(V4) :- sow(V1, V3), rattle(V1, V4), - going(V0, V2, V3).","- interleaf(V2, V2, V2) :- teeth(V2), not -containerful(V2), not -quack(V2).","sow(V2, V2) :- teeth(V2), not -containerful(V2), not -quack(V2).","- net_estate(V0, V4) :- - withers(V0, V2), - yoke(V2, V4), - limited_company(V0, V1, V4).","rattle(V1, V4) :- babbler(V1, V4), birthday_parties(V0, V2, V3), not -flag(V2, V3, V4).","- celtic_deity(V0, V1, V2) :- babbler(V1, V4), birthday_parties(V0, V2, V3), not -flag(V2, V3, V4).","- cut_steel(V4, V4, V4) :- - square(V4), not boot_camp(V4), not -big_stream(V4).","- cats_and_dogs(V0, V3) :- playing_game_of_chess(V0, V4), salt_mine(V2, V3), not star_in_movie(V2, V4).","cathedral(V0, V1, V4) :- - net_estate(V0, V4), - celtic_deity(V0, V1, V2), - cut_steel(V0, V1, V3).","- going(V0, V2, V2) :- - british_shilling(V0, V2, V4), not skating(V0, V2, V4).","containerful(V2) :- - british_shilling(V0, V2, V4), not skating(V0, V2, V4)."],"noisy_rules":{"a":["- squash_ball(V2, V2) :- - rattle(V1, V4), - containerful(V2).","- squash_ball(V2, V3) :- - sow(V1, V3), - containerful(V2)."],"b":["- sow(V1, V3) :- square(V4), - sow(V1, V3), - squash_ball(V2, V3).","- salt_mine(V2, V3) :- - squash_ball(V2, V3)."],"c":["yoke(V2, V4) :- - teeth(V2), net_estate(V0, V4).","- playing_game_of_chess(V0, V0) :- - sow(V1, V3), celtic_deity(V0, V1, V2), not -cut_steel(V0, V1, V3)."],"d":["- cathedral(V0, V1, V0) :- - teeth(V2), interleaf(V0, V1, V2), not -nard(V0, V1, V2).","- birthday_parties(V0, V3, V3) :- cut_steel(V0, V1, V3), not leydig_cell(V0, V1, V3), not -american_pastime(V0, V1, V3)."],"e":["newmarket(V1) :- - flavor(V0, V4), night_bird(V1, V2, V4).","duplicate(V0, V3) :- not -driving_machine(V0), not -magnet(V0, V2, V3), colloquium(V0, V2, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_24_7_8_6_6_0.5_1.0_5_2_3","seed":24,"num_facts":8,"num_rules":9,"num_related_predicates":17,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" cow(\"Todd\", \"Duane\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- mantle(\"Todd\", \"Duane\").","market(\"Michael\", \"Duane\").","rockets(\"Michael\").","- one_way_to_measure_expenses(\"Michael\").","eye(\"Michael\").","- duck(\"Michael\").","- fly_aeroplanes(\"Michael\").","flap(\"Michael\")."],"noisy_facts":["- trouble_spot(\"Michael\", \"Duane\").","- barber_chair(\"Michael\", \"Duane\").","- drug(\"Michael\", \"Duane\").","- purple(\"Michael\").","kuwait(\"Todd\", \"Brandon\").","passageway(\"Michael\", \"Duane\").","blackhead(\"Brandon\", \"Michael\").","- movement(\"Brandon\")."],"min_fact_dicts_for_query":["- mantle(\"Todd\", \"Duane\").","market(\"Michael\", \"Duane\")."],"noiseless_rules":["- cow(V0, V3) :- pea(V0, V3), autograph_album(V2, V3), not -weighing(V2, V3).","- clutch_bag(V2, V3) :- piston(V2, V3).","pea(V0, V3) :- - mantle(V0, V3).","autograph_album(V2, V3) :- market(V2, V3).","squeaker(V2) :- market(V2, V3).","piston(V2, V2) :- squeaker(V2), not -rockets(V2), not one_way_to_measure_expenses(V2), not -eye(V2), not duck(V2).","- reducing_hunger(V2) :- squeaker(V2), not -rockets(V2), not one_way_to_measure_expenses(V2), not -eye(V2), not duck(V2).","weighing(V2, V3) :- - clutch_bag(V2, V3), not harp(V2, V3).","- harp(V2, V2) :- - reducing_hunger(V2), not fly_aeroplanes(V2), not -flap(V2)."],"noisy_rules":{"a":["cow(V0, V3) :- - pea(V0, V3), - autograph_album(V2, V3), reducing_hunger(V2), - weighing(V2, V3).","cow(V2, V3) :- clutch_bag(V2, V3), not -reducing_hunger(V2), not weighing(V2, V3), harp(V2, V3)."],"b":["- autograph_album(V2, V3) :- - piston(V2, V3), not weighing(V2, V3), not -harp(V2, V3), cow(V0, V3).","- weighing(V0, V3) :- cow(V0, V3)."],"c":["- market(V3, V3) :- - pea(V0, V3).","- market(V2, V3) :- - autograph_album(V2, V3), not piston(V2, V3), not -reducing_hunger(V2), not -harp(V2, V3)."],"d":["- autograph_album(V2, V3) :- reducing_hunger(V2), - weighing(V2, V3), - purple(V2).","one_way_to_measure_expenses(V2) :- clutch_bag(V2, V3), not drug(V2, V3), not barber_chair(V2, V3)."],"e":["- lamb_chop(V2, V3) :- - trouble_spot(V2, V3).","husband_and_wife(V0) :- not movement(V1), kuwait(V0, V1), blackhead(V1, V2), passageway(V2, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_24_7_8_5_5_0.5_1.0_3_2_3","seed":24,"num_facts":7,"num_rules":9,"num_related_predicates":16,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" P8(\"Christopher\", \"Jerry\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P9(\"Christopher\", \"Jerry\").","P10(\"Larry\", \"Jerry\").","P11(\"Larry\").","- P12(\"Larry\").","P13(\"Larry\").","- P14(\"Larry\").","- P15(\"Christopher\", \"Jerry\")."],"noisy_facts":["- P18(\"Larry\").","- P21(\"Jerry\").","- P16(\"Larry\", \"Jerry\").","- P20(\"Colin\", \"Jerry\").","- P19(\"Colin\", \"Larry\").","P23(\"Colin\", \"Jerry\")."],"min_fact_dicts_for_query":["- P9(\"Christopher\", \"Jerry\").","P10(\"Larry\", \"Jerry\")."],"noiseless_rules":["- P8(V0, V3) :- P1(V0, V3), P2(V2, V3), not -P6(V2, V3).","- P0(V2, V3) :- P4(V0, V2), - P15(V0, V3).","P1(V0, V3) :- - P9(V0, V3).","P2(V2, V3) :- P10(V2, V3).","P3(V2) :- P10(V2, V3).","P4(V2, V2) :- P3(V2), not -P11(V2), not P12(V2).","- P5(V2) :- P3(V2), not -P11(V2), not P12(V2).","P6(V2, V3) :- - P0(V2, V3), not P7(V2, V3).","- P7(V2, V2) :- - P5(V2), not -P13(V2), not P14(V2)."],"noisy_rules":{"a":["P8(V0, V3) :- - P4(V0, V2), - P6(V2, V3), not -P7(V2, V3).","P8(V0, V3) :- - P1(V0, V3)."],"b":["P15(V0, V3) :- P0(V2, V3), - P3(V2), P8(V0, V3).","P12(V2) :- P7(V2, V3), P8(V0, V3)."],"c":["- P13(V2) :- - P4(V0, V2), - P6(V2, V3), not -P7(V2, V3).","- P11(V2) :- not -P0(V2, V3), P5(V2), P7(V2, V3)."],"d":["- P4(V2, V2) :- P7(V2, V3), not P16(V2, V3).","- P4(V2, V2) :- - P3(V2)."],"e":["- P17(V2, V3) :- - P18(V2), - P19(V1, V2), - P20(V1, V3).","- P22(V3) :- - P21(V3), P23(V1, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_64_6_8_8_11_0.5_1.0_5_1_2","seed":64,"num_facts":11,"num_rules":9,"num_related_predicates":20,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"racing(\"Samantha\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["explosive_compound.","raptors.","- quantum(\"Samantha\").","launching.","- buying_hamburger.","aire.","- case_joint.","handkerchief.","live_outside(\"Samantha\").","stablemate.","kickapoo."],"noisy_facts":[],"min_fact_dicts_for_query":["explosive_compound.","aire.","- case_joint.","handkerchief.","live_outside(\"Samantha\")."],"noiseless_rules":["racing(V1) :- aggression(V1), not -organization(V1), not -cracker(V1), not quantum(V1), not -live_outside(V1).","side(V2) :- - gate(V2), not cider(V2).","aggression(V2) :- side(V2), not hydroplane_racing(V2), not -new_zealand(V2), not -launching, not buying_hamburger.","organization(V1) :- explosive_compound, aire, - case_joint, handkerchief, live_outside(V1).","- gate(V1) :- explosive_compound, aire, - case_joint, handkerchief, live_outside(V1).","- hydroplane_racing(V1) :- explosive_compound, aire, - case_joint, handkerchief, live_outside(V1).","- cider(V1) :- cracker(V1), not -raptors.","cracker(V1) :- - quantum(V1), not -stablemate, not -kickapoo.","new_zealand(V1) :- - quantum(V1), not -stablemate, not -kickapoo."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_60_6_8_8_8_0.5_1.0_3_3_4","seed":60,"num_facts":10,"num_rules":9,"num_related_predicates":19,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"P8(\"Christian\", \"Katie\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P9(\"Jessica\", \"Christian\").","- P10(\"Christian\", \"Katie\").","- P11(\"Christian\", \"Katie\", \"George\").","P12(\"Betty\").","P13(\"Jessica\", \"Christian\", \"Katie\").","P14(\"Jessica\", \"Katie\", \"George\").","P15(\"Katie\", \"George\", \"Betty\").","P16(\"Jessica\", \"Christian\", \"George\").","- P17(\"Jessica\", \"Christian\", \"Betty\").","- P18(\"Jessica\", \"Christian\", \"Betty\")."],"noisy_facts":["- P20(\"Jessica\", \"Katie\", \"Betty\").","- P24(\"Jessica\", \"Christian\", \"Betty\").","P19(\"Jessica\", \"Katie\", \"Betty\").","- P22(\"Jessica\", \"Katie\", \"George\")."],"min_fact_dicts_for_query":["- P9(\"Jessica\", \"Christian\").","- P10(\"Christian\", \"Katie\").","- P11(\"Christian\", \"Katie\", \"George\").","P13(\"Jessica\", \"Christian\", \"Katie\").","P14(\"Jessica\", \"Katie\", \"George\").","P15(\"Katie\", \"George\", \"Betty\").","- P17(\"Jessica\", \"Christian\", \"Betty\")."],"noiseless_rules":["P8(V1, V2) :- P0(V0, V2), P1(V3, V4), - P11(V1, V2, V3).","P0(V0, V2) :- - P4(V3, V4), P5(V0, V1, V2), not -P16(V0, V1, V3).","P1(V3, V4) :- - P3(V0, V2), P6(V0, V2, V4), P15(V2, V3, V4).","P2(V4) :- - P3(V0, V2), P6(V0, V2, V4), P15(V2, V3, V4).","- P3(V0, V2) :- - P9(V0, V1), P13(V0, V1, V2), P14(V0, V2, V3).","- P4(V4, V4) :- P2(V4), not -P7(V4), not -P12(V4).","P5(V0, V1, V2) :- - P10(V1, V2), - P17(V0, V1, V4), not P18(V0, V1, V4).","P6(V0, V2, V4) :- - P10(V1, V2), - P17(V0, V1, V4), not P18(V0, V1, V4).","P7(V4) :- - P10(V1, V2), - P17(V0, V1, V4), not P18(V0, V1, V4)."],"noisy_rules":{"a":["- P8(V4, V4) :- P4(V3, V4), - P7(V4).","- P8(V4, V4) :- - P2(V4), - P7(V4)."],"b":["- P13(V1, V1, V2) :- - P8(V1, V2).","- P0(V0, V2) :- - P6(V0, V2, V4), not P7(V4), - P8(V1, V2)."],"c":["P18(V0, V2, V4) :- - P0(V0, V2), P4(V3, V4), - P6(V0, V2, V4).","- P7(V4) :- - P1(V3, V4), - P2(V4), not -P4(V3, V4)."],"d":["P11(V2, V2, V0) :- - P6(V0, V2, V4), - P7(V4), not -P19(V0, V2, V4).","P11(V2, V2, V3) :- P4(V3, V4), - P6(V0, V2, V4), not P20(V0, V2, V4)."],"e":["P21(V0, V2, V3) :- - P22(V0, V2, V3).","- P23(V0, V4) :- - P24(V0, V1, V4)."]}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_76_8_7_5_7_0.5_1.0_3_1_2","seed":76,"num_facts":10,"num_rules":8,"num_related_predicates":18,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P7(\"Samantha\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P8(\"Robert\").","P9.","- P10(\"Robert\").","P11(\"Robert\").","- P12.","- P13(\"Samantha\").","- P14(\"Samantha\").","- P15(\"Robert\").","P16(\"Robert\").","- P17(\"Robert\")."],"noisy_facts":["- P22(\"Robert\").","- P18(\"Samantha\").","P23(\"Robert\").","- P19(\"Robert\").","P25(\"Robert\").","P21(\"Robert\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- P7(V1) :- P0(V1), not P6(V1), not P13(V1).","P0(V1) :- P2(V1), not P4(V1), not P14(V1).","- P1(V0) :- P8(V0), not P17(V0).","P2(V0) :- P8(V0), not -P9.","- P3(V0) :- - P10(V0), not P15(V0), not -P16(V0).","- P4(V0) :- - P1(V0), not P3(V0), not -P5(V0).","P5(V0) :- P11(V0).","- P6(V0) :- P8(V0), not P12."],"noisy_rules":{"a":["P7(V1) :- P1(V0), - P2(V1), not P5(V0).","P7(V0) :- not -P1(V0), - P5(V0)."],"b":["- P9(V1) :- not P0(V1), P1(V0), P7(V1).","P10(V1) :- P7(V1)."],"c":["- P2(V1) :- P3(V0), P4(V1).","P1(V0) :- - P0(V1), P3(V0), - P5(V0)."],"d":["- P0(V1) :- P4(V1), not P18(V1).","P1(V0) :- - P5(V0), not P19(V0)."],"e":["P20(V0) :- P21(V0), not P22(V0), not -P23(V0).","P24(V0) :- P25(V0)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_48_6_7_7_9_0.5_1.0_3_3_4","seed":48,"num_facts":9,"num_rules":8,"num_related_predicates":17,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" naval(\"Joshua\", \"Misty\", \"Dean\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["having_to_eat(\"Joshua\", \"Misty\", \"David\").","scrapbook(\"Joshua\", \"Misty\", \"Dean\").","brainstem(\"Joshua\", \"Kenneth\", \"Dean\").","- ram(\"Misty\", \"Kenneth\", \"Dean\").","cigar_butt(\"Misty\", \"Kenneth\", \"Dean\").","- school_for_young_children(\"Misty\", \"Kenneth\", \"Dean\").","- surgeon(\"Joshua\", \"Misty\", \"Dean\").","- gaggle_of(\"Joshua\", \"Misty\", \"Dean\").","fail_to_work(\"Misty\", \"Kenneth\", \"David\")."],"noisy_facts":["day(\"Joshua\", \"Misty\").","- kitsch(\"Joshua\", \"Misty\", \"Dean\").","farm.","anomaly(\"Joshua\", \"Misty\", \"David\").","- ladder_back(\"Misty\", \"Kenneth\", \"David\")."],"min_fact_dicts_for_query":["having_to_eat(\"Joshua\", \"Misty\", \"David\").","scrapbook(\"Joshua\", \"Misty\", \"Dean\").","brainstem(\"Joshua\", \"Kenneth\", \"Dean\")."],"noiseless_rules":["- naval(V0, V1, V4) :- - runway(V1, V2), piece(V1, V4), transpiration(V0, V1, V3).","- runway(V1, V2) :- - death(V3), - studying_for_test(V1, V2), not -fail_to_work(V1, V2, V3).","- death(V3) :- having_to_eat(V0, V1, V3), brainstem(V0, V2, V4), not ram(V1, V2, V4).","- weddings(V0, V1, V4) :- having_to_eat(V0, V1, V3), brainstem(V0, V2, V4), not ram(V1, V2, V4).","- throw(V1, V2, V4) :- having_to_eat(V0, V1, V3), brainstem(V0, V2, V4), not ram(V1, V2, V4).","- studying_for_test(V1, V2) :- - weddings(V0, V1, V4), brainstem(V0, V2, V4), not surgeon(V0, V1, V4).","piece(V1, V4) :- - throw(V1, V2, V4), not -cigar_butt(V1, V2, V4), not school_for_young_children(V1, V2, V4).","transpiration(V0, V1, V4) :- scrapbook(V0, V1, V4), not surgeon(V0, V1, V4), not gaggle_of(V0, V1, V4)."],"noisy_rules":{"a":["naval(V1, V1, V2) :- runway(V1, V2), studying_for_test(V1, V2).","naval(V1, V1, V1) :- death(V3), studying_for_test(V1, V2)."],"b":["death(V0) :- throw(V1, V2, V4), naval(V0, V1, V4).","- having_to_eat(V0, V1, V1) :- naval(V0, V1, V4)."],"c":["studying_for_test(V1, V2) :- runway(V1, V2), death(V3), throw(V1, V2, V4).","- having_to_eat(V4, V1, V3) :- death(V3), - piece(V1, V4)."],"d":["- fail_to_work(V1, V0, V3) :- - transpiration(V0, V1, V3), anomaly(V0, V1, V3).","gaggle_of(V3, V3, V3) :- death(V3), farm."],"e":["rubber_band(V1, V3) :- day(V0, V1), - ladder_back(V1, V2, V3).","- sound(V0, V1, V4) :- - kitsch(V0, V1, V4)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_66_9_10_8_11_0.5_1.0_5_3_4","seed":66,"num_facts":13,"num_rules":11,"num_related_predicates":24,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" P10(\"Jeffery\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P11(\"Dana\", \"Jeffery\", \"Tara\").","P12(\"Shawn\", \"Jeffery\", \"Anne\").","P13(\"Shawn\", \"Jeffery\", \"Anne\").","P14(\"Dana\", \"Jeffery\", \"Tara\").","P15(\"Shawn\", \"Jeffery\", \"Tara\").","P16(\"Shawn\", \"Dana\", \"Tara\").","P17(\"Shawn\", \"Jeffery\", \"Tara\").","P18(\"Dana\", \"Jeffery\", \"Tara\").","- P19(\"Dana\", \"Jeffery\", \"Tara\").","P20(\"Dana\", \"Jeffery\", \"Tara\").","- P21(\"Dana\", \"Jeffery\", \"Tara\").","P22(\"Shawn\", \"Jeffery\").","- P23(\"Shawn\", \"Jeffery\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- P11(\"Dana\", \"Jeffery\", \"Tara\").","P12(\"Shawn\", \"Jeffery\", \"Anne\").","P14(\"Dana\", \"Jeffery\", \"Tara\").","P15(\"Shawn\", \"Jeffery\", \"Tara\").","P16(\"Shawn\", \"Dana\", \"Tara\")."],"noiseless_rules":["- P10(V2) :- P0(V2), P1(V2), - P5(V2, V4), P8(V0, V1, V3), not -P18(V1, V2, V4).","P0(V2) :- - P2(V2), - P4(V0, V2), P7(V0, V3), P16(V0, V1, V4), not -P17(V0, V2, V4).","P1(V2) :- - P11(V1, V2, V4), not -P18(V1, V2, V4), not P19(V1, V2, V4), not -P20(V1, V2, V4), not P21(V1, V2, V4).","- P2(V2) :- - P11(V1, V2, V4), not -P18(V1, V2, V4), not P19(V1, V2, V4), not -P20(V1, V2, V4), not P21(V1, V2, V4).","P3(V0) :- P12(V0, V2, V3).","- P4(V0, V2) :- P12(V0, V2, V3), not -P13(V0, V2, V3).","- P5(V2, V4) :- P14(V1, V2, V4).","- P6(V0, V2) :- P15(V0, V2, V4).","P7(V0, V2) :- - P5(V2, V4), - P6(V0, V2), not P9(V0, V2), not -P22(V0, V2), not P23(V0, V2).","P8(V0, V0, V0) :- P3(V0).","- P9(V0, V0) :- P3(V0)."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_85_10_15_10_13_0.5_1.0_5_3_4","seed":85,"num_facts":13,"num_rules":16,"num_related_predicates":29,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"P15(\"Amy\", \"Willie\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P16(\"Courtney\", \"Willie\", \"Renee\").","P17(\"Renee\").","P18(\"Courtney\", \"Renee\", \"Shawn\").","- P19(\"Courtney\", \"Renee\", \"Shawn\").","P20(\"Amy\", \"Willie\", \"Renee\").","P21(\"Courtney\", \"Renee\", \"Shawn\").","- P22(\"Courtney\", \"Renee\", \"Shawn\").","- P23(\"Willie\", \"Shawn\").","- P24(\"Renee\", \"Shawn\").","P25(\"Amy\", \"Courtney\", \"Willie\").","- P26(\"Courtney\", \"Willie\", \"Renee\").","P27(\"Courtney\", \"Willie\", \"Renee\").","- P28(\"Courtney\", \"Willie\", \"Renee\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["P15(V0, V2) :- P0(V1, V4), P3(V0, V1, V3), P6(V0, V1, V4), P12(V0, V3, V4), - P28(V1, V2, V3).","P0(V1, V3) :- - P16(V1, V2, V3), not -P27(V1, V2, V3), not P28(V1, V2, V3).","- P1(V3) :- - P16(V1, V2, V3), not -P27(V1, V2, V3), not P28(V1, V2, V3).","P2(V1, V3) :- - P16(V1, V2, V3), not -P27(V1, V2, V3), not P28(V1, V2, V3).","P3(V0, V1, V3) :- P17(V3), - P23(V2, V4), - P24(V3, V4), P25(V0, V1, V2), not P26(V1, V2, V3).","P4(V0, V3) :- P17(V3), - P23(V2, V4), - P24(V3, V4), P25(V0, V1, V2), not P26(V1, V2, V3).","- P5(V3, V4) :- P17(V3), - P23(V2, V4), - P24(V3, V4), P25(V0, V1, V2), not P26(V1, V2, V3).","P6(V3, V3, V3) :- - P1(V3).","- P7(V3, V3) :- - P1(V3).","P8(V0, V3, V0) :- P4(V0, V3).","- P9(V0, V3, V3) :- P4(V0, V3).","- P10(V3) :- - P5(V3, V4).","P11(V2, V3) :- - P7(V2, V3), P8(V1, V3, V4), not P13(V1, V3, V4), not -P21(V1, V3, V4), not P22(V1, V3, V4).","P12(V0, V0, V0) :- - P10(V0), not -P14(V0).","- P13(V1, V3, V4) :- P8(V1, V3, V4), not -P18(V1, V3, V4), not P19(V1, V3, V4).","P14(V0) :- P2(V1, V3), - P9(V0, V2, V3), P11(V2, V3), - P19(V1, V3, V4), not -P20(V0, V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_47_6_7_3_5_0.5_1.0_5_3_4","seed":47,"num_facts":6,"num_rules":8,"num_related_predicates":14,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" P7(\"Michele\", \"Sandra\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["P8(\"Kelly\", \"Matthew\", \"Sandra\").","P9(\"Kelly\", \"Matthew\", \"Sandra\").","P10(\"Michele\", \"Amanda\", \"Matthew\").","P11(\"Kelly\", \"Matthew\", \"Sandra\").","P12(\"Kelly\", \"Matthew\", \"Sandra\").","P13(\"Kelly\", \"Matthew\", \"Sandra\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P8(\"Kelly\", \"Matthew\", \"Sandra\").","P9(\"Kelly\", \"Matthew\", \"Sandra\").","P10(\"Michele\", \"Amanda\", \"Matthew\").","P11(\"Kelly\", \"Matthew\", \"Sandra\").","P12(\"Kelly\", \"Matthew\", \"Sandra\").","P13(\"Kelly\", \"Matthew\", \"Sandra\")."],"noiseless_rules":["P7(V1, V4) :- P0(V1), P5(V0, V1, V2), P8(V0, V3, V4).","P0(V0) :- P8(V0, V3, V4), P9(V0, V3, V4).","P1(V3, V4) :- P8(V0, V3, V4), P9(V0, V3, V4).","P2(V0, V3, V4) :- P8(V0, V3, V4), P9(V0, V3, V4).","P3(V0, V4, V3) :- P9(V0, V3, V4), P11(V0, V3, V4), P12(V0, V3, V4), P13(V0, V3, V4).","P4(V1, V2) :- P10(V1, V2, V3).","P5(V2, V1, V2) :- P1(V2, V4), P4(V1, V2), P6(V1, V2).","P6(V1, V2) :- P2(V0, V1, V4), P3(V0, V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_67_7_8_8_11_0.5_1.0_5_2_3","seed":67,"num_facts":10,"num_rules":9,"num_related_predicates":19,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"graceful(\"Joshua\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["body(\"William\", \"Shawn\").","- do_leave_fingerprints(\"Shawn\").","money_building(\"William\", \"Cynthia\").","propulsion(\"William\", \"Shawn\").","- cappella_singing(\"Joshua\", \"Shawn\").","- heart_pounding_experience(\"Cynthia\", \"Shawn\").","- defecation(\"William\", \"Shawn\").","profit(\"William\", \"Shawn\").","persian_deity(\"Joshua\", \"Shawn\").","humate(\"William\", \"Shawn\")."],"noisy_facts":["fragmentation_bomb(\"William\", \"Shawn\").","bullet(\"Joshua\", \"Shawn\").","pyxis(\"William\", \"Joshua\").","- night_terror(\"Joshua\", \"Cynthia\").","raccoon(\"Joshua\").","- dentine(\"William\", \"Shawn\")."],"min_fact_dicts_for_query":["body(\"William\", \"Shawn\").","- do_leave_fingerprints(\"Shawn\").","money_building(\"William\", \"Cynthia\").","propulsion(\"William\", \"Shawn\").","- cappella_singing(\"Joshua\", \"Shawn\").","- defecation(\"William\", \"Shawn\").","profit(\"William\", \"Shawn\").","persian_deity(\"Joshua\", \"Shawn\")."],"noiseless_rules":["graceful(V1) :- - metropolis(V1), line_item(V3), not -nymphalid(V1, V3).","calcium_ion(V0, V3) :- body(V0, V3), persian_deity(V1, V3).","- from_cow(V0, V3) :- fungible(V0, V3).","- all_people(V1, V3) :- - from_cow(V0, V3), oxbow_lake(V0, V3), nymphalid(V1, V3), not defecation(V0, V3).","- metropolis(V1) :- - do_leave_fingerprints(V3), money_building(V0, V2), propulsion(V0, V3), - cappella_singing(V1, V3), not heart_pounding_experience(V2, V3).","oxbow_lake(V0, V3) :- - do_leave_fingerprints(V3), money_building(V0, V2), propulsion(V0, V3), - cappella_singing(V1, V3), not heart_pounding_experience(V2, V3).","line_item(V3) :- - all_people(V2, V3), - defecation(V0, V3), profit(V0, V3), persian_deity(V1, V3), not -humate(V0, V3).","nymphalid(V0, V3) :- calcium_ion(V0, V3).","fungible(V0, V3) :- calcium_ion(V0, V3)."],"noisy_rules":{"a":["- graceful(V1) :- from_cow(V0, V3), - oxbow_lake(V0, V3), - nymphalid(V1, V3), not fungible(V0, V3).","- graceful(V0) :- - calcium_ion(V0, V3), from_cow(V0, V3), - oxbow_lake(V0, V3), - line_item(V3), - fungible(V0, V3)."],"b":["- nymphalid(V1, V3) :- - calcium_ion(V0, V3), - graceful(V1).","- oxbow_lake(V0, V3) :- - calcium_ion(V0, V3), from_cow(V0, V3), - oxbow_lake(V0, V3), - line_item(V3), - graceful(V1)."],"c":["do_leave_fingerprints(V3) :- not -from_cow(V0, V3), metropolis(V1), not oxbow_lake(V0, V3), - line_item(V3), - fungible(V0, V3).","heart_pounding_experience(V1, V3) :- - nymphalid(V1, V3)."],"d":["sweden(V1) :- raccoon(V1).","defecation(V0, V3) :- metropolis(V1), not oxbow_lake(V0, V3), - dentine(V0, V3), not -fragmentation_bomb(V0, V3)."],"e":["pressure_dome(V1, V2) :- - night_terror(V1, V2).","canoe(V0, V1) :- pyxis(V0, V1), bullet(V1, V3)."]}},"num_min_facts_for_query":8,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_26_8_11_2_5_0.5_1.0_3_2_3","seed":26,"num_facts":4,"num_rules":12,"num_related_predicates":16,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" machines(\"Kimberly\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["paper(\"Michael\", \"Kimberly\").","can(\"Michael\", \"Kimberly\").","airplanes(\"Michael\").","car(\"Michael\")."],"noisy_facts":["activity(\"Kyle\", \"Kimberly\").","resistance(\"Kyle\", \"Kimberly\").","- change_of_state(\"Kyle\", \"Michael\").","P19(\"Kyle\", \"Kimberly\").","plate(\"Michael\").","- nest(\"Kyle\", \"Michael\")."],"min_fact_dicts_for_query":["paper(\"Michael\", \"Kimberly\").","can(\"Michael\", \"Kimberly\")."],"noiseless_rules":["- machines(V3) :- - wing(V2), - metal(V2, V3), not part(V2, V3).","- wing(V2) :- flat(V2), - bird(V0, V2), - flying(V0, V3).","birds(V0, V3) :- flat(V2), - bird(V0, V2), - flying(V0, V3).","flat(V2) :- paper(V2, V3).","- planes(V2) :- paper(V2, V3).","- metal(V2, V3) :- can(V2, V3).","- bird(V0, V3) :- - flying(V0, V3), not -factory(V0, V3).","- part(V0, V3) :- birds(V0, V3), not arrive_at_airports(V0, V3).","- flying(V2, V2) :- - planes(V2), not -airplanes(V2), not -car(V2).","- arrive_at_airports(V2, V2) :- - planes(V2), not -airplanes(V2), not -car(V2).","- crash(V2) :- - planes(V2), not -airplanes(V2), not -car(V2).","factory(V3, V3) :- flat(V2), - crash(V3), not -can(V2, V3)."],"noisy_rules":{"a":["machines(V3) :- planes(V2), not -part(V2, V3), - factory(V0, V3).","machines(V3) :- arrive_at_airports(V0, V3), not -crash(V3), not factory(V0, V3)."],"b":["- airplanes(V2) :- wing(V2), planes(V2), machines(V3).","flying(V0, V3) :- bird(V0, V2), part(V2, V3), not -machines(V3)."],"c":["arrive_at_airports(V0, V3) :- wing(V2), - birds(V0, V3), crash(V3).","part(V2, V3) :- not -wing(V2), planes(V2), flying(V0, V3)."],"d":["- birds(V0, V2) :- not -wing(V2), bird(V0, V2), - nest(V0, V2).","- flat(V2) :- wing(V2), not -plate(V2)."],"e":["berry(V0) :- P19(V0, V3).","- capability(V0) :- - change_of_state(V0, V2), activity(V0, V3), not -resistance(V0, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_20_9_12_12_13_0.5_1.0_5_1_2","seed":20,"num_facts":16,"num_rules":13,"num_related_predicates":29,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P12(\"James\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P13.","P14(\"James\").","- P15(\"James\").","P16(\"James\").","P17.","- P18.","- P19.","- P20.","P21(\"James\").","- P22(\"James\").","P23(\"James\").","- P24(\"James\").","- P25(\"James\").","- P26(\"James\").","P27(\"James\").","- P28(\"James\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- P13.","- P15(\"James\")."],"noiseless_rules":["- P12(V2) :- P0(V2), not P1(V2), not P9(V2), not P10(V2).","P0(V2) :- - P2(V2), not P8(V2).","- P1(V2) :- - P3(V2), not P5(V2), not -P7(V2), not -P11(V2).","- P2(V2) :- - P13, - P15(V2).","- P3(V2) :- - P13, - P15(V2).","- P4(V2) :- - P13, - P15(V2).","- P5(V2) :- P14(V2).","- P6(V2) :- P14(V2).","P7(V2) :- - P15(V2), not P25(V2), not P26(V2), not -P27(V2), not P28(V2).","- P8(V2) :- - P6(V2), not -P21(V2), not P22(V2), not -P23(V2), not P24(V2).","- P9(V2) :- P16(V2).","- P10(V1) :- - P4(V1), not -P17, not P18, not P19, not P20.","P11(V1) :- - P4(V1), not -P17, not P18, not P19, not P20."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_42_6_6_3_5_0.5_1.0_5_3_4","seed":42,"num_facts":7,"num_rules":7,"num_related_predicates":14,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"change_of_integrity(\"Brandon\", \"Kimberly\", \"Cheryl\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["auto_da_fe(\"Brandon\", \"Alicia\", \"Juan\").","making_fast_food_restaurant_rich(\"Brandon\", \"Alicia\", \"Kimberly\").","lemon(\"Brandon\", \"Alicia\", \"Kimberly\").","- coat_surface(\"Alicia\", \"Kimberly\", \"Cheryl\").","incineration(\"Brandon\", \"Alicia\", \"Kimberly\").","lighter(\"Juan\", \"Kimberly\", \"Cheryl\").","- ignition(\"Juan\", \"Kimberly\", \"Cheryl\")."],"noisy_facts":["- lager(\"Brandon\").","- zygomatic_process(\"Alicia\", \"Juan\", \"Kimberly\").","jugale(\"Brandon\", \"Alicia\").","- nave(\"Brandon\", \"Cheryl\").","- zygoma(\"Juan\", \"Cheryl\").","master(\"Brandon\")."],"min_fact_dicts_for_query":["auto_da_fe(\"Brandon\", \"Alicia\", \"Juan\").","making_fast_food_restaurant_rich(\"Brandon\", \"Alicia\", \"Kimberly\").","- coat_surface(\"Alicia\", \"Kimberly\", \"Cheryl\").","incineration(\"Brandon\", \"Alicia\", \"Kimberly\").","lighter(\"Juan\", \"Kimberly\", \"Cheryl\")."],"noiseless_rules":["change_of_integrity(V0, V3, V4) :- - soccer_ball(V1), - welsh_pony(V0, V1), - torture(V1, V3), - wooly(V1, V3, V4), not -execution(V1, V3, V4).","- soccer_ball(V1) :- auto_da_fe(V0, V1, V2), incineration(V0, V1, V3), lighter(V2, V3, V4), not ignition(V2, V3, V4).","burning(V0) :- auto_da_fe(V0, V1, V2), incineration(V0, V1, V3), lighter(V2, V3, V4), not ignition(V2, V3, V4).","- welsh_pony(V0, V1) :- making_fast_food_restaurant_rich(V0, V1, V3).","- torture(V1, V3) :- making_fast_food_restaurant_rich(V0, V1, V3), not -lemon(V0, V1, V3).","- wooly(V1, V3, V4) :- - coat_surface(V1, V3, V4).","execution(V1, V3, V0) :- burning(V0), incineration(V0, V1, V3)."],"noisy_rules":{"a":["- change_of_integrity(V0, V3, V4) :- - burning(V0), welsh_pony(V0, V1), wooly(V1, V3, V4), not execution(V1, V3, V4).","- change_of_integrity(V0, V3, V4) :- not -soccer_ball(V1), - burning(V0), not -welsh_pony(V0, V1), wooly(V1, V3, V4), not execution(V1, V3, V4)."],"b":["- burning(V0) :- - change_of_integrity(V0, V3, V4).","torture(V4, V3) :- - change_of_integrity(V0, V3, V4)."],"c":["- lighter(V0, V3, V4) :- not -soccer_ball(V1), - burning(V0), not -torture(V1, V3), wooly(V1, V3, V4).","- incineration(V0, V1, V3) :- soccer_ball(V1), - burning(V0), torture(V1, V3), wooly(V1, V3, V4)."],"d":["ignition(V0, V3, V4) :- soccer_ball(V1), - burning(V0), wooly(V1, V3, V4), not execution(V1, V3, V4), - lager(V0).","torture(V1, V3) :- not burning(V0), not -welsh_pony(V0, V1), wooly(V1, V3, V4), - execution(V1, V3, V4), master(V0)."],"e":["area(V0) :- - nave(V0, V4).","cheekbone(V0, V3) :- jugale(V0, V1), - zygoma(V2, V4), - zygomatic_process(V1, V2, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_70_6_9_4_6_0.5_1.0_3_2_3","seed":70,"num_facts":5,"num_rules":10,"num_related_predicates":15,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"binomial(\"Jenna\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["father(\"Shane\").","- shoes(\"Jenna\", \"Robert\").","- amiga(\"Jenna\", \"Shane\").","- brake(\"Jenna\", \"Robert\").","afterglow(\"Jenna\", \"Robert\")."],"noisy_facts":["- topper(\"Jeffery\", \"Robert\").","unit_of_income(\"Jenna\", \"Robert\").","bristle_brush(\"Jeffery\", \"Robert\").","- territoriality(\"Jenna\", \"Robert\").","- pouter_pigeon(\"Jeffery\", \"Jenna\")."],"min_fact_dicts_for_query":["father(\"Shane\").","- shoes(\"Jenna\", \"Robert\")."],"noiseless_rules":["binomial(V1) :- songbird(V3), field_grade_officer(V0, V1), not -curassow(V1, V3).","oriole(V1, V2) :- father(V3), - shoes(V1, V2), not amiga(V1, V3).","roach(V1, V2) :- father(V3), - shoes(V1, V2), not amiga(V1, V3).","- carnivore(V2) :- father(V3), - shoes(V1, V2), not amiga(V1, V3).","songbird(V2) :- oriole(V1, V2), not -arthromere(V1, V2), not catch_mouse(V1, V2).","field_grade_officer(V1, V1) :- oriole(V1, V2), not -roach(V1, V2), not -afterglow(V1, V2).","beef_jerky(V2) :- oriole(V1, V2), not -roach(V1, V2), not -afterglow(V1, V2).","arthromere(V1, V2) :- oriole(V1, V2), not -roach(V1, V2), not -afterglow(V1, V2).","- catch_mouse(V2, V2) :- beef_jerky(V2).","curassow(V1, V1) :- - carnivore(V2), arthromere(V1, V2), not brake(V1, V2)."],"noisy_rules":{"a":["- binomial(V3) :- - songbird(V3).","- binomial(V1) :- - beef_jerky(V2), - curassow(V1, V3)."],"b":["- arthromere(V1, V2) :- - roach(V1, V2), - binomial(V1).","carnivore(V3) :- - curassow(V1, V3), - binomial(V1)."],"c":["- field_grade_officer(V1, V1) :- - beef_jerky(V2), - arthromere(V1, V2), not -catch_mouse(V1, V2).","- beef_jerky(V2) :- - songbird(V3), - field_grade_officer(V0, V1), catch_mouse(V1, V2)."],"d":["- curassow(V1, V2) :- - oriole(V1, V2).","shoes(V1, V2) :- not oriole(V1, V2), - arthromere(V1, V2), not territoriality(V1, V2)."],"e":["- episode(V0, V1) :- - topper(V0, V2), unit_of_income(V1, V2).","bier(V1, V2) :- - pouter_pigeon(V0, V1), bristle_brush(V0, V2)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_18_7_8_5_6_0.5_1.0_3_2_3","seed":18,"num_facts":7,"num_rules":9,"num_related_predicates":16,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.8333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"caroling(\"Danny\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- wide(\"Amber\", \"Danny\").","woof(\"Lacey\", \"Donald\").","- lot(\"Donald\").","phones(\"Donald\").","roman_catholic(\"Amber\", \"Danny\").","cash_bar(\"Amber\", \"Danny\").","- grammatical_relation(\"Amber\", \"Danny\")."],"noisy_facts":["cloud(\"Amber\", \"Danny\").","barbecue(\"Lacey\", \"Amber\").","knocker(\"Lacey\", \"Amber\").","dougout.","drinking_place(\"Amber\", \"Danny\").","- gulf_of_saint_lawrence(\"Amber\", \"Danny\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["caroling(V2) :- making_clothes_look_nicer(V1), saturniid(V1, V2), - speech_organ(V1, V3).","sky(V1, V2) :- - wide(V1, V2).","army_ant(V3) :- woof(V0, V3).","making_clothes_look_nicer(V1) :- sky(V1, V2), not stop(V1, V2), not -cash_bar(V1, V2).","saturniid(V3, V3) :- army_ant(V3), not lot(V3), not -phones(V3).","towhee(V3, V3) :- army_ant(V3), not lot(V3), not -phones(V3).","- stop(V1, V2) :- - still(V1, V2), not -roman_catholic(V1, V2), not -cash_bar(V1, V2).","- speech_organ(V1, V1) :- towhee(V1, V2), not grammatical_relation(V1, V2).","- still(V1, V2) :- towhee(V1, V2), not grammatical_relation(V1, V2)."],"noisy_rules":{"a":["- caroling(V3) :- - army_ant(V3).","- caroling(V2) :- - saturniid(V1, V2)."],"b":["still(V2, V2) :- - caroling(V2).","- saturniid(V1, V2) :- - towhee(V1, V2), - caroling(V2)."],"c":["- making_clothes_look_nicer(V3) :- - army_ant(V3).","wide(V1, V2) :- - saturniid(V1, V2), stop(V1, V2), speech_organ(V1, V3)."],"d":["black_kite(V2) :- - towhee(V1, V2).","stop(V3, V3) :- - army_ant(V3), dougout."],"e":["- storing_dry_goods(V1) :- barbecue(V0, V1), cloud(V1, V2), not -drinking_place(V1, V2).","- swallow_tailed_kite(V0, V2) :- knocker(V0, V1), - gulf_of_saint_lawrence(V1, V2)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_26_8_11_5_7_0.5_1.0_3_3_4","seed":26,"num_facts":7,"num_rules":12,"num_related_predicates":19,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"diving(\"Jeremy\", \"Brenda\", \"Blake\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- pond(\"Laura\", \"Emily\", \"Brenda\").","abnegation(\"Laura\", \"Jeremy\", \"Emily\").","- exercise(\"Laura\", \"Jeremy\", \"Blake\").","- seat_belts(\"Laura\", \"Jeremy\", \"Blake\").","- sugar(\"Emily\", \"Brenda\", \"Blake\").","- water_in_ocean(\"Emily\", \"Brenda\", \"Blake\").","boat(\"Laura\", \"Emily\", \"Brenda\")."],"noisy_facts":["figure(\"Jeremy\", \"Emily\", \"Brenda\").","- cane(\"Laura\", \"Emily\", \"Blake\").","find_outside(\"Jeremy\", \"Emily\", \"Brenda\").","- hypostasis(\"Laura\", \"Brenda\").","goats(\"Jeremy\", \"Emily\", \"Blake\").","- songbook(\"Jeremy\", \"Emily\", \"Blake\").","- wheeze(\"Laura\", \"Brenda\")."],"min_fact_dicts_for_query":["- pond(\"Laura\", \"Emily\", \"Brenda\").","abnegation(\"Laura\", \"Jeremy\", \"Emily\").","- exercise(\"Laura\", \"Jeremy\", \"Blake\").","boat(\"Laura\", \"Emily\", \"Brenda\")."],"noiseless_rules":["diving(V1, V3, V4) :- ocean(V0, V3), pool(V1, V4), not -swimming_pool(V0, V1, V3).","ocean(V0, V3) :- fish(V0, V1, V2), - sea(V0, V2, V3).","animal(V1, V2, V3) :- fish(V0, V1, V2), - sea(V0, V2, V3).","fish(V0, V3, V2) :- - pond(V0, V2, V3).","- ducks(V2, V3) :- - pond(V0, V2, V3).","pool(V1, V4) :- abnegation(V0, V1, V2), - exercise(V0, V1, V4), not seat_belts(V0, V1, V4).","- sea(V0, V2, V3) :- - lake(V2), salt(V1, V3), boat(V0, V2, V3).","swimming_pool(V3, V1, V3) :- animal(V1, V2, V3), not form_of_transportation(V1, V2, V3).","- lake(V2) :- - ducks(V2, V4), - pond(V0, V2, V3), not -boat(V0, V2, V3).","- form_of_transportation(V2, V2, V3) :- - ducks(V2, V4), - pond(V0, V2, V3), not -boat(V0, V2, V3).","small(V2, V3, V4) :- - ducks(V2, V4), - pond(V0, V2, V3), not -boat(V0, V2, V3).","salt(V4, V3) :- small(V2, V3, V4), not sugar(V2, V3, V4), not water_in_ocean(V2, V3, V4)."],"noisy_rules":{"a":["- diving(V1, V3, V1) :- - swimming_pool(V0, V1, V3).","- diving(V1, V3, V2) :- - ocean(V0, V3), form_of_transportation(V1, V2, V3)."],"b":["- boat(V3, V4, V3) :- - diving(V1, V3, V4).","exercise(V0, V1, V4) :- - pool(V1, V4), - swimming_pool(V0, V1, V3), - diving(V1, V3, V4)."],"c":["- swimming_pool(V0, V1, V3) :- sea(V0, V2, V3), form_of_transportation(V1, V2, V3).","water_in_ocean(V4, V4, V4) :- - pool(V1, V4)."],"d":["- salt(V1, V3) :- - ocean(V0, V3), form_of_transportation(V1, V2, V3), - hypostasis(V0, V3).","- skating(V1, V2, V2) :- form_of_transportation(V1, V2, V3), figure(V1, V2, V3)."],"e":["roads(V2, V3, V4) :- find_outside(V1, V2, V3), - songbook(V1, V2, V4), goats(V1, V2, V4).","breathing(V0, V3) :- - wheeze(V0, V3), - cane(V0, V2, V4)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_95_5_6_6_7_0.5_1.0_3_2_3","seed":95,"num_facts":8,"num_rules":7,"num_related_predicates":15,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"indefinite_quantity(\"Karen\", \"Bryan\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- bucket(\"Charles\", \"Susan\").","- oil(\"Karen\", \"Bryan\").","common_canary(\"Karen\", \"Bryan\").","- mouthful(\"Karen\", \"Susan\").","- teacup(\"Susan\", \"Bryan\").","race(\"Susan\", \"Bryan\").","- parking_lot(\"Susan\", \"Bryan\").","- planes(\"Karen\", \"Susan\")."],"noisy_facts":["tablespoon(\"Karen\", \"Bryan\").","- cheese(\"Charles\").","- places_to_go(\"Charles\", \"Bryan\").","destorying_things_from_high_above(\"Karen\", \"Bryan\").","- do_in_gym(\"Charles\").","playing_game(\"Karen\", \"Bryan\")."],"min_fact_dicts_for_query":["- bucket(\"Charles\", \"Susan\").","- oil(\"Karen\", \"Bryan\").","- mouthful(\"Karen\", \"Susan\").","- teacup(\"Susan\", \"Bryan\").","race(\"Susan\", \"Bryan\")."],"noiseless_rules":["indefinite_quantity(V1, V3) :- containerful(V0, V1), cars(V1, V2), - can(V1, V3).","containerful(V0, V1) :- - bucket(V0, V2), - mouthful(V1, V2), - teacup(V2, V3).","cars(V1, V2) :- - oil(V1, V3), race(V2, V3), not parking_lot(V2, V3).","park(V1, V3) :- - oil(V1, V3), race(V2, V3), not parking_lot(V2, V3).","- black(V2) :- - oil(V1, V3), race(V2, V3), not parking_lot(V2, V3).","- can(V1, V3) :- park(V1, V3), not crash(V1, V3), not -common_canary(V1, V3).","- crash(V1, V1) :- cars(V1, V2), not black(V2), not planes(V1, V2)."],"noisy_rules":{"a":["- indefinite_quantity(V1, V3) :- can(V1, V3).","- indefinite_quantity(V1, V3) :- black(V2), can(V1, V3)."],"b":["can(V1, V3) :- black(V2), - indefinite_quantity(V1, V3).","can(V1, V3) :- - containerful(V0, V1), black(V2), - indefinite_quantity(V1, V3)."],"c":["parking_lot(V2, V3) :- - cars(V1, V2), crash(V1, V3).","- containerful(V1, V1) :- - cars(V1, V2), crash(V1, V3)."],"d":["competition(V1, V3) :- playing_game(V1, V3).","- containerful(V1, V1) :- not -can(V1, V3), tablespoon(V1, V3)."],"e":["external_ear(V0) :- - cheese(V0), not places_to_go(V0, V3), destorying_things_from_high_above(V1, V3).","lift_weights(V0) :- - do_in_gym(V0)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_14_8_10_8_11_0.5_1.0_5_2_3","seed":14,"num_facts":9,"num_rules":11,"num_related_predicates":20,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.5714285714285716,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P10(\"Katherine\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P11(\"Stephen\", \"Melissa\").","P12(\"Stephen\", \"Katherine\").","P13(\"Stephen\", \"Katherine\").","- P14(\"Stephen\", \"Katherine\").","P15(\"Stephen\", \"Katherine\").","- P16(\"Katherine\", \"Melissa\").","- P17(\"Stephen\", \"Katherine\").","P18(\"Stephen\", \"Katherine\").","P19(\"Melissa\")."],"noisy_facts":["- P25(\"Stephen\", \"Melissa\").","- P20(\"Stephen\", \"Katherine\").","- P31(\"Katherine\", \"Holly\").","- P26(\"Holly\", \"Melissa\").","- P30(\"Stephen\", \"Katherine\").","- P23(\"Stephen\", \"Katherine\").","P21(\"Katherine\", \"Holly\").","- P24(\"Stephen\", \"Melissa\").","P28(\"Katherine\").","- P29(\"Holly\").","- P32(\"Holly\", \"Melissa\")."],"min_fact_dicts_for_query":["P11(\"Stephen\", \"Melissa\").","- P16(\"Katherine\", \"Melissa\")."],"noiseless_rules":["P10(V1) :- - P4(V1, V2), P5(V1, V3), not P9(V2, V3).","- P0(V1, V3) :- P11(V0, V3), - P16(V1, V3).","- P1(V3) :- P11(V0, V3), - P16(V1, V3).","P2(V1, V1) :- - P0(V1, V3).","- P3(V3, V1) :- - P0(V1, V3).","- P4(V1, V1) :- P5(V1, V3), not P8(V1, V3).","P5(V1, V3) :- - P0(V1, V3), not P7(V1, V3).","- P6(V1, V3) :- - P0(V1, V3), not P7(V1, V3).","- P7(V1, V3) :- P2(V0, V1), P15(V0, V1), - P16(V1, V3), not P17(V0, V1), not -P18(V0, V1).","- P8(V3, V3) :- - P1(V3), not -P19(V3).","- P9(V2, V1) :- - P3(V0, V1), - P6(V1, V2), not -P12(V0, V1), not -P13(V0, V1), not P14(V0, V1)."],"noisy_rules":{"a":["- P10(V1) :- P0(V1, V3), P8(V1, V3), P9(V2, V3).","- P10(V1) :- P0(V1, V3), not -P7(V1, V3), not -P8(V1, V3)."],"b":["- P5(V1, V3) :- P1(V3), P9(V2, V3), - P10(V1).","- P19(V3) :- P1(V3), - P10(V1)."],"c":["- P13(V1, V1) :- P0(V1, V3), P6(V1, V2), not -P9(V2, V3).","- P18(V3, V1) :- not -P1(V3), P7(V1, V3), P8(V1, V3)."],"d":["P7(V1, V3) :- P0(V1, V3), P3(V0, V1), P6(V1, V2), - P20(V0, V1).","- P18(V1, V1) :- P4(V1, V2), not -P21(V1, V2)."],"e":["P22(V0, V1) :- - P23(V0, V1), - P24(V0, V3), - P25(V0, V3), - P26(V2, V3).","P27(V0, V1) :- P28(V1), - P29(V2), - P30(V0, V1), - P31(V1, V2), - P32(V2, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_84_7_7_3_6_0.5_1.0_3_1_2","seed":84,"num_facts":7,"num_rules":8,"num_related_predicates":15,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6666666666666667,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"quarter_carcass(\"Sara\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["onion_dome(\"Stephanie\").","iraq(\"Stephanie\").","produce(\"Stephanie\").","chromosomal_aberration.","- nutation(\"Stephanie\").","- unit_of_measurement(\"Stephanie\").","dinnerware(\"Stephanie\")."],"noisy_facts":["- caracara(\"Stephanie\").","mansion(\"Michael\").","high_explosive(\"Stephanie\").","- pontoon_bridge(\"Sara\").","- flock(\"Michael\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["quarter_carcass(V2) :- - fuzz(V2), not lumbar_vertebra(V2), not stadium(V2).","salad_nicoise(V0) :- polity(V0), not -onion_dome(V0).","- prostitute(V0) :- iraq(V0), not nutation(V0), not unit_of_measurement(V0).","- kid(V0) :- produce(V0), not -dinnerware(V0).","- fuzz(V0) :- - prostitute(V0).","- lumbar_vertebra(V0) :- salad_nicoise(V0), not kid(V0), not -polity(V0).","- stadium(V0) :- - prostitute(V0), not -onion_dome(V0), not -chromosomal_aberration.","polity(V0) :- - prostitute(V0), not -onion_dome(V0), not -chromosomal_aberration."],"noisy_rules":{"a":["- quarter_carcass(V2) :- - salad_nicoise(V0), lumbar_vertebra(V2).","- quarter_carcass(V0) :- - salad_nicoise(V0), not polity(V0)."],"b":["stadium(V2) :- lumbar_vertebra(V2), not quarter_carcass(V2).","- dinnerware(V2) :- - quarter_carcass(V2)."],"c":["- produce(V0) :- - salad_nicoise(V0), prostitute(V0), stadium(V2).","- salad_nicoise(V0) :- kid(V0)."],"d":["- iraq(V0) :- - salad_nicoise(V0), not -prostitute(V0), not -high_explosive(V0).","- onion_dome(V0) :- prostitute(V0), not -kid(V0), not caracara(V0)."],"e":["manta(V1) :- not -mansion(V1), - flock(V1).","narration(V2) :- - pontoon_bridge(V2)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_51_7_6_5_8_0.5_1.0_5_3_4","seed":51,"num_facts":8,"num_rules":7,"num_related_predicates":15,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"pushed_opne(\"Evelyn\", \"Tracy\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["record(\"Evelyn\", \"Sarah\").","field(\"Evelyn\", \"Sarah\", \"Tracy\").","- nest(\"Evelyn\", \"Sarah\", \"Tracy\").","- door(\"Evelyn\", \"Sarah\", \"Tracy\").","farm(\"Evelyn\", \"Sarah\", \"Tracy\").","rubber_band(\"Evelyn\", \"Sarah\", \"Tracy\").","get_stuck_shut(\"Evelyn\", \"Sarah\", \"Tracy\").","range(\"Evelyn\", \"Tracy\")."],"noisy_facts":["- window(\"Evelyn\", \"Tracy\").","- cream(\"Evelyn\", \"Sarah\", \"Nicole\").","asian_country(\"Evelyn\", \"Tracy\", \"Shannon\").","- bangladesh(\"Evelyn\", \"Sarah\", \"Nicole\")."],"min_fact_dicts_for_query":["record(\"Evelyn\", \"Sarah\").","- nest(\"Evelyn\", \"Sarah\", \"Tracy\")."],"noiseless_rules":["pushed_opne(V0, V3) :- - home(V0, V1, V3).","plate(V0, V3) :- record(V0, V1), - nest(V0, V1, V3), not -farm(V0, V1, V3).","- open(V0, V1, V1) :- field(V0, V1, V3), not door(V0, V1, V3), not -farm(V0, V1, V3), not -rubber_band(V0, V1, V3), not -get_stuck_shut(V0, V1, V3).","house(V0, V3) :- - nest(V0, V1, V3), not -farm(V0, V1, V3).","- home(V0, V3, V3) :- plate(V0, V3), not -house(V0, V3), not door_knobs(V0, V3), not -range(V0, V3).","- doors(V0, V0, V4) :- - open(V0, V1, V4).","- door_knobs(V0, V3) :- - doors(V0, V3, V4)."],"noisy_rules":{"a":["- pushed_opne(V0, V3) :- - plate(V0, V3), home(V0, V1, V3), doors(V0, V3, V4), not -door_knobs(V0, V3).","- pushed_opne(V0, V3) :- doors(V0, V3, V4)."],"b":["- get_stuck_shut(V0, V4, V3) :- doors(V0, V3, V4), not pushed_opne(V0, V3).","door_knobs(V0, V3) :- - plate(V0, V3), - house(V0, V3), - pushed_opne(V0, V3)."],"c":["open(V0, V1, V4) :- not plate(V0, V3), - house(V0, V3), home(V0, V1, V3), doors(V0, V3, V4), not -door_knobs(V0, V3).","- house(V0, V3) :- open(V0, V1, V4), home(V0, V1, V3)."],"d":["doors(V0, V3, V1) :- home(V0, V1, V3).","door(V0, V4, V3) :- - house(V0, V3), doors(V0, V3, V4), not window(V0, V3)."],"e":["asia(V0, V1, V3) :- - bangladesh(V0, V1, V2), asian_country(V0, V3, V4).","- soften(V0, V1) :- - cream(V0, V1, V2)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_68_7_6_6_7_0.5_1.0_3_2_3","seed":68,"num_facts":9,"num_rules":7,"num_related_predicates":16,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" P6(\"Mark\", \"Kristen\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P7(\"Mark\", \"Kristen\").","- P8(\"Gene\").","P9(\"Gene\").","- P10(\"Mark\", \"Gene\").","P11(\"Mark\", \"Gene\").","P12(\"Michael\", \"Mark\").","- P13(\"Michael\", \"Gene\").","- P14(\"Mark\").","- P15(\"Kristen\", \"Gene\")."],"noisy_facts":["P20(\"Mark\", \"Gene\").","P17(\"Mark\", \"Gene\").","P19(\"Gene\").","- P22(\"Michael\", \"Kristen\").","- P16(\"Mark\", \"Gene\").","- P23(\"Kristen\", \"Gene\")."],"min_fact_dicts_for_query":["- P7(\"Mark\", \"Kristen\").","- P8(\"Gene\").","- P10(\"Mark\", \"Gene\").","P12(\"Michael\", \"Mark\").","- P15(\"Kristen\", \"Gene\")."],"noiseless_rules":["- P6(V1, V2) :- - P1(V1, V3), - P15(V2, V3).","- P0(V1) :- - P7(V1, V2), - P10(V1, V3), not -P11(V1, V3).","- P1(V1, V3) :- P2(V0, V1), - P4(V1, V3).","P2(V1, V1) :- - P0(V1), not -P3(V1), not P14(V1).","P3(V1) :- - P5(V1, V3).","- P4(V1, V3) :- - P8(V3), P12(V0, V1), not P13(V0, V3).","- P5(V3, V3) :- - P8(V3), not -P9(V3)."],"noisy_rules":{"a":["P6(V1, V3) :- P0(V1), not P3(V1), P4(V1, V3).","P6(V1, V3) :- - P2(V0, V1), - P3(V1), P5(V1, V3)."],"b":["- P12(V2, V1) :- P0(V1), - P3(V1), P6(V1, V2).","P13(V2, V2) :- P6(V1, V2)."],"c":["P14(V1) :- - P3(V1), not -P4(V1, V3), P5(V1, V3).","P13(V1, V1) :- P0(V1)."],"d":["P14(V1) :- P1(V1, V3), not P16(V1, V3).","- P12(V1, V1) :- P5(V1, V3), not -P17(V1, V3)."],"e":["- P18(V1, V3) :- P19(V3), P20(V1, V3).","P21(V2, V3) :- - P22(V0, V2), - P23(V2, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_56_10_13_13_13_0.5_1.0_5_3_4","seed":56,"num_facts":17,"num_rules":14,"num_related_predicates":31,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2222222222222223,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"eating_lunch(\"Russell\", \"Paul\", \"Brittany\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["principal(\"Russell\", \"Paul\").","- having_fun_with_friends(\"Russell\", \"Paul\", \"Brittany\").","elastic_tissue(\"Russell\", \"Brittany\").","- crosshead(\"Russell\", \"Emily\", \"Brittany\").","- administrative_district(\"Russell\", \"Paul\", \"Jacqueline\").","independent_country(\"Russell\", \"Paul\", \"Jacqueline\").","signing_autographs(\"Russell\", \"Emily\", \"Jacqueline\").","- copying_down_information(\"Emily\", \"Jacqueline\", \"Brittany\").","operating_capital(\"Paul\", \"Brittany\").","stock(\"Jacqueline\", \"Brittany\").","annual_event(\"Emily\", \"Jacqueline\", \"Brittany\").","- endowment(\"Emily\", \"Jacqueline\", \"Brittany\").","- bag(\"Russell\", \"Brittany\").","bunny(\"Russell\", \"Brittany\").","- shipping_company(\"Russell\", \"Paul\", \"Jacqueline\").","- attendance(\"Russell\", \"Paul\", \"Jacqueline\").","- subsidiary_company(\"Russell\", \"Paul\", \"Jacqueline\")."],"noisy_facts":[],"min_fact_dicts_for_query":["principal(\"Russell\", \"Paul\").","elastic_tissue(\"Russell\", \"Brittany\").","- crosshead(\"Russell\", \"Emily\", \"Brittany\").","- administrative_district(\"Russell\", \"Paul\", \"Jacqueline\").","independent_country(\"Russell\", \"Paul\", \"Jacqueline\").","signing_autographs(\"Russell\", \"Emily\", \"Jacqueline\").","operating_capital(\"Paul\", \"Brittany\").","stock(\"Jacqueline\", \"Brittany\").","annual_event(\"Emily\", \"Jacqueline\", \"Brittany\")."],"noiseless_rules":["eating_lunch(V0, V1, V4) :- - school_cafeteria(V0), meeting_friend(V4), - deli(V0, V1), not company(V0, V4).","- capital(V0, V1, V2) :- principal(V0, V1), operating_capital(V1, V4), stock(V3, V4), annual_event(V2, V3, V4), not endowment(V2, V3, V4).","drive(V0, V3, V4) :- principal(V0, V1), operating_capital(V1, V4), stock(V3, V4), annual_event(V2, V3, V4), not endowment(V2, V3, V4).","- school_cafeteria(V0) :- - capital(V0, V1, V2).","limited_company(V0, V1, V1) :- - capital(V0, V1, V2).","meeting_friend(V4) :- - operate(V0, V1, V4), not -cent(V0, V1, V4).","- operate(V0, V4, V4) :- drive(V0, V3, V4).","cent(V0, V1, V4) :- - having_fun_with_friends(V0, V1, V4).","restaurant_dining_area(V1, V3, V4) :- elastic_tissue(V0, V4), - administrative_district(V0, V1, V3), independent_country(V0, V1, V3), signing_autographs(V0, V2, V3), not copying_down_information(V2, V3, V4).","- film_company(V0, V2, V4) :- elastic_tissue(V0, V4), - administrative_district(V0, V1, V3), independent_country(V0, V1, V3), signing_autographs(V0, V2, V3), not copying_down_information(V2, V3, V4).","block(V0, V4) :- - crosshead(V0, V2, V4).","- deli(V0, V1) :- restaurant_dining_area(V1, V3, V4), block(V0, V4), not -american_copper(V0, V4), not bag(V0, V4), not -bunny(V0, V4).","- company(V0, V4) :- limited_company(V0, V1, V3), - film_company(V0, V2, V4), not shipping_company(V0, V1, V3), not attendance(V0, V1, V3), not subsidiary_company(V0, V1, V3).","american_copper(V0, V4) :- limited_company(V0, V1, V3), - film_company(V0, V2, V4), not shipping_company(V0, V1, V3), not attendance(V0, V1, V3), not subsidiary_company(V0, V1, V3)."],"noisy_rules":{}},"num_min_facts_for_query":9,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_33_7_9_8_10_0.5_1.0_3_2_3","seed":33,"num_facts":10,"num_rules":10,"num_related_predicates":20,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"animal(\"Amanda\", \"Michael\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["life(\"Amanda\", \"Michael\").","- gastrula(\"Michael\").","biont(\"Amanda\", \"Michael\").","- organism(\"Amanda\", \"Michael\").","- whole(\"Antonio\", \"Michael\").","- inherence(\"Amanda\", \"Michael\").","foam(\"Michael\").","- gentleman(\"Michael\").","- cannon(\"Juan\", \"Michael\").","branch(\"Juan\", \"Michael\")."],"noisy_facts":["principal(\"Antonio\", \"Michael\").","- silicon(\"Amanda\", \"Michael\").","lady(\"Juan\", \"Michael\").","oil(\"Antonio\", \"Michael\")."],"min_fact_dicts_for_query":["life(\"Amanda\", \"Michael\").","- inherence(\"Amanda\", \"Michael\").","- cannon(\"Juan\", \"Michael\")."],"noiseless_rules":["animal(V2, V3) :- - cartesian_coordinate(V2), - biped(V0, V3), not -biont(V2, V3).","- cartesian_coordinate(V2) :- object(V1, V3), dimension(V1, V3), - inherence(V2, V3).","animal_leg(V3) :- living_thing(V3), - cannon(V0, V3), not -branch(V0, V3).","object(V1, V3) :- - je_ne_sais_quois(V0, V1), head(V0, V3), not whole(V1, V3).","- biped(V3, V3) :- animal_leg(V3), not -embryo(V3), not -foam(V3).","dimension(V3, V3) :- animal_leg(V3), not -embryo(V3), not -foam(V3).","- je_ne_sais_quois(V3, V3) :- animal_leg(V3), not -embryo(V3), not -foam(V3).","living_thing(V3) :- life(V2, V3), not -biont(V2, V3), not organism(V2, V3).","head(V3, V3) :- life(V2, V3), not -biont(V2, V3), not organism(V2, V3).","embryo(V3) :- - gastrula(V3), not -foam(V3), not gentleman(V3)."],"noisy_rules":{"a":["- animal(V3, V3) :- - object(V1, V3), biped(V0, V3), - embryo(V3).","- animal(V2, V3) :- cartesian_coordinate(V2), biped(V0, V3), - dimension(V1, V3)."],"b":["organism(V2, V3) :- not object(V1, V3), je_ne_sais_quois(V0, V1), - animal(V2, V3).","je_ne_sais_quois(V3, V1) :- - dimension(V1, V3), not living_thing(V3), - animal(V2, V3)."],"c":["- foam(V3) :- cartesian_coordinate(V2), - dimension(V1, V3), - head(V0, V3).","whole(V3, V3) :- - living_thing(V3)."],"d":["organism(V3, V3) :- - head(V0, V3).","gentleman(V3) :- - object(V1, V3), biped(V0, V3), not -lady(V0, V3)."],"e":["capital(V3) :- principal(V1, V3).","texas(V1, V2) :- oil(V1, V3), - silicon(V2, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_11_7_6_4_7_0.5_1.0_5_3_4","seed":11,"num_facts":8,"num_rules":7,"num_related_predicates":15,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8333333333333333,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"P6(\"Jacob\", \"Ronald\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P7(\"Jacob\").","- P8(\"Christina\", \"Michael\", \"Ronald\").","- P9(\"Christina\", \"Michael\", \"Ronald\").","P10(\"Michael\", \"Jacob\", \"Ronald\").","- P11(\"Jacob\").","P12(\"Jacob\", \"Ronald\").","P13(\"Christina\", \"Lauren\", \"Michael\").","P14(\"Christina\", \"Michael\", \"Ronald\")."],"noisy_facts":["P18(\"Michael\", \"Jacob\").","P15(\"Lauren\", \"Michael\", \"Ronald\").","- P20(\"Christina\", \"Lauren\", \"Jacob\").","- P23(\"Christina\", \"Jacob\").","P24(\"Michael\", \"Jacob\").","- P17(\"Michael\", \"Ronald\").","- P16(\"Michael\", \"Ronald\").","- P19(\"Jacob\", \"Ronald\")."],"min_fact_dicts_for_query":["- P7(\"Jacob\").","P10(\"Michael\", \"Jacob\", \"Ronald\").","- P11(\"Jacob\").","P12(\"Jacob\", \"Ronald\").","P13(\"Christina\", \"Lauren\", \"Michael\")."],"noiseless_rules":["P6(V3, V4) :- P0(V2, V4), - P2(V1, V2, V3), not P4(V1, V2, V4).","P0(V2, V4) :- P5(V2, V3, V4).","- P1(V3, V4) :- - P7(V3), - P11(V3), P12(V3, V4), P13(V0, V1, V2), not -P14(V0, V2, V4).","- P2(V4, V2, V3) :- P0(V2, V4), - P1(V3, V4), not -P3(V2, V4).","P3(V2, V4) :- - P8(V0, V2, V4), not -P14(V0, V2, V4).","- P4(V0, V2, V4) :- - P8(V0, V2, V4), not P9(V0, V2, V4).","P5(V2, V3, V4) :- P10(V2, V3, V4)."],"noisy_rules":{"a":["- P6(V3, V4) :- not P0(V2, V4), P2(V1, V2, V3), not P3(V2, V4), not -P4(V1, V2, V4), - P5(V2, V3, V4).","- P6(V3, V4) :- - P0(V2, V4), not -P1(V3, V4), P2(V1, V2, V3), not P3(V2, V4), not P5(V2, V3, V4)."],"b":["- P14(V4, V2, V4) :- P2(V1, V2, V3), - P5(V2, V3, V4), not P6(V3, V4).","P8(V3, V3, V4) :- P1(V3, V4), - P6(V3, V4)."],"c":["- P0(V2, V4) :- P1(V3, V4), P2(V1, V2, V3), not P3(V2, V4), P4(V1, V2, V4), - P5(V2, V3, V4).","- P5(V2, V3, V4) :- - P0(V2, V4), P1(V3, V4), P2(V1, V2, V3), - P3(V2, V4), not -P4(V1, V2, V4)."],"d":["- P3(V2, V4) :- P4(V1, V2, V4), P15(V1, V2, V4).","- P5(V2, V3, V4) :- P1(V3, V4), - P3(V2, V4), - P16(V2, V4), - P17(V2, V4)."],"e":["- P21(V3, V4) :- P18(V2, V3), - P19(V3, V4), - P20(V0, V1, V3).","- P22(V0, V2, V3) :- - P23(V0, V3), P24(V2, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_75_8_11_10_13_0.5_1.0_5_1_2","seed":75,"num_facts":15,"num_rules":12,"num_related_predicates":27,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.7142857142857142,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P11(\"Joseph\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P12.","P13(\"Joseph\").","P14(\"Joseph\").","P15(\"Joseph\").","- P16.","P17(\"Joseph\").","P18(\"Joseph\").","P19(\"Joseph\").","- P20(\"Joseph\").","P21(\"Joseph\").","P22(\"Joseph\").","P23(\"Joseph\").","- P24(\"Joseph\").","- P25(\"Joseph\").","- P26."],"noisy_facts":["- P28(\"Joseph\").","P35(\"Amy\").","- P32(\"Amy\").","- P34(\"Amy\").","- P30(\"Joseph\").","- P36(\"Amy\").","P33(\"Amy\").","P27."],"min_fact_dicts_for_query":["- P12.","P15(\"Joseph\")."],"noiseless_rules":["- P11(V1) :- P0(V1), not -P3(V1), not P4(V1), not -P6(V1), not -P9(V1).","P0(V1) :- - P12, P15(V1).","P1(V1) :- - P12, P15(V1).","P2(V1) :- - P12, P15(V1).","P3(V1) :- P1(V1), not P5(V1), not P7(V1), not -P8(V1), not -P17(V1).","- P4(V0) :- P2(V0), not P10(V0), not P26.","- P5(V1) :- P13(V1), not -P22(V1), not -P23(V1), not P24(V1), not P25(V1).","P6(V1) :- P14(V1).","- P7(V1) :- P14(V1).","P8(V1) :- P15(V1), not -P18(V1), not -P19(V1), not P20(V1), not -P21(V1).","P9(V1) :- P0(V1), not -P3(V1), not P16.","- P10(V1) :- P0(V1), not -P3(V1), not P16."],"noisy_rules":{"a":["P11(V1) :- not P3(V1), not -P5(V1), not -P7(V1), - P8(V1), not P9(V1).","P11(V1) :- - P0(V1), P4(V1)."],"b":["- P15(V1) :- - P3(V1), not -P11(V1).","- P17(V1) :- P5(V1), P10(V0), P11(V1)."],"c":["- P2(V1) :- P7(V1), not P9(V1).","P25(V1) :- - P0(V1), P7(V1)."],"d":["- P1(V1) :- P5(V1), - P6(V1), - P8(V1), P10(V0), not -P27.","P16(V1) :- - P3(V1), not P28(V1)."],"e":["- P29(V1) :- - P30(V1).","- P31(V2) :- not P32(V2), not -P33(V2), - P34(V2), not -P35(V2), - P36(V2)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_61_6_8_3_6_0.5_1.0_5_3_4","seed":61,"num_facts":4,"num_rules":9,"num_related_predicates":13,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"same(\"William\", \"Timothy\", \"Michelle\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["white_crappie(\"William\", \"Timothy\", \"Terri\").","light_bones(\"Timothy\", \"Michelle\", \"Terri\").","knob(\"Timothy\", \"Michelle\", \"Terri\").","dove(\"Timothy\", \"Michelle\", \"Terri\")."],"noisy_facts":[],"min_fact_dicts_for_query":["white_crappie(\"William\", \"Timothy\", \"Terri\").","light_bones(\"Timothy\", \"Michelle\", \"Terri\").","knob(\"Timothy\", \"Michelle\", \"Terri\").","dove(\"Timothy\", \"Michelle\", \"Terri\")."],"noiseless_rules":["same(V0, V1, V2) :- watching_sunrise(V0, V1), once(V1, V2, V3), catch_crop(V1, V2, V3).","xenon(V0, V1, V4) :- wild_goat(V0, V2), mauritanian(V0, V1, V4), light_bones(V1, V2, V3).","watching_sunrise(V0, V1) :- white_crappie(V0, V1, V3).","battering_ram(V1, V3) :- white_crappie(V0, V1, V3).","once(V1, V4, V0) :- mauritanian(V0, V1, V4), noise(V0, V1, V4).","wild_goat(V0, V1) :- mauritanian(V0, V1, V4), noise(V0, V1, V4).","mauritanian(V2, V1, V2) :- battering_ram(V1, V3), light_bones(V1, V2, V3), knob(V1, V2, V3), dove(V1, V2, V3).","noise(V1, V1, V2) :- battering_ram(V1, V3), light_bones(V1, V2, V3), knob(V1, V2, V3), dove(V1, V2, V3).","catch_crop(V1, V4, V3) :- xenon(V0, V1, V4), white_crappie(V0, V1, V3)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_67_7_10_6_8_0.5_1.0_3_2_3","seed":67,"num_facts":8,"num_rules":11,"num_related_predicates":19,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" carry_helicopters(\"Aimee\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- ants(\"Kyle\", \"Melissa\").","- brief(\"Aimee\", \"Melissa\").","dorking(\"Kyle\", \"Leah\").","terror(\"Kyle\", \"Leah\").","fighter(\"Kyle\", \"Leah\").","- blower(\"Aimee\", \"Melissa\").","whale(\"Aimee\", \"Melissa\").","somalian(\"Aimee\", \"Melissa\")."],"noisy_facts":["colonel.","badge(\"Aimee\", \"Leah\").","- privacy(\"Kyle\", \"Aimee\").","- plays(\"Melissa\", \"Leah\").","fruit_juice(\"Kyle\", \"Melissa\").","- stream(\"Aimee\", \"Melissa\").","- rice(\"Aimee\", \"Melissa\")."],"min_fact_dicts_for_query":["- ants(\"Kyle\", \"Melissa\").","- brief(\"Aimee\", \"Melissa\").","dorking(\"Kyle\", \"Leah\").","somalian(\"Aimee\", \"Melissa\")."],"noiseless_rules":["- carry_helicopters(V1) :- - barber_chair(V1), - pursuer(V3), not -swimming_hole(V1, V3).","charge(V0, V3) :- - ants(V0, V2), dorking(V0, V3), somalian(V1, V2).","piston(V1, V2) :- - ants(V0, V2), dorking(V0, V3), somalian(V1, V2).","peanut_bar(V0, V3) :- - ants(V0, V2), dorking(V0, V3), somalian(V1, V2).","- bodily(V3, V3) :- charge(V0, V3), not rank(V0, V3), not -fighter(V0, V3).","- bone(V2, V2) :- - bodily(V2, V3), not -compound(V2, V3).","- barber_chair(V1) :- - brief(V1, V2), not -whale(V1, V2), not -somalian(V1, V2).","compound(V2, V1) :- - brief(V1, V2), not -whale(V1, V2), not -somalian(V1, V2).","- pursuer(V2) :- piston(V1, V2), not bone(V1, V2), not blower(V1, V2).","swimming_hole(V0, V3) :- peanut_bar(V0, V3), not -dorking(V0, V3), not -terror(V0, V3).","- rank(V0, V3) :- peanut_bar(V0, V3), not -dorking(V0, V3), not -terror(V0, V3)."],"noisy_rules":{"a":["carry_helicopters(V1) :- - charge(V0, V3), pursuer(V3), - swimming_hole(V1, V3).","carry_helicopters(V1) :- - charge(V0, V3), - piston(V1, V2), not -bodily(V2, V3)."],"b":["bodily(V2, V1) :- - piston(V1, V2), not -bone(V1, V2), carry_helicopters(V1).","blower(V1, V1) :- carry_helicopters(V1)."],"c":["- compound(V2, V3) :- - piston(V1, V2), - peanut_bar(V0, V3), not -bone(V1, V2).","- terror(V0, V3) :- - peanut_bar(V0, V3), - swimming_hole(V1, V3)."],"d":["bone(V3, V3) :- pursuer(V3), colonel.","- somalian(V1, V2) :- not piston(V1, V2), bone(V1, V2), not stream(V1, V2)."],"e":["- west_virginia(V1) :- - privacy(V0, V1), fruit_juice(V0, V2), - plays(V2, V3).","palm_trees(V1, V2) :- - rice(V1, V2), badge(V1, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_40_10_14_14_15_0.5_1.0_5_2_3","seed":40,"num_facts":18,"num_rules":15,"num_related_predicates":33,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2222222222222223,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":"reproductive_structure(\"Darrell\", \"Brandon\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["almond(\"Darrell\").","apple(\"Cory\", \"Brandon\").","- can_of_soda(\"Darrell\", \"Brandon\").","- pinecone(\"Cory\", \"Darrell\").","cembra_nut(\"Darrell\", \"Amanda\").","palm_nut(\"Darrell\", \"Amanda\").","alum(\"Darrell\", \"Amanda\").","- family_court(\"Darrell\", \"Amanda\").","peanut(\"Cory\", \"Darrell\").","chincapin(\"Darrell\", \"Amanda\").","pecan(\"Darrell\", \"Amanda\").","- beechnut(\"Darrell\", \"Amanda\").","fir_cone(\"Darrell\", \"Brandon\").","- sleeping(\"Darrell\", \"Brandon\").","legal_entity(\"Darrell\", \"Brandon\").","- help_reduce_weight(\"Brandon\", \"Amanda\").","termite(\"Brandon\", \"Amanda\").","ectrodactyly(\"Brandon\", \"Amanda\")."],"noisy_facts":["divining_rod(\"Darrell\", \"Brandon\").","tinting(\"Cory\", \"Darrell\").","- playing_cards(\"Cory\", \"Darrell\").","servant."],"min_fact_dicts_for_query":["almond(\"Darrell\").","- pinecone(\"Cory\", \"Darrell\").","peanut(\"Cory\", \"Darrell\").","chincapin(\"Darrell\", \"Amanda\").","fir_cone(\"Darrell\", \"Brandon\").","- sleeping(\"Darrell\", \"Brandon\").","legal_entity(\"Darrell\", \"Brandon\").","- help_reduce_weight(\"Brandon\", \"Amanda\")."],"noiseless_rules":["reproductive_structure(V1, V2) :- - fruit(V3), - cone(V1, V2), not -cup(V2, V3), not grugru_nut(V2, V3).","edible_nut(V1, V3) :- almond(V1), peanut(V0, V1), chincapin(V1, V3), not -pecan(V1, V3), not beechnut(V1, V3).","drupe(V0) :- almond(V1), peanut(V0, V1), chincapin(V1, V3), not -pecan(V1, V3), not beechnut(V1, V3).","brainstem(V3) :- almond(V1), peanut(V0, V1), chincapin(V1, V3), not -pecan(V1, V3), not beechnut(V1, V3).","- nut(V3) :- edible_nut(V1, V3), not -cembra_nut(V1, V3), not -palm_nut(V1, V3), not -alum(V1, V3), not family_court(V1, V3).","- seed(V3, V3) :- - nut(V3).","edible_fruit(V0) :- apple(V0, V2).","- cupule(V2, V1) :- - cone(V1, V2), not can_of_soda(V1, V2).","club_moss(V1, V2) :- - cone(V1, V2), not can_of_soda(V1, V2).","- fruit(V0) :- drupe(V0), not -edible_fruit(V0), not acorn(V0).","- cone(V1, V2) :- - pinecone(V0, V1), fir_cone(V1, V2), - sleeping(V1, V2), legal_entity(V1, V2), - help_reduce_weight(V2, V3).","- embellishment(V1, V2) :- - pinecone(V0, V1), fir_cone(V1, V2), - sleeping(V1, V2), legal_entity(V1, V2), - help_reduce_weight(V2, V3).","cup(V2, V3) :- - cupule(V2, V3), not -termite(V2, V3), not -ectrodactyly(V2, V3).","- acorn(V3) :- - cupule(V2, V3), not -termite(V2, V3), not -ectrodactyly(V2, V3).","- grugru_nut(V2, V3) :- brainstem(V3), - seed(V1, V3), club_moss(V1, V2), not embellishment(V1, V2)."],"noisy_rules":{"a":["- reproductive_structure(V0, V2) :- - drupe(V0), cupule(V2, V3), fruit(V3).","- reproductive_structure(V1, V2) :- - edible_nut(V1, V3), not -cupule(V2, V3), cone(V1, V2), embellishment(V1, V2)."],"b":["- edible_nut(V1, V3) :- - edible_fruit(V0), cupule(V2, V3), cone(V1, V2), not -grugru_nut(V2, V3), - reproductive_structure(V1, V2).","- chincapin(V1, V3) :- - edible_fruit(V0), cone(V1, V2), - cup(V2, V3), not -grugru_nut(V2, V3), not reproductive_structure(V1, V2)."],"c":["- chincapin(V1, V1) :- cone(V1, V2).","- almond(V2) :- - cup(V2, V3)."],"d":["- cembra_nut(V3, V3) :- not -fruit(V3), acorn(V0), grugru_nut(V2, V3), servant.","- horsetail(V1, V2) :- - edible_nut(V1, V3), not brainstem(V3), nut(V3), cone(V1, V2), divining_rod(V1, V2)."],"e":["coloring(V0) :- tinting(V0, V1).","hobby(V0, V1) :- - playing_cards(V0, V1)."]}},"num_min_facts_for_query":8,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_0_5_4_4_7_0.5_1.0_5_2_3","seed":0,"num_facts":5,"num_rules":5,"num_related_predicates":10,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":3,"target_query":"activated_carbon(\"Dennis\", \"Stephanie\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- party(\"Dennis\").","graphite(\"Dennis\", \"Stephanie\").","- diamond(\"Dennis\", \"Stephanie\").","- carbon_black(\"Dennis\", \"Stephanie\").","- fullerene(\"Dennis\", \"Stephanie\")."],"noisy_facts":["easiness(\"Jonathan\").","- dirty_pool(\"Dennis\", \"Jonathan\").","shopping_basket(\"Dennis\", \"Stephanie\").","bushel(\"Dennis\", \"Carolyn\").","aggression(\"Jonathan\").","- punnet(\"Jonathan\", \"Carolyn\").","ways_of_world(\"Jonathan\", \"Carolyn\").","atom(\"Dennis\").","vascular_plant(\"Dennis\", \"Stephanie\").","bohemianism(\"Jonathan\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["activated_carbon(V0, V3) :- - phosphorus(V0, V3), not -graphite(V0, V3).","- metallic_element(V0) :- carbon(V0, V2).","carbon(V0, V3) :- - neon(V0, V3), not -graphite(V0, V3), not diamond(V0, V3), not carbon_black(V0, V3), not fullerene(V0, V3).","- phosphorus(V0, V0) :- - metallic_element(V0), not party(V0).","- neon(V0, V3) :- - party(V0), - fullerene(V0, V3)."],"noisy_rules":{"a":["- activated_carbon(V0, V3) :- metallic_element(V0), - carbon(V0, V2), not -phosphorus(V0, V3), neon(V0, V3).","- activated_carbon(V0, V3) :- neon(V0, V3)."],"b":["- carbon(V0, V2) :- metallic_element(V0), - carbon(V0, V2), not -phosphorus(V0, V3), not -neon(V0, V3), - activated_carbon(V0, V3).","metallic_element(V0) :- not -metallic_element(V0), not -phosphorus(V0, V3), not -neon(V0, V3), - activated_carbon(V0, V3)."],"c":["fullerene(V0, V3) :- phosphorus(V0, V3), neon(V0, V3).","party(V0) :- - carbon(V0, V2)."],"d":["chemical_element(V0, V3) :- not -metallic_element(V0), - carbon(V0, V2), not -phosphorus(V0, V3), neon(V0, V3), atom(V0).","phosphorus(V0, V3) :- vascular_plant(V0, V3)."],"e":["behavior(V0, V1) :- aggression(V1), easiness(V1), bohemianism(V1), - dirty_pool(V0, V1), ways_of_world(V1, V2).","- basket(V2, V3) :- bushel(V0, V2), shopping_basket(V0, V3), - punnet(V1, V2)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_76_10_14_12_12_0.5_1.0_5_3_4","seed":76,"num_facts":15,"num_rules":15,"num_related_predicates":30,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.888888888888889,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" extermination(\"Rebecca\", \"Jeffery\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["magazine_article(\"Jeffery\").","fill(\"Erin\", \"Timothy\", \"Jeffery\").","- microorganism(\"Jonathan\", \"Timothy\").","repair(\"Rebecca\", \"Jonathan\").","- debt(\"Erin\", \"Timothy\", \"Jeffery\").","jujube(\"Rebecca\", \"Jonathan\", \"Timothy\").","- training(\"Jonathan\", \"Timothy\", \"Jeffery\").","welsh_pony(\"Jonathan\", \"Timothy\").","- come_in_matching_sets(\"Erin\", \"Rebecca\", \"Jeffery\").","many_houses(\"Erin\", \"Jonathan\", \"Timothy\").","- thoroughbred(\"Erin\", \"Jeffery\").","- quince(\"Jonathan\", \"Jeffery\").","third_month(\"Rebecca\", \"Timothy\", \"Jeffery\").","- north_sea_oilfield(\"Erin\", \"Rebecca\", \"Jeffery\").","penguin(\"Erin\", \"Timothy\", \"Jeffery\")."],"noisy_facts":["- boundary(\"Erin\", \"Jonathan\", \"Jeffery\").","- gel(\"Erin\", \"Jonathan\", \"Timothy\").","covering(\"Erin\", \"Rebecca\", \"Jonathan\").","borrowing_books(\"Jonathan\", \"Jeffery\").","- anopheline(\"Jonathan\").","- trouble_spot(\"Rebecca\").","- connect_to_hallways(\"Rebecca\", \"Jonathan\", \"Timothy\").","mine_for_oil(\"Erin\", \"Jonathan\", \"Timothy\").","razing(\"Rebecca\", \"Jeffery\")."],"min_fact_dicts_for_query":["fill(\"Erin\", \"Timothy\", \"Jeffery\").","- microorganism(\"Jonathan\", \"Timothy\").","- thoroughbred(\"Erin\", \"Jeffery\").","- quince(\"Jonathan\", \"Jeffery\").","third_month(\"Rebecca\", \"Timothy\", \"Jeffery\").","- north_sea_oilfield(\"Erin\", \"Rebecca\", \"Jeffery\")."],"noiseless_rules":["- extermination(V1, V4) :- worm(V1, V3), muscle(V0, V2, V4), not extension_course(V1, V2, V3).","toast(V2, V3) :- small_house(V0, V2, V3).","worm(V1, V3) :- hospital(V1, V2, V3).","small_house(V0, V2, V3) :- - trainman(V0, V2), - barber_comb(V0, V3), welsh_pony(V2, V3), - come_in_matching_sets(V0, V1, V4), not -many_houses(V0, V2, V3).","muscle(V0, V2, V4) :- - slice_bar(V4), tollkeeper(V0, V2), - thoroughbred(V0, V4), - quince(V2, V4), third_month(V1, V3, V4).","hospital(V1, V2, V3) :- - slice_bar(V4), tollkeeper(V0, V2), - thoroughbred(V0, V4), - quince(V2, V4), third_month(V1, V3, V4).","- extension_course(V1, V2, V3) :- - imagination(V0, V2, V4), subfigure(V0, V3, V4), - easy_chair(V1, V2, V3).","- trainman(V0, V2) :- magazine_article(V4), repair(V1, V2), - debt(V0, V3, V4), not -jujube(V1, V2, V3), not training(V2, V3, V4).","- zygote(V3) :- magazine_article(V4), repair(V1, V2), - debt(V0, V3, V4), not -jujube(V1, V2, V3), not training(V2, V3, V4).","- imagination(V2, V2, V2) :- toast(V2, V3), not zygote(V3).","- slice_bar(V4) :- fill(V0, V3, V4).","subfigure(V0, V3, V4) :- fill(V0, V3, V4).","- barber_comb(V0, V3) :- - microorganism(V2, V3), - north_sea_oilfield(V0, V1, V4), not -penguin(V0, V3, V4).","tollkeeper(V0, V2) :- - microorganism(V2, V3), - north_sea_oilfield(V0, V1, V4), not -penguin(V0, V3, V4).","- easy_chair(V1, V2, V3) :- - microorganism(V2, V3), - north_sea_oilfield(V0, V1, V4), not -penguin(V0, V3, V4)."],"noisy_rules":{"a":["extermination(V3, V4) :- - muscle(V0, V2, V4), not -trainman(V0, V2), zygote(V3).","extermination(V1, V2) :- - hospital(V1, V2, V3), zygote(V3), - tollkeeper(V0, V2)."],"b":["zygote(V3) :- extension_course(V1, V2, V3), - tollkeeper(V0, V2), extermination(V1, V4).","- subfigure(V0, V4, V4) :- imagination(V0, V2, V4), extermination(V1, V4)."],"c":["- hospital(V1, V2, V3) :- - worm(V1, V3), - muscle(V0, V2, V4), not -barber_comb(V0, V3), not -easy_chair(V1, V2, V3).","quince(V2, V2) :- not -zygote(V3), easy_chair(V1, V2, V3)."],"d":["barber_comb(V0, V3) :- - toast(V2, V3), - small_house(V0, V2, V3), slice_bar(V4), not -mine_for_oil(V0, V2, V3).","- jujube(V1, V2, V3) :- - small_house(V0, V2, V3), zygote(V3), easy_chair(V1, V2, V3), not gel(V0, V2, V3)."],"e":["recalling_later(V2, V3) :- not anopheline(V2), covering(V0, V1, V2), - boundary(V0, V2, V4), - connect_to_hallways(V1, V2, V3).","- vote(V1, V2) :- - trouble_spot(V1), not -razing(V1, V4), borrowing_books(V2, V4)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_98_7_8_6_7_0.5_1.0_3_1_2","seed":98,"num_facts":9,"num_rules":9,"num_related_predicates":18,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8333333333333333,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"harvest(\"John\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["ash_gray.","- groundhogs(\"John\").","cold(\"John\").","- neutron_bomb(\"John\").","- say_words(\"John\").","pull.","marshall.","- pudding(\"John\").","document(\"John\")."],"noisy_facts":["- pigeon(\"John\").","- farmer(\"Robert\").","deflection(\"Robert\").","transfusion(\"John\").","- tamale(\"Robert\").","aurochs.","- offspring(\"John\").","activity(\"John\")."],"min_fact_dicts_for_query":["ash_gray.","- groundhogs(\"John\")."],"noiseless_rules":["harvest(V1) :- collectors_item(V1), not -persuader(V1).","collectors_item(V1) :- carnivores(V1), not -train(V1), not pudding(V1).","carnivores(V1) :- ash_gray, - groundhogs(V1).","spoiler(V1) :- ash_gray, - groundhogs(V1).","- handball_court(V1) :- ash_gray, - groundhogs(V1).","train(V1) :- - groundhogs(V1), not -document(V1).","persuader(V1) :- spoiler(V1), not motel_room(V1), not geographical_area(V1).","- motel_room(V0) :- - handball_court(V0), not -pull, not -marshall.","- geographical_area(V1) :- cold(V1), not neutron_bomb(V1), not say_words(V1)."],"noisy_rules":{"a":["- harvest(V1) :- not collectors_item(V1), - spoiler(V1).","- harvest(V1) :- - carnivores(V1), motel_room(V1)."],"b":["neutron_bomb(V1) :- - harvest(V1).","groundhogs(V1) :- not persuader(V1), - harvest(V1)."],"c":["- persuader(V1) :- - carnivores(V1), handball_court(V0), - train(V1).","motel_room(V1) :- handball_court(V0), not train(V1), - persuader(V1)."],"d":["- persuader(V1) :- - collectors_item(V1), transfusion(V1).","groundhogs(V1) :- - collectors_item(V1), handball_court(V0), aurochs."],"e":["- liar(V2) :- not farmer(V2), - tamale(V2), deflection(V2).","reading(V1) :- - pigeon(V1), not offspring(V1), not -activity(V1)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_69_7_8_3_6_0.5_1.0_5_2_3","seed":69,"num_facts":6,"num_rules":9,"num_related_predicates":15,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.8333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"snow(\"Paula\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["coin(\"John\").","do_leave_smudge(\"Paula\", \"John\").","- seaport(\"Paula\", \"Michael\").","- bedspread(\"Paula\").","garment(\"Paula\").","- lovebird(\"Paula\")."],"noisy_facts":["being_sociable(\"Paula\", \"Brett\").","- exit(\"Paula\").","paint(\"Paula\").","burqa(\"Paula\").","- tin(\"Paula\", \"Brett\").","- plumb_bob(\"Brett\", \"John\").","- chordophone(\"Paula\", \"Michael\").","wilderness(\"Brett\", \"Michael\").","flat_coat(\"John\", \"Michael\").","- photographer(\"Paula\", \"Brett\").","- tennessee(\"Brett\", \"Michael\")."],"min_fact_dicts_for_query":["coin(\"John\").","do_leave_smudge(\"Paula\", \"John\")."],"noiseless_rules":["snow(V0) :- - flipping(V0), artifact(V0, V2), not fishermans_lure(V0, V2).","- flipping(V0) :- coin(V2), do_leave_smudge(V0, V2).","wet_fly(V2) :- coin(V2), do_leave_smudge(V0, V2).","artifact(V0, V2) :- opening(V0, V2).","- fishermans_lure(V0, V0) :- - flipping(V0), not fly(V0), not -fur(V0), not bedspread(V0).","opening(V0, V0) :- - flipping(V0), not fly(V0), not -fur(V0), not bedspread(V0).","- fly(V2) :- wet_fly(V2), not -streamer_fly(V2).","streamer_fly(V2) :- do_leave_smudge(V0, V2), not bedspread(V0), not -garment(V0), not lovebird(V0).","fur(V0) :- - seaport(V0, V3)."],"noisy_rules":{"a":["- snow(V0) :- not -flipping(V0), - wet_fly(V2), not artifact(V0, V2), - fur(V0).","- snow(V0) :- - wet_fly(V2), - artifact(V0, V2), fly(V0), - streamer_fly(V2)."],"b":["fishermans_lure(V0, V0) :- - snow(V0).","- wet_fly(V2) :- flipping(V0), - wet_fly(V2), not streamer_fly(V2), not fur(V0), not snow(V0)."],"c":["flipping(V0) :- fly(V0), - streamer_fly(V2).","- garment(V0) :- - wet_fly(V2), not -fishermans_lure(V0, V2), - opening(V0, V2), not -fly(V0)."],"d":["- opening(V0, V2) :- flipping(V0), not wet_fly(V2), - artifact(V0, V2), not -fly(V0), - exit(V0).","- garment(V0) :- fly(V0), not fur(V0), not -burqa(V0)."],"e":["- stringed_instrument(V1) :- being_sociable(V0, V1), not photographer(V0, V1), not chordophone(V0, V3), - tennessee(V1, V3), not -wilderness(V1, V3).","- can(V2) :- paint(V0), - tin(V0, V1), - plumb_bob(V1, V2), flat_coat(V2, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_51_10_11_9_10_0.5_1.0_3_2_3","seed":51,"num_facts":14,"num_rules":12,"num_related_predicates":26,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2222222222222223,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"biogeographical_region(\"Lori\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["bottle_wine(\"Steven\", \"Lori\").","- doctor.","young_male(\"Steven\", \"Lori\").","race_with_car(\"Lori\").","use_trampoline(\"Steven\", \"Lori\").","- nutriment(\"Lori\").","- executive_branch(\"Lori\").","- doing_nothing(\"Matthew\", \"Lori\").","- washingtonian(\"Matthew\", \"Lori\").","water_bed(\"Lori\").","troposphere(\"Lori\").","- reflective_surface(\"Loretta\", \"Steven\").","- medlar(\"Loretta\", \"Lori\").","asteroid_belt(\"Steven\", \"Lori\")."],"noisy_facts":["- knacker(\"Steven\", \"Lori\").","- black_guillemot(\"Steven\", \"Lori\").","- nutcracker(\"Lori\").","syllabub(\"Matthew\", \"Lori\").","phatic_speech(\"Lori\").","- seating(\"Steven\", \"Lori\")."],"min_fact_dicts_for_query":["bottle_wine(\"Steven\", \"Lori\").","race_with_car(\"Lori\").","- reflective_surface(\"Loretta\", \"Steven\")."],"noiseless_rules":["biogeographical_region(V3) :- coffee_break(V0, V2), pink(V1, V3), not large_brains(V2, V3).","coffee_break(V0, V2) :- form_of_personal_transportation(V0, V1), - not_poplar_pieces_of_mail(V1, V3), marine_life(V2, V3).","pink(V1, V3) :- bottle_wine(V1, V3).","form_of_personal_transportation(V3, V3) :- marine_life(V2, V3), not doctor.","- hunter(V3) :- marine_life(V2, V3), not doctor.","- large_brains(V2, V3) :- young_male(V1, V3), - doing_nothing(V2, V3), not washingtonian(V2, V3).","- object(V3) :- race_with_car(V3), - reflective_surface(V0, V1), not medlar(V0, V3).","- vocal_music(V1, V3) :- race_with_car(V3), - reflective_surface(V0, V1), not medlar(V0, V3).","- not_poplar_pieces_of_mail(V3, V3) :- - hunter(V3), not nutriment(V3), not executive_branch(V3).","- expression(V1, V3) :- use_trampoline(V1, V3), not -asteroid_belt(V1, V3).","throw_pillow(V3, V3) :- - object(V3), not -water_bed(V3), not -troposphere(V3).","marine_life(V3, V3) :- - vocal_music(V1, V3), not expression(V1, V3), not -throw_pillow(V1, V3)."],"noisy_rules":{"a":["- biogeographical_region(V3) :- - throw_pillow(V1, V3).","- biogeographical_region(V3) :- - pink(V1, V3), large_brains(V2, V3), not marine_life(V2, V3)."],"b":["- asteroid_belt(V1, V3) :- - pink(V1, V3), not biogeographical_region(V3).","expression(V3, V3) :- object(V3), - biogeographical_region(V3)."],"c":["- coffee_break(V0, V1) :- - form_of_personal_transportation(V0, V1).","- form_of_personal_transportation(V3, V3) :- object(V3)."],"d":["doing_nothing(V2, V3) :- - marine_life(V2, V3), not -syllabub(V2, V3).","- form_of_personal_transportation(V1, V1) :- not pink(V1, V3), not -object(V3), - black_guillemot(V1, V3)."],"e":["museums(V3) :- - nutcracker(V3), phatic_speech(V3), - seating(V1, V3).","- destroy_all_things(V1, V3) :- - knacker(V1, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_60_5_8_3_3_0.5_1.0_3_2_3","seed":60,"num_facts":5,"num_rules":9,"num_related_predicates":14,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"alcohol(\"Jane\", \"Alexander\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["duck(\"Jane\", \"Alexander\").","soap(\"Jane\", \"Jose\").","saloon(\"Alexander\", \"Colton\").","shake(\"Colton\", \"Jose\").","soup(\"Jane\", \"Colton\")."],"noisy_facts":[],"min_fact_dicts_for_query":["duck(\"Jane\", \"Alexander\").","soap(\"Jane\", \"Jose\").","saloon(\"Alexander\", \"Colton\").","shake(\"Colton\", \"Jose\").","soup(\"Jane\", \"Colton\")."],"noiseless_rules":["alcohol(V0, V1) :- drink(V2), bar(V0, V1), ethanol(V1, V2).","drink(V2) :- water(V0, V2), milk(V0, V3).","liquid(V2, V3) :- water(V0, V2), milk(V0, V3).","water(V0, V2) :- duck(V0, V1), soup(V0, V2).","bird(V0, V1) :- duck(V0, V1), soup(V0, V2).","bar(V0, V1) :- soap(V0, V3), saloon(V1, V2), shake(V2, V3).","milk(V0, V3) :- soap(V0, V3), saloon(V1, V2), shake(V2, V3).","agent(V1, V2) :- soap(V0, V3), saloon(V1, V2), shake(V2, V3).","ethanol(V1, V2) :- liquid(V2, V3), bird(V0, V1), agent(V1, V2)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_51_6_8_8_8_0.5_1.0_5_2_3","seed":51,"num_facts":10,"num_rules":9,"num_related_predicates":19,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" but(\"Rebekah\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["ankle(\"Elizabeth\", \"Rebekah\").","belt(\"Rebekah\").","how_much(\"Deborah\", \"Elizabeth\").","poodle(\"Deborah\", \"Rebekah\").","- library(\"Elizabeth\", \"Robert\").","measure(\"Elizabeth\", \"Robert\").","congolese(\"Elizabeth\", \"Rebekah\").","direction(\"Elizabeth\", \"Rebekah\").","- weaver(\"Deborah\", \"Rebekah\").","- animal_tissue(\"Deborah\", \"Rebekah\")."],"noisy_facts":["turtleneck_collar(\"Deborah\", \"Elizabeth\").","- place_of_business(\"Elizabeth\", \"Robert\").","paid_slave(\"Deborah\", \"Rebekah\").","fast_walking(\"Elizabeth\", \"Robert\").","polar_body(\"Deborah\", \"Rebekah\").","- master_race(\"Deborah\", \"Robert\").","design(\"Deborah\", \"Rebekah\").","specific_seat_on_plane(\"Deborah\", \"Elizabeth\").","heating(\"Deborah\", \"Rebekah\").","vixen(\"Deborah\", \"Elizabeth\").","artifact(\"Elizabeth\", \"Rebekah\")."],"min_fact_dicts_for_query":["ankle(\"Elizabeth\", \"Rebekah\").","belt(\"Rebekah\").","how_much(\"Deborah\", \"Elizabeth\").","poodle(\"Deborah\", \"Rebekah\").","- library(\"Elizabeth\", \"Robert\")."],"noiseless_rules":["- but(V3) :- - parliamentary_democracy(V0, V3).","cannon(V3) :- ankle(V1, V3).","solfege(V3) :- ankle(V1, V3).","speed(V0, V3) :- belt(V3), how_much(V0, V1), poodle(V0, V3), - library(V1, V2), not -measure(V1, V2).","- duckweed(V1, V3) :- belt(V3), how_much(V0, V1), poodle(V0, V3), - library(V1, V2), not -measure(V1, V2).","- storage(V3, V3) :- cannon(V3), speed(V0, V3), not weaver(V0, V3), not animal_tissue(V0, V3).","- agent(V0, V3) :- cannon(V3), speed(V0, V3), not weaver(V0, V3), not animal_tissue(V0, V3).","- parliamentary_democracy(V1, V3) :- solfege(V3), - storage(V1, V3), not insectivore(V1, V3), not -congolese(V1, V3), not -direction(V1, V3).","- insectivore(V1, V3) :- - duckweed(V1, V3), not agent(V1, V3)."],"noisy_rules":{"a":["but(V3) :- - solfege(V3), - speed(V0, V3).","but(V3) :- - speed(V0, V3), storage(V1, V3), agent(V1, V3), not -parliamentary_democracy(V0, V3), not -insectivore(V1, V3)."],"b":["animal_tissue(V3, V3) :- but(V3).","agent(V1, V3) :- - speed(V0, V3), storage(V1, V3), not -agent(V1, V3), but(V3)."],"c":["- direction(V1, V3) :- - cannon(V3), insectivore(V1, V3).","- congolese(V1, V3) :- - cannon(V3), not solfege(V3), not -duckweed(V1, V3), agent(V1, V3), parliamentary_democracy(V0, V3)."],"d":["- cannon(V3) :- storage(V1, V3), not -agent(V1, V3), parliamentary_democracy(V0, V3), paid_slave(V0, V3).","- solfege(V3) :- duckweed(V1, V3), parliamentary_democracy(V0, V3), heating(V0, V3), design(V0, V3)."],"e":["filament(V2) :- turtleneck_collar(V0, V1), not place_of_business(V1, V2), fast_walking(V1, V2), artifact(V1, V3).","- patisserie(V3) :- specific_seat_on_plane(V0, V1), vixen(V0, V1), - master_race(V0, V2), polar_body(V0, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_12_8_12_4_7_0.5_1.0_3_2_3","seed":12,"num_facts":7,"num_rules":13,"num_related_predicates":20,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.857142857142857,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"erogenous_zone(\"Sandra\", \"Edwin\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- roentgenium(\"Nicolas\", \"Wendy\").","- seeing_world_from_top.","quail(\"Nicolas\", \"Sandra\").","airliner(\"Sandra\", \"Wendy\").","- above_and(\"Edwin\", \"Wendy\").","- amortization(\"Sandra\", \"Edwin\").","kook(\"Sandra\", \"Wendy\")."],"noisy_facts":["- bull(\"Nicolas\", \"Wendy\").","pretty(\"Sandra\", \"Edwin\").","orange(\"Nicolas\", \"Edwin\").","- miss.","longboat(\"Nicolas\", \"Edwin\").","- card(\"Nicolas\", \"Sandra\").","- chopping_block(\"Sandra\", \"Edwin\").","- geometrid(\"Sandra\", \"Wendy\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["erogenous_zone(V1, V2) :- - paradiddle(V2), tune(V1, V2), - large_stream(V1, V3).","turkey_leg(V1, V3) :- - roentgenium(V0, V3), - amortization(V1, V2), not -kook(V1, V3).","- paradiddle(V3) :- turkey_leg(V1, V3), not -carry_other_aeroplanes(V1, V3), not -pay_bills(V1, V3).","black(V1, V1) :- turkey_leg(V1, V3), not -carry_other_aeroplanes(V1, V3), not -pay_bills(V1, V3).","tune(V1, V1) :- turkey_leg(V1, V3), not seeing_world_from_top, not -kook(V1, V3).","- leader(V3, V3) :- turkey_leg(V1, V3), not seeing_world_from_top, not -kook(V1, V3).","- bulbul(V3) :- turkey_leg(V1, V3), not seeing_world_from_top, not -kook(V1, V3).","part_of_personal_hygiene(V1, V3) :- turkey_leg(V1, V3), not seeing_world_from_top, not -kook(V1, V3).","carry_other_aeroplanes(V0, V3) :- - leader(V0, V3).","conjugation(V0, V0) :- - leader(V0, V3).","call(V0, V1) :- quail(V0, V1), airliner(V1, V3), - above_and(V2, V3).","pay_bills(V1, V3) :- - bulbul(V0), carry_other_aeroplanes(V1, V3), not -call(V0, V1).","- large_stream(V1, V0) :- black(V0, V2), part_of_personal_hygiene(V0, V2), conjugation(V1, V2)."],"noisy_rules":{"a":["- erogenous_zone(V1, V1) :- leader(V0, V3), - pay_bills(V1, V3).","- erogenous_zone(V0, V0) :- bulbul(V0)."],"b":["- quail(V0, V1) :- - call(V0, V1), large_stream(V1, V3), - erogenous_zone(V1, V2).","bulbul(V0) :- bulbul(V0), - erogenous_zone(V1, V2)."],"c":["above_and(V1, V3) :- - pay_bills(V1, V3).","- turkey_leg(V2, V2) :- paradiddle(V2)."],"d":["- broadcaster(V1, V2) :- - conjugation(V1, V2), - chopping_block(V1, V2).","- part_of_personal_hygiene(V3, V1) :- large_stream(V1, V3), not miss."],"e":["- grade_separation(V1, V3) :- - bull(V0, V3), pretty(V1, V2), - geometrid(V1, V3).","overlay(V0, V2) :- - card(V0, V1), orange(V0, V2), longboat(V0, V2)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_14_10_11_11_13_0.5_1.0_3_2_3","seed":14,"num_facts":15,"num_rules":12,"num_related_predicates":27,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.2222222222222223,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"meadow(\"Thomas\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- debt(\"Thomas\", \"Cassandra\").","pressure_dome(\"John\", \"Jennifer\").","aggressiveness(\"John\", \"Thomas\").","cable(\"Jennifer\").","user(\"John\", \"Thomas\").","labyrinth(\"John\", \"Thomas\").","- skirl(\"Thomas\", \"Jennifer\").","- nonpareil(\"Jennifer\", \"Cassandra\").","- temporal_bone(\"Jennifer\", \"Cassandra\").","muskellunge(\"Thomas\", \"Jennifer\").","absenteeism(\"Jennifer\", \"Cassandra\").","fibrous_tissue(\"Thomas\").","school_of_fish(\"John\", \"Thomas\").","vulture(\"John\", \"Thomas\").","artery(\"John\", \"Thomas\")."],"noisy_facts":["- baseball_stadium(\"Thomas\", \"Cassandra\").","return_address(\"Thomas\", \"Jennifer\").","letting(\"John\", \"Jennifer\").","- skin(\"Jennifer\", \"Cassandra\").","- belted_ammunition(\"Jennifer\", \"Cassandra\")."],"min_fact_dicts_for_query":["- debt(\"Thomas\", \"Cassandra\").","pressure_dome(\"John\", \"Jennifer\").","- skirl(\"Thomas\", \"Jennifer\").","- nonpareil(\"Jennifer\", \"Cassandra\")."],"noiseless_rules":["meadow(V1) :- converter(V1, V2), - draft_board(V1, V3), not temporal_bone(V2, V3).","undercut(V1, V3) :- - debt(V1, V3).","entrance(V0, V1) :- pressure_dome(V0, V2), - skirl(V1, V2), - nonpareil(V2, V3).","social_meetings_with_friends(V0, V1) :- entrance(V0, V1), not -aggressiveness(V0, V1), not -artery(V0, V1).","decision_making(V0, V1) :- entrance(V0, V1), not -aggressiveness(V0, V1), not -artery(V0, V1).","- album(V1, V1) :- social_meetings_with_friends(V0, V1), not -school_of_fish(V0, V1), not -vulture(V0, V1).","- ship_wreak(V1, V2) :- decision_making(V0, V1), - album(V1, V2), not universe(V0, V1).","converter(V1, V1) :- entrance(V0, V1), not -user(V0, V1), not -labyrinth(V0, V1).","- universe(V0, V1) :- entrance(V0, V1), not -user(V0, V1), not -labyrinth(V0, V1).","medical_diagnosis(V1) :- cable(V2), muskellunge(V1, V2), absenteeism(V2, V3).","- ordinary(V2) :- - ship_wreak(V1, V2), not -medical_diagnosis(V1), not -fibrous_tissue(V1).","- draft_board(V1, V3) :- undercut(V1, V3), - ship_wreak(V1, V2), not ordinary(V3)."],"noisy_rules":{"a":["- meadow(V1) :- universe(V0, V1).","- meadow(V1) :- draft_board(V1, V3)."],"b":["- aggressiveness(V1, V1) :- - meadow(V1).","ordinary(V1) :- - meadow(V1)."],"c":["- social_meetings_with_friends(V2, V1) :- - converter(V1, V2), draft_board(V1, V3).","- undercut(V1, V2) :- album(V1, V2)."],"d":["- muskellunge(V1, V3) :- draft_board(V1, V3).","- artery(V1, V1) :- - undercut(V1, V3), not baseball_stadium(V1, V3)."],"e":["- dextrocardia(V2, V3) :- - belted_ammunition(V2, V3).","caterwaul(V0, V1) :- letting(V0, V2), return_address(V1, V2), - skin(V2, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_45_9_14_12_15_0.5_1.0_5_2_3","seed":45,"num_facts":15,"num_rules":15,"num_related_predicates":30,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":" action(\"Michael\", \"Cody\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- rub(\"Cody\", \"Jacob\").","- nest(\"Cody\", \"Jacob\").","baby(\"Michael\").","- room(\"Cody\", \"Jacob\").","growing(\"Cody\", \"Jacob\").","- bed(\"Michael\", \"Jacob\").","- cat(\"Michael\", \"Jacob\").","rest(\"Michael\", \"Jacob\").","camp(\"Michael\", \"Jacob\").","- planes(\"Cody\", \"Jacob\").","- most_birds(\"Cody\", \"Jacob\").","- bats(\"Cody\", \"Jacob\").","vending_stand(\"Michael\", \"Cody\").","parameter(\"Michael\", \"Jacob\").","reaction(\"Michael\", \"Richard\")."],"noisy_facts":["- hammer(\"Michael\", \"Richard\").","doves(\"Cody\").","- character(\"Michael\", \"Cody\").","ham(\"Michael\", \"Jacob\").","flea(\"Cody\").","- wings(\"Michael\", \"Jacob\").","- geese(\"Cody\").","- bat(\"Michael\", \"Jacob\").","- bevel(\"Michael\", \"Cody\")."],"min_fact_dicts_for_query":["- rub(\"Cody\", \"Jacob\").","baby(\"Michael\").","vending_stand(\"Michael\", \"Cody\").","parameter(\"Michael\", \"Jacob\").","reaction(\"Michael\", \"Richard\")."],"noiseless_rules":["- action(V0, V1) :- - fly(V2), touch(V2), cry(V0, V1), not sleep(V0, V1), not roll(V0, V2).","- fly(V2) :- bird(V1), kite(V2), not planes(V1, V2), not most_birds(V1, V2), not bats(V1, V2).","- animal(V1, V2) :- bird(V1), kite(V2), not planes(V1, V2), not most_birds(V1, V2), not bats(V1, V2).","living(V1) :- - animal(V1, V2), not -home(V1, V2), not -house(V1, V2), not room(V1, V2), not -growing(V1, V2).","touch(V2) :- kite(V2), home(V1, V2), not rub(V1, V2).","flying(V1, V2) :- kite(V2), home(V1, V2), not rub(V1, V2).","bird(V1) :- - rub(V1, V2), not nest(V1, V2).","petting(V1) :- - rub(V1, V2), not nest(V1, V2).","massage(V1, V2) :- - rub(V1, V2), not nest(V1, V2).","kite(V1) :- petting(V1).","home(V1, V1) :- petting(V1).","cry(V0, V1) :- baby(V0), vending_stand(V0, V1), parameter(V0, V2), reaction(V0, V3).","- sleep(V0, V0) :- flying(V0, V2), not bed(V0, V2), not cat(V0, V2), not -rest(V0, V2), not -camp(V0, V2).","house(V0, V2) :- flying(V0, V2), not bed(V0, V2), not cat(V0, V2), not -rest(V0, V2), not -camp(V0, V2).","- roll(V2, V2) :- living(V1), massage(V1, V2)."],"noisy_rules":{"a":["action(V0, V1) :- - touch(V2), - petting(V1), - cry(V0, V1).","action(V0, V1) :- animal(V1, V2), not living(V1), not flying(V0, V2), not petting(V1), - cry(V0, V1)."],"b":["- house(V1, V2) :- not living(V1), roll(V0, V2), action(V0, V1).","- living(V1) :- not -fly(V2), - touch(V2), not bird(V1), - massage(V1, V2), action(V0, V1)."],"c":["- bird(V1) :- fly(V2), sleep(V0, V1).","animal(V1, V2) :- - living(V1), - flying(V0, V2), - bird(V1)."],"d":["fly(V2) :- - touch(V2), not bird(V1), not kite(V2), doves(V1), not geese(V1).","- flying(V0, V2) :- not touch(V2), roll(V0, V2), - wings(V0, V2), - bat(V0, V2)."],"e":["itching(V1) :- flea(V1), - bevel(V0, V1), ham(V0, V2).","break_window(V0, V3) :- - character(V0, V1), - hammer(V0, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_14_8_12_8_10_0.5_1.0_3_3_4","seed":14,"num_facts":9,"num_rules":13,"num_related_predicates":22,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.5714285714285716,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P12(\"Ivan\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P13(\"Katherine\", \"Ricky\", \"Corey\").","- P14(\"Katherine\", \"Ivan\", \"Corey\").","- P15(\"Katherine\", \"Ivan\").","- P16(\"Katherine\", \"Ricky\", \"Elizabeth\").","- P17(\"Elizabeth\", \"Ivan\", \"Corey\").","- P18(\"Elizabeth\", \"Ivan\", \"Corey\").","P19(\"Ricky\", \"Elizabeth\").","- P20(\"Katherine\", \"Ivan\", \"Corey\").","P21(\"Katherine\", \"Ivan\", \"Corey\")."],"noisy_facts":["- P27(\"Katherine\", \"Ivan\", \"Corey\").","P22(\"Katherine\", \"Ivan\", \"Corey\").","P23(\"Elizabeth\", \"Ivan\", \"Corey\").","P26(\"Katherine\", \"Ricky\", \"Elizabeth\").","- P25(\"Katherine\", \"Ricky\", \"Elizabeth\").","- P29(\"Katherine\", \"Elizabeth\", \"Ivan\")."],"min_fact_dicts_for_query":["P13(\"Katherine\", \"Ricky\", \"Corey\").","- P16(\"Katherine\", \"Ricky\", \"Elizabeth\").","- P17(\"Elizabeth\", \"Ivan\", \"Corey\").","- P18(\"Elizabeth\", \"Ivan\", \"Corey\")."],"noiseless_rules":["P12(V3) :- P5(V0, V3), not -P11(V0, V3), not P15(V0, V3).","P0(V1, V2) :- P13(V0, V1, V4), - P18(V2, V3, V4).","- P1(V2, V3, V4) :- P13(V0, V1, V4), - P18(V2, V3, V4).","P2(V0, V3, V4) :- P13(V0, V1, V4), - P18(V2, V3, V4).","- P3(V4) :- P0(V1, V2), - P18(V2, V3, V4), not -P19(V1, V2).","P4(V2, V4) :- P0(V1, V2), - P18(V2, V3, V4), not -P19(V1, V2).","P5(V0, V3) :- P6(V0, V3), - P9(V0, V3, V4), not P14(V0, V3, V4).","P6(V0, V3) :- P8(V0, V2), - P16(V0, V1, V2), - P17(V2, V3, V4).","- P7(V2, V3, V4) :- P8(V0, V2), - P16(V0, V1, V2), - P17(V2, V3, V4).","P8(V0, V2) :- - P1(V2, V3, V4), - P3(V4), - P9(V0, V3, V4).","- P9(V0, V3, V4) :- P2(V0, V3, V4), not P20(V0, V3, V4), not -P21(V0, V3, V4).","- P10(V4) :- P2(V0, V3, V4), not P20(V0, V3, V4), not -P21(V0, V3, V4).","P11(V0, V3) :- P4(V0, V4), - P7(V2, V3, V4), not P10(V4)."],"noisy_rules":{"a":["- P12(V3) :- P9(V0, V3, V4).","- P12(V3) :- P1(V2, V3, V4), - P4(V0, V4), not P11(V0, V3)."],"b":["P3(V4) :- - P4(V0, V4), - P12(V3).","- P11(V3, V3) :- P10(V4), - P12(V3)."],"c":["- P0(V0, V0) :- - P11(V0, V3).","P10(V4) :- - P0(V1, V2), P1(V2, V3, V4), - P4(V0, V4)."],"d":["P3(V4) :- - P2(V0, V3, V4), P10(V4), P22(V0, V3, V4).","- P8(V4, V2) :- not -P1(V2, V3, V4), P23(V2, V3, V4)."],"e":["P24(V3) :- - P25(V0, V1, V2), P26(V0, V1, V2), - P27(V0, V3, V4).","- P28(V2, V3) :- - P29(V0, V2, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_22_6_8_6_9_0.5_1.0_5_2_3","seed":22,"num_facts":9,"num_rules":9,"num_related_predicates":18,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"P8(\"Robert\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P9(\"Brandon\", \"Jessica\").","- P10(\"Stephanie\").","- P11(\"Brandon\", \"Robert\").","P12(\"Brandon\", \"Jessica\").","P13(\"Brandon\", \"Robert\").","P14(\"Jessica\", \"Stephanie\").","P15(\"Robert\", \"Stephanie\").","P16(\"Brandon\", \"Robert\").","- P17(\"Robert\", \"Stephanie\")."],"noisy_facts":["- P28(\"Robert\").","P24(\"Jessica\", \"Stephanie\").","- P25(\"Jessica\", \"Stephanie\").","P23(\"Brandon\", \"Stephanie\").","- P22(\"Brandon\", \"Robert\").","P27(\"Jessica\").","P21(\"Robert\").","- P29(\"Jessica\", \"Robert\").","- P30(\"Robert\", \"Stephanie\").","P19(\"Brandon\").","- P18(\"Brandon\")."],"min_fact_dicts_for_query":["- P9(\"Brandon\", \"Jessica\").","- P10(\"Stephanie\").","- P11(\"Brandon\", \"Robert\").","P12(\"Brandon\", \"Jessica\").","P13(\"Brandon\", \"Robert\").","P14(\"Jessica\", \"Stephanie\").","P15(\"Robert\", \"Stephanie\").","P16(\"Brandon\", \"Robert\")."],"noiseless_rules":["P8(V2) :- P1(V2), - P4(V1, V2), P5(V1, V3).","P0(V0) :- - P9(V0, V1), P12(V0, V1), P13(V0, V2), P14(V1, V3), not -P15(V2, V3).","P1(V2) :- - P10(V3), P16(V0, V2), not P17(V2, V3).","P2(V2, V3) :- - P10(V3), P16(V0, V2), not P17(V2, V3).","- P3(V0, V2) :- - P10(V3), P16(V0, V2), not P17(V2, V3).","- P4(V1, V2) :- P2(V2, V3), P5(V1, V3), P6(V0, V2), not -P16(V0, V2).","P5(V3, V3) :- P0(V0), - P3(V0, V2), P7(V0), P15(V2, V3).","P6(V0, V2) :- - P11(V0, V2).","P7(V0) :- - P11(V0, V2)."],"noisy_rules":{"a":["- P8(V2) :- - P2(V2, V3).","- P8(V2) :- - P0(V0), - P1(V2), P4(V1, V2), not P6(V0, V2), - P7(V0)."],"b":["- P14(V1, V3) :- - P2(V2, V3), not -P4(V1, V2), - P5(V1, V3), - P7(V0), not P8(V2).","- P6(V0, V2) :- P3(V0, V2), - P8(V2)."],"c":["- P0(V0) :- P3(V0, V2), not P6(V0, V2).","- P7(V0) :- - P5(V1, V3), - P6(V0, V2)."],"d":["- P1(V2) :- - P5(V1, V3), - P6(V0, V2), not P7(V0), not P18(V0).","- P13(V0, V2) :- - P2(V2, V3), - P5(V1, V3), not P6(V0, V2), - P7(V0), not -P19(V0)."],"e":["P20(V0) :- not -P21(V2), - P22(V0, V2), not -P23(V0, V3), not -P24(V1, V3), - P25(V1, V3).","- P26(V1, V2) :- P27(V1), - P28(V2), not P29(V1, V2), - P30(V2, V3)."]}},"num_min_facts_for_query":8,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_27_6_9_9_10_0.5_1.0_5_1_2","seed":27,"num_facts":10,"num_rules":10,"num_related_predicates":20,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" P9(\"Zachary\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P10.","P11.","P12(\"Zachary\").","P13.","P14.","P15(\"Zachary\").","- P16(\"Zachary\").","P17(\"Zachary\").","- P18(\"Zachary\").","- P19(\"Zachary\")."],"noisy_facts":["- P25(\"Zachary\").","P21.","P24(\"Zachary\").","P20.","- P26(\"Zachary\").","P28(\"Zachary\").","- P23(\"Zachary\")."],"min_fact_dicts_for_query":["P10.","P11.","P12(\"Zachary\")."],"noiseless_rules":["- P9(V2) :- - P0(V2), not P1(V2), not P7(V2), not -P12(V2), not P19(V2).","- P0(V2) :- - P2(V2), not -P15(V2), not P16(V2), not -P17(V2), not P18(V2).","- P1(V2) :- P3(V2), not P5(V2), not P8(V2).","- P2(V2) :- P3(V2), not P5(V2), not P8(V2).","P3(V2) :- P10, P11, P12(V2), not -P13, not -P14.","P4(V2) :- P10, P11, P12(V2), not -P13, not -P14.","- P5(V0) :- P4(V0).","P6(V0) :- P4(V0).","- P7(V0) :- P6(V0).","- P8(V0) :- P6(V0)."],"noisy_rules":{"a":["P9(V2) :- not P3(V2), - P4(V0), not -P5(V2), not -P7(V2), P8(V2).","P9(V2) :- P0(V2), - P4(V0)."],"b":["- P15(V2) :- - P3(V2), not -P9(V2).","- P17(V2) :- P5(V2), - P6(V0), not -P9(V2)."],"c":["P18(V0) :- - P6(V0).","- P4(V2) :- P0(V2), - P3(V2)."],"d":["P1(V2) :- P2(V2), - P3(V2), - P6(V0), not -P8(V2), P20.","- P6(V0) :- P1(V2), - P3(V2), - P4(V0), not -P8(V2), not -P21."],"e":["P22(V2) :- not P23(V2), P24(V2), not P25(V2), not P26(V2).","P27(V2) :- P28(V2)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_32_9_13_5_8_0.5_1.0_5_2_3","seed":32,"num_facts":8,"num_rules":14,"num_related_predicates":22,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"P13(\"Dennis\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P14(\"Crystal\", \"Dennis\").","P15(\"Jason\").","- P16(\"Dennis\", \"Jason\").","P17(\"Jason\").","P18(\"Jason\").","P19(\"Jason\").","P20(\"Jason\").","- P21(\"Dennis\", \"Jason\")."],"noisy_facts":["- P23(\"Dennis\", \"Jason\").","- P29(\"Crystal\", \"Jason\").","P31(\"Dennis\", \"Jason\").","- P26(\"Dennis\", \"Jason\").","- P25(\"Dennis\", \"Jason\").","P27(\"Crystal\", \"Dennis\").","P24(\"Dennis\", \"Jason\")."],"min_fact_dicts_for_query":["P15(\"Jason\").","- P16(\"Dennis\", \"Jason\")."],"noiseless_rules":["P13(V1) :- - P0(V2), P2(V2), - P5(V1, V2).","- P0(V2) :- P4(V2), not -P6(V2), not -P17(V2).","- P1(V0, V1) :- - P14(V0, V1).","P2(V2) :- P15(V2), not -P17(V2), not -P18(V2), not -P19(V2), not -P20(V2).","- P3(V2, V2) :- P15(V2), not -P17(V2), not -P18(V2), not -P19(V2), not -P20(V2).","P4(V2) :- - P3(V1, V2), not -P7(V1, V2), not P9(V1, V2), not P21(V1, V2).","- P5(V1, V2) :- P10(V1, V2), not P11(V1, V2).","P6(V2) :- P10(V1, V2), not P11(V1, V2).","P7(V1, V2) :- P10(V1, V2), not P11(V1, V2).","- P8(V1) :- P10(V1, V2), not P11(V1, V2).","- P9(V1, V2) :- - P3(V1, V2), not P8(V1), not P11(V1, V2), not P12(V1).","P10(V1, V2) :- - P16(V1, V2).","- P11(V1, V0) :- - P1(V0, V1).","- P12(V1) :- - P1(V0, V1)."],"noisy_rules":{"a":["- P13(V1) :- P1(V0, V1), - P4(V2).","- P13(V1) :- - P6(V2), - P10(V1, V2)."],"b":["P0(V2) :- not P2(V2), P3(V1, V2), not -P5(V1, V2), not -P11(V1, V2), not P13(V1).","P1(V0, V1) :- P1(V0, V1), P3(V1, V2), not P13(V1)."],"c":["- P20(V2) :- P8(V1), - P10(V1, V2).","- P17(V2) :- P0(V2)."],"d":["- P22(V1) :- not P2(V2), not P10(V1, V2), - P23(V1, V2).","- P15(V2) :- not P6(V2), P11(V1, V2), not -P24(V1, V2), - P25(V1, V2), - P26(V1, V2)."],"e":["- P28(V0, V1) :- P27(V0, V1), - P29(V0, V2).","- P30(V1, V2) :- P31(V1, V2)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_9_9_11_7_8_0.5_1.0_3_1_2","seed":9,"num_facts":11,"num_rules":12,"num_related_predicates":23,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"contest(\"Krista\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["clerid_beetle(\"Krista\").","- live_outside.","hypoplasia(\"Larry\").","artifact(\"Krista\").","chrome(\"Krista\").","jewelled_headdress(\"Krista\").","- liquid_food.","making_food_edible(\"Krista\").","exit(\"Krista\").","- safety_belt(\"Krista\").","- straw."],"noisy_facts":["- statue(\"Amber\").","island(\"Krista\").","down(\"Amber\").","buying_beer(\"Larry\").","sickness(\"Larry\").","- bean(\"Amber\").","knock(\"Krista\").","bell(\"Larry\")."],"min_fact_dicts_for_query":["- live_outside.","jewelled_headdress(\"Krista\")."],"noiseless_rules":["contest(V1) :- mystique(V1), not -clitoris(V1), not hobby(V1).","circle_of_curvature(V1) :- clerid_beetle(V1), not -exit(V1), not safety_belt(V1).","mystique(V1) :- - photographer(V1), not -cultist(V1), not -making_food_edible(V1).","wish(V1) :- - live_outside, jewelled_headdress(V1), not straw.","- canadian_dollar(V1) :- - live_outside, jewelled_headdress(V1), not straw.","- fly_using_wings(V1) :- - live_outside, jewelled_headdress(V1), not straw.","clitoris(V2) :- wish(V2), not measure(V2), not sense_light(V2).","- photographer(V2) :- wish(V2), not measure(V2), not sense_light(V2).","- measure(V2) :- hypoplasia(V2).","cultist(V0) :- - canadian_dollar(V0).","- sense_light(V1) :- circle_of_curvature(V1), not fly_using_wings(V1), not liquid_food.","- hobby(V1) :- artifact(V1), not -chrome(V1), not -jewelled_headdress(V1)."],"noisy_rules":{"a":["- contest(V1) :- - clitoris(V1), sense_light(V2).","- contest(V1) :- - circle_of_curvature(V1), not clitoris(V1), - cultist(V1)."],"b":["live_outside(V1) :- - wish(V2), not -measure(V2), - contest(V1).","canadian_dollar(V1) :- - contest(V1)."],"c":["live_outside(V1) :- - mystique(V1), canadian_dollar(V0), fly_using_wings(V1).","live_outside(V1) :- fly_using_wings(V1)."],"d":["live_outside(V1) :- knock(V1).","photographer(V1) :- - clitoris(V1), not -island(V1)."],"e":["- compact(V0) :- - statue(V0), not -down(V0), not bean(V0).","myriapod(V2) :- not -bell(V2), not -buying_beer(V2), sickness(V2)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_77_8_9_9_11_0.5_1.0_3_2_3","seed":77,"num_facts":11,"num_rules":10,"num_related_predicates":21,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.7142857142857144,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"brown_bear(\"Christopher\", \"Peter\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["suit(\"Jessica\").","tolerance.","- lion(\"Jessica\").","vocal_music(\"Jessica\").","- syrian_bear(\"Christopher\", \"Peter\").","alaskan_brown_bear(\"Christopher\", \"Jessica\").","- bear(\"Christopher\", \"Peter\").","eat_animals(\"Peter\", \"Patrick\").","cub(\"Peter\", \"Patrick\").","stamina.","- sufferance(\"Jessica\")."],"noisy_facts":["- P25(\"Patrick\").","mane(\"Christopher\", \"Peter\").","american_black_bear.","- abnormality(\"Christopher\", \"Jessica\").","- soup(\"Patrick\").","salad(\"Christopher\", \"Patrick\")."],"min_fact_dicts_for_query":["suit(\"Jessica\").","tolerance.","- syrian_bear(\"Christopher\", \"Peter\").","stamina.","- sufferance(\"Jessica\")."],"noiseless_rules":["brown_bear(V0, V1) :- grizzly(V3), - syrian_bear(V0, V1), not -alaskan_brown_bear(V0, V3).","bruin(V3) :- - bear_cub(V3), lion_cub(V3), - ice_bear(V2, V3).","- bear_cub(V3) :- suit(V3), not sufferance(V3).","- singing(V3) :- suit(V3), not sufferance(V3).","- asiatic_black_bear(V3, V3) :- tolerance, stamina, - sufferance(V3).","endurance(V3, V3) :- tolerance, stamina, - sufferance(V3).","grizzly(V3) :- bruin(V3), not -lion_cub(V3).","lion_cub(V0) :- - asiatic_black_bear(V0, V1), not sloth_bear(V0, V1), not bear(V0, V1).","- ice_bear(V3, V3) :- - singing(V3), not lion(V3), not -vocal_music(V3).","- sloth_bear(V2, V1) :- endurance(V1, V2), not -eat_animals(V1, V2), not -cub(V1, V2)."],"noisy_rules":{"a":["- brown_bear(V0, V1) :- asiatic_black_bear(V0, V1), - grizzly(V3).","- brown_bear(V0, V1) :- asiatic_black_bear(V0, V1), ice_bear(V2, V3)."],"b":["bear(V0, V1) :- - brown_bear(V0, V1).","- vocal_music(V3) :- singing(V3), not grizzly(V3), - brown_bear(V0, V1)."],"c":["bear(V0, V1) :- bear_cub(V3), asiatic_black_bear(V0, V1), not -sloth_bear(V0, V1).","- cub(V1, V0) :- not -bear_cub(V3), - lion_cub(V3), sloth_bear(V0, V1)."],"d":["lion(V3) :- - lion_cub(V3), not -sloth_bear(V0, V1), mane(V0, V1).","bear(V3, V2) :- - bruin(V3), ice_bear(V2, V3), american_black_bear."],"e":["- dish(V0, V2) :- - soup(V2), - P25(V2), salad(V0, V2).","physiological_state(V3) :- - abnormality(V0, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_45_8_9_9_12_0.5_1.0_5_2_3","seed":45,"num_facts":13,"num_rules":10,"num_related_predicates":23,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.5714285714285714,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" kayak(\"Richard\", \"Daryl\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["expressing_information(\"Krista\", \"Matthew\").","airline_seat(\"Daryl\").","triple_frontier(\"Richard\", \"Daryl\").","- dining_table(\"Daryl\", \"Matthew\").","sind(\"Daryl\").","golden_gram(\"Daryl\", \"Matthew\").","- north_american_country(\"Daryl\", \"Matthew\").","butler(\"Daryl\", \"Matthew\").","face(\"Richard\", \"Daryl\").","half_moon(\"Richard\", \"Krista\").","- worship(\"Daryl\", \"Krista\").","mother_in_law(\"Richard\", \"Daryl\").","shiny(\"Richard\", \"Daryl\")."],"noisy_facts":["utensil(\"Richard\", \"Krista\").","- bistro(\"Richard\", \"Daryl\").","bridoon(\"Richard\", \"Daryl\").","demand_satisfaction(\"Krista\").","- bait(\"Daryl\", \"Krista\").","- banquet.","affectionateness(\"Krista\", \"Matthew\").","- leotard(\"Daryl\", \"Krista\").","- piece_of_eight(\"Richard\", \"Daryl\").","- pump_for_blood(\"Richard\", \"Matthew\")."],"min_fact_dicts_for_query":["expressing_information(\"Krista\", \"Matthew\").","airline_seat(\"Daryl\").","triple_frontier(\"Richard\", \"Daryl\").","sind(\"Daryl\").","golden_gram(\"Daryl\", \"Matthew\").","face(\"Richard\", \"Daryl\").","half_moon(\"Richard\", \"Krista\")."],"noiseless_rules":["- kayak(V0, V1) :- kill_mice(V2), - ringer(V2), - playing_chess(V0, V1), not kill_person(V0, V1), not -large_gathering(V0, V2).","kill_mice(V2) :- expressing_information(V2, V3).","- ringer(V2) :- - album(V1), - social_interaction(V1), face(V0, V1), half_moon(V0, V2), not worship(V1, V2).","- album(V1) :- airline_seat(V1), sind(V1), golden_gram(V1, V3), not north_american_country(V1, V3), not -butler(V1, V3).","- currycomb(V1) :- airline_seat(V1), sind(V1), golden_gram(V1, V3), not north_american_country(V1, V3), not -butler(V1, V3).","- playing_chess(V0, V1) :- triple_frontier(V0, V1), not -face(V0, V1), not -mother_in_law(V0, V1), not -shiny(V0, V1).","- kill_person(V0, V1) :- - occupation(V0, V1).","large_gathering(V3, V1) :- - currycomb(V1), golden_gram(V1, V3).","- social_interaction(V1) :- - currycomb(V1), golden_gram(V1, V3).","- occupation(V1, V1) :- - dining_table(V1, V3), not -golden_gram(V1, V3)."],"noisy_rules":{"a":["kayak(V0, V1) :- album(V1), currycomb(V1), playing_chess(V0, V1), not -social_interaction(V1).","kayak(V0, V1) :- ringer(V2), playing_chess(V0, V1), not large_gathering(V0, V2)."],"b":["occupation(V0, V1) :- - kill_mice(V2), kayak(V0, V1).","- face(V0, V1) :- not -album(V1), not -kill_person(V0, V1), - large_gathering(V0, V2), not -occupation(V0, V1), kayak(V0, V1)."],"c":["- airline_seat(V1) :- - kill_mice(V2), ringer(V2), playing_chess(V0, V1), not large_gathering(V0, V2), not -occupation(V0, V1).","ringer(V2) :- - kill_mice(V2), playing_chess(V0, V1), - large_gathering(V0, V2)."],"d":["- face(V0, V1) :- ringer(V2), not -album(V1), social_interaction(V1), not -occupation(V0, V1), bridoon(V0, V1).","- expressing_information(V2, V2) :- ringer(V2), social_interaction(V1), occupation(V0, V1), - banquet."],"e":["- azure(V0, V1) :- demand_satisfaction(V2), - piece_of_eight(V0, V1), not bait(V1, V2), not leotard(V1, V2).","- wind(V3) :- - bistro(V0, V1), not -utensil(V0, V2), not pump_for_blood(V0, V3), affectionateness(V2, V3)."]}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_5_8_9_9_12_0.5_1.0_5_2_3","seed":5,"num_facts":13,"num_rules":10,"num_related_predicates":23,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"material(\"Kathleen\", \"Diane\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- silver(\"Joseph\", \"Kathleen\").","grinding(\"Joseph\", \"Diane\").","- mother_of_pearl(\"Joseph\", \"Kathleen\").","- paste(\"Joseph\", \"Kathleen\").","ammunition(\"Kathleen\", \"Diane\").","cement(\"Joseph\", \"Kathleen\").","- rubber_cement(\"Joseph\", \"Kathleen\").","- spirit_gum(\"Joseph\", \"Kathleen\").","- quacking(\"Joseph\", \"Kathleen\").","- relax(\"Joseph\", \"Kathleen\").","neats_foot_oil(\"Joseph\", \"Kathleen\").","- drying_oil(\"Kathleen\", \"Diane\").","- wool_oil(\"Kathleen\", \"Diane\")."],"noisy_facts":["swan.","court(\"Joshua\", \"Diane\").","lahar(\"Joseph\").","turnaround(\"Joshua\", \"Kathleen\").","- layby(\"Joseph\", \"Kathleen\").","home(\"Joseph\", \"Kathleen\").","breakfast_area(\"Joseph\", \"Kathleen\")."],"min_fact_dicts_for_query":["- silver(\"Joseph\", \"Kathleen\").","grinding(\"Joseph\", \"Diane\").","- paste(\"Joseph\", \"Kathleen\").","ammunition(\"Kathleen\", \"Diane\").","cement(\"Joseph\", \"Kathleen\").","neats_foot_oil(\"Joseph\", \"Kathleen\")."],"noiseless_rules":["material(V2, V3) :- - conductor(V2), animal_material(V2), adhesive_material(V3), not -ammunition(V2, V3).","- animal_oil(V0, V2) :- shark_oil(V2), - menhaden_oil(V3), neats_foot_oil(V0, V2), not drying_oil(V2, V3), not wool_oil(V2, V3).","- conductor(V2) :- - silver(V0, V2), not -neats_foot_oil(V0, V2).","- dentine(V0, V2) :- - silver(V0, V2), not -neats_foot_oil(V0, V2).","shark_oil(V2) :- - atom(V0), cement(V0, V2).","animal_material(V2) :- - animal_oil(V0, V2), - dentine(V1, V2), not shell(V0, V2), not quacking(V0, V2), not relax(V0, V2).","- menhaden_oil(V3) :- grinding(V0, V3).","- atom(V0) :- grinding(V0, V3).","- shell(V0, V2) :- - mother_of_pearl(V0, V2).","adhesive_material(V3) :- - paste(V0, V2), ammunition(V2, V3), not -cement(V0, V2), not rubber_cement(V0, V2), not spirit_gum(V0, V2)."],"noisy_rules":{"a":["- material(V2, V2) :- conductor(V2).","- material(V2, V3) :- - shark_oil(V2), not animal_material(V2), menhaden_oil(V3), atom(V0), - adhesive_material(V3)."],"b":["paste(V0, V2) :- conductor(V2), dentine(V1, V2), atom(V0), - material(V2, V3).","atom(V2) :- conductor(V2), not shark_oil(V2), - animal_material(V2), - adhesive_material(V3), - material(V2, V3)."],"c":["animal_oil(V1, V2) :- dentine(V1, V2), - shark_oil(V2).","drying_oil(V2, V3) :- conductor(V2), dentine(V1, V2), menhaden_oil(V3), shell(V0, V2)."],"d":["- valve(V2, V2) :- - animal_material(V2), atom(V0), swan.","spirit_gum(V0, V2) :- not -conductor(V2), - shark_oil(V2), atom(V0), not -shell(V0, V2), lahar(V0)."],"e":["where_live(V0, V2) :- home(V0, V2).","- area(V1, V2) :- breakfast_area(V0, V2), - layby(V0, V2), turnaround(V1, V2), court(V1, V3)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_39_7_8_1_4_0.5_1.0_5_2_3","seed":39,"num_facts":4,"num_rules":9,"num_related_predicates":13,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8333333333333333,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" sensitive_hearing(\"Kimberly\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["- butter(\"Gloria\", \"Kimberly\").","hens(\"Gloria\", \"Kimberly\").","- hold_magazines_and_papers(\"Gloria\", \"Kimberly\").","stealth_bomber(\"Gloria\", \"Kimberly\")."],"noisy_facts":["- ophiurida(\"Kimberly\").","quark_cheese(\"Gloria\", \"Kimberly\").","- buffalo(\"Gloria\", \"Melinda\").","hooves(\"Gloria\", \"Melinda\").","- moth_miller(\"Gloria\").","human_activity(\"Gloria\", \"Kimberly\")."],"min_fact_dicts_for_query":["- butter(\"Gloria\", \"Kimberly\").","hens(\"Gloria\", \"Kimberly\")."],"noiseless_rules":["- sensitive_hearing(V3) :- - expense(V3), - dock(V0, V2), not -stealth_bomber(V0, V3).","nobelium(V0, V3) :- - butter(V0, V3).","bacteria(V3) :- hens(V0, V3).","camp(V0, V3) :- nobelium(V0, V3), not hold_magazines_and_papers(V0, V3).","ink_cartridge(V0, V3) :- nobelium(V0, V3), not hold_magazines_and_papers(V0, V3).","dove(V0) :- nobelium(V0, V3), not hold_magazines_and_papers(V0, V3).","- expense(V3) :- camp(V0, V3), - learning_about_science(V0, V2), not dock(V0, V2).","- learning_about_science(V2, V2) :- ink_cartridge(V2, V3).","- dock(V0, V2) :- nobelium(V0, V3), bacteria(V3), dove(V0), - learning_about_science(V0, V2)."],"noisy_rules":{"a":["sensitive_hearing(V3) :- - camp(V0, V3), - ink_cartridge(V2, V3), not -dock(V0, V2).","sensitive_hearing(V3) :- - bacteria(V3), not camp(V0, V3), - dove(V0), learning_about_science(V0, V2)."],"b":["- dove(V0) :- - nobelium(V0, V3), - ink_cartridge(V2, V3), sensitive_hearing(V3).","- stealth_bomber(V0, V3) :- - nobelium(V0, V3), dock(V0, V2), not -sensitive_hearing(V3)."],"c":["learning_about_science(V0, V2) :- - nobelium(V0, V3), not bacteria(V3), - ink_cartridge(V2, V3), - dove(V0).","- ink_cartridge(V3, V3) :- - nobelium(V0, V3), not bacteria(V3), - dove(V0)."],"d":["- stealth_bomber(V0, V3) :- - camp(V0, V3), dock(V0, V2), not buffalo(V0, V2).","hold_magazines_and_papers(V0, V3) :- not ink_cartridge(V2, V3), expense(V3), not -learning_about_science(V0, V2), dock(V0, V2), hooves(V0, V2)."],"e":["collecting_information(V0, V3) :- - moth_miller(V0), not ophiurida(V3), quark_cheese(V0, V3).","- astronauts(V3) :- human_activity(V0, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_89_8_7_5_6_0.5_1.0_3_2_3","seed":89,"num_facts":9,"num_rules":8,"num_related_predicates":17,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"middle(\"Thomas\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["inner_mongolia(\"Lauren\", \"Thomas\").","shame(\"Lauren\", \"Anthony\").","- mineral(\"Anthony\", \"Kathryn\").","- pick_up(\"Lauren\", \"Anthony\").","- arm(\"Thomas\", \"Kathryn\").","- sheldrake(\"Thomas\", \"Kathryn\").","vermicide(\"Kathryn\").","- song(\"Kathryn\").","pull(\"Lauren\", \"Anthony\")."],"noisy_facts":["- self_discovery(\"Lauren\", \"Anthony\").","- shape_up(\"Thomas\", \"Anthony\").","brown_creeper(\"Lauren\", \"Thomas\").","legs_6(\"Lauren\", \"Thomas\").","- ford(\"Thomas\", \"Anthony\").","- getting_paid(\"Lauren\", \"Thomas\")."],"min_fact_dicts_for_query":["inner_mongolia(\"Lauren\", \"Thomas\").","shame(\"Lauren\", \"Anthony\").","- arm(\"Thomas\", \"Kathryn\")."],"noiseless_rules":["middle(V1) :- nipa(V1, V2), - arm(V1, V3), not sheldrake(V1, V3).","bass(V0, V1) :- inner_mongolia(V0, V1).","flag_day(V0, V2) :- shame(V0, V2).","course(V2) :- - mineral(V2, V3).","bedspread(V0, V2) :- flag_day(V0, V2), not -course(V2).","parietal_bone(V0) :- bedspread(V0, V2), not pick_up(V0, V2), not -pull(V0, V2).","nipa(V1, V2) :- bass(V0, V1), bedspread(V0, V2), not cree(V0, V1).","- cree(V3, V3) :- parietal_bone(V3), not -vermicide(V3), not song(V3)."],"noisy_rules":{"a":["- middle(V1) :- - nipa(V1, V2).","- middle(V1) :- - course(V2), cree(V0, V1)."],"b":["- shame(V1, V1) :- - middle(V1).","- course(V0) :- cree(V0, V1), - middle(V1)."],"c":["- course(V2) :- - bass(V0, V1), - bedspread(V0, V2), cree(V0, V1).","arm(V1, V0) :- cree(V0, V1)."],"d":["- tracer(V1) :- - course(V2), - nipa(V1, V2), - ford(V1, V2).","- parietal_bone(V2) :- not bedspread(V0, V2), - self_discovery(V0, V2)."],"e":["grabbing(V2) :- - getting_paid(V0, V1), legs_6(V0, V1), - shape_up(V1, V2).","- change(V1) :- brown_creeper(V0, V1)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_12_9_10_9_12_0.5_1.0_3_3_4","seed":12,"num_facts":13,"num_rules":11,"num_related_predicates":24,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"P10(\"Anne\", \"Melissa\", \"Brian\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P11(\"Anne\", \"Brian\").","P12(\"Brian\", \"Ian\").","- P13(\"Anne\", \"Brian\", \"Robert\").","- P14(\"Anne\", \"Robert\").","P15(\"Melissa\", \"Ian\").","P16(\"Anne\", \"Melissa\", \"Robert\").","- P17(\"Melissa\").","- P18(\"Brian\", \"Robert\").","P19(\"Anne\", \"Melissa\", \"Robert\").","P20(\"Anne\", \"Robert\", \"Ian\").","- P21(\"Robert\", \"Ian\").","P22(\"Anne\", \"Robert\", \"Ian\").","- P23(\"Brian\", \"Robert\", \"Ian\")."],"noisy_facts":["P25(\"Anne\").","P27(\"Melissa\", \"Brian\", \"Robert\").","P29(\"Anne\", \"Robert\", \"Ian\").","P24(\"Anne\", \"Brian\").","- P30(\"Anne\", \"Robert\", \"Ian\")."],"min_fact_dicts_for_query":["- P11(\"Anne\", \"Brian\").","- P18(\"Brian\", \"Robert\").","P19(\"Anne\", \"Melissa\", \"Robert\").","P22(\"Anne\", \"Robert\", \"Ian\")."],"noiseless_rules":["P10(V0, V1, V2) :- - P4(V0), - P18(V2, V3), P19(V0, V1, V3).","P0(V0, V2) :- - P11(V0, V2), P22(V0, V3, V4), not P23(V2, V3, V4).","- P1(V3, V4) :- - P11(V0, V2), P22(V0, V3, V4), not P23(V2, V3, V4).","P2(V0, V0, V2) :- P0(V0, V2), not -P6(V0, V2), not -P8(V0, V2).","P3(V3) :- - P1(V3, V4), not -P9(V3, V4), not P21(V3, V4).","- P4(V0) :- P2(V0, V3, V4), not P5(V0, V3, V4), not -P20(V0, V3, V4).","- P5(V0, V3, V4) :- P12(V2, V4), - P13(V0, V2, V3).","P6(V0, V2) :- - P13(V0, V2, V3), P20(V0, V3, V4), not -P22(V0, V3, V4).","P7(V0, V2) :- - P13(V0, V2, V3), P20(V0, V3, V4), not -P22(V0, V3, V4).","P8(V1, V2) :- P3(V1), P7(V1, V2), not P17(V1).","P9(V3, V4) :- - P14(V0, V3), P15(V1, V4), not -P16(V0, V1, V3)."],"noisy_rules":{"a":["- P10(V0, V2, V2) :- P4(V0), - P8(V0, V2).","- P10(V0, V0, V0) :- P5(V0, V3, V4)."],"b":["- P15(V1, V4) :- - P3(V1), - P9(V3, V4), - P10(V0, V1, V2).","P11(V0, V2) :- - P10(V0, V1, V2)."],"c":["- P6(V0, V2) :- P1(V3, V4), not -P5(V0, V3, V4), - P8(V0, V2).","P17(V1) :- P1(V3, V4), - P3(V1), - P6(V0, V2)."],"d":["- P2(V0, V0, V2) :- - P7(V1, V2), - P8(V0, V2), not -P24(V0, V2).","- P22(V0, V2, V0) :- P4(V0), - P6(V0, V2), P25(V0)."],"e":["- P26(V1, V2, V3) :- P27(V1, V2, V3).","P28(V4) :- not -P29(V0, V3, V4), - P30(V0, V3, V4)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_38_6_8_2_5_0.5_1.0_3_3_4","seed":38,"num_facts":4,"num_rules":9,"num_related_predicates":13,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.4,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"archduchy(\"Mark\", \"John\", \"Sophia\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- womanhood(\"Joyce\", \"John\", \"Sophia\").","diner(\"Claudia\", \"Sophia\").","most_people(\"Joyce\", \"John\").","reticule(\"John\", \"Sophia\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["archduchy(V0, V3, V4) :- bookshelf(V2, V4), - cup(V0, V1, V4), - follow_published_games(V1, V2, V3).","bookshelf(V2, V4) :- - womanhood(V2, V3, V4).","- pilot(V2, V4) :- - womanhood(V2, V3, V4).","estate(V2, V3, V4) :- - womanhood(V2, V3, V4).","- cup(V4, V2, V4) :- - pilot(V2, V4), not -beer_mug(V2, V4), not -mosquitoes(V2, V4).","- follow_published_games(V2, V2, V4) :- mosquitoes(V2, V4), not -captain(V2, V4).","beer_mug(V2, V4) :- mosquitoes(V2, V4), not -captain(V2, V4).","mosquitoes(V2, V4) :- diner(V1, V4), most_people(V2, V3), not -reticule(V3, V4).","captain(V2, V4) :- - pilot(V2, V4), estate(V2, V3, V4), not -mosquitoes(V2, V4)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_3_10_13_9_12_0.5_1.0_3_2_3","seed":3,"num_facts":12,"num_rules":14,"num_related_predicates":26,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" song(\"Samuel\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- tuna.","- misleader(\"Caitlin\").","date(\"Jeffrey\", \"Samuel\").","hockey(\"Caitlin\", \"Jeffrey\").","- transistor(\"Caitlin\", \"Jeffrey\").","male(\"Caitlin\", \"Jeffrey\").","- rock(\"Caitlin\", \"Samuel\").","- cabbage(\"Caitlin\", \"Jeffrey\").","- timothy(\"Jeffrey\", \"Samuel\").","carbonado(\"Jeffrey\", \"Samuel\").","- stylus(\"Jeffrey\", \"Samuel\").","- go_on_vacation(\"Jeffrey\", \"Samuel\")."],"noisy_facts":["- stadium(\"Jeffrey\", \"Samuel\").","- overexertion(\"Shawn\", \"Jeffrey\").","- carry_other_aeroplanes(\"Caitlin\", \"Jeffrey\").","- septation(\"Caitlin\", \"Jeffrey\").","- monal(\"Shawn\", \"Jeffrey\").","tail_pulled(\"Caitlin\", \"Jeffrey\")."],"min_fact_dicts_for_query":["- misleader(\"Caitlin\").","male(\"Caitlin\", \"Jeffrey\").","- rock(\"Caitlin\", \"Samuel\").","- cabbage(\"Caitlin\", \"Jeffrey\").","- timothy(\"Jeffrey\", \"Samuel\").","- go_on_vacation(\"Jeffrey\", \"Samuel\")."],"noiseless_rules":["- song(V3) :- vinegar(V1, V2), spread_disease(V1, V2), - go_on_vacation(V2, V3).","vinegar(V1, V2) :- wary_birds(V0, V1), - cabbage(V1, V2), - timothy(V2, V3).","spread_disease(V1, V2) :- vinegar(V1, V2), not assuaging_hunger(V1, V2), not rhinoceros(V1, V2).","- assuaging_hunger(V2, V2) :- - selling_tickets(V0, V2), not tuna.","eagle(V0, V2) :- - selling_tickets(V0, V2), not tuna.","alum(V2, V2) :- - selling_tickets(V0, V2), not tuna.","- robotics(V1, V2) :- - misleader(V1), male(V1, V2), - rock(V1, V3).","- noon(V2, V3) :- - misleader(V1), male(V1, V2), - rock(V1, V3).","- roots(V1) :- - misleader(V1), male(V1, V2), - rock(V1, V3).","- belt(V1, V2) :- - omophagia(V2), hockey(V1, V2), not transistor(V1, V2).","- rhinoceros(V1, V2) :- eagle(V0, V2), - robotics(V1, V2), not selling_tickets(V0, V2).","- selling_tickets(V3, V2) :- - noon(V2, V3), not -carbonado(V2, V3), not stylus(V2, V3).","- omophagia(V2) :- date(V2, V3), not -carbonado(V2, V3).","wary_birds(V3, V1) :- alum(V2, V3), - roots(V1), not belt(V1, V2)."],"noisy_rules":{"a":["song(V3) :- - vinegar(V1, V2), - alum(V2, V3), selling_tickets(V0, V2).","song(V0) :- - eagle(V0, V2)."],"b":["go_on_vacation(V2, V3) :- - vinegar(V1, V2), - wary_birds(V0, V1), song(V3).","- vinegar(V1, V2) :- - spread_disease(V1, V2), - wary_birds(V0, V1), song(V3)."],"c":["belt(V1, V2) :- assuaging_hunger(V1, V2), - wary_birds(V0, V1).","- spread_disease(V1, V2) :- - vinegar(V1, V2), - eagle(V0, V2), - alum(V2, V3)."],"d":["belt(V2, V2) :- not -noon(V2, V3), - stadium(V2, V3).","- date(V2, V2) :- assuaging_hunger(V1, V2), belt(V1, V2), tail_pulled(V1, V2)."],"e":["- noise_pollution(V0, V2) :- - monal(V0, V2), - overexertion(V0, V2), - septation(V1, V2).","groundhog(V1, V2) :- - carry_other_aeroplanes(V1, V2)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_96_7_9_4_5_0.5_1.0_5_2_3","seed":96,"num_facts":7,"num_rules":10,"num_related_predicates":17,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"computer_science(\"Tara\", \"Jeremy\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["machine_translation(\"Sophia\").","bird(\"Tara\", \"Joshua\").","merganser.","chicken(\"Tara\", \"Jeremy\").","alatae(\"Joshua\", \"Jeremy\").","chick(\"Jeremy\", \"Sophia\").","bat(\"Jeremy\", \"Sophia\")."],"noisy_facts":[],"min_fact_dicts_for_query":["machine_translation(\"Sophia\").","bird(\"Tara\", \"Joshua\").","merganser.","chicken(\"Tara\", \"Jeremy\").","alatae(\"Joshua\", \"Jeremy\").","chick(\"Jeremy\", \"Sophia\").","bat(\"Jeremy\", \"Sophia\")."],"noiseless_rules":["computer_science(V0, V2) :- artificial_intelligence(V3), flying(V0, V2), living(V0, V3).","home(V0, V3) :- flapping(V0, V1), furling(V1, V3).","artificial_intelligence(V3) :- machine_translation(V3).","wings(V0, V2) :- bird(V0, V1), chicken(V0, V2), alatae(V1, V2), chick(V2, V3), bat(V2, V3).","animal(V0) :- bird(V0, V1), chicken(V0, V2), alatae(V1, V2), chick(V2, V3), bat(V2, V3).","flying(V0, V2) :- wings(V0, V2), kite(V0, V2).","flapping(V0, V0) :- wings(V0, V2), kite(V0, V2).","living(V0, V3) :- home(V0, V3), animal(V0).","furling(V2, V2) :- wings(V0, V2), merganser.","kite(V0, V2) :- wings(V0, V2), merganser."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_85_7_9_9_10_0.5_1.0_3_2_3","seed":85,"num_facts":11,"num_rules":10,"num_related_predicates":21,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P9(\"Jose\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P10(\"Karen\", \"James\").","- P11(\"Ellen\", \"Jose\").","- P12(\"Jose\").","P13(\"Jose\").","P14(\"Karen\", \"Ellen\").","P15(\"James\", \"Jose\").","- P16(\"Ellen\", \"Jose\").","P17(\"Karen\", \"Ellen\").","P18(\"Karen\", \"Ellen\").","- P19(\"Ellen\", \"Jose\").","P20(\"Ellen\", \"Jose\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- P9(V3) :- - P4(V1, V2), - P7(V2, V3), not P19(V2, V3).","P0(V1) :- - P10(V0, V1), P15(V1, V3), - P16(V2, V3).","P1(V0, V2) :- - P10(V0, V1), P15(V1, V3), - P16(V2, V3).","P2(V3) :- - P10(V0, V1), P15(V1, V3), - P16(V2, V3).","- P3(V2, V2) :- - P11(V2, V3), not P19(V2, V3), not -P20(V2, V3).","- P4(V1, V1) :- P0(V1), not P5(V1), not -P8(V1).","- P5(V1) :- P6(V0, V1), P17(V0, V2), not -P18(V0, V2).","P6(V0, V1) :- P1(V0, V2), - P3(V1, V2), not -P14(V0, V2).","- P7(V3, V3) :- P2(V3), not P12(V3), not -P13(V3).","P8(V3) :- P2(V3), not P12(V3), not -P13(V3)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_70_6_8_5_8_0.5_1.0_5_1_2","seed":70,"num_facts":6,"num_rules":9,"num_related_predicates":15,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" place(\"Lisa\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- farm.","plate.","nest(\"Lisa\").","- range.","- castle(\"Lisa\").","september."],"noisy_facts":[],"min_fact_dicts_for_query":["- farm.","plate.","nest(\"Lisa\")."],"noiseless_rules":["- place(V0) :- home(V0), not -house(V0), not -bed(V0), not capital(V0), not -nest(V0).","home(V0) :- - farm, plate, nest(V0), not range, not castle(V0).","- bird(V0) :- - farm, plate, nest(V0), not range, not castle(V0).","- birds(V0) :- - farm, plate, nest(V0), not range, not castle(V0).","house(V0) :- home(V0), not -room(V0).","bed(V2) :- - bird(V2).","animal(V2) :- - bird(V2).","room(V0) :- animal(V0), not castle(V0).","- capital(V1) :- - birds(V1), not -september."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_48_5_8_6_7_0.5_1.0_5_2_3","seed":48,"num_facts":8,"num_rules":9,"num_related_predicates":17,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"P8(\"Justin\", \"Craig\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P9(\"James\", \"Justin\").","P10(\"James\", \"Craig\").","- P11(\"James\", \"Justin\").","P12(\"James\", \"Craig\").","- P13(\"Justin\", \"Craig\").","- P14(\"James\", \"Craig\").","- P15(\"Justin\", \"Craig\").","P16(\"Angela\", \"Craig\")."],"noisy_facts":["- P24(\"Angela\", \"Craig\").","- P26(\"Justin\", \"Craig\").","- P21(\"James\", \"Justin\").","- P22(\"James\", \"Craig\").","P18(\"James\", \"Justin\").","P23(\"Justin\", \"Angela\").","P17(\"Justin\", \"Craig\").","P19(\"James\", \"Justin\")."],"min_fact_dicts_for_query":["P9(\"James\", \"Justin\").","P10(\"James\", \"Craig\").","- P11(\"James\", \"Justin\").","- P14(\"James\", \"Craig\").","- P15(\"Justin\", \"Craig\").","P16(\"Angela\", \"Craig\")."],"noiseless_rules":["P8(V1, V3) :- - P0(V1), - P1(V1, V3), not P4(V1, V3), not P7(V1, V3).","- P0(V1) :- - P2(V0), P5(V3), - P11(V0, V1), not -P12(V0, V3), not P13(V1, V3).","- P1(V1, V3) :- P9(V0, V1), - P14(V0, V3), - P15(V1, V3), P16(V2, V3).","- P2(V0) :- P9(V0, V1), - P14(V0, V3), - P15(V1, V3), P16(V2, V3).","- P3(V1, V3) :- P9(V0, V1), - P14(V0, V3), - P15(V1, V3), P16(V2, V3).","- P4(V3, V3) :- P10(V0, V3), not -P12(V0, V3).","P5(V3) :- P10(V0, V3), not -P12(V0, V3).","P6(V0, V0) :- P10(V0, V3), not -P12(V0, V3).","- P7(V1, V3) :- - P3(V1, V3), P6(V0, V1)."],"noisy_rules":{"a":["- P8(V1, V3) :- not -P0(V1), not -P1(V1, V3), P2(V0), not P5(V3), P7(V1, V3).","- P8(V1, V3) :- P3(V1, V3)."],"b":["P13(V1, V3) :- P2(V0), - P5(V3), - P6(V0, V1), not P8(V1, V3).","- P9(V1, V1) :- - P8(V1, V3)."],"c":["P7(V1, V3) :- P2(V0), P3(V1, V3), P4(V1, V3), not P6(V0, V1).","P4(V1, V3) :- P0(V1), P1(V1, V3), P2(V0), not P5(V3), not -P7(V1, V3)."],"d":["P11(V1, V1) :- P1(V1, V3), not -P4(V1, V3), not -P7(V1, V3), not -P17(V1, V3).","P3(V1, V3) :- P1(V1, V3), not P6(V0, V1), not -P18(V0, V1), P19(V0, V1)."],"e":["P20(V1, V3) :- - P21(V0, V1), - P22(V0, V3), P23(V1, V2), not P24(V2, V3).","- P25(V1, V3) :- - P26(V1, V3)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_21_9_13_13_15_0.5_1.0_5_3_4","seed":21,"num_facts":17,"num_rules":14,"num_related_predicates":31,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P13(\"Erica\", \"Melissa\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P14(\"Andrea\", \"Jonathan\").","P15(\"Melissa\", \"Lindsey\").","P16(\"Erica\", \"Lindsey\").","P17(\"Erica\", \"Melissa\", \"Andrea\").","P18(\"Melissa\", \"Andrea\").","- P19(\"Erica\", \"Melissa\", \"Lindsey\").","- P20(\"Erica\", \"Melissa\", \"Andrea\").","- P21(\"Melissa\", \"Andrea\", \"Jonathan\").","- P22(\"Lindsey\", \"Andrea\").","- P23(\"Erica\", \"Lindsey\", \"Andrea\").","P24(\"Erica\", \"Lindsey\", \"Andrea\").","- P25(\"Erica\", \"Lindsey\", \"Jonathan\").","- P26(\"Erica\", \"Andrea\", \"Jonathan\").","P27(\"Erica\", \"Andrea\", \"Jonathan\").","P28(\"Erica\", \"Melissa\", \"Lindsey\").","- P29(\"Erica\", \"Lindsey\", \"Jonathan\").","P30(\"Lindsey\", \"Andrea\", \"Jonathan\")."],"noisy_facts":["- P38(\"Jonathan\").","P37(\"Jonathan\").","P34(\"Melissa\", \"Lindsey\", \"Jonathan\").","P33(\"Erica\", \"Melissa\").","P41(\"Lindsey\", \"Andrea\", \"Jonathan\").","P40(\"Erica\", \"Melissa\", \"Andrea\").","- P39(\"Erica\", \"Lindsey\").","- P32(\"Erica\", \"Melissa\").","- P31(\"Erica\", \"Melissa\")."],"min_fact_dicts_for_query":["P14(\"Andrea\", \"Jonathan\").","P15(\"Melissa\", \"Lindsey\").","P17(\"Erica\", \"Melissa\", \"Andrea\").","P18(\"Melissa\", \"Andrea\").","- P19(\"Erica\", \"Melissa\", \"Lindsey\").","- P20(\"Erica\", \"Melissa\", \"Andrea\").","- P21(\"Melissa\", \"Andrea\", \"Jonathan\").","- P22(\"Lindsey\", \"Andrea\").","- P23(\"Erica\", \"Lindsey\", \"Andrea\").","P24(\"Erica\", \"Lindsey\", \"Andrea\").","- P25(\"Erica\", \"Lindsey\", \"Jonathan\").","P28(\"Erica\", \"Melissa\", \"Lindsey\")."],"noiseless_rules":["- P13(V0, V1) :- P0(V0, V1), - P1(V1, V3), - P7(V0, V1, V2), not -P8(V0, V1, V3), not P9(V0, V2, V3).","P0(V0, V1) :- P11(V0, V1), P18(V1, V3), - P19(V0, V1, V2), - P20(V0, V1, V3), - P21(V1, V3, V4).","- P1(V1, V3) :- - P3(V4), P5(V0, V2), - P10(V1, V3), not P26(V0, V3, V4), not -P27(V0, V3, V4).","P2(V0, V3, V4) :- - P3(V4), P5(V0, V2), - P10(V1, V3), not P26(V0, V3, V4), not -P27(V0, V3, V4).","- P3(V4) :- P14(V3, V4), P28(V0, V1, V2), not P29(V0, V2, V4), not -P30(V2, V3, V4).","- P4(V1) :- P14(V3, V4), P28(V0, V1, V2), not P29(V0, V2, V4), not -P30(V2, V3, V4).","P5(V0, V2) :- P15(V1, V2), - P22(V2, V3), - P23(V0, V2, V3), P24(V0, V2, V3), - P25(V0, V2, V4).","- P6(V0, V1, V3) :- P15(V1, V2), - P22(V2, V3), - P23(V0, V2, V3), P24(V0, V2, V3), - P25(V0, V2, V4).","- P7(V0, V1, V1) :- P2(V0, V3, V4), - P10(V1, V3).","P8(V0, V0, V2) :- P5(V0, V2), not -P16(V0, V2).","- P9(V0, V0, V3) :- - P4(V1), - P6(V0, V1, V3), not -P12(V0, V1, V3).","- P10(V1, V3) :- - P4(V1), - P6(V0, V1, V3), not -P12(V0, V1, V3).","P11(V0, V1) :- P17(V0, V1, V3).","P12(V0, V1, V3) :- P17(V0, V1, V3)."],"noisy_rules":{"a":["P13(V3, V1) :- P3(V4), P10(V1, V3).","P13(V0, V1) :- - P0(V0, V1), P9(V0, V2, V3), P10(V1, V3), - P11(V0, V1)."],"b":["P22(V1, V0) :- P13(V0, V1).","P6(V0, V1, V3) :- P9(V0, V2, V3), P13(V0, V1)."],"c":["- P27(V0, V3, V0) :- - P0(V0, V1), P9(V0, V2, V3).","P1(V1, V3) :- - P0(V0, V1), P6(V0, V1, V3), - P8(V0, V1, V3), P9(V0, V2, V3), not P11(V0, V1)."],"d":["- P2(V0, V1, V0) :- not P0(V0, V1), - P31(V0, V1).","P6(V0, V1, V3) :- P1(V1, V3), - P2(V0, V3, V4), not P11(V0, V1), not P32(V0, V1), P33(V0, V1)."],"e":["- P35(V1, V2, V4) :- P34(V1, V2, V4).","- P36(V0, V3, V4) :- not -P37(V4), not P38(V4), not P39(V0, V2), P40(V0, V1, V3), P41(V2, V3, V4)."]}},"num_min_facts_for_query":12,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_15_5_5_4_6_0.5_1.0_5_2_3","seed":15,"num_facts":7,"num_rules":6,"num_related_predicates":13,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"hame(\"Natasha\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["shade(\"Robin\", \"Natasha\").","noumenon(\"Robin\", \"Natasha\").","haploid(\"Robin\", \"Natasha\").","mug(\"Robin\", \"Natasha\").","temporal_property(\"Robin\", \"Natasha\").","invention(\"Robin\", \"Natasha\").","electoral_college(\"Robin\", \"Natasha\")."],"noisy_facts":[],"min_fact_dicts_for_query":["shade(\"Robin\", \"Natasha\").","noumenon(\"Robin\", \"Natasha\").","haploid(\"Robin\", \"Natasha\").","mug(\"Robin\", \"Natasha\").","temporal_property(\"Robin\", \"Natasha\").","invention(\"Robin\", \"Natasha\").","electoral_college(\"Robin\", \"Natasha\")."],"noiseless_rules":["hame(V3) :- craniometric_point(V3), throwing_birthday_party(V0, V2), traffic(V2, V3), falcon_gentle(V2, V3), invention(V2, V3).","craniometric_point(V3) :- shade(V2, V3), mug(V2, V3).","throwing_birthday_party(V2, V2) :- noumenon(V2, V3), mug(V2, V3), temporal_property(V2, V3), invention(V2, V3), electoral_college(V2, V3).","chestnut(V2) :- noumenon(V2, V3), mug(V2, V3), temporal_property(V2, V3), invention(V2, V3), electoral_college(V2, V3).","traffic(V2, V3) :- haploid(V2, V3).","falcon_gentle(V0, V0) :- chestnut(V0)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_77_7_6_4_7_0.5_1.0_3_2_3","seed":77,"num_facts":7,"num_rules":7,"num_related_predicates":14,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"P6(\"Andrea\", \"Daniel\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P7(\"Andrea\", \"Daniel\").","- P8(\"Kelly\").","- P9(\"Andrea\", \"Kelly\").","P10(\"Andrea\", \"Kelly\").","P11(\"Kelly\").","P12(\"Kelly\").","P13(\"Melissa\", \"Kelly\")."],"noisy_facts":["P15(\"Kelly\").","P19(\"Andrea\", \"Kelly\").","- P17(\"Andrea\", \"Melissa\").","P14(\"Kelly\")."],"min_fact_dicts_for_query":["- P7(\"Andrea\", \"Daniel\").","- P9(\"Andrea\", \"Kelly\").","P13(\"Melissa\", \"Kelly\")."],"noiseless_rules":["P6(V0, V1) :- P3(V3), - P7(V0, V1), not -P10(V0, V3).","- P0(V3) :- - P1(V0, V1), - P5(V0, V3).","- P1(V0, V1) :- - P7(V0, V1).","- P2(V3) :- - P0(V3), not P8(V3).","P3(V3) :- - P0(V3), P4(V0, V3), not -P10(V0, V3).","P4(V3, V3) :- - P2(V3), not -P11(V3), not -P12(V3).","- P5(V0, V3) :- - P9(V0, V3), P13(V2, V3)."],"noisy_rules":{"a":["- P6(V0, V1) :- P0(V3), P1(V0, V1), P2(V3).","- P6(V0, V1) :- P1(V0, V1), P5(V0, V3)."],"b":["- P13(V1, V3) :- P2(V3), P5(V0, V3), - P6(V0, V1).","P1(V0, V1) :- - P6(V0, V1)."],"c":["- P3(V3) :- P0(V3), P1(V0, V1).","- P10(V0, V3) :- P1(V0, V1), P5(V0, V3)."],"d":["P7(V3, V3) :- P2(V3).","- P10(V3, V3) :- P0(V3), P14(V3), not -P15(V3)."],"e":["- P16(V0, V2) :- - P17(V0, V2).","- P18(V3) :- P19(V0, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_70_8_12_4_5_0.5_1.0_3_2_3","seed":70,"num_facts":7,"num_rules":13,"num_related_predicates":20,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"feet(\"Jody\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- game(\"Jody\").","flock(\"Ashley\", \"Jody\").","run(\"Ashley\", \"Melissa\").","- hen(\"Jody\", \"Rachael\").","- legs(\"Jody\", \"Rachael\").","- nest.","- quill(\"Jody\", \"Rachael\")."],"noisy_facts":["animal.","many(\"Jody\", \"Rachael\").","sagittal_suture(\"Ashley\", \"Rachael\").","- drop(\"Jody\", \"Rachael\").","racing_skiff(\"Ashley\", \"Melissa\")."],"min_fact_dicts_for_query":["- game(\"Jody\").","- hen(\"Jody\", \"Rachael\")."],"noiseless_rules":["feet(V1) :- - duck(V3), chickens(V0, V1), not toe(V1, V3).","- chicken(V1, V2) :- - game(V1), - hen(V1, V2), not legs(V1, V2).","egg(V1, V2) :- - game(V1), - hen(V1, V2), not legs(V1, V2).","- duck(V1) :- - chicken(V1, V2), not geese(V1, V2), not -bird(V1, V2).","- geese(V1, V2) :- flock(V0, V1), - quill(V1, V2).","- floor(V1) :- flock(V0, V1), - quill(V1, V2).","farm(V2) :- flock(V0, V1), - quill(V1, V2).","foot(V0, V1) :- - floor(V1), flock(V0, V1).","chickens(V2, V1) :- egg(V1, V2), not -farm(V2), not nest.","bird(V1, V2) :- egg(V1, V2), not -farm(V2), not nest.","oval(V2, V2) :- egg(V1, V2), not -farm(V2), not nest.","- toe(V0, V3) :- foot(V0, V3), not -oval(V0, V3), not -walk(V0, V3).","walk(V0, V3) :- run(V0, V3)."],"noisy_rules":{"a":["- feet(V1) :- floor(V1).","- feet(V2) :- - farm(V2)."],"b":["- foot(V0, V3) :- toe(V1, V3), - walk(V0, V3), not feet(V1).","duck(V1) :- - farm(V2), - bird(V1, V2), not feet(V1)."],"c":["- egg(V1, V2) :- - bird(V1, V2).","chicken(V2, V2) :- - farm(V2)."],"d":["legs(V3, V3) :- - foot(V0, V3), not -animal.","nest(V1) :- many(V1, V2)."],"e":["- gravitation(V1, V2) :- - drop(V1, V2).","devourer(V2) :- sagittal_suture(V0, V2), racing_skiff(V0, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_98_4_4_4_7_0.5_1.0_3_2_3","seed":98,"num_facts":5,"num_rules":5,"num_related_predicates":10,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.3333333333333333,"num_noise_rules_per_type":2,"num_rules_with_default_negation":3,"target_query":" bread(\"Heather\", \"Steven\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["no_mans_land(\"Heather\", \"Jeremy\").","- music(\"Heather\", \"Steven\").","lancashire(\"Heather\", \"Steven\").","burn_things(\"Heather\", \"Steven\").","rib(\"Heather\", \"Tyler\")."],"noisy_facts":["- emotion(\"Heather\", \"Jeremy\").","synonym_of_delicatessen(\"Heather\", \"Tyler\").","- lens(\"Heather\").","asian(\"Jeremy\", \"Tyler\").","- chatelaine(\"Heather\", \"Steven\").","rice_rat(\"Heather\", \"Steven\").","- stretch_out(\"Heather\", \"Steven\").","- cup_water(\"Heather\", \"Jeremy\").","- executive_branch(\"Heather\", \"Jeremy\")."],"min_fact_dicts_for_query":["no_mans_land(\"Heather\", \"Jeremy\").","burn_things(\"Heather\", \"Steven\").","rib(\"Heather\", \"Tyler\")."],"noiseless_rules":["- bread(V0, V2) :- - war(V0, V2), not -holding(V0, V2), not music(V0, V2).","- glory(V0) :- no_mans_land(V0, V1), burn_things(V0, V2), rib(V0, V3).","- after_afternoon(V0, V2) :- no_mans_land(V0, V1), burn_things(V0, V2), rib(V0, V3).","- war(V0, V2) :- - glory(V0), - after_afternoon(V0, V2), not -holding(V0, V2).","holding(V0, V2) :- - after_afternoon(V0, V2), not music(V0, V2), not -lancashire(V0, V2)."],"noisy_rules":{"a":["bread(V0, V2) :- after_afternoon(V0, V2), war(V0, V2).","bread(V0, V2) :- - holding(V0, V2)."],"b":["- lancashire(V0, V2) :- after_afternoon(V0, V2), - holding(V0, V2), bread(V0, V2).","after_afternoon(V0, V2) :- - holding(V0, V2), not -bread(V0, V2)."],"c":["- rib(V0, V2) :- not -glory(V0), war(V0, V2), - holding(V0, V2).","war(V0, V0) :- glory(V0)."],"d":["- holding(V0, V2) :- after_afternoon(V0, V2), - chatelaine(V0, V2), not -rice_rat(V0, V2).","glory(V0) :- after_afternoon(V0, V2), - stretch_out(V0, V2)."],"e":["seeing(V0) :- - executive_branch(V0, V1), - emotion(V0, V1), synonym_of_delicatessen(V0, V3).","- plainness(V0, V3) :- - lens(V0), not cup_water(V0, V1), asian(V1, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_39_5_5_5_8_0.5_1.0_3_3_4","seed":39,"num_facts":7,"num_rules":6,"num_related_predicates":13,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"candy_bar(\"Matthew\", \"Linda\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["mug(\"Matthew\", \"Kenneth\").","jerboa(\"Matthew\", \"Linda\", \"Kenneth\").","- bug(\"Matthew\", \"Kenneth\").","- blastema(\"Matthew\", \"Linda\", \"Kenneth\").","- sheet(\"Matthew\", \"Linda\").","mosquito(\"Matthew\", \"Linda\").","honk(\"Matthew\", \"Linda\", \"Kenneth\")."],"noisy_facts":["- sofa_hide_bed(\"Matthew\").","gluten_bread(\"Matthew\").","ice_skating(\"Matthew\", \"Hunter\").","- amusement_park(\"Linda\", \"Sara\").","fissiped_mammal(\"Matthew\", \"Linda\").","adult(\"Matthew\", \"Sara\", \"Kenneth\").","- sense_danger(\"Linda\", \"Sara\")."],"min_fact_dicts_for_query":["mug(\"Matthew\", \"Kenneth\").","jerboa(\"Matthew\", \"Linda\", \"Kenneth\").","- bug(\"Matthew\", \"Kenneth\").","- blastema(\"Matthew\", \"Linda\", \"Kenneth\")."],"noiseless_rules":["candy_bar(V0, V2) :- do_harm(V0, V2), comedy_ballet(V0, V3), quark_cheese(V2, V4).","do_harm(V0, V2) :- mug(V0, V4), - bug(V0, V4), - blastema(V0, V2, V4).","laying_waste(V0) :- jerboa(V0, V2, V4), not blastema(V0, V2, V4), not -honk(V0, V2, V4).","- wild(V0, V2) :- jerboa(V0, V2, V4), not blastema(V0, V2, V4), not -honk(V0, V2, V4).","comedy_ballet(V0, V0) :- do_harm(V0, V2), not -laying_waste(V0), not wild(V0, V2).","quark_cheese(V2, V2) :- - wild(V0, V2), not sheet(V0, V2), not -mosquito(V0, V2)."],"noisy_rules":{"a":["- candy_bar(V0, V2) :- wild(V0, V2).","- candy_bar(V0, V0) :- - laying_waste(V0)."],"b":["- quark_cheese(V2, V0) :- - laying_waste(V0), wild(V0, V2), not candy_bar(V0, V2).","- laying_waste(V0) :- - candy_bar(V0, V2)."],"c":["- laying_waste(V0) :- - comedy_ballet(V0, V3), - quark_cheese(V2, V4).","- jerboa(V0, V2, V4) :- wild(V0, V2), - quark_cheese(V2, V4)."],"d":["wool(V0, V2) :- - do_harm(V0, V2), - comedy_ballet(V0, V3), not -fissiped_mammal(V0, V2).","dusk(V0, V0) :- not laying_waste(V0), - sofa_hide_bed(V0), not -gluten_bread(V0)."],"e":["submucosa(V0, V2) :- ice_skating(V0, V1), - amusement_park(V2, V3), adult(V0, V3, V4).","zairean(V2, V3) :- - sense_danger(V2, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_43_9_9_9_9_0.5_1.0_5_3_4","seed":43,"num_facts":13,"num_rules":10,"num_related_predicates":23,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"substance(\"Donald\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- wing(\"Donald\", \"Jessica\", \"Alexis\").","- our(\"Donald\", \"Karen\", \"Alexis\").","- device(\"Jessica\", \"Alexis\").","deadline(\"Donald\", \"Jessica\", \"Karen\").","heraldry(\"Donald\", \"Jessica\", \"Karen\").","- colors(\"Jessica\", \"Karen\", \"Alexis\").","- flag(\"Jessica\", \"Karen\", \"Alexis\").","cross(\"Jessica\", \"Karen\", \"Alexis\").","- nucleus(\"Karen\", \"Alexis\").","- carbon_atom(\"Karen\", \"Alexis\").","- free_radical(\"Karen\", \"Alexis\").","- hydrogen_atom(\"Karen\", \"Alexis\").","- strengthener(\"Donald\", \"Jessica\", \"Alexis\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- device(\"Jessica\", \"Alexis\").","deadline(\"Donald\", \"Jessica\", \"Karen\").","heraldry(\"Donald\", \"Jessica\", \"Karen\")."],"noiseless_rules":["substance(V1) :- leaning(V1, V2), chemical_element(V1, V3, V4).","airfoil(V1, V2, V4) :- - wing(V1, V2, V4).","elementary_particle(V3, V4) :- - our(V1, V3, V4).","- emblem(V1, V2, V3) :- - device(V2, V4), heraldry(V1, V2, V3), not colors(V2, V3, V4), not flag(V2, V3, V4), not -cross(V2, V3, V4).","stabilizer(V1, V2, V4) :- - device(V2, V4), heraldry(V1, V2, V3), not colors(V2, V3, V4), not flag(V2, V3, V4), not -cross(V2, V3, V4).","leaning(V1, V2) :- deadline(V1, V2, V3).","design(V1, V1) :- - emblem(V1, V2, V3), not P6(V1, V2, V3).","- P6(V1, V2, V4) :- airfoil(V1, V2, V4), not -stabilizer(V1, V2, V4), not strengthener(V1, V2, V4).","chemical_element(V1, V4, V4) :- design(V1, V4), not atom(V1, V4).","- atom(V3, V4) :- elementary_particle(V3, V4), not nucleus(V3, V4), not carbon_atom(V3, V4), not free_radical(V3, V4), not hydrogen_atom(V3, V4)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_17_7_7_6_7_0.5_1.0_3_3_4","seed":17,"num_facts":10,"num_rules":8,"num_related_predicates":18,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6666666666666667,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" nostril(\"Alan\", \"Rebecca\", \"Meghan\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["cellblock(\"Alan\", \"Grace\").","turn(\"Alan\", \"Rebecca\").","- making_laugh(\"Meghan\", \"Grace\").","- gee_gee(\"Rebecca\", \"Cody\", \"Meghan\").","- blood(\"Meghan\", \"Grace\").","- depth_charge(\"Alan\", \"Meghan\", \"Grace\").","- wood_pigeon(\"Rebecca\", \"Grace\").","ram(\"Rebecca\", \"Meghan\").","cause_overeating(\"Alan\", \"Rebecca\", \"Grace\").","contact(\"Meghan\", \"Grace\")."],"noisy_facts":["- cattle_cake(\"Rebecca\", \"Cody\", \"Grace\").","losing_control(\"Rebecca\", \"Meghan\").","cream_cheese(\"Alan\", \"Rebecca\", \"Meghan\").","- small(\"Alan\", \"Cody\", \"Meghan\").","neuropteron(\"Alan\", \"Meghan\", \"Grace\")."],"min_fact_dicts_for_query":["cellblock(\"Alan\", \"Grace\").","turn(\"Alan\", \"Rebecca\").","- gee_gee(\"Rebecca\", \"Cody\", \"Meghan\").","- blood(\"Meghan\", \"Grace\").","ram(\"Rebecca\", \"Meghan\")."],"noiseless_rules":["- nostril(V0, V1, V3) :- - dictyopterous_insect(V2, V3), - wildfowl(V0, V1, V4), not bludgeon(V0, V2, V4).","- dictyopterous_insect(V2, V3) :- often_in_sky(V1, V3), - payment(V1, V2, V3).","- wildfowl(V0, V1, V4) :- cellblock(V0, V4), ram(V1, V3), not -cause_overeating(V0, V1, V4).","- go_to_clean_places(V1, V4) :- cellblock(V0, V4), ram(V1, V3), not -cause_overeating(V0, V1, V4).","- bludgeon(V4, V1, V4) :- - go_to_clean_places(V1, V4), not metallic_element(V1, V4), not wood_pigeon(V1, V4).","often_in_sky(V1, V3) :- turn(V0, V1), - blood(V3, V4), not depth_charge(V0, V3, V4).","- metallic_element(V3, V4) :- - making_laugh(V3, V4), not blood(V3, V4), not -contact(V3, V4).","- payment(V1, V2, V3) :- - gee_gee(V1, V2, V3)."],"noisy_rules":{"a":["nostril(V0, V1, V1) :- go_to_clean_places(V1, V4), bludgeon(V0, V2, V4), not -metallic_element(V1, V4).","nostril(V0, V1, V4) :- wildfowl(V0, V1, V4)."],"b":["- contact(V3, V1) :- payment(V1, V2, V3), nostril(V0, V1, V3).","wildfowl(V0, V1, V4) :- wildfowl(V0, V1, V4), payment(V1, V2, V3), not -nostril(V0, V1, V3)."],"c":["go_to_clean_places(V1, V4) :- dictyopterous_insect(V2, V3), bludgeon(V0, V2, V4), - often_in_sky(V1, V3).","wood_pigeon(V1, V4) :- go_to_clean_places(V1, V4)."],"d":["- silicon(V0, V0, V0) :- bludgeon(V0, V2, V4).","trickster(V1, V4) :- - often_in_sky(V1, V3), metallic_element(V1, V4)."],"e":["- eider(V1, V2) :- losing_control(V1, V3), - cattle_cake(V1, V2, V4).","- tugboat(V1, V2) :- cream_cheese(V0, V1, V3), - small(V0, V2, V3), neuropteron(V0, V3, V4)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_31_7_6_4_6_0.5_1.0_5_3_4","seed":31,"num_facts":9,"num_rules":7,"num_related_predicates":16,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" P6(\"Elizabeth\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P7(\"Tammy\", \"Jose\").","P8(\"Yvonne\", \"Jose\").","- P9(\"Elizabeth\", \"Richard\", \"Jose\").","P10(\"Richard\", \"Yvonne\").","P11(\"Tammy\", \"Richard\", \"Yvonne\").","P12(\"Richard\", \"Yvonne\").","- P13(\"Elizabeth\", \"Yvonne\", \"Jose\").","- P14(\"Elizabeth\", \"Yvonne\", \"Jose\").","P15(\"Elizabeth\", \"Yvonne\", \"Jose\")."],"noisy_facts":["- P20(\"Elizabeth\", \"Richard\", \"Jose\").","P26(\"Elizabeth\", \"Richard\", \"Jose\").","- P25(\"Elizabeth\", \"Richard\", \"Yvonne\").","- P24(\"Elizabeth\", \"Tammy\", \"Yvonne\").","- P16(\"Elizabeth\", \"Richard\", \"Jose\").","- P17.","P22(\"Elizabeth\", \"Richard\").","P19(\"Elizabeth\", \"Tammy\").","P23(\"Elizabeth\", \"Richard\")."],"min_fact_dicts_for_query":["P7(\"Tammy\", \"Jose\").","P8(\"Yvonne\", \"Jose\").","- P9(\"Elizabeth\", \"Richard\", \"Jose\").","P12(\"Richard\", \"Yvonne\").","- P13(\"Elizabeth\", \"Yvonne\", \"Jose\")."],"noiseless_rules":["- P6(V0) :- P1(V4), P2(V0, V2, V3), not -P4(V0, V2, V4).","P0(V1, V2) :- P7(V1, V4), P12(V2, V3), - P13(V0, V3, V4), not P14(V0, V3, V4), not -P15(V0, V3, V4).","P1(V1) :- P0(V1, V2), not -P3(V1, V2), not P5(V1, V2).","P2(V0, V2, V3) :- P8(V3, V4), - P9(V0, V2, V4).","P3(V2, V2) :- - P9(V0, V2, V4).","P4(V2, V2, V2) :- P10(V2, V3), not -P12(V2, V3).","- P5(V1, V2) :- P11(V1, V2, V3)."],"noisy_rules":{"a":["P6(V1) :- - P0(V1, V2), - P1(V4), - P3(V1, V2), P5(V1, V2).","P6(V0) :- - P1(V4), - P4(V0, V2, V4)."],"b":["- P10(V2, V3) :- - P2(V0, V2, V3), P5(V1, V2), P6(V0).","- P0(V1, V2) :- - P0(V1, V2), - P1(V4), P5(V1, V2), P6(V0)."],"c":["- P12(V2, V1) :- - P0(V1, V2), - P3(V1, V2).","- P10(V2, V1) :- - P3(V1, V2), - P4(V0, V2, V4)."],"d":["- P0(V1, V2) :- - P3(V1, V2), - P4(V0, V2, V4), - P16(V0, V2, V4).","P13(V1, V1, V1) :- P5(V1, V2), not P17."],"e":["P18(V0, V1, V2) :- P19(V0, V1), - P20(V0, V2, V4).","- P21(V2, V3, V4) :- P22(V0, V2), P23(V0, V2), - P24(V0, V1, V3), - P25(V0, V2, V3), P26(V0, V2, V4)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_92_10_10_8_9_0.5_1.0_5_3_4","seed":92,"num_facts":13,"num_rules":11,"num_related_predicates":24,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.7777777777777777,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" P10(\"Nancy\", \"Melanie\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P11(\"Zoe\", \"Nancy\", \"Melanie\").","- P12(\"Nancy\").","- P13(\"Barbara\", \"Zoe\").","- P14(\"Zoe\", \"Brian\", \"Melanie\").","P15(\"Barbara\", \"Nancy\", \"Brian\").","- P16(\"Zoe\", \"Brian\").","P17(\"Zoe\", \"Melanie\").","P18(\"Brian\", \"Melanie\").","P19(\"Brian\", \"Melanie\").","- P20(\"Nancy\").","P21(\"Barbara\", \"Zoe\", \"Brian\").","- P22(\"Barbara\", \"Nancy\", \"Melanie\").","- P23(\"Zoe\", \"Brian\", \"Melanie\")."],"noisy_facts":["P33(\"Barbara\", \"Zoe\", \"Melanie\").","P24(\"Barbara\", \"Nancy\", \"Brian\").","P28(\"Barbara\", \"Zoe\", \"Melanie\").","- P34(\"Zoe\", \"Nancy\", \"Brian\").","P27(\"Barbara\", \"Zoe\", \"Melanie\").","- P31(\"Zoe\", \"Brian\").","P26(\"Zoe\", \"Brian\").","P32(\"Barbara\", \"Zoe\", \"Nancy\").","- P29(\"Barbara\", \"Zoe\", \"Melanie\")."],"min_fact_dicts_for_query":["P11(\"Zoe\", \"Nancy\", \"Melanie\").","P15(\"Barbara\", \"Nancy\", \"Brian\")."],"noiseless_rules":["- P10(V2, V4) :- - P1(V0, V3), - P2(V1, V2, V4), not P3(V1, V3, V4), not P6(V1, V3, V4), not P8(V1, V3, V4).","P0(V0, V2, V3) :- P9(V0, V2, V3).","- P1(V0, V3) :- P0(V0, V2, V3), not P4(V0, V2, V3).","- P2(V1, V2, V4) :- P11(V1, V2, V4).","- P3(V1, V3, V4) :- - P5(V1, V3, V4).","- P4(V0, V2, V3) :- - P12(V2), - P20(V2), P21(V0, V1, V3), - P22(V0, V2, V4), not P23(V1, V3, V4).","- P5(V0, V3, V0) :- - P1(V0, V3), not -P7(V0, V3).","- P6(V1, V3, V4) :- - P13(V0, V1), - P16(V1, V3), P17(V1, V4), not -P18(V3, V4), not -P19(V3, V4).","P7(V0, V3) :- - P13(V0, V1), - P16(V1, V3), P17(V1, V4), not -P18(V3, V4), not -P19(V3, V4).","- P8(V1, V3, V4) :- - P14(V1, V3, V4).","P9(V0, V2, V3) :- P15(V0, V2, V3)."],"noisy_rules":{"a":["P10(V2, V4) :- P4(V0, V2, V3), P6(V1, V3, V4), not -P8(V1, V3, V4), - P9(V0, V2, V3).","P10(V2, V3) :- - P0(V0, V2, V3)."],"b":["P5(V1, V3, V4) :- not -P2(V1, V2, V4), not -P3(V1, V3, V4), P6(V1, V3, V4), - P9(V0, V2, V3), P10(V2, V4).","P14(V4, V3, V4) :- - P0(V0, V2, V3), P4(V0, V2, V3), P10(V2, V4)."],"c":["P20(V2) :- P2(V1, V2, V4), - P7(V0, V3).","- P9(V0, V2, V3) :- - P0(V0, V2, V3), P1(V0, V3), P2(V1, V2, V4)."],"d":["P16(V0, V3) :- P4(V0, V2, V3).","P6(V1, V3, V4) :- - P0(V0, V2, V3), P2(V1, V2, V4), P24(V0, V2, V3)."],"e":["P25(V0, V1, V3) :- P26(V1, V3), P27(V0, V1, V4), not -P28(V0, V1, V4), - P29(V0, V1, V4).","- P30(V0, V1, V4) :- not P31(V1, V3), not -P32(V0, V1, V2), P33(V0, V1, V4), - P34(V1, V2, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_25_10_15_15_15_0.5_1.0_5_3_4","seed":25,"num_facts":20,"num_rules":16,"num_related_predicates":36,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8888888888888888,"num_noise_rules_per_type":2,"num_rules_with_default_negation":12,"target_query":"P15(\"Nicholas\", \"Jeffrey\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P16(\"Nicholas\").","P17(\"Jeffrey\").","P18(\"Sheryl\", \"Jeffrey\").","- P19(\"Sheryl\", \"Nicholas\").","P20(\"Brian\", \"Jeffrey\", \"Jonathan\").","P21(\"Brian\", \"Jonathan\").","- P22(\"Sheryl\", \"Brian\", \"Jeffrey\").","P23(\"Sheryl\", \"Nicholas\", \"Jeffrey\").","P24(\"Sheryl\", \"Nicholas\", \"Jonathan\").","P25(\"Nicholas\", \"Jeffrey\").","- P26(\"Sheryl\", \"Brian\", \"Nicholas\").","P27(\"Sheryl\", \"Jeffrey\", \"Jonathan\").","- P28(\"Brian\", \"Nicholas\", \"Jonathan\").","P29(\"Nicholas\", \"Jonathan\").","P30(\"Nicholas\", \"Jonathan\").","- P31(\"Jeffrey\", \"Jonathan\").","P32(\"Sheryl\", \"Nicholas\", \"Jeffrey\").","- P33(\"Sheryl\", \"Nicholas\", \"Jonathan\").","P34(\"Sheryl\", \"Nicholas\", \"Jonathan\").","- P35(\"Sheryl\", \"Jeffrey\")."],"noisy_facts":["- P36(\"Sheryl\", \"Nicholas\", \"Jonathan\").","- P37.","- P39(\"Nicholas\").","P42(\"Sheryl\", \"Nicholas\", \"Jonathan\").","P41(\"Sheryl\", \"Brian\").","- P46(\"Sheryl\", \"Brian\", \"Jeffrey\").","P44(\"Brian\", \"Jeffrey\", \"Jonathan\").","- P47(\"Brian\", \"Nicholas\", \"Jonathan\").","P48(\"Brian\", \"Nicholas\", \"Jonathan\").","- P40(\"Jonathan\")."],"min_fact_dicts_for_query":["- P16(\"Nicholas\").","P17(\"Jeffrey\").","P18(\"Sheryl\", \"Jeffrey\").","- P19(\"Sheryl\", \"Nicholas\").","P20(\"Brian\", \"Jeffrey\", \"Jonathan\").","P21(\"Brian\", \"Jonathan\").","- P22(\"Sheryl\", \"Brian\", \"Jeffrey\").","P25(\"Nicholas\", \"Jeffrey\").","- P26(\"Sheryl\", \"Brian\", \"Nicholas\").","P27(\"Sheryl\", \"Jeffrey\", \"Jonathan\").","P29(\"Nicholas\", \"Jonathan\").","- P35(\"Sheryl\", \"Jeffrey\")."],"noiseless_rules":["P15(V2, V3) :- P0(V1), P10(V0, V2), - P13(V1, V3), P14(V3, V4), not -P34(V0, V2, V4).","P0(V1) :- - P16(V2), P25(V2, V3), - P26(V0, V1, V2), P27(V0, V3, V4), not P28(V1, V2, V4).","- P1(V0, V2, V3) :- - P16(V2), P25(V2, V3), - P26(V0, V1, V2), P27(V0, V3, V4), not P28(V1, V2, V4).","- P2(V0, V2, V4) :- - P16(V2), P25(V2, V3), - P26(V0, V1, V2), P27(V0, V3, V4), not P28(V1, V2, V4).","P3(V0, V3) :- P17(V3), - P35(V0, V3).","P4(V3) :- P18(V0, V3), P29(V2, V4), not -P30(V2, V4), not P31(V3, V4), not -P32(V0, V2, V3).","P5(V4) :- P18(V0, V3), P29(V2, V4), not -P30(V2, V4), not P31(V3, V4), not -P32(V0, V2, V3).","P6(V0, V2, V3) :- - P1(V0, V2, V3), not -P4(V3).","- P7(V2) :- - P19(V0, V2), P21(V1, V4), - P22(V0, V1, V3), not -P23(V0, V2, V3), not -P24(V0, V2, V4).","- P8(V2, V3, V4) :- - P19(V0, V2), P21(V1, V4), - P22(V0, V1, V3), not -P23(V0, V2, V3), not -P24(V0, V2, V4).","- P9(V1, V2, V4) :- - P19(V0, V2), P21(V1, V4), - P22(V0, V1, V3), not -P23(V0, V2, V3), not -P24(V0, V2, V4).","P10(V2, V2) :- - P7(V2).","P11(V1, V3, V4) :- P20(V1, V3, V4).","- P12(V3) :- P20(V1, V3, V4).","- P13(V1, V3) :- - P2(V0, V2, V4), P3(V0, V3), - P8(V2, V3, V4), P11(V1, V3, V4), not P33(V0, V2, V4).","P14(V3, V4) :- P5(V4), P6(V0, V2, V3), - P9(V1, V2, V4), not P12(V3)."],"noisy_rules":{"a":["- P15(V2, V3) :- P1(V0, V2, V3), - P3(V0, V3), P8(V2, V3, V4), P9(V1, V2, V4).","- P15(V3, V3) :- not -P12(V3), - P14(V3, V4)."],"b":["P33(V3, V2, V4) :- not P5(V4), not -P7(V2), P8(V2, V3, V4), not P15(V2, V3).","- P34(V2, V2, V4) :- - P5(V4), - P15(V2, V3)."],"c":["P26(V3, V3, V3) :- - P4(V3).","- P5(V3) :- - P3(V0, V3), P7(V2)."],"d":["P1(V0, V2, V3) :- not -P2(V0, V2, V4), not P4(V3), P8(V2, V3, V4), - P36(V0, V2, V4).","P38(V1, V3, V4) :- - P0(V1), - P5(V4), P12(V3), - P37."],"e":["- P43(V0) :- not P39(V2), - P40(V4), P41(V0, V1), P42(V0, V2, V4), P44(V1, V3, V4).","- P45(V1, V2) :- - P46(V0, V1, V3), - P47(V1, V2, V4), P48(V1, V2, V4)."]}},"num_min_facts_for_query":12,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_11_8_9_9_11_0.5_1.0_5_3_4","seed":11,"num_facts":13,"num_rules":10,"num_related_predicates":23,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"P9(\"William\", \"Melvin\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P10(\"Tara\", \"Susan\", \"William\").","P11(\"Tara\").","P12(\"William\", \"Melvin\").","P13(\"Tara\", \"Timothy\", \"Melvin\").","P14(\"Timothy\", \"Melvin\").","P15(\"William\", \"Melvin\").","- P16(\"Tara\", \"Susan\").","P17(\"Tara\", \"Susan\").","- P18(\"Tara\", \"Susan\", \"Melvin\").","P19(\"Susan\", \"William\", \"Melvin\").","- P20(\"William\", \"Melvin\").","- P21(\"William\", \"Melvin\").","P22(\"William\", \"Melvin\")."],"noisy_facts":["P27(\"Tara\", \"Timothy\").","- P28(\"Tara\", \"Susan\").","- P35(\"William\", \"Melvin\").","P36(\"Tara\", \"Susan\", \"Melvin\").","P25(\"Tara\", \"Timothy\", \"Susan\").","- P24(\"Tara\", \"Timothy\", \"Susan\").","P30(\"Tara\", \"Timothy\", \"Melvin\").","- P29(\"Tara\", \"Timothy\", \"William\").","- P34(\"Susan\", \"Melvin\").","- P23(\"Timothy\").","- P32(\"Tara\", \"Timothy\").","P33(\"Timothy\", \"Susan\")."],"min_fact_dicts_for_query":["P11(\"Tara\").","P12(\"William\", \"Melvin\").","P13(\"Tara\", \"Timothy\", \"Melvin\").","- P16(\"Tara\", \"Susan\").","P17(\"Tara\", \"Susan\").","- P18(\"Tara\", \"Susan\", \"Melvin\").","P19(\"Susan\", \"William\", \"Melvin\")."],"noiseless_rules":["P9(V3, V4) :- P1(V1), - P3(V3), P8(V0, V4), not -P14(V1, V4), not -P15(V3, V4).","P0(V2) :- P7(V0, V1, V2).","P1(V2) :- P0(V2), not -P2(V2), not P4(V2).","P2(V2) :- P5(V0, V1, V2), P6(V0, V2, V3).","- P3(V3) :- P6(V0, V2, V3), not -P10(V0, V2, V3).","- P4(V2) :- P6(V0, V2, V3), not -P10(V0, V2, V3).","P5(V0, V2, V2) :- P6(V0, V2, V3), not -P10(V0, V2, V3).","P6(V0, V2, V3) :- P11(V0), - P16(V0, V2), P17(V0, V2), - P18(V0, V2, V4), P19(V2, V3, V4).","P7(V3, V3, V4) :- P12(V3, V4), not -P15(V3, V4), not P20(V3, V4), not P21(V3, V4), not -P22(V3, V4).","P8(V0, V4) :- P13(V0, V1, V4)."],"noisy_rules":{"a":["- P9(V3, V4) :- P3(V3), not -P4(V2), - P7(V0, V1, V2), - P8(V0, V4).","- P9(V2, V4) :- - P0(V2), - P2(V2), P4(V2), - P8(V0, V4)."],"b":["- P2(V2) :- - P0(V2), - P1(V1), not P6(V0, V2, V3), - P8(V0, V4), - P9(V3, V4).","P16(V2, V2) :- - P0(V2), - P1(V1), - P9(V3, V4)."],"c":["- P11(V3) :- - P0(V2), P3(V3), not -P4(V2).","- P13(V0, V1, V2) :- - P0(V2), - P1(V1), - P6(V0, V2, V3)."],"d":["- P14(V1, V2) :- - P1(V1), not P2(V2), P4(V2), - P23(V1).","P21(V3, V3) :- not P1(V1), - P6(V0, V2, V3), - P7(V0, V1, V2), not P24(V0, V1, V2), not -P25(V0, V1, V2)."],"e":["P26(V2, V3, V4) :- P27(V0, V1), - P28(V0, V2), - P29(V0, V1, V3), P30(V0, V1, V4).","- P31(V2, V4) :- - P32(V0, V1), P33(V1, V2), not P34(V2, V4), - P35(V3, V4), P36(V0, V2, V4)."]}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_55_10_15_12_12_0.5_1.0_3_3_4","seed":55,"num_facts":14,"num_rules":16,"num_related_predicates":30,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"cross_street(\"Shelley\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["bangladesh(\"Cindy\", \"Samantha\").","launching_platform(\"Sharon\", \"Christopher\").","bird(\"Sharon\", \"Shelley\", \"Samantha\").","passageway(\"Christopher\", \"Shelley\", \"Samantha\").","fly(\"Sharon\", \"Shelley\").","paper(\"Sharon\", \"Cindy\", \"Samantha\").","kuwait(\"Sharon\", \"Christopher\", \"Cindy\").","kyrgyzstan(\"Sharon\", \"Christopher\", \"Samantha\").","chicken(\"Cindy\", \"Samantha\").","chick(\"Cindy\", \"Samantha\").","yellow(\"Christopher\", \"Cindy\", \"Samantha\").","black(\"Christopher\", \"Cindy\", \"Samantha\").","husband_and_wife(\"Cindy\").","prostitute(\"Cindy\")."],"noisy_facts":[],"min_fact_dicts_for_query":["bangladesh(\"Cindy\", \"Samantha\").","launching_platform(\"Sharon\", \"Christopher\").","bird(\"Sharon\", \"Shelley\", \"Samantha\").","passageway(\"Christopher\", \"Shelley\", \"Samantha\").","fly(\"Sharon\", \"Shelley\").","paper(\"Sharon\", \"Cindy\", \"Samantha\").","kuwait(\"Sharon\", \"Christopher\", \"Cindy\").","kyrgyzstan(\"Sharon\", \"Christopher\", \"Samantha\").","chicken(\"Cindy\", \"Samantha\").","chick(\"Cindy\", \"Samantha\").","yellow(\"Christopher\", \"Cindy\", \"Samantha\").","black(\"Christopher\", \"Cindy\", \"Samantha\").","husband_and_wife(\"Cindy\").","prostitute(\"Cindy\")."],"noiseless_rules":["cross_street(V2) :- eurasia(V3), egg_layer(V2, V3), passageway(V1, V2, V4).","asia(V4) :- bangladesh(V3, V4), kuwait(V0, V1, V3), kyrgyzstan(V0, V1, V4).","rockets(V3, V4) :- launching_platform(V0, V1), fly(V0, V2), paper(V0, V3, V4).","planes(V1, V2, V4) :- launching_platform(V0, V1), fly(V0, V2), paper(V0, V3, V4).","launching_space_shuttle(V1, V3, V4) :- launching_platform(V0, V1), fly(V0, V2), paper(V0, V3, V4).","launching(V0, V1, V3) :- launching_platform(V0, V1), fly(V0, V2), paper(V0, V3, V4).","space_shuttle(V3) :- launching_platform(V0, V1), fly(V0, V2), paper(V0, V3, V4).","wings(V3, V4, V4) :- rockets(V3, V4), chicken(V3, V4), chick(V3, V4).","fly_aeroplanes(V4, V3, V4) :- rockets(V3, V4), chicken(V3, V4), chick(V3, V4).","hen(V3, V4) :- rockets(V3, V4), chicken(V3, V4), chick(V3, V4).","flying(V1, V2, V4) :- planes(V1, V2, V4), wings(V0, V2, V4), bird(V0, V2, V4).","purple(V0, V2, V4) :- color(V1, V4), sex(V0, V2, V4).","color(V1, V4) :- launching_space_shuttle(V1, V3, V4), yellow(V1, V3, V4), black(V1, V3, V4).","eurasia(V3) :- asia(V4), launching(V0, V1, V3), fly_aeroplanes(V1, V3, V4).","egg_layer(V2, V0) :- hen(V0, V1), flying(V1, V2, V4), purple(V0, V2, V4).","sex(V3, V3, V3) :- space_shuttle(V3), husband_and_wife(V3), prostitute(V3)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_2_7_11_3_6_0.5_1.0_3_3_4","seed":2,"num_facts":4,"num_rules":12,"num_related_predicates":16,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"slave(\"Mary\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["temptation(\"Sara\", \"Mary\", \"Joseph\").","- marmosets(\"Sara\", \"Mary\").","doll(\"Sara\", \"Mary\").","person(\"Sara\", \"Joseph\", \"Robert\")."],"noisy_facts":["female_body(\"Steven\", \"Joseph\", \"Robert\").","buckeye(\"Sara\", \"Joseph\", \"Robert\").","hertfordshire(\"Mary\", \"Steven\", \"Joseph\").","airplanes(\"Sara\", \"Joseph\").","- cars(\"Mary\", \"Joseph\", \"Robert\").","- prison_camp(\"Sara\", \"Steven\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["slave(V1) :- - collector(V0, V1, V4), - female(V2, V3, V4), not -lion(V2, V3, V4).","- collector(V0, V1, V4) :- temptation(V0, V1, V3), person(V0, V3, V4).","hand_cream(V0, V3, V4) :- temptation(V0, V1, V3), person(V0, V3, V4).","- adam_eve(V0, V4) :- temptation(V0, V1, V3), person(V0, V3, V4).","- worker(V0, V0) :- - adam_eve(V0, V4), not cream(V0, V4), not -lanolin(V0, V4).","- soothe(V0, V4) :- - adam_eve(V0, V4), not cream(V0, V4), not -lanolin(V0, V4).","- female(V2, V2, V0) :- - worker(V0, V2), not creature(V0, V2), not -production_line(V0, V2).","lion(V0, V0, V1) :- - soothe(V0, V1), not marmosets(V0, V1), not -doll(V0, V1).","- creature(V0, V1) :- - soothe(V0, V1), not marmosets(V0, V1), not -doll(V0, V1).","- cream(V0, V4) :- hand_cream(V0, V3, V4), not -lanolin(V0, V4).","production_line(V0, V3) :- - adam_eve(V0, V4), person(V0, V3, V4).","lanolin(V0, V4) :- - adam_eve(V0, V4), person(V0, V3, V4)."],"noisy_rules":{"a":["- slave(V3) :- - hand_cream(V0, V3, V4).","- slave(V4) :- - lanolin(V0, V4)."],"b":["worker(V0, V2) :- collector(V0, V1, V4), - production_line(V0, V2), not slave(V1).","- person(V0, V0, V4) :- creature(V0, V2), cream(V0, V4), - slave(V1)."],"c":["- person(V2, V3, V4) :- not -female(V2, V3, V4), - lion(V2, V3, V4).","worker(V0, V1) :- collector(V0, V1, V4)."],"d":["female(V2, V3, V4) :- female_body(V2, V3, V4).","- camp(V2) :- worker(V0, V2), female(V2, V3, V4), not prison_camp(V0, V2)."],"e":["go_from_place_to_place(V1, V4) :- airplanes(V0, V3), - cars(V1, V3, V4).","- tattletale_gray(V1, V3, V4) :- buckeye(V0, V3, V4), hertfordshire(V1, V2, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_14_6_7_6_9_0.5_1.0_3_2_3","seed":14,"num_facts":8,"num_rules":8,"num_related_predicates":16,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" P7(\"Melissa\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P8(\"Melissa\", \"Adam\").","P9(\"Shawn\", \"Lisa\").","P10(\"Melissa\", \"Lisa\").","P11(\"Melissa\", \"Adam\").","P12(\"Shawn\", \"Melissa\").","P13(\"Shawn\", \"Melissa\").","P14(\"Shawn\", \"Melissa\").","P15(\"Lisa\", \"Adam\")."],"noisy_facts":["P16(\"Shawn\", \"Melissa\").","P20(\"Lisa\", \"Adam\").","P18(\"Shawn\", \"Adam\").","- P17.","- P19(\"Melissa\", \"Adam\").","- P23(\"Melissa\", \"Adam\")."],"min_fact_dicts_for_query":["P9(\"Shawn\", \"Lisa\").","P10(\"Melissa\", \"Lisa\").","P11(\"Melissa\", \"Adam\")."],"noiseless_rules":["- P7(V1) :- P4(V1, V2), - P6(V1, V3), not -P15(V2, V3).","P0(V1, V3) :- P5(V1, V3), not P6(V1, V3), not P8(V1, V3).","- P1(V0, V1) :- P9(V0, V2), P10(V1, V2), P11(V1, V3).","- P2(V0, V1) :- P9(V0, V2), P10(V1, V2), P11(V1, V3).","- P3(V0, V1) :- P9(V0, V2), P10(V1, V2), P11(V1, V3).","P4(V1, V1) :- P0(V1, V3), - P1(V0, V1), not -P12(V0, V1).","P5(V1, V1) :- - P2(V0, V1), not -P13(V0, V1), not -P14(V0, V1).","- P6(V1, V3) :- - P3(V0, V1), P5(V1, V3), not P8(V1, V3)."],"noisy_rules":{"a":["P7(V1) :- - P4(V1, V2).","P7(V1) :- not P0(V1, V3), P2(V0, V1), P6(V1, V3)."],"b":["- P13(V3, V1) :- - P0(V1, V3), not -P7(V1).","- P13(V0, V1) :- P2(V0, V1), not -P7(V1)."],"c":["- P11(V1, V3) :- P1(V0, V1), not -P2(V0, V1), - P5(V1, V3).","P1(V0, V1) :- P3(V0, V1)."],"d":["- P12(V0, V1) :- P1(V0, V1), not -P16(V0, V1).","- P9(V1, V3) :- - P0(V1, V3), not P17."],"e":["- P21(V2, V3) :- P18(V0, V3), - P19(V1, V3), P20(V2, V3).","- P22(V1, V3) :- - P23(V1, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_25_6_9_8_8_0.5_1.0_5_3_4","seed":25,"num_facts":11,"num_rules":10,"num_related_predicates":21,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.4,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" P9(\"Tamara\", \"Martin\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P10(\"Raymond\", \"Tamara\").","P11(\"Kayla\", \"Martin\", \"Paul\").","- P12(\"Tamara\", \"Martin\", \"Paul\").","- P13(\"Kayla\", \"Paul\").","P14(\"Kayla\", \"Paul\").","P15(\"Raymond\", \"Tamara\", \"Martin\").","- P16(\"Raymond\", \"Tamara\", \"Paul\").","P17(\"Kayla\", \"Paul\").","P18(\"Raymond\", \"Kayla\", \"Martin\").","- P19(\"Tamara\", \"Martin\", \"Paul\").","P20(\"Tamara\", \"Martin\", \"Paul\")."],"noisy_facts":["P24(\"Martin\").","- P22(\"Kayla\", \"Paul\").","- P21(\"Kayla\", \"Paul\").","P31(\"Tamara\", \"Paul\").","P28(\"Raymond\", \"Martin\", \"Paul\").","- P32(\"Kayla\", \"Martin\", \"Paul\").","- P26(\"Raymond\", \"Kayla\", \"Martin\").","- P25(\"Tamara\", \"Martin\").","P30(\"Raymond\", \"Martin\").","- P27(\"Raymond\", \"Kayla\", \"Paul\").","- P33(\"Tamara\", \"Martin\", \"Paul\").","P34(\"Tamara\", \"Martin\", \"Paul\")."],"min_fact_dicts_for_query":["P10(\"Raymond\", \"Tamara\").","P11(\"Kayla\", \"Martin\", \"Paul\").","P15(\"Raymond\", \"Tamara\", \"Martin\").","P17(\"Kayla\", \"Paul\").","P18(\"Raymond\", \"Kayla\", \"Martin\")."],"noiseless_rules":["- P9(V2, V3) :- P0(V2), P3(V4), P4(V4), P15(V0, V2, V3), not P16(V0, V2, V4).","P0(V2) :- P10(V0, V2), P17(V1, V4), P18(V0, V1, V3), not P19(V2, V3, V4), not -P20(V2, V3, V4).","- P1(V2, V3, V4) :- P10(V0, V2), P17(V1, V4), P18(V0, V1, V3), not P19(V2, V3, V4), not -P20(V2, V3, V4).","- P2(V2, V3) :- P10(V0, V2), P17(V1, V4), P18(V0, V1, V3), not P19(V2, V3, V4), not -P20(V2, V3, V4).","P3(V4) :- - P1(V2, V3, V4), not -P6(V2, V3, V4), not P8(V2, V3, V4).","P4(V4) :- P11(V1, V3, V4).","P5(V1, V4) :- P11(V1, V3, V4).","P6(V2, V3, V4) :- - P12(V2, V3, V4).","- P7(V2, V4) :- - P12(V2, V3, V4).","- P8(V2, V3, V4) :- - P2(V2, V3), P5(V1, V4), not P7(V2, V4), not P13(V1, V4), not -P14(V1, V4)."],"noisy_rules":{"a":["P9(V2, V3) :- not P0(V2), not -P2(V2, V3), not P3(V4), - P6(V2, V3, V4).","P9(V2, V3) :- - P0(V2), P1(V2, V3, V4), not P4(V4), not P6(V2, V3, V4), not -P8(V2, V3, V4)."],"b":["- P20(V2, V3, V2) :- P9(V2, V3).","- P6(V2, V3, V4) :- P2(V2, V3), P7(V2, V4), not -P9(V2, V3)."],"c":["- P4(V4) :- - P0(V2), P1(V2, V3, V4), - P5(V1, V4), not P6(V2, V3, V4), P8(V2, V3, V4).","P16(V4, V4, V4) :- - P4(V4)."],"d":["P2(V4, V4) :- - P3(V4), - P4(V4), - P5(V1, V4), not P21(V1, V4).","- P3(V4) :- - P5(V1, V4), P7(V2, V4), - P22(V1, V4)."],"e":["- P23(V0, V2) :- P24(V3), - P25(V2, V3), - P26(V0, V1, V3), - P27(V0, V1, V4), not -P28(V0, V3, V4).","- P29(V0, V3, V4) :- P30(V0, V3), P31(V2, V4), - P32(V1, V3, V4), - P33(V2, V3, V4), P34(V2, V3, V4)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_60_8_11_3_5_0.5_1.0_5_0_1","seed":60,"num_facts":7,"num_rules":12,"num_related_predicates":19,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" guides.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["cells.","long_staple_cotton.","skybox.","t_shirt.","basket_star.","- sign_autographs.","- slice."],"noisy_facts":["- multiple.","africa.","- keeping_alive.","imperial.","entrance."],"min_fact_dicts_for_query":["long_staple_cotton."],"noiseless_rules":["- guides :- agent, not -banquette, not -cow, not money_handler.","agent :- - indumentum, not -red_fox.","native_american :- - indumentum, not -red_fox.","banquette :- cow, not -cells.","- sexual_activity :- cow, not -cells.","- indumentum :- long_staple_cotton.","medicine_ball :- long_staple_cotton.","red_fox :- skybox, not -basket_star, not sign_autographs, not slice.","cow :- t_shirt.","remember_lines :- t_shirt.","- money_handler :- native_american, not sexual_activity, not -remember_lines, not acting.","- acting :- - sexual_activity, not -medicine_ball."],"noisy_rules":{"a":["guides :- not banquette, indumentum, not -money_handler.","guides :- not agent, - native_american, - banquette."],"b":["- skybox :- guides.","indumentum :- - remember_lines, money_handler, not -guides."],"c":["- cow :- indumentum.","- cow :- - banquette."],"d":["- on_shoulders :- - native_american, not -africa.","- long_staple_cotton :- not remember_lines, entrance."],"e":["stick :- - multiple.","- tribalism :- - keeping_alive, not -imperial."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_48_8_10_4_5_0.5_1.0_5_1_2","seed":48,"num_facts":7,"num_rules":11,"num_related_predicates":18,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.7142857142857142,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" combing(\"Carly\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["head(\"Carly\").","internet(\"Carly\").","rooster(\"Carly\").","chapter(\"Carly\").","wild_rice(\"Carly\").","propagator(\"Carly\").","space(\"Carly\")."],"noisy_facts":[],"min_fact_dicts_for_query":["head(\"Carly\").","internet(\"Carly\").","rooster(\"Carly\").","chapter(\"Carly\").","wild_rice(\"Carly\").","propagator(\"Carly\").","space(\"Carly\")."],"noiseless_rules":["combing(V2) :- shell(V2), hair(V2), comb(V2), brush(V2), vanity(V2).","shell(V2) :- turtle(V2), egg(V2).","hair(V2) :- head(V2).","animal(V2) :- head(V2).","communicate(V2) :- internet(V2).","comb(V2) :- rooster(V2), chapter(V2), wild_rice(V2), propagator(V2), space(V2).","turtle(V2) :- rooster(V2), chapter(V2), wild_rice(V2), propagator(V2), space(V2).","nest(V2) :- rooster(V2), chapter(V2), wild_rice(V2), propagator(V2), space(V2).","egg(V2) :- nest(V2).","brush(V2) :- animal(V2), comb(V2).","vanity(V2) :- communicate(V2)."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_29_5_7_4_6_0.5_1.0_3_3_4","seed":29,"num_facts":6,"num_rules":8,"num_related_predicates":14,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" runway(\"Chad\", \"Richard\", \"Anna\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["nest(\"Chad\", \"Jose\", \"Anna\").","- cake(\"Richard\", \"Christopher\", \"Jose\").","- house(\"Richard\", \"Jose\", \"Anna\").","- church(\"Richard\", \"Christopher\", \"Jose\").","- ring(\"Richard\", \"Christopher\", \"Jose\").","- studying_for_test(\"Christopher\", \"Jose\", \"Anna\")."],"noisy_facts":[],"min_fact_dicts_for_query":["nest(\"Chad\", \"Jose\", \"Anna\").","- cake(\"Richard\", \"Christopher\", \"Jose\").","- house(\"Richard\", \"Jose\", \"Anna\").","- church(\"Richard\", \"Christopher\", \"Jose\")."],"noiseless_rules":["- runway(V0, V1, V4) :- place(V3), social_activity(V0, V1), - house(V1, V3, V4).","place(V3) :- nest(V0, V3, V4), - church(V1, V2, V3), not studying_for_test(V2, V3, V4).","- furniture(V1, V4) :- nest(V0, V3, V4), - church(V1, V2, V3), not studying_for_test(V2, V3, V4).","- party(V0, V2, V4) :- nest(V0, V3, V4), - church(V1, V2, V3), not studying_for_test(V2, V3, V4).","- weddings(V1, V2) :- - cake(V1, V2, V3), not church(V1, V2, V3), not ring(V1, V2, V3).","eating(V2) :- - cake(V1, V2, V3), not church(V1, V2, V3), not ring(V1, V2, V3).","cost_lot_of_money(V1, V4) :- - furniture(V1, V4), - weddings(V1, V2), - house(V1, V3, V4).","social_activity(V0, V1) :- - party(V0, V2, V4), eating(V2), cost_lot_of_money(V1, V4)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_28_8_10_6_8_0.5_1.0_3_1_2","seed":28,"num_facts":9,"num_rules":11,"num_related_predicates":20,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" jesus_birthday(\"Tamara\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- bomblet(\"Deborah\").","dictionaries.","cheating(\"Tamara\").","- position(\"Tamara\").","trade_acceptance(\"Tamara\").","- point.","beninese(\"Tamara\").","prodigy(\"Tamara\").","female_offspring(\"Tamara\")."],"noisy_facts":["- phone(\"Deborah\").","- bones(\"Deborah\").","late_afternoon(\"Deborah\").","milk(\"Deborah\").","freezing.","- tiny(\"Deborah\").","- musicians(\"Tamara\").","rush_of_excitement(\"Deborah\")."],"min_fact_dicts_for_query":["dictionaries.","female_offspring(\"Tamara\")."],"noiseless_rules":["- jesus_birthday(V0) :- captain(V0), not -electron(V0), not -beninese(V0).","bowling_alley(V2) :- pin_bone(V2), not bomblet(V2).","- frock_coat(V2) :- bowling_alley(V2), not -pin_bone(V2), not point.","sitting_in(V0) :- - frock_coat(V0), not -rhinoceros(V0), not -pastry(V0).","captain(V0) :- sitting_in(V0), not -decide(V0), not -prodigy(V0).","pin_bone(V0) :- dictionaries, female_offspring(V0).","rhinoceros(V0) :- dictionaries, female_offspring(V0).","decide(V0) :- cheating(V0), not position(V0), not -trade_acceptance(V0).","lobscouse(V0) :- cheating(V0), not position(V0), not -trade_acceptance(V0).","electron(V0) :- lobscouse(V0), not -female_offspring(V0).","pastry(V0) :- lobscouse(V0), not -female_offspring(V0)."],"noisy_rules":{"a":["jesus_birthday(V0) :- - sitting_in(V0).","jesus_birthday(V0) :- - lobscouse(V0)."],"b":["- pin_bone(V0) :- jesus_birthday(V0).","- decide(V0) :- jesus_birthday(V0)."],"c":["- lobscouse(V0) :- frock_coat(V0), - pastry(V0).","- beninese(V0) :- - electron(V0)."],"d":["- captain(V0) :- - pin_bone(V2), - lobscouse(V0), not -freezing.","- beninese(V0) :- - sitting_in(V0), not musicians(V0)."],"e":["fairy_godmother(V2) :- - tiny(V2), milk(V2), not -late_afternoon(V2).","- breakfast_lunch_and_dinner(V2) :- not -rush_of_excitement(V2), - bones(V2), - phone(V2)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_10_10_15_13_16_0.5_1.0_5_0_1","seed":10,"num_facts":16,"num_rules":16,"num_related_predicates":32,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.7777777777777777,"num_noise_rules_per_type":2,"num_rules_with_default_negation":14,"target_query":"carpenters_level.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- parent.","- bar.","flying_bridge.","brie.","- tunnel.","- macaroni.","eagle.","- trestle_bridge.","- pontoon_bridge.","- truss_bridge.","- footbridge.","stupid.","nebbish.","subnormal.","food.","christian_symbol."],"noisy_facts":["- snuffle.","- carbon.","- atom.","- aircraft.","metallic_element.","fish.","elevator.","- selenium.","coat.","teal."],"min_fact_dicts_for_query":["- parent."],"noiseless_rules":["carpenters_level :- level, not plumb_level, not mite, not -smell_badly, not drilling_holes_in_things.","level :- - parent.","simpleton :- - support, not sheep, not -stupid, not -nebbish, not -subnormal.","follower :- - support, not sheep, not -stupid, not -nebbish, not -subnormal.","- plumb_level :- simpleton, not leech, not -flying_bridge, not -food, not -christian_symbol.","- support :- - bridge, not bar.","- spectacles :- - bridge, not bar.","circuit :- - bridge, not bar.","- mite :- flying_bridge, not trestle_bridge, not pontoon_bridge, not truss_bridge, not footbridge.","- sheep :- flying_bridge, not trestle_bridge, not pontoon_bridge, not truss_bridge, not footbridge.","skinnerian :- flying_bridge, not trestle_bridge, not pontoon_bridge, not truss_bridge, not footbridge.","- bridge :- flying_bridge, not trestle_bridge, not pontoon_bridge, not truss_bridge, not footbridge.","smell_badly :- follower, not spectacles, not -cheese.","cheese :- skinnerian, not -brie, not tunnel, not macaroni, not -eagle.","- drilling_holes_in_things :- circuit, not -brie.","- leech :- - bridge."],"noisy_rules":{"a":["- carpenters_level :- - circuit, mite, sheep, - skinnerian, drilling_holes_in_things.","- carpenters_level :- - follower, not -spectacles, - circuit, not -sheep, - skinnerian."],"b":["bar :- - carpenters_level.","pontoon_bridge :- not simpleton, - follower, - smell_badly, - carpenters_level."],"c":["- subnormal :- - smell_badly.","- follower :- - level, - simpleton, not circuit, - skinnerian, not -leech."],"d":["- bones :- not level, - smell_badly, not -fish.","saint :- not level, - skinnerian, - cheese, coat."],"e":["- cargo :- elevator, not aircraft, - snuffle, not -teal.","- chemical_element :- not selenium, metallic_element, - atom, not carbon."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_81_9_11_10_11_0.5_1.0_3_2_3","seed":81,"num_facts":12,"num_rules":12,"num_related_predicates":24,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.125,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P11(\"Kayla\", \"Robert\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P12(\"Kayla\", \"Carolyn\").","P13(\"Carolyn\", \"Robert\").","- P14(\"Kayla\", \"Carolyn\").","- P15(\"Kayla\", \"Robert\").","P16(\"Carolyn\", \"Robert\").","- P17(\"Carolyn\", \"Robert\").","- P18(\"Carolyn\", \"Robert\").","P19(\"Kayla\", \"Robert\").","P20(\"Kayla\", \"Robert\").","- P21(\"Kayla\", \"Robert\").","P22(\"Kayla\", \"Robert\").","P23."],"noisy_facts":["- P31(\"Stephanie\", \"Robert\").","P29(\"Kayla\", \"Robert\").","- P28(\"Kayla\", \"Robert\").","P24(\"Carolyn\", \"Robert\").","P27(\"Stephanie\", \"Kayla\")."],"min_fact_dicts_for_query":["P12(\"Kayla\", \"Carolyn\").","P13(\"Carolyn\", \"Robert\").","- P14(\"Kayla\", \"Carolyn\").","- P15(\"Kayla\", \"Robert\").","P16(\"Carolyn\", \"Robert\").","- P17(\"Carolyn\", \"Robert\")."],"noiseless_rules":["P11(V1, V3) :- - P0(V1, V3), - P4(V2, V3), not -P7(V2, V3).","- P0(V1, V3) :- - P1(V0, V1), - P9(V0, V3), - P14(V1, V2).","- P1(V0, V1) :- P5(V0, V1), P6(V1, V2).","- P2(V1, V3) :- P12(V1, V2), - P17(V2, V3).","P3(V1, V3) :- P12(V1, V2), - P17(V2, V3).","- P4(V2, V3) :- P13(V2, V3), not P17(V2, V3), not P18(V2, V3).","P5(V0, V1) :- - P10(V0, V3), - P15(V1, V3), P16(V2, V3).","P6(V1, V3) :- - P2(V1, V3), not P21(V1, V3), not -P22(V1, V3).","P7(V1, V3) :- P3(V1, V3), not -P19(V1, V3), not -P20(V1, V3).","P8(V3) :- P3(V1, V3), not -P19(V1, V3), not -P20(V1, V3).","- P9(V2, V2) :- P8(V2), not -P23.","- P10(V2, V2) :- P8(V2), not -P23."],"noisy_rules":{"a":["- P11(V1, V3) :- - P5(V0, V1), - P7(V2, V3), - P8(V2).","- P11(V2, V3) :- - P7(V2, V3)."],"b":["- P12(V1, V3) :- - P3(V1, V3), - P11(V1, V3).","P17(V3, V3) :- - P11(V1, V3)."],"c":["P10(V3, V3) :- P2(V1, V3), not P3(V1, V3), - P6(V1, V2).","- P23(V1, V3) :- P4(V2, V3), - P5(V0, V1), - P6(V1, V2)."],"d":["- P8(V2) :- P24(V2, V3).","- P25(V3, V1) :- P0(V1, V3)."],"e":["- P26(V1, V3) :- P27(V0, V1), not P28(V1, V3), P29(V1, V3).","- P30(V0, V3) :- - P31(V0, V3)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_70_6_9_5_6_0.5_1.0_3_2_3","seed":70,"num_facts":6,"num_rules":10,"num_related_predicates":16,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" P9(\"Caroline\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P10(\"Adrian\").","P11(\"Caroline\", \"Brett\").","- P12(\"Caroline\", \"Adrian\").","- P13(\"Brett\").","- P14(\"Caroline\", \"Brett\").","P15(\"Caroline\", \"Brett\")."],"noisy_facts":["- P21(\"Caroline\", \"Adrian\").","P24(\"Dawn\", \"Adrian\").","- P23(\"Dawn\", \"Brett\").","P19(\"Dawn\", \"Caroline\").","P20(\"Dawn\", \"Brett\").","P17(\"Caroline\", \"Brett\")."],"min_fact_dicts_for_query":["- P10(\"Adrian\").","P11(\"Caroline\", \"Brett\")."],"noiseless_rules":["- P9(V1) :- P3(V3), P4(V0, V1), not P8(V1, V3).","P0(V1, V2) :- - P10(V3), P11(V1, V2), not P12(V1, V3).","P1(V1, V2) :- - P10(V3), P11(V1, V2), not P12(V1, V3).","- P2(V2) :- - P10(V3), P11(V1, V2), not P12(V1, V3).","P3(V2) :- P0(V1, V2), not P7(V1, V2).","P4(V1, V1) :- P1(V1, V2), not P14(V1, V2), not -P15(V1, V2).","P5(V2) :- P1(V1, V2), not P14(V1, V2), not -P15(V1, V2).","P6(V2, V2) :- P1(V1, V2), not P14(V1, V2), not -P15(V1, V2).","- P7(V1, V2) :- P5(V2), - P14(V1, V2).","- P8(V2, V3) :- - P2(V2), P6(V2, V3), not P13(V2)."],"noisy_rules":{"a":["P9(V1) :- - P0(V1, V2), P8(V1, V3).","P9(V1) :- - P1(V1, V2), - P4(V0, V1), not P5(V2)."],"b":["- P5(V2) :- P7(V1, V2), P9(V1).","- P6(V1, V3) :- - P3(V3), - P4(V0, V1), not -P9(V1)."],"c":["P2(V0) :- - P4(V0, V1).","- P5(V2) :- P2(V2), - P3(V3), P8(V1, V3)."],"d":["- P16(V1) :- - P0(V1, V2).","P14(V1, V2) :- not P1(V1, V2), not P5(V2), P17(V1, V2)."],"e":["- P18(V1, V2) :- P19(V0, V1), P20(V0, V2), - P21(V1, V3).","P22(V2) :- - P23(V0, V2), P24(V0, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_13_7_7_6_9_0.5_1.0_3_0_1","seed":13,"num_facts":10,"num_rules":8,"num_related_predicates":18,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6666666666666667,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" practicing_lies.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["produce_oxygen.","biological_function.","- oryx.","- night_terror.","- tennis_coach.","- west_virginia.","- container.","day_return.","taxes.","fly."],"noisy_facts":["- waiting_tables.","persons_pet.","- providing_sustenance.","launching_satelites.","- tormentor.","- carry_things_in.","- stamina."],"min_fact_dicts_for_query":["biological_function."],"noiseless_rules":["- practicing_lies :- - decoupage, not liberian_dollar, not -loan_officers.","- decoupage :- - inspiration, not storm, not tennis_coach.","- inspiration :- - headgear, not storm, not -produce_oxygen.","- liberian_dollar :- biological_function, not tennis_coach, not west_virginia.","- headgear :- biological_function, not tennis_coach, not west_virginia.","loan_officers :- - headgear, not busman, not container.","- busman :- - oryx, not -fly.","- storm :- - night_terror, not -day_return, not -taxes."],"noisy_rules":{"a":["practicing_lies :- inspiration.","practicing_lies :- busman."],"b":["- produce_oxygen :- practicing_lies.","busman :- - loan_officers, not -practicing_lies."],"c":["- biological_function :- not -inspiration, not -liberian_dollar, headgear.","night_terror :- not -inspiration, liberian_dollar, headgear."],"d":["- biological_function :- - loan_officers, busman, persons_pet.","- fly :- inspiration, not -headgear, not providing_sustenance."],"e":["- tailpiece :- - waiting_tables, - stamina.","- sound :- not -launching_satelites, - carry_things_in, - tormentor."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_0_7_9_9_12_0.5_1.0_5_2_3","seed":0,"num_facts":12,"num_rules":10,"num_related_predicates":22,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P9(\"Steven\", \"Candace\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P10(\"Steven\").","- P11(\"Steven\", \"Candace\").","P12(\"Steven\").","P13(\"Candace\").","P14(\"Steven\", \"James\").","- P15(\"Melissa\", \"James\").","P16(\"Melissa\", \"Candace\").","P17(\"Steven\", \"Candace\").","- P18(\"Steven\", \"Candace\").","- P19(\"Melissa\", \"Candace\").","P20(\"Melissa\", \"Candace\").","P21(\"Steven\", \"Candace\")."],"noisy_facts":["P26(\"Steven\", \"James\").","- P29(\"Candace\").","- P31(\"Melissa\", \"Candace\").","- P25(\"James\").","- P27(\"James\", \"Candace\").","P30(\"Melissa\", \"James\").","- P22(\"Steven\", \"Melissa\").","P23(\"Steven\", \"Melissa\")."],"min_fact_dicts_for_query":["P10(\"Steven\").","- P11(\"Steven\", \"Candace\").","P17(\"Steven\", \"Candace\").","- P18(\"Steven\", \"Candace\").","- P19(\"Melissa\", \"Candace\")."],"noiseless_rules":["- P9(V0, V3) :- P3(V0, V3), P5(V0, V3), P6(V2, V3).","P0(V0, V3) :- P5(V0, V3), not -P21(V0, V3).","- P1(V0, V1) :- P10(V0), P17(V0, V3), - P18(V0, V3), - P19(V1, V3), not -P20(V1, V3).","- P2(V1, V3) :- P10(V0), P17(V0, V3), - P18(V0, V3), - P19(V1, V3), not -P20(V1, V3).","P3(V0, V3) :- P0(V0, V3), - P1(V0, V1), not P7(V0, V1), not P8(V0, V1), not -P21(V0, V3).","- P4(V0, V3) :- P0(V0, V3), - P1(V0, V1), not P7(V0, V1), not P8(V0, V1), not -P21(V0, V3).","P5(V0, V3) :- - P11(V0, V3).","P6(V0, V3) :- - P2(V1, V3), - P4(V0, V3), not P8(V0, V1).","- P7(V0, V1) :- P12(V0), P13(V3), P14(V0, V2), - P15(V1, V2), not -P16(V1, V3).","- P8(V0, V1) :- P12(V0), P13(V3), P14(V0, V2), - P15(V1, V2), not -P16(V1, V3)."],"noisy_rules":{"a":["P9(V0, V1) :- P8(V0, V1).","P9(V0, V3) :- not -P1(V0, V1), P4(V0, V3), not P5(V0, V3), P7(V0, V1)."],"b":["- P3(V0, V3) :- not -P4(V0, V3), - P5(V0, V3), not -P9(V0, V3).","P18(V0, V3) :- P9(V0, V3)."],"c":["- P3(V0, V0) :- P7(V0, V1).","- P14(V0, V2) :- P2(V1, V3), not -P4(V0, V3), - P5(V0, V3), - P6(V2, V3), P7(V0, V1)."],"d":["P18(V0, V1) :- P7(V0, V1), not P22(V0, V1).","P15(V1, V1) :- P1(V0, V1), - P3(V0, V3), not P5(V0, V3), P8(V0, V1), P23(V0, V1)."],"e":["- P24(V0) :- - P25(V2), P26(V0, V2), - P27(V2, V3).","- P28(V1, V3) :- - P29(V3), P30(V1, V2), - P31(V1, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_5_8_8_4_6_0.5_1.0_3_2_3","seed":5,"num_facts":8,"num_rules":9,"num_related_predicates":17,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"coho(\"Christopher\", \"Kenneth\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["carrier_bag(\"Matthew\", \"Samuel\").","- exclusive_group_of_people(\"Christopher\", \"Kenneth\").","- gathering_information(\"Matthew\", \"Christopher\").","- bumper_guard(\"Matthew\", \"Samuel\").","save_people_from_drowning(\"Matthew\", \"Kenneth\").","- contract(\"Samuel\", \"Kenneth\").","- typically(\"Samuel\", \"Christopher\").","art_galleries(\"Christopher\", \"Kenneth\")."],"noisy_facts":["- pillow(\"Samuel\", \"Christopher\").","electronic_device(\"Matthew\", \"Kenneth\").","- storing_information(\"Matthew\", \"Samuel\").","enjoying_music(\"Matthew\", \"Christopher\")."],"min_fact_dicts_for_query":["carrier_bag(\"Matthew\", \"Samuel\").","- exclusive_group_of_people(\"Christopher\", \"Kenneth\").","- typically(\"Samuel\", \"Christopher\").","art_galleries(\"Christopher\", \"Kenneth\")."],"noiseless_rules":["coho(V2, V3) :- - mammoth(V3), ninepins(V0, V2), not pike(V0, V3).","- marmot(V0, V2) :- - military_service(V0, V2).","- mammoth(V3) :- carrier_bag(V0, V1), - typically(V1, V2), art_galleries(V2, V3).","- point_at(V1, V2) :- carrier_bag(V0, V1), - typically(V1, V2), art_galleries(V2, V3).","- military_service(V1, V2) :- - air_sac(V1, V2), not typically(V1, V2).","ninepins(V0, V2) :- - marmot(V0, V2), - point_at(V1, V2), not -duck_sauce(V0, V2).","- air_sac(V3, V2) :- - exclusive_group_of_people(V2, V3), not -art_galleries(V2, V3).","duck_sauce(V0, V2) :- - gathering_information(V0, V2).","- pike(V0, V3) :- - bumper_guard(V0, V1), save_people_from_drowning(V0, V3), not contract(V1, V3)."],"noisy_rules":{"a":["- coho(V2, V0) :- point_at(V1, V2), military_service(V0, V2), not ninepins(V0, V2).","- coho(V2, V3) :- mammoth(V3), point_at(V1, V2), - ninepins(V0, V2)."],"b":["military_service(V0, V2) :- mammoth(V3), - duck_sauce(V0, V2), not coho(V2, V3).","exclusive_group_of_people(V2, V3) :- military_service(V0, V2), - duck_sauce(V0, V2), - coho(V2, V3)."],"c":["- art_galleries(V2, V2) :- - duck_sauce(V0, V2).","typically(V2, V2) :- - ninepins(V0, V2)."],"d":["exclusive_group_of_people(V2, V0) :- military_service(V0, V2).","gathering_information(V0, V2) :- point_at(V1, V2), pike(V0, V3), electronic_device(V0, V3)."],"e":["- eating_ones_fill(V0, V2) :- enjoying_music(V0, V2).","- take_turns_on_equipment(V1, V2) :- - storing_information(V0, V1), - pillow(V1, V2)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_23_8_11_6_8_0.5_1.0_5_3_4","seed":23,"num_facts":9,"num_rules":12,"num_related_predicates":21,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.4285714285714284,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":" skull(\"Deanna\", \"William\", \"Kevin\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["jugale(\"Amber\", \"Victoria\").","prepayment(\"Victoria\", \"Deanna\").","- refund(\"Victoria\", \"Deanna\").","- orbitale(\"Amber\", \"Victoria\").","auriculare(\"Amber\", \"Deanna\", \"Kevin\").","gnathion(\"Deanna\", \"William\", \"Kevin\").","acanthion(\"Deanna\", \"William\", \"Kevin\").","south_american(\"Victoria\", \"Deanna\").","hyoid(\"Victoria\", \"Deanna\")."],"noisy_facts":[],"min_fact_dicts_for_query":["jugale(\"Amber\", \"Victoria\").","- orbitale(\"Amber\", \"Victoria\").","auriculare(\"Amber\", \"Deanna\", \"Kevin\").","gnathion(\"Deanna\", \"William\", \"Kevin\")."],"noiseless_rules":["- skull(V2, V3, V4) :- - craniometric_point(V2, V3, V4), not -cranium(V2, V3, V4).","- bare_bone(V1, V2) :- - payment(V1, V2).","- bone(V2) :- - bare_bone(V1, V2), not -cheekbone(V1, V2), not gladiolus(V1, V2), not -hyoid(V1, V2).","- craniometric_point(V2, V3, V4) :- jugale(V0, V1), - orbitale(V0, V1), auriculare(V0, V2, V4), gnathion(V2, V3, V4), not -acanthion(V2, V3, V4).","cheekbone(V1, V2) :- jugale(V0, V1), - orbitale(V0, V1), auriculare(V0, V2, V4), gnathion(V2, V3, V4), not -acanthion(V2, V3, V4).","- ethmoid(V0, V1) :- jugale(V0, V1), - orbitale(V0, V1), auriculare(V0, V2, V4), gnathion(V2, V3, V4), not -acanthion(V2, V3, V4).","- push(V1, V2, V3) :- jugale(V0, V1), - orbitale(V0, V1), auriculare(V0, V2, V4), gnathion(V2, V3, V4), not -acanthion(V2, V3, V4).","cranium(V0, V1, V1) :- - bone(V0), - ethmoid(V0, V1), not temporal_bone(V0), not -calvaria(V0).","- temporal_bone(V2) :- prepayment(V1, V2), not -south_american(V1, V2), not -hyoid(V1, V2).","calvaria(V2) :- - push(V1, V2, V3).","- payment(V1, V2) :- prepayment(V1, V2), not refund(V1, V2).","- gladiolus(V1, V2) :- prepayment(V1, V2), not refund(V1, V2)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_51_7_11_10_11_0.5_1.0_5_2_3","seed":51,"num_facts":12,"num_rules":12,"num_related_predicates":24,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"bird(\"April\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["geese(\"Michelle\", \"Denise\").","- webbed_feet(\"Michelle\", \"April\").","lake(\"Michelle\", \"April\").","separate(\"Denise\", \"April\").","waffler(\"Robert\", \"April\").","- catholic(\"Robert\", \"April\").","- cry(\"Michelle\", \"Robert\").","- animal(\"Michelle\", \"Robert\").","- milk(\"Robert\", \"April\").","bridge(\"Robert\", \"April\").","chick(\"Michelle\", \"April\").","- canary(\"Robert\", \"April\")."],"noisy_facts":["leopard(\"Robert\", \"April\").","- mink(\"Robert\").","- celebrating_birthday(\"Michelle\", \"Denise\").","fox(\"April\").","egg.","play(\"Robert\", \"April\").","leave_country(\"Michelle\", \"April\").","repeat(\"Denise\", \"April\")."],"min_fact_dicts_for_query":["geese(\"Michelle\", \"Denise\").","- webbed_feet(\"Michelle\", \"April\").","lake(\"Michelle\", \"April\").","separate(\"Denise\", \"April\").","waffler(\"Robert\", \"April\").","- cry(\"Michelle\", \"Robert\").","- animal(\"Michelle\", \"Robert\").","- milk(\"Robert\", \"April\").","chick(\"Michelle\", \"April\")."],"noiseless_rules":["bird(V3) :- - nest(V0, V2), - fish(V0, V2), chick(V0, V3), not canary(V2, V3).","duck(V1, V3) :- geese(V0, V1), - cry(V0, V2), - animal(V0, V2), - milk(V2, V3), not -bridge(V2, V3).","water(V2) :- geese(V0, V1), - cry(V0, V2), - animal(V0, V2), - milk(V2, V3), not -bridge(V2, V3).","living(V3) :- geese(V0, V1), - cry(V0, V2), - animal(V0, V2), - milk(V2, V3), not -bridge(V2, V3).","- chicken(V3) :- geese(V0, V1), - cry(V0, V2), - animal(V0, V2), - milk(V2, V3), not -bridge(V2, V3).","- nest(V0, V2) :- - webbed_feet(V0, V3), lake(V0, V3), separate(V1, V3), waffler(V2, V3), not catholic(V2, V3).","- pond(V0, V1) :- - webbed_feet(V0, V3), lake(V0, V3), separate(V1, V3), waffler(V2, V3), not catholic(V2, V3).","- yell(V0, V3) :- - webbed_feet(V0, V3), lake(V0, V3), separate(V1, V3), waffler(V2, V3), not catholic(V2, V3).","- soup(V1, V3) :- duck(V1, V3), - webbed_feet(V0, V3).","- fish(V0, V2) :- water(V2), - pond(V0, V1), not soup(V1, V2), not -scrambled(V0, V1).","scream(V3, V3) :- living(V3), - yell(V0, V3).","scrambled(V3, V1) :- - chicken(V3), scream(V1, V3)."],"noisy_rules":{"a":["- bird(V1) :- - scrambled(V0, V1).","- bird(V3) :- chicken(V3), yell(V0, V3)."],"b":["yell(V3, V3) :- - scream(V1, V3), not bird(V3).","animal(V3, V3) :- - duck(V1, V3), not bird(V3)."],"c":["- water(V2) :- - duck(V1, V3), chicken(V3), yell(V0, V3), soup(V1, V2), not -fish(V0, V2).","webbed_feet(V0, V3) :- - duck(V1, V3), - living(V3), yell(V0, V3), fish(V0, V2), not scream(V1, V3)."],"d":["- scrambled(V2, V2) :- - water(V2), egg.","soup(V1, V2) :- - water(V2), pond(V0, V1), yell(V0, V3), not -fish(V0, V2), not celebrating_birthday(V0, V1)."],"e":["do(V1, V3) :- repeat(V1, V3), play(V2, V3).","- fur(V2) :- not mink(V2), fox(V3), leave_country(V0, V3), leopard(V2, V3)."]}},"num_min_facts_for_query":9,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_28_7_6_6_6_0.5_1.0_5_3_4","seed":28,"num_facts":10,"num_rules":7,"num_related_predicates":17,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"mass(\"Molly\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["post_oak(\"Jason\", \"Erin\", \"Rebecca\").","vascular_plant(\"Jason\", \"Erin\", \"Kevin\").","capital_offense(\"Jason\").","- gown(\"Erin\", \"Molly\", \"Rebecca\").","- dance(\"Jason\", \"Erin\", \"Molly\").","immortality(\"Jason\", \"Molly\", \"Rebecca\").","place_to_live_in(\"Erin\", \"Kevin\", \"Rebecca\").","- two_wheel(\"Erin\", \"Molly\", \"Rebecca\").","blank_check(\"Jason\", \"Molly\", \"Rebecca\").","- nerve_fiber(\"Kevin\", \"Molly\", \"Rebecca\")."],"noisy_facts":[],"min_fact_dicts_for_query":["post_oak(\"Jason\", \"Erin\", \"Rebecca\").","- gown(\"Erin\", \"Molly\", \"Rebecca\")."],"noiseless_rules":["mass(V3) :- alcoholic_beverage(V0, V1), american_sport(V1, V3, V4).","mexican_hairless(V0, V1, V4) :- post_oak(V0, V1, V4).","- hurrying_to_get_ready_for_work(V0, V3) :- vascular_plant(V0, V1, V2), blank_check(V0, V3, V4), not nerve_fiber(V2, V3, V4).","australia(V0) :- - hurrying_to_get_ready_for_work(V0, V3), not -study_hall(V0, V3).","alcoholic_beverage(V0, V1) :- mexican_hairless(V0, V1, V4), not -australia(V0).","study_hall(V0, V3) :- capital_offense(V0), - dance(V0, V1, V3), immortality(V0, V3, V4), place_to_live_in(V1, V2, V4), not two_wheel(V1, V3, V4).","american_sport(V1, V3, V4) :- - gown(V1, V3, V4)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_26_10_12_12_12_0.5_1.0_5_3_4","seed":26,"num_facts":17,"num_rules":13,"num_related_predicates":30,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.4444444444444446,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"P12(\"Lisa\", \"Natalie\", \"Kendra\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P13(\"Lisa\", \"Vincent\", \"Natalie\").","P14(\"Lisa\").","P15(\"Sarah\", \"Lisa\", \"Vincent\").","P16(\"Sarah\", \"Lisa\", \"Natalie\").","- P17(\"Sarah\").","- P18(\"Vincent\", \"Kendra\").","- P19(\"Sarah\", \"Vincent\", \"Kendra\").","- P20(\"Lisa\", \"Natalie\", \"Kendra\").","- P21(\"Lisa\", \"Natalie\", \"Kendra\").","P22(\"Lisa\", \"Kendra\").","P23(\"Sarah\", \"Lisa\", \"Natalie\").","- P24(\"Lisa\", \"Vincent\", \"Natalie\").","P25(\"Lisa\", \"Vincent\", \"Natalie\").","P26(\"Lisa\", \"Vincent\", \"Natalie\").","- P27(\"Lisa\", \"Vincent\", \"Natalie\").","- P28(\"Lisa\", \"Vincent\", \"Natalie\").","- P29(\"Lisa\", \"Vincent\", \"Natalie\")."],"noisy_facts":["P35(\"Sarah\", \"Vincent\").","- P32(\"Vincent\", \"Kendra\").","P39(\"Lisa\", \"Vincent\", \"Kendra\").","- P30(\"Sarah\", \"Lisa\", \"Natalie\").","- P36(\"Sarah\", \"Vincent\").","- P31(\"Lisa\", \"Vincent\", \"Natalie\").","- P37(\"Sarah\", \"Lisa\", \"Kendra\").","P38(\"Sarah\", \"Vincent\", \"Natalie\")."],"min_fact_dicts_for_query":["P13(\"Lisa\", \"Vincent\", \"Natalie\").","P14(\"Lisa\").","P15(\"Sarah\", \"Lisa\", \"Vincent\").","P16(\"Sarah\", \"Lisa\", \"Natalie\").","- P17(\"Sarah\").","- P18(\"Vincent\", \"Kendra\").","- P19(\"Sarah\", \"Vincent\", \"Kendra\").","- P20(\"Lisa\", \"Natalie\", \"Kendra\").","P22(\"Lisa\", \"Kendra\").","P23(\"Sarah\", \"Lisa\", \"Natalie\").","- P24(\"Lisa\", \"Vincent\", \"Natalie\")."],"noiseless_rules":["P12(V1, V3, V4) :- P1(V1, V3), - P3(V0, V2, V3), - P4(V1, V2, V4), not -P10(V2, V3, V4).","- P0(V0, V1, V3) :- - P6(V0, V1, V3).","P1(V1, V3) :- P13(V1, V2, V3).","P2(V1, V2, V3) :- P13(V1, V2, V3).","- P3(V0, V2, V3) :- - P7(V0, V2, V4), - P8(V1, V2, V3), not P11(V2, V3, V4).","- P4(V1, V2, V4) :- P14(V1), P22(V1, V4), P23(V0, V1, V3), - P24(V1, V2, V3), not -P25(V1, V2, V3).","- P5(V0, V2) :- P15(V0, V1, V2).","- P6(V0, V1, V3) :- P16(V0, V1, V3).","- P7(V0, V2, V3) :- - P0(V0, V1, V3), - P5(V0, V2), not P9(V0, V1, V3).","- P8(V1, V2, V3) :- - P17(V0), - P18(V2, V4), - P19(V0, V2, V4), - P20(V1, V3, V4), not P21(V1, V3, V4).","- P9(V0, V1, V3) :- - P17(V0), - P18(V2, V4), - P19(V0, V2, V4), - P20(V1, V3, V4), not P21(V1, V3, V4).","P10(V2, V3, V1) :- P2(V1, V2, V3), not -P26(V1, V2, V3), not P27(V1, V2, V3), not P28(V1, V2, V3), not P29(V1, V2, V3).","- P11(V2, V3, V3) :- P2(V1, V2, V3), not -P26(V1, V2, V3), not P27(V1, V2, V3), not P28(V1, V2, V3), not P29(V1, V2, V3)."],"noisy_rules":{"a":["- P12(V2, V3, V4) :- P3(V0, V2, V3), - P10(V2, V3, V4).","- P12(V1, V3, V4) :- not -P0(V0, V1, V3), P8(V1, V2, V3), P9(V0, V1, V3), - P10(V2, V3, V4)."],"b":["- P22(V1, V4) :- - P12(V1, V3, V4).","P6(V0, V1, V3) :- P9(V0, V1, V3), - P12(V1, V3, V4)."],"c":["P27(V1, V3, V3) :- P0(V0, V1, V3), not -P9(V0, V1, V3).","- P1(V1, V3) :- P0(V0, V1, V3), P6(V0, V1, V3), not -P7(V0, V2, V4), not -P8(V1, V2, V3), P11(V2, V3, V4)."],"d":["- P2(V1, V1, V3) :- P0(V0, V1, V3), not P30(V0, V1, V3).","P6(V2, V1, V3) :- - P1(V1, V3), not P2(V1, V2, V3), P4(V1, V2, V4), not -P11(V2, V3, V4), not P31(V1, V2, V3)."],"e":["- P33(V2, V4) :- - P32(V2, V4).","- P34(V4) :- not -P35(V0, V2), not P36(V0, V2), not P37(V0, V1, V4), P38(V0, V2, V3), P39(V1, V2, V4)."]}},"num_min_facts_for_query":11,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_31_9_10_7_9_0.5_1.0_3_0_1","seed":31,"num_facts":11,"num_rules":11,"num_related_predicates":22,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"chocolate.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["ride.","bed_sheet.","- food.","- people.","piece.","- plant.","butter.","- stigmatism.","roots.","- muenster.","- extended_family."],"noisy_facts":["mime.","- nebule.","enjoying_music.","- cumulus.","- cirrus.","seaweed."],"min_fact_dicts_for_query":["ride."],"noiseless_rules":["chocolate :- chocolate_liquor, not -cocoa_powder, not dairy_product.","chocolate_liquor :- ride, not -piece, not plant.","illness :- - bitter_chocolate, not -condition, not family.","cheese :- illness, not muenster.","scandalization :- bed_sheet.","cocoa_powder :- - food, not -roots.","- bitter_chocolate :- - food, not -roots.","- dairy_product :- cheese, not -clabber, not -butter.","condition :- scandalization, not stigmatism, not -roots.","clabber :- scandalization, not stigmatism, not -roots.","- family :- - people, not muenster, not extended_family."],"noisy_rules":{"a":["- chocolate :- - scandalization.","- chocolate :- bitter_chocolate."],"b":["food :- - cheese, not chocolate.","- bed_sheet :- - illness, not -family, not chocolate."],"c":["- illness :- - chocolate_liquor, not clabber, not -family.","stigmatism :- not cheese, - scandalization, - cocoa_powder."],"d":["plant :- not chocolate_liquor, bitter_chocolate, seaweed.","- sarcoplasm :- dairy_product, not -family."],"e":["- acting :- enjoying_music, not -mime.","cloud :- - cumulus, not cirrus, - nebule."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_76_10_15_12_15_0.5_1.0_5_1_2","seed":76,"num_facts":15,"num_rules":16,"num_related_predicates":31,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.888888888888889,"num_noise_rules_per_type":2,"num_rules_with_default_negation":12,"target_query":"satisfying_hunger(\"Jasmine\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["shetland_pony(\"Jasmine\").","- beefsteak(\"Jasmine\").","ale(\"Jasmine\").","- personal_satisfaction(\"Jasmine\").","south_america(\"Jasmine\").","- old_world_scops_owl(\"Jasmine\").","start_business(\"Jasmine\").","- use_do_ab_crunches(\"Jasmine\").","pin_oak(\"Jasmine\").","- bell(\"Jasmine\").","- camshaft(\"Jasmine\").","imitation(\"Jasmine\").","- energy(\"Jasmine\").","bookcase(\"Jasmine\").","dessert(\"Jasmine\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- beefsteak(\"Jasmine\")."],"noiseless_rules":["satisfying_hunger(V1) :- job(V1), not -superior(V1), not enjoyment_of_meal(V1), not bell(V1), not -bookcase(V1).","domino(V1) :- silo(V1).","job(V1) :- spread_plague(V1).","silo(V1) :- - predator(V1), not -alps(V1), not use_do_ab_crunches(V1), not -pin_oak(V1), not bell(V1).","superior(V1) :- two_legs(V1), not answering_questions(V1), not camshaft(V1), not -imitation(V1), not energy(V1).","spread_plague(V1) :- two_legs(V1), not answering_questions(V1), not camshaft(V1), not -imitation(V1), not energy(V1).","- enjoyment_of_meal(V1) :- - mango(V1), not adam(V1), not cartridge(V1), not owls(V1).","- predator(V1) :- shetland_pony(V1), not personal_satisfaction(V1), not -south_america(V1), not old_world_scops_owl(V1), not -start_business(V1).","- mango(V1) :- shetland_pony(V1), not personal_satisfaction(V1), not -south_america(V1), not old_world_scops_owl(V1), not -start_business(V1).","- eggcup(V1) :- shetland_pony(V1), not personal_satisfaction(V1), not -south_america(V1), not old_world_scops_owl(V1), not -start_business(V1).","- adam(V1) :- domino(V1), not eggcup(V1), not cartridge(V1).","two_legs(V1) :- - beefsteak(V1).","- cartridge(V1) :- - beefsteak(V1).","alps(V1) :- ale(V1), not -bookcase(V1), not -dessert(V1).","- answering_questions(V1) :- ale(V1), not -bookcase(V1), not -dessert(V1).","- owls(V1) :- ale(V1), not -bookcase(V1), not -dessert(V1)."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_20_9_10_7_10_0.5_1.0_5_1_2","seed":20,"num_facts":11,"num_rules":11,"num_related_predicates":22,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" food(\"John\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- roach.","mist(\"John\").","kissing(\"John\").","- jacket(\"John\").","- find_outside(\"John\").","cloud(\"John\").","- chicken(\"John\").","squirrel(\"John\").","milk(\"John\").","bar(\"John\").","wine(\"John\")."],"noisy_facts":[],"min_fact_dicts_for_query":["mist(\"John\")."],"noiseless_rules":["- food(V2) :- - drink(V2), not love(V2), not marasca(V2), not -part(V2).","- drink(V2) :- - water(V2), not -milk(V2), not -bar(V2), not -wine(V2).","- love(V2) :- - like(V2), not -god(V2), not killing_people(V2), not -kissing(V2).","butt(V2) :- god(V2), not roach.","- like(V2) :- mist(V2), not find_outside(V2), not -cloud(V2), not chicken(V2), not -squirrel(V2).","- weather(V2) :- mist(V2), not find_outside(V2), not -cloud(V2), not chicken(V2), not -squirrel(V2).","god(V2) :- kissing(V2).","- water(V2) :- - weather(V2), not -cloud(V2).","- marasca(V2) :- - jacket(V2).","part(V1) :- butt(V1).","- killing_people(V1) :- butt(V1)."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_33_7_6_6_8_0.5_1.0_3_3_4","seed":33,"num_facts":8,"num_rules":7,"num_related_predicates":15,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" check_character(\"Joseph\", \"Scott\", \"Lynn\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["thames(\"Joseph\", \"Judy\", \"Lynn\").","- print(\"Joseph\", \"Judy\", \"Arthur\").","- article(\"Judy\", \"Scott\", \"Lynn\").","hijack(\"Scott\", \"Lynn\", \"Arthur\").","fly_gallery(\"Judy\", \"Scott\").","- truncation(\"Scott\", \"Lynn\").","- mother_cell(\"Joseph\", \"Judy\", \"Arthur\").","have_sex(\"Joseph\", \"Lynn\", \"Arthur\")."],"noisy_facts":[],"min_fact_dicts_for_query":["thames(\"Joseph\", \"Judy\", \"Lynn\").","- print(\"Joseph\", \"Judy\", \"Arthur\").","- article(\"Judy\", \"Scott\", \"Lynn\").","fly_gallery(\"Judy\", \"Scott\").","- mother_cell(\"Joseph\", \"Judy\", \"Arthur\")."],"noiseless_rules":["- check_character(V0, V2, V3) :- sleep_furniture(V0, V2, V3).","sleep_furniture(V0, V2, V3) :- - bed(V0, V3), fly_gallery(V1, V2), not truncation(V2, V3).","cell(V0, V4) :- - sertoli_cell(V1, V3), - mother_cell(V0, V1, V4), not -have_sex(V0, V3, V4).","- bed(V0, V3) :- - living_thing(V0, V1, V4), - newspaper(V1, V2, V3).","- living_thing(V0, V1, V4) :- cell(V0, V4), - newspaper(V1, V2, V3), not mother_cell(V0, V1, V4).","- sertoli_cell(V1, V3) :- thames(V0, V1, V3).","- newspaper(V1, V2, V3) :- - print(V0, V1, V4), - article(V1, V2, V3), not -hijack(V2, V3, V4)."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_76_10_14_9_11_0.5_1.0_3_0_1","seed":76,"num_facts":12,"num_rules":15,"num_related_predicates":27,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.888888888888889,"num_noise_rules_per_type":2,"num_rules_with_default_negation":15,"target_query":" produce.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["vandyke_beard.","quarter_carcass.","- seed.","mustache.","- fuzz.","manta.","- dinnerware.","barnyard.","- nutation.","corn.","- cotton.","- dish."],"noisy_facts":["chicken.","- gaggle.","P29.","pontoon_bridge."],"min_fact_dicts_for_query":["quarter_carcass."],"noiseless_rules":["- produce :- crop, not -tableware, not stadium.","whispering_gallery :- facial_hair, not -radio_telescope, not fruit.","crop :- farmer, not -corn, not cotton.","facial_hair :- - beard, not chick, not -manta.","tableware :- - crockery, not -nod, not dinnerware.","farmer :- - crockery, not -nod, not dinnerware.","- stadium :- - dome, not -radio_telescope, not fruit.","- beard :- vandyke_beard, not -mustache, not fuzz.","- onion_dome :- vandyke_beard, not -mustache, not fuzz.","- dome :- whispering_gallery, not onion_dome.","- crockery :- quarter_carcass, not dish.","radio_telescope :- quarter_carcass, not dish.","- chick :- - seed, not -barnyard, not nutation.","nod :- - seed, not -barnyard, not nutation.","- fruit :- - seed, not -barnyard, not nutation."],"noisy_rules":{"a":["produce :- - nod.","produce :- - radio_telescope."],"b":["fruit :- produce.","crockery :- produce."],"c":["- facial_hair :- beard, not -chick.","stadium :- not whispering_gallery, - tableware."],"d":["- barnyard :- - farmer, not -beard, not -chicken.","- barnyard :- chick."],"e":["prostitute :- P29, pontoon_bridge.","- flock :- - gaggle."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_30_7_6_5_6_0.5_1.0_5_1_2","seed":30,"num_facts":8,"num_rules":7,"num_related_predicates":15,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" brain(\"Luis\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["haleakala_national_park(\"Luis\").","emotion(\"Luis\").","- violence(\"Luis\").","major_cause_of_pollution(\"Luis\").","after_afternoon(\"Luis\").","blackhead(\"Luis\").","- macintosh(\"Luis\").","- stratum_germinativum(\"Luis\")."],"noisy_facts":[],"min_fact_dicts_for_query":["haleakala_national_park(\"Luis\")."],"noiseless_rules":["- brain(V2) :- head(V2), not -mind(V2), not -temporal_lobe(V2).","epidermis(V2) :- mantle(V2), not stratum_germinativum(V2).","head(V2) :- - skin(V2).","mantle(V2) :- haleakala_national_park(V2), not -major_cause_of_pollution(V2), not -after_afternoon(V2), not -blackhead(V2), not macintosh(V2).","mind(V2) :- emotion(V2).","temporal_lobe(V2) :- - violence(V2).","- skin(V2) :- epidermis(V2), not -blackhead(V2)."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_14_7_10_10_11_0.5_1.0_5_2_3","seed":14,"num_facts":12,"num_rules":11,"num_related_predicates":23,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P10(\"Aaron\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P11(\"Craig\").","- P12(\"Corey\", \"Aaron\").","- P13(\"Steven\").","P14(\"Corey\", \"Craig\").","P15(\"Aaron\", \"Steven\").","P16(\"Aaron\", \"Craig\").","- P17(\"Craig\").","- P18(\"Craig\").","P19(\"Craig\").","P20(\"Corey\", \"Aaron\").","P21(\"Corey\", \"Aaron\").","- P22(\"Aaron\", \"Craig\")."],"noisy_facts":["P23.","- P31(\"Corey\", \"Aaron\").","- P24(\"Corey\").","P28(\"Steven\", \"Craig\").","- P27(\"Aaron\", \"Craig\").","- P26(\"Corey\", \"Craig\").","P32(\"Aaron\", \"Craig\").","- P25(\"Corey\")."],"min_fact_dicts_for_query":["P11(\"Craig\").","- P12(\"Corey\", \"Aaron\").","- P13(\"Steven\").","P14(\"Corey\", \"Craig\").","P15(\"Aaron\", \"Steven\")."],"noiseless_rules":["- P10(V1) :- P2(V1, V2), - P4(V1, V3), not P9(V2, V3).","P0(V1, V3) :- P11(V3), - P12(V0, V1), not P22(V1, V3).","P1(V3) :- P11(V3), - P12(V0, V1), not P22(V1, V3).","P2(V1, V3) :- P0(V1, V3).","- P3(V3, V1) :- P0(V1, V3).","- P4(V1, V3) :- P7(V0), - P13(V2), P14(V0, V3), P15(V1, V2), not -P16(V1, V3).","P5(V0, V1) :- P7(V0), - P13(V2), P14(V0, V3), P15(V1, V2), not -P16(V1, V3).","- P6(V3, V3) :- P1(V3), not P8(V3), not P17(V3), not P18(V3), not -P19(V3).","P7(V0) :- - P12(V0, V1).","- P8(V0) :- - P12(V0, V1).","- P9(V2, V1) :- - P3(V0, V1), P5(V0, V1), - P6(V1, V2), not -P20(V0, V1), not -P21(V0, V1)."],"noisy_rules":{"a":["P10(V1) :- not P0(V1, V3), P4(V1, V3), P6(V1, V2), - P7(V0), not -P9(V2, V3).","P10(V1) :- - P1(V3), - P5(V0, V1), - P7(V0), P8(V3), P9(V2, V3)."],"b":["P9(V2, V3) :- - P2(V1, V2), P4(V1, V3), - P7(V0), P10(V1).","- P20(V2, V1) :- - P0(V1, V3), P6(V1, V2), not -P8(V3), not -P10(V1)."],"c":["- P11(V3) :- - P7(V0), P8(V3).","- P11(V3) :- - P1(V3), - P2(V1, V2), P3(V0, V1), - P7(V0), not -P8(V3)."],"d":["P3(V3, V3) :- P8(V3), P23.","- P5(V0, V1) :- - P2(V1, V2), not P7(V0), - P24(V0), - P25(V0)."],"e":["P29(V2, V3) :- - P26(V0, V3), - P27(V1, V3), P28(V2, V3).","- P30(V1, V3) :- - P31(V0, V1), P32(V1, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_80_9_14_4_6_0.5_1.0_5_2_3","seed":80,"num_facts":8,"num_rules":15,"num_related_predicates":23,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.375,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"press(\"Matthew\", \"Jack\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["blancmange(\"Matthew\").","ping_pong_ball(\"Matthew\", \"Stephanie\").","- ceramic(\"Matthew\", \"Amanda\").","catahoula_leopard_dog(\"Matthew\", \"Stephanie\").","mountain_goats(\"Jack\", \"Stephanie\").","- lord(\"Jack\", \"Stephanie\").","beating(\"Jack\", \"Stephanie\").","travel_to_far_places(\"Stephanie\", \"Amanda\")."],"noisy_facts":["movement(\"Matthew\", \"Jack\").","clean_wounds(\"Matthew\", \"Jack\").","- domestic_fowl.","- motel_room(\"Matthew\", \"Amanda\").","- new_york_bay(\"Matthew\", \"Amanda\").","fruit_salad(\"Matthew\").","- medicine(\"Matthew\", \"Jack\").","caramel(\"Amanda\")."],"min_fact_dicts_for_query":["blancmange(\"Matthew\").","- ceramic(\"Matthew\", \"Amanda\").","mountain_goats(\"Jack\", \"Stephanie\")."],"noiseless_rules":["press(V0, V1) :- - materiel(V1), - going_on_vacation(V0, V2), not grow_in_garden(V1, V2), not -give_food(V1, V2), not -keep_warm_under_quilt(V1, V2).","- materiel(V1) :- holding_soda(V1, V3), not -vicar(V1, V3).","- going_on_vacation(V0, V0) :- blancmange(V0).","wall(V0, V0) :- blancmange(V0).","- colic_artery(V0, V2) :- ping_pong_ball(V0, V2).","depth_charge(V0, V2) :- ping_pong_ball(V0, V2).","- grow_in_garden(V1, V2) :- - ceramic(V0, V3), mountain_goats(V1, V2), not lord(V1, V2), not -beating(V1, V2), not -travel_to_far_places(V2, V3).","holding_soda(V1, V3) :- - ceramic(V0, V3), mountain_goats(V1, V2), not lord(V1, V2), not -beating(V1, V2), not -travel_to_far_places(V2, V3).","- musical_movement(V0, V2) :- - ceramic(V0, V3), mountain_goats(V1, V2), not lord(V1, V2), not -beating(V1, V2), not -travel_to_far_places(V2, V3).","- young_mammal(V0) :- - ceramic(V0, V3), mountain_goats(V1, V2), not lord(V1, V2), not -beating(V1, V2), not -travel_to_far_places(V2, V3).","give_food(V0, V2) :- - colic_artery(V0, V2), not musical_movement(V0, V2).","- baking(V0, V0) :- - colic_artery(V0, V2), not musical_movement(V0, V2).","keep_warm_under_quilt(V1, V2) :- wall(V0, V3), depth_charge(V0, V2), insignia(V0, V2), - lord(V1, V2).","vicar(V0, V3) :- - young_mammal(V0), - baking(V0, V3).","insignia(V0, V2) :- blancmange(V0), catahoula_leopard_dog(V0, V2)."],"noisy_rules":{"a":["- press(V0, V0) :- colic_artery(V0, V2), baking(V0, V3).","- press(V0, V1) :- grow_in_garden(V1, V2), - give_food(V1, V2), - insignia(V0, V2)."],"b":["- blancmange(V0) :- materiel(V1), young_mammal(V0), - vicar(V1, V3), not press(V0, V1).","- insignia(V0, V2) :- not -grow_in_garden(V1, V2), musical_movement(V0, V2), - press(V0, V1)."],"c":["materiel(V1) :- - depth_charge(V0, V2), - holding_soda(V1, V3), young_mammal(V0), baking(V0, V3).","- insignia(V0, V2) :- materiel(V1), - depth_charge(V0, V2)."],"d":["- wall(V0, V3) :- colic_artery(V0, V2), - holding_soda(V1, V3), not -young_mammal(V0), not vicar(V1, V3), not -fruit_salad(V0).","colic_artery(V0, V3) :- materiel(V1), - wall(V0, V3), not domestic_fowl."],"e":["- end(V0, V3) :- caramel(V3), clean_wounds(V0, V1), not -movement(V0, V1), not medicine(V0, V1), not motel_room(V0, V3).","smell(V0, V3) :- - new_york_bay(V0, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_26_6_6_6_9_0.5_1.0_3_0_1","seed":26,"num_facts":8,"num_rules":7,"num_related_predicates":15,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P6.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P7.","P8.","- P9.","- P10.","P11.","P12.","- P13.","P14."],"noisy_facts":[],"min_fact_dicts_for_query":["- P7."],"noiseless_rules":["- P6 :- P2, not P3, not P9.","P0 :- - P4, not -P5, not P10.","- P1 :- - P7, not P13, not -P14.","P2 :- P0, not P9, not P10.","- P3 :- - P1, not -P8.","- P4 :- - P1, not -P8.","P5 :- P8, not -P11, not -P12."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_70_6_9_6_7_0.5_1.0_5_2_3","seed":70,"num_facts":7,"num_rules":10,"num_related_predicates":17,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P9(\"Pamela\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P10(\"Lisa\").","- P11(\"Pamela\", \"Amy\").","P12(\"Pamela\", \"Amy\").","- P13(\"Pamela\", \"Amy\").","P14(\"Pamela\", \"Amy\").","P15(\"Pamela\", \"Amy\").","- P16(\"Pamela\", \"Lisa\")."],"noisy_facts":["- P20(\"Ronald\", \"Amy\").","P24(\"Ronald\", \"Pamela\").","P25(\"Ronald\", \"Amy\").","- P17(\"Pamela\", \"Amy\").","P26(\"Pamela\", \"Lisa\").","- P21(\"Pamela\", \"Amy\").","- P19(\"Ronald\", \"Pamela\").","- P22(\"Pamela\", \"Amy\")."],"min_fact_dicts_for_query":["P10(\"Lisa\").","P15(\"Pamela\", \"Amy\")."],"noiseless_rules":["- P9(V1) :- P3(V3), - P4(V0, V1), not P8(V1, V3).","P0(V1, V2) :- P10(V3), P15(V1, V2), not P16(V1, V3).","P1(V1, V2) :- P10(V3), P15(V1, V2), not P16(V1, V3).","- P2(V2) :- P10(V3), P15(V1, V2), not P16(V1, V3).","P3(V2) :- P0(V1, V2), not P7(V1, V2), not P13(V1, V2).","- P4(V2, V1) :- P1(V1, V2), not P11(V1, V2), not -P12(V1, V2), not P13(V1, V2), not -P14(V1, V2).","- P5(V2) :- P1(V1, V2), not P11(V1, V2), not -P12(V1, V2), not P13(V1, V2), not -P14(V1, V2).","P6(V2, V1) :- P1(V1, V2), not P11(V1, V2), not -P12(V1, V2), not P13(V1, V2), not -P14(V1, V2).","- P7(V2, V2) :- - P5(V2).","- P8(V2, V3) :- - P2(V2), P6(V2, V3)."],"noisy_rules":{"a":["P9(V1) :- - P0(V1, V2), - P3(V3), P4(V0, V1), not -P5(V2), P7(V1, V2).","P9(V1) :- - P1(V1, V2), - P3(V3), P5(V2)."],"b":["P8(V1, V2) :- - P0(V1, V2), P2(V2), P4(V0, V1), not -P5(V2), not -P9(V1).","- P3(V2) :- - P1(V1, V2), not -P2(V2), not -P9(V1)."],"c":["- P14(V1, V1) :- P4(V0, V1).","P13(V1, V2) :- P7(V1, V2), P8(V1, V3)."],"d":["- P12(V1, V2) :- - P0(V1, V2), not P1(V1, V2), P5(V2), not P17(V1, V2).","- P10(V3) :- - P6(V2, V3)."],"e":["P18(V0, V1) :- - P19(V0, V1), - P20(V0, V2), not P21(V1, V2), not P22(V1, V2).","P23(V1, V2) :- P24(V0, V1), P25(V0, V2), P26(V1, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_17_9_14_2_4_0.5_1.0_3_0_1","seed":17,"num_facts":3,"num_rules":15,"num_related_predicates":18,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" bird.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["music.","rooster.","indian_food."],"noisy_facts":["obtuseness.","- raise_baseballs.","- grizzly.","- syrian_bear.","- excercise."],"min_fact_dicts_for_query":["music."],"noiseless_rules":["- bird :- - nest, not oriole, not -chicken.","- nest :- music.","- cassican :- music.","- listening :- music.","- chick :- music.","animal :- music.","- oriole :- - cassican, not loriot, not orioles.","- loriot :- - listening, not -indian_food.","- lay :- - listening, not -indian_food.","chicken :- egg, not hen, not -rooster.","egg :- - chick, not chicken_egg.","- hen :- - chick, not hearing_things.","- orioles :- - lay.","- chicken_egg :- - lay.","- hearing_things :- - listening, not -animal."],"noisy_rules":{"a":["bird :- listening, not egg, not -hen.","bird :- - chicken."],"b":["- animal :- not animal, bird.","listening :- not -listening, bird."],"c":["nest :- - chicken, not -chicken_egg.","nest :- chick, chicken_egg."],"d":["hen :- orioles.","lay :- nest, not -obtuseness."],"e":["- brown_bear :- - grizzly, - syrian_bear.","- physical_activity :- - raise_baseballs, not excercise."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_56_7_10_9_11_0.5_1.0_5_3_4","seed":56,"num_facts":12,"num_rules":11,"num_related_predicates":23,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" claymore(\"Shane\", \"Valerie\", \"Danny\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- party(\"Shane\", \"Valerie\").","having_good_time(\"Shane\", \"Logan\", \"Danny\").","modern_ballet.","cabin(\"Valerie\", \"Amanda\").","- protecting_others_during_sex(\"Amanda\", \"Danny\").","annex(\"Shane\", \"Amanda\", \"Danny\").","- disavowal(\"Shane\", \"Logan\", \"Danny\").","- waiting_for_airplain(\"Shane\", \"Valerie\", \"Amanda\").","jack(\"Shane\", \"Valerie\", \"Amanda\").","domestic_pigeon(\"Shane\", \"Valerie\", \"Amanda\").","- barbados_dollar(\"Shane\", \"Valerie\", \"Amanda\").","distribution_of_music(\"Shane\", \"Logan\", \"Danny\")."],"noisy_facts":["- womanhood(\"Shane\", \"Amanda\", \"Logan\").","raise(\"Valerie\", \"Amanda\", \"Danny\").","- burn_center(\"Shane\", \"Valerie\").","- supporting_ben_jerry(\"Shane\", \"Danny\").","gasman(\"Shane\", \"Logan\").","- giant(\"Shane\").","pasta_salad(\"Shane\", \"Logan\", \"Danny\").","white_admiral(\"Logan\", \"Danny\").","- hoot_owl(\"Shane\", \"Valerie\").","decline(\"Shane\", \"Valerie\", \"Amanda\").","- banks(\"Shane\").","- encolure(\"Shane\", \"Valerie\")."],"min_fact_dicts_for_query":["- party(\"Shane\", \"Valerie\").","cabin(\"Valerie\", \"Amanda\").","- protecting_others_during_sex(\"Amanda\", \"Danny\").","annex(\"Shane\", \"Amanda\", \"Danny\").","- disavowal(\"Shane\", \"Logan\", \"Danny\")."],"noiseless_rules":["- claymore(V0, V1, V4) :- - basic(V0), - spread_wings(V4), tapping(V0, V1), not hen(V0, V4).","- em(V0, V1, V2) :- - party(V0, V1), cabin(V1, V2), - protecting_others_during_sex(V2, V4), annex(V0, V2, V4), - disavowal(V0, V3, V4).","taxi(V0, V3, V4) :- - party(V0, V1), cabin(V1, V2), - protecting_others_during_sex(V2, V4), annex(V0, V2, V4), - disavowal(V0, V3, V4).","- basic(V0) :- taxi(V0, V3, V4), not -having_good_time(V0, V3, V4), not -distribution_of_music(V0, V3, V4).","preparing_for_birthday_party(V0, V3, V4) :- taxi(V0, V3, V4), not -having_good_time(V0, V3, V4), not -distribution_of_music(V0, V3, V4).","wildcat(V0, V4, V4) :- taxi(V0, V3, V4), not -having_good_time(V0, V3, V4), not -distribution_of_music(V0, V3, V4).","- spread_wings(V4) :- preparing_for_birthday_party(V2, V3, V4), not -vineyard(V2, V3, V4), not -singing_bird(V2, V3, V4).","vineyard(V0, V0, V0) :- - basic(V0), not -modern_ballet.","tapping(V0, V1) :- - em(V0, V1, V2), not waiting_for_airplain(V0, V1, V2), not -jack(V0, V1, V2), not -domestic_pigeon(V0, V1, V2), not barbados_dollar(V0, V1, V2).","- hen(V0, V4) :- taxi(V0, V3, V4), wildcat(V0, V1, V4).","singing_bird(V0, V3, V4) :- taxi(V0, V3, V4), wildcat(V0, V1, V4)."],"noisy_rules":{"a":["claymore(V0, V1, V4) :- em(V0, V1, V2), - wildcat(V0, V1, V4), - vineyard(V2, V3, V4), - tapping(V0, V1), hen(V0, V4).","claymore(V0, V1, V4) :- em(V0, V1, V2), - preparing_for_birthday_party(V2, V3, V4), - singing_bird(V2, V3, V4)."],"b":["- wildcat(V0, V1, V4) :- claymore(V0, V1, V4).","- preparing_for_birthday_party(V2, V3, V4) :- - singing_bird(V2, V3, V4), claymore(V0, V1, V4)."],"c":["- modern_ballet(V0, V0, V4) :- - taxi(V0, V3, V4), not -basic(V0).","- wildcat(V0, V2, V4) :- hen(V0, V4), - singing_bird(V2, V3, V4)."],"d":["- having_good_time(V0, V3, V4) :- - preparing_for_birthday_party(V2, V3, V4), - tapping(V0, V1), hen(V0, V4), not singing_bird(V2, V3, V4), - burn_center(V0, V1).","hen(V0, V1) :- not tapping(V0, V1), - hoot_owl(V0, V1)."],"e":["- doubt_existence_of_god(V0, V3, V4) :- - banks(V0), gasman(V0, V3), decline(V0, V1, V2), - womanhood(V0, V2, V3), pasta_salad(V0, V3, V4).","declension(V0, V1) :- - giant(V0), - encolure(V0, V1), - supporting_ben_jerry(V0, V4), white_admiral(V3, V4), raise(V1, V2, V4)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_39_9_12_5_8_0.5_1.0_3_2_3","seed":39,"num_facts":9,"num_rules":13,"num_related_predicates":22,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"crush(\"William\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["nocturnal_flying_rodents(\"Pamela\", \"William\").","- balloon(\"Pamela\", \"William\").","- flame(\"Pamela\", \"William\").","- usually_in_sky(\"Pamela\", \"Alexandra\").","- storing_flour(\"Pamela\", \"William\").","cold_cuts(\"Pamela\", \"William\").","sitting_furniture(\"Pamela\", \"William\").","- voice(\"Pamela\", \"William\").","brittle_star(\"Alexandra\", \"William\")."],"noisy_facts":["- nourishing_children(\"William\").","transfer_malaria_while_stinging_persons(\"Pamela\", \"William\").","- indian_restaurant(\"Pamela\").","bantu(\"Pamela\", \"Walter\").","- soft_roll(\"Pamela\").","education(\"Pamela\", \"William\").","subfigure(\"Pamela\", \"Alexandra\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["crush(V3) :- - saddle(V3), - coal(V0, V2), not -cold_cuts(V0, V3).","providing_opening_into_room(V0, V3) :- water_fowl(V2), weasels(V0, V2), - storing_flour(V0, V3).","artery(V0) :- water_fowl(V2), weasels(V0, V2), - storing_flour(V0, V3).","- eating_ones_fill(V3) :- providing_opening_into_room(V0, V3), not -darkness(V0, V3), not -silk(V0, V3).","darkness(V0, V3) :- nocturnal_flying_rodents(V0, V3).","water_fowl(V0) :- - balloon(V0, V3), not -cold_cuts(V0, V3), not -sitting_furniture(V0, V3).","weasels(V0, V3) :- - balloon(V0, V3), not flame(V0, V3).","silk(V0, V3) :- - balloon(V0, V3), not flame(V0, V3).","pinworm(V0, V0) :- - balloon(V0, V3), not flame(V0, V3).","- macaroni(V0) :- artery(V0), - eating_ones_fill(V3), not -sitting_furniture(V0, V3).","- saddle(V0) :- pinworm(V0, V2), not macaroni(V0), not -judge(V0).","- coal(V0, V2) :- - usually_in_sky(V0, V2), - voice(V0, V3), not -brittle_star(V2, V3).","judge(V0) :- - usually_in_sky(V0, V2), - voice(V0, V3), not -brittle_star(V2, V3)."],"noisy_rules":{"a":["- crush(V0) :- not water_fowl(V2), - weasels(V0, V2).","- crush(V3) :- eating_ones_fill(V3), - silk(V0, V3), - judge(V0)."],"b":["- silk(V0, V3) :- - silk(V0, V3), - judge(V0), not crush(V3).","usually_in_sky(V3, V3) :- not -eating_ones_fill(V3), - crush(V3)."],"c":["flame(V0, V0) :- - judge(V0).","- cold_cuts(V0, V3) :- - providing_opening_into_room(V0, V3), not -macaroni(V0), not judge(V0)."],"d":["- judge(V0) :- - silk(V0, V3), not pinworm(V0, V2), subfigure(V0, V2).","coal(V0, V3) :- - silk(V0, V3), - judge(V0), not soft_roll(V0)."],"e":["- immature_amphibians(V0, V3) :- not indian_restaurant(V0), not nourishing_children(V3), education(V0, V3).","- rhythmic_movement(V3) :- bantu(V0, V1), transfer_malaria_while_stinging_persons(V0, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_4_10_15_15_18_0.5_1.0_5_2_3","seed":4,"num_facts":19,"num_rules":16,"num_related_predicates":35,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.7777777777777777,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":"P15(\"Natalie\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P16(\"April\", \"Natalie\").","- P17(\"Beth\", \"Natalie\").","- P18(\"Eric\", \"Natalie\").","- P19.","- P20(\"April\", \"Natalie\").","- P21(\"April\", \"Natalie\").","P22(\"April\", \"Natalie\").","- P23(\"April\", \"Natalie\").","P24(\"Eric\", \"Natalie\").","P25(\"Eric\", \"Natalie\").","P26(\"Eric\", \"Natalie\").","- P27(\"Eric\", \"Natalie\").","P28(\"Eric\", \"Natalie\").","- P29(\"Beth\", \"Natalie\").","P30(\"Beth\", \"Natalie\").","P31(\"Beth\", \"Natalie\").","- P32(\"Beth\", \"Natalie\").","P33(\"April\", \"Natalie\").","- P34(\"Beth\", \"Natalie\")."],"noisy_facts":["P35(\"Eric\").","P37(\"Eric\", \"April\").","- P39(\"Eric\", \"Natalie\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["P15(V3) :- P1(V0), P2(V2), - P5(V0, V3), not P14(V0, V3), not -P30(V2, V3).","P0(V1, V3) :- P7(V0, V3), - P16(V1, V3), - P34(V2, V3).","P1(V0) :- P7(V0, V3), not P9(V0, V3), not -P10(V0, V3), not P27(V0, V3), not -P28(V0, V3).","P2(V2) :- - P11(V2, V3).","- P3(V3) :- - P11(V2, V3).","- P4(V2, V3) :- - P17(V2, V3), not P29(V2, V3), not -P30(V2, V3), not -P31(V2, V3), not P32(V2, V3).","- P5(V0, V3) :- - P4(V0, V3), not P8(V0, V3), not -P24(V0, V3), not -P25(V0, V3), not -P26(V0, V3).","P6(V0, V3) :- - P4(V0, V3), not P8(V0, V3), not -P24(V0, V3), not -P25(V0, V3), not -P26(V0, V3).","P7(V0, V3) :- - P18(V0, V3).","- P8(V0, V3) :- - P18(V0, V3).","- P9(V1, V3) :- P0(V1, V3), not P3(V3), not -P6(V1, V3), not P12(V1, V3), not -P33(V1, V3).","P10(V1, V3) :- - P16(V1, V3), not P19.","- P11(V3, V3) :- - P16(V1, V3), not P19.","- P12(V1, V3) :- - P16(V1, V3), not P19.","- P13(V1, V3) :- - P16(V1, V3), not P19.","- P14(V3, V3) :- - P13(V1, V3), not P20(V1, V3), not P21(V1, V3), not -P22(V1, V3), not P23(V1, V3)."],"noisy_rules":{"a":["- P15(V3) :- - P7(V0, V3), not -P8(V0, V3), P12(V1, V3), not -P13(V1, V3).","- P15(V3) :- - P7(V0, V3)."],"b":["- P2(V3) :- - P15(V3).","- P10(V0, V3) :- - P0(V1, V3), - P1(V0), not -P8(V0, V3), not -P9(V0, V3), not P15(V3)."],"c":["P29(V0, V3) :- P3(V3), P9(V0, V3), P13(V1, V3).","- P30(V3, V3) :- - P10(V0, V3)."],"d":["P14(V0, V3) :- - P0(V1, V3), - P1(V0), P8(V0, V3), - P10(V0, V3), P35(V0).","P3(V3) :- P12(V1, V3)."],"e":["P36(V0, V1) :- P37(V0, V1).","P38(V0, V3) :- - P39(V0, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_0_10_11_11_12_0.5_1.0_3_2_3","seed":0,"num_facts":15,"num_rules":12,"num_related_predicates":27,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.4444444444444446,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" old_squaw(\"Molly\", \"James\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["peacock(\"Molly\", \"Maria\").","buying_beer.","- loving(\"Molly\", \"Eric\").","getting_rid_of_dirt(\"Eric\").","merrymaking(\"Molly\", \"Eric\").","- pike(\"Maria\", \"Eric\").","- mamo(\"Molly\", \"Eric\").","- sanguine(\"Molly\", \"James\").","pis_aller(\"Molly\", \"Maria\").","- boarding_plance(\"Molly\", \"James\").","noise_pollution(\"Maria\", \"James\").","metal(\"Maria\", \"James\").","nacreous_cloud(\"Maria\", \"James\").","- water(\"Eric\", \"James\").","how_big(\"Molly\")."],"noisy_facts":["- appendicle(\"James\").","- decoys(\"Molly\").","- reward(\"James\").","shipwrecks(\"Molly\", \"Eric\").","secret.","white_crappie(\"Molly\", \"Maria\").","sportscar(\"Molly\", \"James\").","beautiful(\"Eric\", \"James\")."],"min_fact_dicts_for_query":["- loving(\"Molly\", \"Eric\").","pis_aller(\"Molly\", \"Maria\").","nacreous_cloud(\"Maria\", \"James\")."],"noiseless_rules":["- old_squaw(V0, V3) :- - fresh_air(V0, V3), not bring_rain(V0, V3).","- fresh_air(V0, V3) :- - hear_noise(V3), pis_aller(V0, V1), not boarding_plance(V0, V3).","funiture(V0) :- - hear_noise(V3), pis_aller(V0, V1), not boarding_plance(V0, V3).","- clock(V1, V3) :- - fear(V0, V1), - fusee_drive(V0, V3), trunk(V2, V3).","- fear(V0, V0) :- funiture(V0), not -how_big(V0).","written_communication(V0, V1) :- peacock(V0, V1), merrymaking(V0, V2), not pike(V1, V2).","- fusee_drive(V0, V1) :- written_communication(V0, V1), not -buying_beer.","reporting_crime(V0, V0) :- written_communication(V0, V1), not -buying_beer.","- parana(V3, V3) :- - clock(V1, V3), not -noise_pollution(V1, V3), not -metal(V1, V3).","- hear_noise(V3) :- - loving(V0, V2), nacreous_cloud(V1, V3), not water(V2, V3).","- bring_rain(V0, V3) :- written_communication(V0, V1), reporting_crime(V0, V2), - parana(V2, V3).","trunk(V2, V3) :- getting_rid_of_dirt(V2), - mamo(V0, V2), - sanguine(V0, V3)."],"noisy_rules":{"a":["old_squaw(V0, V3) :- fresh_air(V0, V3), - reporting_crime(V0, V2).","old_squaw(V0, V3) :- fusee_drive(V0, V3), parana(V2, V3)."],"b":["water(V3, V3) :- old_squaw(V0, V3).","- metal(V1, V3) :- clock(V1, V3), not -bring_rain(V0, V3), old_squaw(V0, V3)."],"c":["mamo(V0, V0) :- - funiture(V0), fusee_drive(V0, V3).","- merrymaking(V0, V2) :- - written_communication(V0, V1), parana(V2, V3), not -hear_noise(V3)."],"d":["- trunk(V0, V1) :- - funiture(V0), fear(V0, V1), not -secret.","- trunk(V3, V3) :- hear_noise(V3), not reward(V3), - appendicle(V3)."],"e":["hematochezia(V0, V3) :- - decoys(V0), sportscar(V0, V3).","morgan_le_fay(V0, V1) :- white_crappie(V0, V1), shipwrecks(V0, V2), beautiful(V2, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_65_10_11_11_12_0.5_1.0_3_2_3","seed":65,"num_facts":14,"num_rules":12,"num_related_predicates":26,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.6666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" spy(\"Shelby\", \"Heidi\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["steer(\"Shelby\", \"Misty\").","- playroom(\"Shelby\", \"Heidi\").","getting_air_to_lungs(\"Heidi\").","- ephemerid(\"Misty\", \"Heidi\").","good_place_to_lose_weight(\"Misty\", \"Heidi\").","- riding(\"Shelby\", \"Brittany\").","change_of_integrity(\"Shelby\", \"Brittany\").","frankfurter_bun(\"Misty\", \"Heidi\").","oak(\"Brittany\", \"Heidi\").","black(\"Misty\", \"Brittany\").","dessert_spoon(\"Misty\", \"Heidi\").","- vinyl_music(\"Misty\", \"Heidi\").","- earwig(\"Misty\", \"Heidi\").","ducks_mouth(\"Misty\", \"Heidi\")."],"noisy_facts":["- activity(\"Brittany\", \"Heidi\").","- out(\"Shelby\", \"Misty\").","core_drill(\"Shelby\", \"Brittany\").","- motorway(\"Shelby\", \"Brittany\").","- people_without_minds(\"Shelby\", \"Misty\").","- purplish_blue(\"Heidi\")."],"min_fact_dicts_for_query":["steer(\"Shelby\", \"Misty\").","getting_air_to_lungs(\"Heidi\").","frankfurter_bun(\"Misty\", \"Heidi\").","black(\"Misty\", \"Brittany\").","dessert_spoon(\"Misty\", \"Heidi\").","- vinyl_music(\"Misty\", \"Heidi\").","- earwig(\"Misty\", \"Heidi\")."],"noiseless_rules":["- spy(V0, V3) :- democratic_republican_party(V3), - santa_gertrudis(V0, V2), not night_bird(V0, V3).","democratic_republican_party(V3) :- - chicken_wing(V3), intellectual_property(V0, V3), - vinyl_music(V1, V3).","- chicken_wing(V3) :- factory(V2), frankfurter_bun(V1, V3), not -oak(V2, V3).","- members_of_armed_forces(V1, V3) :- factory(V2), frankfurter_bun(V1, V3), not -oak(V2, V3).","factory(V2) :- - earthquake(V0, V2), not riding(V0, V2), not -change_of_integrity(V0, V2).","- santa_gertrudis(V0, V2) :- - earthquake(V0, V2), not art(V0, V2).","- earthquake(V0, V2) :- steer(V0, V1), black(V1, V2), dessert_spoon(V1, V3).","- night_bird(V0, V3) :- - playroom(V0, V3).","chaja(V1, V3) :- getting_air_to_lungs(V3), - earwig(V1, V3), not -ducks_mouth(V1, V3).","- art(V1, V3) :- chaja(V1, V3), not ephemerid(V1, V3), not -good_place_to_lose_weight(V1, V3).","- strafer(V3, V3) :- chaja(V1, V3), not ephemerid(V1, V3), not -good_place_to_lose_weight(V1, V3).","intellectual_property(V0, V3) :- - members_of_armed_forces(V1, V3), - strafer(V0, V3)."],"noisy_rules":{"a":["spy(V0, V3) :- santa_gertrudis(V0, V2), - intellectual_property(V0, V3).","spy(V0, V3) :- earthquake(V0, V2), - chaja(V1, V3), not -art(V0, V2)."],"b":["night_bird(V0, V3) :- - intellectual_property(V0, V3), spy(V0, V3).","earthquake(V0, V0) :- spy(V0, V3)."],"c":["vinyl_music(V0, V2) :- earthquake(V0, V2).","- chaja(V2, V3) :- - factory(V2), night_bird(V0, V3), not -art(V0, V2)."],"d":["- getting_air_to_lungs(V3) :- not -chicken_wing(V3), - purplish_blue(V3).","- steer(V0, V0) :- santa_gertrudis(V0, V2), strafer(V0, V3), core_drill(V0, V2)."],"e":["president(V0, V1) :- - people_without_minds(V0, V1).","thoughts(V1, V2) :- - out(V0, V1), - motorway(V0, V2), - activity(V2, V3)."]}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_95_7_11_9_9_0.5_1.0_5_3_4","seed":95,"num_facts":12,"num_rules":12,"num_related_predicates":24,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.8333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" plant_organ(\"Albert\", \"Lisa\", \"Wesley\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- acanthocephalan(\"Eric\").","pitcher(\"Kristi\").","- many_houses(\"Kristi\", \"Eric\", \"Lisa\").","muscle(\"Kristi\", \"Albert\", \"Lisa\").","fig_leaf(\"Albert\").","- prickly_edged_leaf(\"Lisa\", \"Wesley\").","simple_leaf(\"Kristi\", \"Eric\", \"Lisa\").","- pad(\"Albert\", \"Lisa\", \"Wesley\").","nematode(\"Kristi\", \"Wesley\").","- beard_worm(\"Kristi\", \"Albert\", \"Lisa\").","ribbon_worm(\"Kristi\", \"Lisa\", \"Wesley\").","- helminth(\"Eric\", \"Lisa\", \"Wesley\")."],"noisy_facts":["zygote(\"Eric\", \"Lisa\", \"Wesley\").","subfigure(\"Kristi\", \"Eric\").","extension_course(\"Kristi\", \"Eric\", \"Albert\").","- course_of_lectures(\"Eric\").","- quince(\"Kristi\", \"Eric\")."],"min_fact_dicts_for_query":["- acanthocephalan(\"Eric\").","pitcher(\"Kristi\").","fig_leaf(\"Albert\").","- prickly_edged_leaf(\"Lisa\", \"Wesley\").","simple_leaf(\"Kristi\", \"Eric\", \"Lisa\").","nematode(\"Kristi\", \"Wesley\").","- beard_worm(\"Kristi\", \"Albert\", \"Lisa\")."],"noiseless_rules":["- plant_organ(V2, V3, V4) :- - cup(V1, V3), - oak(V1, V3), invertebrate(V2, V4), welsh_pony(V0, V1, V3), not -muscle(V0, V2, V3).","- cup(V1, V3) :- cupule(V0, V1), leaf(V0, V3), not -pony(V0, V3).","- acorn(V0, V1, V3) :- cupule(V0, V1), leaf(V0, V3), not -pony(V0, V3).","- oak(V1, V3) :- - acorn(V0, V1, V3), not -spanish_oak(V0, V1, V3).","invertebrate(V2, V4) :- - worm(V0, V1), ctenophore(V1, V2, V4).","cupule(V0, V1) :- - worm(V0, V1), ctenophore(V1, V2, V4).","welsh_pony(V0, V1, V3) :- - acanthocephalan(V1), nematode(V0, V4), - beard_worm(V0, V2, V3), not -ribbon_worm(V0, V3, V4), not helminth(V1, V3, V4).","- worm(V0, V1) :- - acanthocephalan(V1), nematode(V0, V4), - beard_worm(V0, V2, V3), not -ribbon_worm(V0, V3, V4), not helminth(V1, V3, V4).","leaf(V0, V3) :- pitcher(V0), fig_leaf(V2), - prickly_edged_leaf(V3, V4), simple_leaf(V0, V1, V3), not pad(V2, V3, V4).","ctenophore(V1, V2, V4) :- pitcher(V0), fig_leaf(V2), - prickly_edged_leaf(V3, V4), simple_leaf(V0, V1, V3), not pad(V2, V3, V4).","pony(V0, V3) :- - many_houses(V0, V1, V3).","spanish_oak(V0, V1, V3) :- - many_houses(V0, V1, V3)."],"noisy_rules":{"a":["plant_organ(V2, V3, V4) :- not -cup(V1, V3), not -oak(V1, V3), not leaf(V0, V3), - ctenophore(V1, V2, V4), - spanish_oak(V0, V1, V3).","plant_organ(V2, V3, V4) :- acorn(V0, V1, V3), oak(V1, V3), - invertebrate(V2, V4), - ctenophore(V1, V2, V4), - pony(V0, V3)."],"b":["- spanish_oak(V0, V1, V3) :- oak(V1, V3), worm(V0, V1), - pony(V0, V3), plant_organ(V2, V3, V4).","- pony(V0, V3) :- cup(V1, V3), - welsh_pony(V0, V1, V3), not spanish_oak(V0, V1, V3), plant_organ(V2, V3, V4)."],"c":["- pitcher(V0) :- cup(V1, V3), not -acorn(V0, V1, V3), oak(V1, V3), - leaf(V0, V3), not spanish_oak(V0, V1, V3).","- cupule(V0, V1) :- acorn(V0, V1, V3), - leaf(V0, V3), - ctenophore(V1, V2, V4), not spanish_oak(V0, V1, V3)."],"d":["- leaf(V0, V3) :- not -cup(V1, V3), acorn(V0, V1, V3), - cupule(V0, V1), - pony(V0, V3), not quince(V0, V1).","- simple_leaf(V0, V1, V3) :- oak(V1, V3), not welsh_pony(V0, V1, V3), worm(V0, V1), not leaf(V0, V3), not -subfigure(V0, V1)."],"e":["cell(V1, V3, V4) :- zygote(V1, V3, V4).","- course(V0, V1, V2) :- - course_of_lectures(V1), extension_course(V0, V1, V2)."]}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_60_8_7_2_5_0.5_1.0_5_3_4","seed":60,"num_facts":6,"num_rules":8,"num_related_predicates":14,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8571428571428572,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" P7(\"Diane\", \"Daniel\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P8(\"Rebecca\", \"Daniel\", \"Julia\").","- P9(\"Rebecca\", \"Daniel\", \"Julia\").","P10(\"Diane\", \"Daniel\", \"Julia\").","P11(\"Rebecca\", \"Daniel\", \"Julia\").","- P12(\"Diane\", \"Daniel\", \"Julia\").","P13(\"Daniel\", \"Julia\", \"Ashley\")."],"noisy_facts":["P14(\"Rebecca\", \"Daniel\", \"Julia\").","P18(\"Rebecca\", \"Daniel\", \"Julia\").","P16(\"Rebecca\", \"Daniel\", \"Julia\").","P15(\"Rebecca\", \"Daniel\", \"Julia\").","- P20(\"Rebecca\", \"Diane\", \"Ashley\")."],"min_fact_dicts_for_query":["P10(\"Diane\", \"Daniel\", \"Julia\").","P11(\"Rebecca\", \"Daniel\", \"Julia\").","- P12(\"Diane\", \"Daniel\", \"Julia\")."],"noiseless_rules":["- P7(V1, V2) :- P1(V3), - P4(V0, V3), - P5(V2, V4), - P12(V1, V2, V3), not -P13(V2, V3, V4).","- P0(V0, V2, V3) :- - P3(V0, V2, V3).","P1(V3) :- - P3(V0, V2, V3), not -P8(V0, V2, V3).","P2(V0, V3) :- P8(V0, V2, V3), not P9(V0, V2, V3).","- P3(V1, V2, V3) :- P10(V1, V2, V3), not P12(V1, V2, V3).","- P4(V0, V3) :- P11(V0, V2, V3).","- P5(V2, V3) :- - P0(V0, V2, V3), not -P6(V0, V2, V3).","P6(V0, V0, V3) :- P2(V0, V3)."],"noisy_rules":{"a":["P7(V0, V0) :- - P1(V3), not P2(V0, V3), P4(V0, V3).","P7(V3, V2) :- P0(V0, V2, V3), - P1(V3), - P6(V0, V2, V3)."],"b":["- P6(V1, V2, V1) :- P7(V1, V2).","- P10(V1, V2, V3) :- P5(V2, V4), - P6(V0, V2, V3), P7(V1, V2)."],"c":["P0(V0, V2, V3) :- - P2(V0, V3), P5(V2, V4).","P3(V3, V3, V3) :- - P1(V3)."],"d":["P3(V0, V2, V3) :- P0(V0, V2, V3), not -P14(V0, V2, V3).","- P11(V0, V2, V3) :- P0(V0, V2, V3), P5(V2, V4), P15(V0, V2, V3), P16(V0, V2, V3)."],"e":["P17(V0, V2, V3) :- P18(V0, V2, V3).","- P19(V0, V4) :- - P20(V0, V1, V4)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_39_10_9_9_11_0.5_1.0_3_2_3","seed":39,"num_facts":14,"num_rules":10,"num_related_predicates":24,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" appendicle(\"Joseph\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- mil(\"William\").","nip(\"Michelle\", \"Joseph\").","bad_check(\"Michelle\").","varix(\"Joseph\").","- helminth(\"Michelle\", \"Charles\").","- cassican(\"Michelle\", \"Charles\").","- plumb_bob(\"Michelle\", \"Joseph\").","- kenosis(\"Joseph\").","owls(\"Michelle\", \"Joseph\").","blush(\"Michelle\", \"Joseph\").","- astrodome(\"Michelle\", \"Joseph\").","perfumery(\"Michelle\", \"Joseph\").","- limburger(\"Charles\", \"William\").","- draft_beer(\"William\", \"Joseph\")."],"noisy_facts":["- wine_bucket(\"Michelle\", \"Joseph\").","wall_street(\"Michelle\").","- rule(\"Joseph\").","core(\"Michelle\", \"Joseph\").","shooting_cannonballs(\"Michelle\", \"Joseph\").","eating_steak_in(\"Michelle\", \"Joseph\").","pride(\"Michelle\", \"Joseph\")."],"min_fact_dicts_for_query":["- mil(\"William\").","bad_check(\"Michelle\").","- kenosis(\"Joseph\").","- limburger(\"Charles\", \"William\").","- draft_beer(\"William\", \"Joseph\")."],"noiseless_rules":["- appendicle(V3) :- adjective(V3), - aileron(V0, V2), not -perfumery(V0, V3).","taupe(V0, V3) :- swiss_pine(V0), - kenosis(V3), not -owls(V0, V3).","adjective(V3) :- - mil(V2), - limburger(V1, V2), - draft_beer(V2, V3).","- aileron(V0, V0) :- taupe(V0, V3), not -ordinand(V0, V3), not -wildfowl(V0, V3).","page(V0, V3) :- nip(V0, V3), not -blush(V0, V3), not astrodome(V0, V3).","swiss_pine(V0) :- bad_check(V0).","ordinand(V0, V3) :- page(V0, V3), not -professional(V0, V3).","professional(V0, V3) :- - eider(V0, V3), not -nip(V0, V3).","wildfowl(V0, V3) :- varix(V3), - cassican(V0, V1), not plumb_bob(V0, V3).","- eider(V0, V0) :- - helminth(V0, V1), not cassican(V0, V1)."],"noisy_rules":{"a":["appendicle(V0) :- - swiss_pine(V0).","appendicle(V3) :- - page(V0, V3)."],"b":["eider(V0, V3) :- aileron(V0, V2), not ordinand(V0, V3), appendicle(V3).","- page(V3, V3) :- appendicle(V3)."],"c":["- page(V0, V3) :- - ordinand(V0, V3), not wildfowl(V0, V3).","helminth(V0, V3) :- - swiss_pine(V0), - ordinand(V0, V3)."],"d":["helminth(V0, V3) :- - adjective(V3), - ordinand(V0, V3), not -core(V0, V3).","- perfumery(V0, V3) :- - professional(V0, V3), not -shooting_cannonballs(V0, V3), pride(V0, V3)."],"e":["glutton(V0, V3) :- wall_street(V0), - rule(V3), not -eating_steak_in(V0, V3).","long_staple_cotton(V3) :- - wine_bucket(V0, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_24_6_7_7_9_0.5_1.0_3_3_4","seed":24,"num_facts":9,"num_rules":8,"num_related_predicates":17,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.4,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"sforzando(\"Ashley\", \"Sheila\", \"David\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["sky(\"Sarah\", \"Ashley\").","wings(\"Sarah\", \"Ashley\", \"David\").","kentucky(\"Sarah\", \"Sheila\").","bird(\"Ashley\", \"Sheila\").","nest(\"Sarah\", \"Sheila\").","ears(\"Ashley\", \"Sheila\").","bell(\"Sarah\", \"Brandon\", \"David\").","kite(\"Sarah\", \"Ashley\", \"David\").","chalk(\"Sarah\", \"Ashley\", \"David\")."],"noisy_facts":[],"min_fact_dicts_for_query":["sky(\"Sarah\", \"Ashley\").","wings(\"Sarah\", \"Ashley\", \"David\").","kentucky(\"Sarah\", \"Sheila\").","bird(\"Ashley\", \"Sheila\").","nest(\"Sarah\", \"Sheila\").","ears(\"Ashley\", \"Sheila\").","bell(\"Sarah\", \"Brandon\", \"David\").","kite(\"Sarah\", \"Ashley\", \"David\").","chalk(\"Sarah\", \"Ashley\", \"David\")."],"noiseless_rules":["sforzando(V1, V2, V4) :- flying_in(V1, V4), flying(V1, V2, V4), united_states(V1, V2, V4).","ringing(V0, V2, V3) :- birds(V0, V2), ears(V1, V2), bell(V0, V3, V4).","flying_in(V1, V4) :- sky(V0, V1), bird(V1, V2), kite(V0, V1, V4).","fly(V0, V2) :- sky(V0, V1), bird(V1, V2), kite(V0, V1, V4).","flying(V1, V0, V4) :- wings(V0, V1, V4), kite(V0, V1, V4), chalk(V0, V1, V4).","flapping(V0, V4) :- wings(V0, V1, V4), kite(V0, V1, V4), chalk(V0, V1, V4).","birds(V0, V2) :- fly(V0, V2), bird(V1, V2), nest(V0, V2).","united_states(V0, V2, V3) :- ringing(V0, V2, V3), flapping(V0, V2), kentucky(V0, V2)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_27_8_11_8_9_0.5_1.0_5_2_3","seed":27,"num_facts":13,"num_rules":12,"num_related_predicates":25,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"P11(\"Steven\", \"Tracey\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P12(\"Chris\").","P13(\"Chris\", \"Steven\").","- P14(\"Chris\", \"Steven\").","- P15.","- P16(\"Chris\", \"Tracey\").","P17(\"Chris\", \"Steven\").","- P18(\"Chris\", \"Steven\").","- P19(\"Chris\", \"Steven\").","- P20(\"Steven\", \"Kevin\").","P21(\"Steven\", \"Kevin\").","P22(\"Steven\", \"Kevin\").","P23(\"Chris\", \"Kevin\").","- P24(\"Steven\", \"Tracey\")."],"noisy_facts":["- P31(\"Chris\", \"Steven\").","- P27(\"Chris\", \"Steven\").","P35(\"Steven\").","- P32(\"Chris\", \"Tracey\").","P29(\"Steven\").","P36(\"Steven\").","- P30(\"Tracey\").","P37(\"Steven\", \"Kevin\").","- P25(\"Chris\", \"Steven\").","P33(\"Steven\", \"Kevin\").","- P26(\"Chris\", \"Steven\")."],"min_fact_dicts_for_query":["- P12(\"Chris\").","- P14(\"Chris\", \"Steven\").","- P19(\"Chris\", \"Steven\").","- P20(\"Steven\", \"Kevin\").","P23(\"Chris\", \"Kevin\").","- P24(\"Steven\", \"Tracey\")."],"noiseless_rules":["P11(V1, V2) :- - P2(V0, V3), P4(V1, V2), not -P6(V2, V3).","- P0(V0, V1) :- - P12(V0), - P19(V0, V1), - P20(V1, V3), not -P21(V1, V3), not -P22(V1, V3).","P1(V0, V1) :- - P12(V0), - P19(V0, V1), - P20(V1, V3), not -P21(V1, V3), not -P22(V1, V3).","- P2(V0, V1) :- - P0(V0, V1), not P3(V0, V1), not -P5(V0, V1), not P7(V0, V1), not P10(V0, V1).","- P3(V0, V1) :- P13(V0, V1).","P4(V1, V2) :- - P14(V0, V1), P23(V0, V3), - P24(V1, V2).","P5(V0, V1) :- - P14(V0, V1), P23(V0, V3), - P24(V1, V2).","P6(V0, V0) :- P13(V0, V1), not P15.","- P7(V0, V1) :- P13(V0, V1), not P15.","P8(V1, V0) :- P13(V0, V1), not P15.","- P9(V0, V2) :- - P16(V0, V2).","- P10(V0, V1) :- P1(V0, V1), P8(V1, V3), - P9(V0, V2), not -P17(V0, V1), not P18(V0, V1)."],"noisy_rules":{"a":["- P11(V1, V2) :- P0(V0, V1), not P1(V0, V1), P3(V0, V1), P9(V0, V2), P10(V0, V1).","- P11(V1, V2) :- P0(V0, V1), - P1(V0, V1), P3(V0, V1), - P4(V1, V2), - P6(V2, V3)."],"b":["P3(V2, V1) :- - P11(V1, V2).","- P5(V2, V1) :- - P11(V1, V2)."],"c":["P20(V1, V0) :- P3(V0, V1), P9(V0, V2).","- P4(V1, V0) :- not -P0(V0, V1), P2(V0, V3), P3(V0, V1), P10(V0, V1)."],"d":["P10(V0, V1) :- - P4(V1, V2), not -P7(V0, V1), - P8(V1, V3), - P25(V0, V1), - P26(V0, V1).","P3(V0, V1) :- P0(V0, V1), not P1(V0, V1), not P27(V0, V1)."],"e":["- P28(V0, V1) :- P29(V1), - P30(V2), - P31(V0, V1), - P32(V0, V2), P33(V1, V3).","P34(V3) :- P35(V1), P36(V1), P37(V1, V3)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_31_9_13_11_14_0.5_1.0_5_3_4","seed":31,"num_facts":14,"num_rules":14,"num_related_predicates":28,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"baby(\"Hannah\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["council_of_constance(\"Hannah\", \"Kristina\").","smoke(\"Stephen\").","creature(\"Kristina\", \"Matthew\").","egg(\"Hannah\", \"Stephen\", \"Matthew\").","- camp(\"Stephen\").","- burn(\"Stephen\", \"Matthew\").","P20(\"Stephen\", \"Matthew\").","mole(\"Kristina\", \"Mark\", \"Stephen\").","- yellow(\"Mark\", \"Stephen\").","brown(\"Mark\", \"Stephen\").","red(\"Mark\", \"Stephen\").","hot(\"Mark\", \"Stephen\").","chicken(\"Kristina\", \"Matthew\").","duck(\"Kristina\", \"Matthew\")."],"noisy_facts":["canary(\"Hannah\").","nutcracker(\"Hannah\", \"Mark\").","contact(\"Hannah\", \"Mark\", \"Matthew\").","- jay(\"Hannah\", \"Mark\", \"Stephen\").","corn(\"Hannah\").","raven(\"Hannah\", \"Stephen\").","- new_world_mouse(\"Hannah\", \"Mark\").","window_blind(\"Hannah\", \"Kristina\", \"Stephen\").","rook(\"Hannah\", \"Kristina\").","- crow(\"Kristina\").","- much(\"Hannah\", \"Mark\", \"Stephen\").","pass_another_car(\"Hannah\", \"Mark\")."],"min_fact_dicts_for_query":["council_of_constance(\"Hannah\", \"Kristina\").","smoke(\"Stephen\").","creature(\"Kristina\", \"Matthew\").","- camp(\"Stephen\").","- burn(\"Stephen\", \"Matthew\").","P20(\"Stephen\", \"Matthew\").","mole(\"Kristina\", \"Mark\", \"Stephen\")."],"noiseless_rules":["baby(V0) :- - squirrel(V0), - animal(V2, V4), flying(V3, V4), not color(V0, V3, V4), not -egg(V0, V3, V4).","- squirrel(V0) :- council_of_constance(V0, V1).","chick(V1, V4) :- black(V2, V3), - slam_dancing(V0, V1, V4), not dark(V1, V3, V4), not -destroy_all_things(V1, V3, V4).","bird(V4, V4) :- chick(V1, V4), not nest(V1, V4), not -chicken(V1, V4), not -duck(V1, V4).","- nest(V1, V4) :- smoke(V3), - camp(V3), - burn(V3, V4), P20(V3, V4), mole(V1, V2, V3).","black(V2, V3) :- smoke(V3), - camp(V3), - burn(V3, V4), P20(V3, V4), mole(V1, V2, V3).","- fire(V2, V4) :- smoke(V3), - camp(V3), - burn(V3, V4), P20(V3, V4), mole(V1, V2, V3).","- animal(V4, V4) :- creature(V1, V4), not -duck(V1, V4).","- slam_dancing(V4, V1, V4) :- creature(V1, V4), not -duck(V1, V4).","flying(V3, V4) :- bird(V3, V4), not -soup(V3, V4).","- color(V3, V3, V2) :- black(V2, V3), not yellow(V2, V3), not -brown(V2, V3), not -red(V2, V3), not -hot(V2, V3).","- dark(V2, V3, V3) :- black(V2, V3), not yellow(V2, V3), not -brown(V2, V3), not -red(V2, V3), not -hot(V2, V3).","soup(V3, V2) :- black(V2, V3), not yellow(V2, V3), not -brown(V2, V3), not -red(V2, V3), not -hot(V2, V3).","destroy_all_things(V1, V4, V4) :- - fire(V2, V4), creature(V1, V4)."],"noisy_rules":{"a":["- baby(V0) :- - chick(V1, V4), - black(V2, V3), slam_dancing(V0, V1, V4), not soup(V3, V4).","- baby(V2) :- - black(V2, V3)."],"b":["- P20(V0, V0) :- - baby(V0).","- chicken(V0, V4) :- - bird(V3, V4), - soup(V3, V4), - baby(V0)."],"c":["- brown(V4, V3) :- squirrel(V0), - destroy_all_things(V1, V3, V4).","- hot(V2, V3) :- - chick(V1, V4), fire(V2, V4), - soup(V3, V4)."],"d":["yellow(V0, V0) :- not -squirrel(V0), canary(V0), not -corn(V0).","color(V2, V4, V4) :- animal(V2, V4)."],"e":["- corvine_bird(V0, V1, V2) :- - crow(V1), rook(V0, V1), nutcracker(V0, V2), raven(V0, V3), not jay(V0, V2, V3).","- empty(V2, V3, V4) :- - new_world_mouse(V0, V2), pass_another_car(V0, V2), window_blind(V0, V1, V3), - much(V0, V2, V3), contact(V0, V2, V4)."]}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_81_8_9_5_7_0.5_1.0_3_2_3","seed":81,"num_facts":8,"num_rules":10,"num_related_predicates":18,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" born_date(\"Eddie\", \"Lisa\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["bait(\"Eddie\", \"Lisa\").","fog(\"Eddie\", \"Lisa\").","hermitage(\"Daniel\", \"Lisa\").","bowl(\"Daniel\", \"Lisa\").","giving_gift(\"Daniel\", \"Lisa\").","candy(\"Eddie\", \"Lisa\").","compound_eyes(\"Eddie\", \"Lisa\").","celebrate(\"Eddie\", \"Lisa\")."],"noisy_facts":[],"min_fact_dicts_for_query":["bait(\"Eddie\", \"Lisa\").","fog(\"Eddie\", \"Lisa\").","hermitage(\"Daniel\", \"Lisa\").","bowl(\"Daniel\", \"Lisa\").","giving_gift(\"Daniel\", \"Lisa\").","candy(\"Eddie\", \"Lisa\").","compound_eyes(\"Eddie\", \"Lisa\").","celebrate(\"Eddie\", \"Lisa\")."],"noiseless_rules":["born_date(V1, V3) :- sausage(V1, V3), breast(V2, V3), cabbage(V2, V3).","sausage(V1, V3) :- lawn_bowling(V1, V3), kit_fox(V1, V3).","lawn_bowling(V1, V3) :- ping_pong_ball(V3), master_bedroom(V1, V3), candy(V1, V3).","ping_pong_ball(V3) :- bait(V1, V3).","conclusion(V1, V3) :- bait(V1, V3).","master_bedroom(V1, V3) :- conclusion(V1, V3), bun(V1, V3), compound_eyes(V1, V3).","kit_fox(V1, V3) :- fog(V1, V3), bowl(V2, V3), giving_gift(V2, V3).","bun(V1, V3) :- fog(V1, V3), bowl(V2, V3), giving_gift(V2, V3).","breast(V1, V3) :- bun(V1, V3), compound_eyes(V1, V3), celebrate(V1, V3).","cabbage(V2, V3) :- hermitage(V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_72_4_3_3_6_0.5_1.0_5_1_2","seed":72,"num_facts":5,"num_rules":4,"num_related_predicates":9,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6666666666666667,"num_noise_rules_per_type":2,"num_rules_with_default_negation":3,"target_query":"measure(\"Michael\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["heating(\"Wayne\").","- belt(\"Wayne\").","fish(\"Wayne\").","- conjunction(\"Wayne\").","- device(\"Wayne\")."],"noisy_facts":["but.","- legs(\"Wayne\").","and.","direction(\"Daniel\").","- god(\"Wayne\").","flea(\"Wayne\").","poodle(\"Wayne\").","- animal_tissue(\"Wayne\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["measure(V0) :- - scale(V0).","- or(V1) :- heating(V1), not -fish(V1), not conjunction(V1), not device(V1).","- scale(V1) :- - or(V1), not -accessory(V1), not conjunction(V1).","accessory(V1) :- - or(V1), not belt(V1), not device(V1)."],"noisy_rules":{"a":["- measure(V1) :- - accessory(V1).","- measure(V0) :- scale(V0), - accessory(V1)."],"b":["scale(V0) :- not -scale(V0), - accessory(V1), - measure(V0).","- fish(V1) :- or(V1), scale(V0), - measure(V0)."],"c":["device(V1) :- or(V1), scale(V0), - accessory(V1).","or(V1) :- scale(V0), - accessory(V1)."],"d":["or(V1) :- - accessory(V1), - animal_tissue(V1).","conjunction(V1) :- not -or(V1), scale(V0), - accessory(V1), and, not -but."],"e":["- message(V2) :- direction(V2).","dog(V1) :- not legs(V1), flea(V1), not -poodle(V1), not god(V1)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_13_7_9_9_9_0.5_1.0_3_2_3","seed":13,"num_facts":12,"num_rules":10,"num_related_predicates":22,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8333333333333333,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"god(\"James\", \"Stephen\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- buckeye(\"James\", \"Walter\").","- eat_pie(\"James\", \"Stephen\").","- denial(\"Stephen\").","empire(\"James\", \"Jeffrey\").","two_knees(\"James\", \"Jeffrey\").","- challenging_chess_opponent(\"Stephen\", \"Walter\").","corporation(\"Walter\").","pallette(\"Walter\").","- gulping(\"James\", \"Stephen\").","- lounges_where_can_study(\"Stephen\", \"Jeffrey\").","- sind(\"Stephen\", \"Jeffrey\").","flask(\"Stephen\", \"Walter\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- buckeye(\"James\", \"Walter\").","- eat_pie(\"James\", \"Stephen\").","- denial(\"Stephen\").","two_knees(\"James\", \"Jeffrey\").","- challenging_chess_opponent(\"Stephen\", \"Walter\").","- gulping(\"James\", \"Stephen\").","- lounges_where_can_study(\"Stephen\", \"Jeffrey\").","- sind(\"Stephen\", \"Jeffrey\")."],"noiseless_rules":["god(V0, V1) :- hired_help(V2), web(V0, V1), not cayman_islands_dollar(V1, V2).","hired_help(V2) :- - time_piece(V2), - jack(V0, V1), not -empire(V0, V2).","- time_piece(V2) :- - buckeye(V0, V3), - sind(V1, V2), not -flask(V1, V3).","customers(V3) :- - buckeye(V0, V3), - sind(V1, V2), not -flask(V1, V3).","web(V0, V1) :- - eat_pie(V0, V1), two_knees(V0, V2), - challenging_chess_opponent(V1, V3).","- rill(V2) :- - eat_pie(V0, V1), two_knees(V0, V2), - challenging_chess_opponent(V1, V3).","- cayman_islands_dollar(V2, V2) :- - rill(V2), not -stop(V2), not -rent_collector(V2).","stop(V3) :- customers(V3), not -corporation(V3), not -pallette(V3).","- jack(V0, V1) :- - denial(V1), - gulping(V0, V1), - lounges_where_can_study(V1, V2).","rent_collector(V2) :- - denial(V1), - gulping(V0, V1), - lounges_where_can_study(V1, V2)."],"noisy_rules":{}},"num_min_facts_for_query":8,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_98_7_8_5_8_0.5_1.0_3_2_3","seed":98,"num_facts":8,"num_rules":9,"num_related_predicates":17,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8333333333333333,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"P8(\"Matthew\", \"Elizabeth\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P9(\"Elizabeth\").","- P10(\"Matthew\", \"Elizabeth\").","P11(\"Matthew\", \"Elizabeth\").","- P12(\"Matthew\", \"Elizabeth\").","- P13(\"Matthew\", \"Elizabeth\").","P14(\"Matthew\", \"Elizabeth\").","P15(\"Matthew\", \"Emily\").","- P16(\"Matthew\", \"Elizabeth\")."],"noisy_facts":["- P19(\"Matthew\", \"Elizabeth\").","- P21(\"Devon\", \"Elizabeth\").","P18(\"Matthew\", \"Elizabeth\")."],"min_fact_dicts_for_query":["P9(\"Elizabeth\").","P14(\"Matthew\", \"Elizabeth\").","P15(\"Matthew\", \"Emily\")."],"noiseless_rules":["P8(V0, V2) :- P0(V0, V2), not -P5(V0, V2), not P10(V0, V2).","P0(V0, V2) :- P1(V0, V2), not -P4(V0, V2), not P10(V0, V2).","P1(V0, V2) :- P9(V2), P14(V0, V2), P15(V0, V3).","P2(V0, V2) :- P9(V2), P14(V0, V2), P15(V0, V3).","- P3(V0, V3) :- P9(V2), P14(V0, V2), P15(V0, V3).","P4(V0, V2) :- - P10(V0, V2), not P12(V0, V2), not P16(V0, V2).","P5(V0, V2) :- P2(V0, V2), not P6(V0, V2), not P7(V0, V2).","- P6(V0, V2) :- - P3(V0, V3), - P12(V0, V2), not P13(V0, V2).","- P7(V0, V2) :- P11(V0, V2)."],"noisy_rules":{"a":["- P8(V0, V2) :- P3(V0, V3), not P4(V0, V2), P6(V0, V2).","- P8(V0, V2) :- not P1(V0, V2), not P5(V0, V2), P6(V0, V2)."],"b":["- P5(V0, V2) :- - P8(V0, V2).","P13(V0, V2) :- - P8(V0, V2)."],"c":["- P1(V0, V2) :- - P0(V0, V2), not P2(V0, V2), not P5(V0, V2).","P16(V0, V2) :- - P0(V0, V2), P7(V0, V2)."],"d":["P7(V0, V2) :- - P5(V0, V2).","- P4(V0, V2) :- - P2(V0, V2)."],"e":["P17(V0, V2) :- P18(V0, V2).","P20(V0, V2) :- - P19(V0, V2), - P21(V1, V2)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_27_6_8_4_6_0.5_1.0_3_2_3","seed":27,"num_facts":6,"num_rules":9,"num_related_predicates":15,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" P8(\"Russell\", \"Ronald\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P9(\"Angela\", \"Ronald\").","- P10(\"Russell\").","- P11(\"Angela\", \"Russell\").","- P12(\"Russell\", \"Ronald\").","- P13(\"Angela\", \"Tina\").","- P14(\"Angela\", \"Russell\")."],"noisy_facts":["- P21(\"Ronald\", \"Tina\").","P15(\"Russell\", \"Ronald\").","- P16(\"Angela\", \"Russell\").","P18(\"Angela\", \"Russell\").","P20(\"Ronald\").","- P19(\"Angela\", \"Tina\")."],"min_fact_dicts_for_query":["P9(\"Angela\", \"Ronald\").","- P10(\"Russell\").","- P11(\"Angela\", \"Russell\").","- P12(\"Russell\", \"Ronald\").","- P13(\"Angela\", \"Tina\")."],"noiseless_rules":["- P8(V1, V2) :- - P0(V0, V3), - P1(V1, V2), not -P6(V2, V3).","- P0(V0, V3) :- - P2(V0, V2), - P13(V0, V3).","- P1(V1, V2) :- - P3(V0, V1), P4(V1, V2), not P7(V1, V2).","- P2(V0, V2) :- - P3(V0, V1), P4(V1, V2), not P7(V1, V2).","- P3(V0, V1) :- P5(V0, V1), P9(V0, V2).","P4(V1, V2) :- - P10(V1), - P11(V0, V1), - P12(V1, V2).","P5(V0, V1) :- - P10(V1), - P11(V0, V1), - P12(V1, V2).","P6(V1, V3) :- P5(V0, V1), - P13(V0, V3), not P14(V0, V1).","- P7(V1, V3) :- P5(V0, V1), - P13(V0, V3), not P14(V0, V1)."],"noisy_rules":{"a":["P8(V1, V2) :- - P4(V1, V2), not -P7(V1, V2).","P8(V1, V2) :- P2(V0, V2), P7(V1, V2)."],"b":["- P6(V2, V2) :- P8(V1, V2).","P13(V0, V3) :- P0(V0, V3), not -P3(V0, V1), P8(V1, V2)."],"c":["P10(V1) :- P0(V0, V3), - P4(V1, V2), - P6(V2, V3).","P3(V0, V1) :- P1(V1, V2), not -P2(V0, V2), - P5(V0, V1)."],"d":["P11(V2, V1) :- - P6(V2, V3), P7(V1, V2), not -P15(V1, V2).","P12(V1, V2) :- - P5(V0, V1), - P6(V2, V3), - P16(V0, V1)."],"e":["P17(V0, V1) :- P18(V0, V1), - P19(V0, V3).","- P22(V3) :- not -P20(V2), - P21(V2, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_65_7_6_6_7_0.5_1.0_3_2_3","seed":65,"num_facts":10,"num_rules":7,"num_related_predicates":17,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" P6(\"Robert\", \"Lindsey\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P7(\"Robert\", \"Lindsey\").","- P8(\"Robert\", \"Susan\").","- P9(\"Robert\", \"Susan\").","P10(\"Susan\", \"Kathleen\").","- P11(\"Robert\", \"Kathleen\").","P12(\"Kathleen\", \"Lindsey\").","- P13(\"Robert\", \"Lindsey\").","P14(\"Robert\", \"Lindsey\").","- P15(\"Robert\", \"Lindsey\").","P16(\"Robert\", \"Lindsey\")."],"noisy_facts":["P18(\"Robert\", \"Kathleen\").","P21(\"Susan\", \"Lindsey\").","- P17(\"Susan\", \"Kathleen\").","P20(\"Robert\", \"Lindsey\").","- P23(\"Kathleen\", \"Lindsey\")."],"min_fact_dicts_for_query":["P7(\"Robert\", \"Lindsey\").","- P15(\"Robert\", \"Lindsey\")."],"noiseless_rules":["- P6(V0, V3) :- - P1(V0, V2), - P15(V0, V3).","P0(V0, V3) :- P7(V0, V3), not P15(V0, V3), not -P16(V0, V3).","- P1(V0, V0) :- P0(V0, V1), not -P3(V0, V1), not P5(V0, V1).","- P2(V1, V2) :- - P8(V0, V1), - P11(V0, V2), P12(V2, V3).","P3(V0, V1) :- - P9(V0, V1), - P13(V0, V3), not -P14(V0, V3).","- P4(V1, V2) :- P10(V1, V2).","- P5(V1, V1) :- - P2(V1, V2), not P4(V1, V2)."],"noisy_rules":{"a":["P6(V0, V2) :- P2(V1, V2), P5(V0, V1).","P6(V0, V1) :- not -P2(V1, V2), - P3(V0, V1), P4(V1, V2)."],"b":["- P7(V0, V3) :- P5(V0, V1), P6(V0, V3).","P5(V0, V0) :- P6(V0, V3)."],"c":["- P12(V2, V1) :- P2(V1, V2).","P8(V0, V1) :- - P3(V0, V1), P4(V1, V2), P5(V0, V1)."],"d":["P9(V2, V1) :- P4(V1, V2), - P17(V1, V2).","P11(V0, V2) :- P1(V0, V2), not -P18(V0, V2)."],"e":["P19(V0, V1) :- P20(V0, V3), P21(V1, V3).","- P22(V3) :- - P23(V2, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_89_9_10_9_12_0.5_1.0_3_2_3","seed":89,"num_facts":12,"num_rules":11,"num_related_predicates":23,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"P10(\"Teresa\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P11(\"Teresa\").","- P12(\"Sean\", \"Elizabeth\").","- P13(\"Jennifer\").","P14(\"Sean\", \"Teresa\").","P15(\"Teresa\", \"Elizabeth\").","P16(\"Sean\", \"Jennifer\").","- P17(\"Sean\", \"Jennifer\").","- P18(\"Teresa\", \"Elizabeth\").","P19(\"Teresa\", \"Elizabeth\").","P20(\"Teresa\", \"Jennifer\").","- P21(\"Sean\", \"Jennifer\").","- P22(\"Teresa\", \"Jennifer\")."],"noisy_facts":["- P26(\"Sean\", \"Elizabeth\").","P23(\"Sean\", \"Teresa\").","- P24(\"Sean\", \"Teresa\").","- P29(\"Sean\", \"Teresa\").","P27(\"Teresa\", \"Elizabeth\")."],"min_fact_dicts_for_query":["- P11(\"Teresa\").","- P13(\"Jennifer\").","P14(\"Sean\", \"Teresa\").","P15(\"Teresa\", \"Elizabeth\").","P19(\"Teresa\", \"Elizabeth\")."],"noiseless_rules":["P10(V1) :- - P1(V1, V2), P6(V1, V3), not -P7(V1, V3).","P0(V1, V1) :- - P1(V1, V2), not -P5(V1, V2), not P9(V1, V2).","- P1(V1, V2) :- - P11(V1), P14(V0, V1), P15(V1, V2).","- P2(V0, V2) :- - P11(V1), P14(V0, V1), P15(V1, V2).","P3(V2) :- - P12(V0, V2), - P21(V0, V3), - P22(V1, V3).","P4(V0, V3) :- - P12(V0, V2), - P21(V0, V3), - P22(V1, V3).","P5(V1, V2) :- - P1(V1, V2), not -P3(V2), not P18(V1, V2).","P6(V1, V3) :- - P13(V3), P19(V1, V2), not -P20(V1, V3).","P7(V1, V2) :- P0(V0, V1), - P2(V0, V2), not P8(V0, V1).","- P8(V0, V0) :- P4(V0, V3), not -P16(V0, V3), not P17(V0, V3).","- P9(V1, V3) :- P6(V1, V3)."],"noisy_rules":{"a":["- P10(V1) :- P1(V1, V2).","- P10(V1) :- - P4(V0, V3), - P5(V1, V2), not P7(V1, V3)."],"b":["P18(V1, V1) :- - P10(V1).","P21(V1, V3) :- - P5(V1, V2), - P6(V1, V3), - P10(V1)."],"c":["P22(V1, V1) :- P1(V1, V2).","P9(V1, V2) :- - P0(V0, V1), not -P1(V1, V2), - P3(V2)."],"d":["- P0(V0, V1) :- P23(V0, V1).","P22(V1, V1) :- P8(V0, V1), - P24(V0, V1)."],"e":["- P25(V2) :- - P26(V0, V2), P27(V1, V2).","P28(V1) :- - P29(V0, V1)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_3_8_10_10_11_0.5_1.0_5_2_3","seed":3,"num_facts":13,"num_rules":11,"num_related_predicates":24,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" cargo(\"Sarah\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- redtail(\"John\", \"Michael\").","field(\"John\", \"Sarah\").","- lens(\"Michael\").","- two_legged_animal(\"Michael\").","- army(\"John\", \"Arthur\").","sun_parlor(\"Michael\", \"Sarah\").","disco(\"Arthur\", \"Sarah\").","- manufacturing(\"John\", \"Michael\").","briefcase(\"John\", \"Michael\").","- thrush(\"John\", \"Michael\").","- land_mine(\"John\", \"Michael\").","- course(\"Michael\", \"Sarah\").","keeping_animals_warm(\"Arthur\", \"Sarah\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- redtail(\"John\", \"Michael\").","field(\"John\", \"Sarah\").","- lens(\"Michael\").","- two_legged_animal(\"Michael\").","- army(\"John\", \"Arthur\").","sun_parlor(\"Michael\", \"Sarah\").","- course(\"Michael\", \"Sarah\").","keeping_animals_warm(\"Arthur\", \"Sarah\")."],"noiseless_rules":["- cargo(V3) :- stroma(V3), kibble(V0, V1), variable(V0, V2), not traveling_on_snow(V2, V3).","stroma(V3) :- - gentle(V0), students_to_socialize_in(V0, V3), - sanguine(V2, V3).","kibble(V0, V1) :- - redtail(V0, V1).","- gentle(V0) :- - redtail(V0, V1).","variable(V0, V2) :- - gelignite(V0, V2).","students_to_socialize_in(V0, V3) :- field(V0, V3), - course(V1, V3), keeping_animals_warm(V2, V3).","- traveling_on_snow(V2, V3) :- - lens(V1), - two_legged_animal(V1), - army(V0, V2), sun_parlor(V1, V3), not -disco(V2, V3).","- sanguine(V2, V3) :- - lens(V1), - two_legged_animal(V1), - army(V0, V2), sun_parlor(V1, V3), not -disco(V2, V3).","- kapok(V0, V1) :- - lens(V1), - two_legged_animal(V1), - army(V0, V2), sun_parlor(V1, V3), not -disco(V2, V3).","- radio(V0, V1) :- - kapok(V0, V1), not land_mine(V0, V1).","- gelignite(V0, V0) :- - radio(V0, V1), not manufacturing(V0, V1), not -briefcase(V0, V1), not thrush(V0, V1), not land_mine(V0, V1)."],"noisy_rules":{}},"num_min_facts_for_query":8,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_18_9_9_5_6_0.5_1.0_5_1_2","seed":18,"num_facts":9,"num_rules":10,"num_related_predicates":19,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" possum(\"Samantha\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["common_denominator(\"Lori\").","- orange(\"Lori\").","dark_eyed_junco(\"Samantha\").","borrow_money_from_parents(\"Samantha\").","vicar(\"Samantha\").","- ephemerid(\"Samantha\").","- storing_data(\"Samantha\").","- maximizing_use_of_sunlight(\"Samantha\").","ocean_current(\"Samantha\")."],"noisy_facts":["- isotope(\"Lori\").","gilt.","fourth_dimension.","- catch_crop(\"Lori\").","- tendon(\"Samantha\").","- rand(\"Samantha\").","- preventing_cancer.","- butterflies(\"Samantha\").","ewe(\"Lori\").","tete_tete(\"Lori\").","- atms(\"Samantha\").","- marrow(\"Samantha\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- possum(V0) :- budgerigar(V0), not few(V0).","pail(V2) :- body_building(V2), not -common_denominator(V2).","budgerigar(V0) :- tunnel(V0), not most_humans(V0).","body_building(V2) :- - orange(V2).","tunnel(V2) :- pail(V2), not -body_building(V2).","meeting(V2) :- pail(V2), not -body_building(V2).","- most_humans(V0) :- meeting(V0), not horizontal_stabilizer(V0).","- horizontal_stabilizer(V0) :- dark_eyed_junco(V0), not -vicar(V0), not ephemerid(V0), not storing_data(V0), not maximizing_use_of_sunlight(V0).","- few(V0) :- light_fog(V0).","light_fog(V0) :- borrow_money_from_parents(V0), not -ocean_current(V0)."],"noisy_rules":{"a":["possum(V0) :- - pail(V2), - body_building(V2), - tunnel(V0), not meeting(V0), not -most_humans(V0).","possum(V0) :- - budgerigar(V0), not tunnel(V0), - meeting(V0), few(V0)."],"b":["horizontal_stabilizer(V0) :- - body_building(V2), not light_fog(V0), possum(V0).","orange(V0) :- - budgerigar(V0), possum(V0)."],"c":["- dark_eyed_junco(V2) :- - pail(V2).","- budgerigar(V0) :- - pail(V2), - tunnel(V0), not meeting(V0), not -few(V0)."],"d":["orange(V2) :- - budgerigar(V0), - body_building(V2), not -most_humans(V0), not -few(V0), not preventing_cancer.","- body_building(V0) :- - meeting(V0), not -horizontal_stabilizer(V0), not light_fog(V0), fourth_dimension, not -gilt."],"e":["- warhead(V0) :- not butterflies(V0), not rand(V0), not tendon(V0), - marrow(V0), not atms(V0).","- ectoplasm(V2) :- not -tete_tete(V2), - catch_crop(V2), not isotope(V2), ewe(V2)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_84_8_10_6_9_0.5_1.0_3_3_4","seed":84,"num_facts":8,"num_rules":11,"num_related_predicates":19,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"unit_character(\"Kari\", \"Sonya\", \"Rachel\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["black(\"Sonya\", \"Rachel\").","edible_snail(\"Joshua\", \"Sonya\", \"Rachel\").","highchair(\"Melissa\", \"Kari\", \"Sonya\").","anklebone(\"Joshua\", \"Sonya\", \"Rachel\").","saint(\"Melissa\", \"Kari\", \"Sonya\").","burn(\"Melissa\", \"Kari\", \"Joshua\").","wave_hands(\"Kari\", \"Joshua\", \"Rachel\").","pets_sometimes_when_with_people(\"Joshua\", \"Sonya\", \"Rachel\")."],"noisy_facts":[],"min_fact_dicts_for_query":["black(\"Sonya\", \"Rachel\").","edible_snail(\"Joshua\", \"Sonya\", \"Rachel\").","highchair(\"Melissa\", \"Kari\", \"Sonya\").","anklebone(\"Joshua\", \"Sonya\", \"Rachel\").","saint(\"Melissa\", \"Kari\", \"Sonya\").","burn(\"Melissa\", \"Kari\", \"Joshua\").","wave_hands(\"Kari\", \"Joshua\", \"Rachel\").","pets_sometimes_when_with_people(\"Joshua\", \"Sonya\", \"Rachel\")."],"noiseless_rules":["unit_character(V1, V3, V4) :- moray(V1, V2), lying(V3, V4), wave_hands(V1, V2, V4).","robe(V2, V3, V4) :- southwest(V2), classwork(V1, V2), pets_sometimes_when_with_people(V2, V3, V4).","destroy_all_things(V4, V1, V2) :- machine(V1, V2, V4), wave_hands(V1, V2, V4).","moray(V1, V2) :- black(V3, V4), highchair(V0, V1, V3), anklebone(V2, V3, V4).","southwest(V2) :- black(V3, V4), highchair(V0, V1, V3), anklebone(V2, V3, V4).","answer_questions(V0, V1, V3) :- black(V3, V4), highchair(V0, V1, V3), anklebone(V2, V3, V4).","weapon(V1, V3) :- answer_questions(V0, V1, V3), berry(V0, V1, V3), saint(V0, V1, V3).","machine(V1, V2, V4) :- robe(V2, V3, V4), weapon(V1, V3).","classwork(V4, V2) :- edible_snail(V2, V3, V4), pets_sometimes_when_with_people(V2, V3, V4).","berry(V3, V4, V3) :- edible_snail(V2, V3, V4), pets_sometimes_when_with_people(V2, V3, V4).","lying(V3, V4) :- robe(V2, V3, V4), destroy_all_things(V0, V1, V2), burn(V0, V1, V2)."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_43_9_10_9_10_0.5_1.0_3_2_3","seed":43,"num_facts":13,"num_rules":11,"num_related_predicates":24,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" small_indefinite_quantity(\"Wendy\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- girl_child(\"Wendy\", \"Stephen\").","- red(\"Wendy\", \"Robert\").","bed(\"Wendy\", \"Robert\").","fairy_tale_for_adults(\"Wendy\", \"Yvonne\").","- bomb(\"Stephen\", \"Robert\").","- scale(\"Stephen\", \"Robert\").","purplish_blue(\"Yvonne\", \"Stephen\").","- bird(\"Yvonne\", \"Robert\").","- dais(\"Yvonne\", \"Stephen\").","- meal(\"Yvonne\", \"Robert\").","- defecation(\"Yvonne\").","- scratch_glass(\"Yvonne\").","shade_sun(\"Stephen\", \"Robert\")."],"noisy_facts":["- poop(\"Wendy\", \"Robert\").","- crowd(\"Stephen\").","- prehensor(\"Wendy\", \"Stephen\").","auscultation(\"Wendy\").","swimming_kick(\"Yvonne\", \"Stephen\").","- serve_humanity(\"Yvonne\", \"Stephen\")."],"min_fact_dicts_for_query":["- red(\"Wendy\", \"Robert\").","fairy_tale_for_adults(\"Wendy\", \"Yvonne\").","purplish_blue(\"Yvonne\", \"Stephen\").","- dais(\"Yvonne\", \"Stephen\").","- meal(\"Yvonne\", \"Robert\")."],"noiseless_rules":["- small_indefinite_quantity(V0) :- macula(V0, V1), - helping(V0, V3).","geographical_area(V2) :- device(V0, V2), - girl_child(V0, V2), shade_sun(V2, V3).","second_joint(V0, V2) :- - red(V0, V3), purplish_blue(V1, V2), not bird(V1, V3).","- dark_meat(V1) :- - red(V0, V3), purplish_blue(V1, V2), not bird(V1, V3).","device(V0, V2) :- bed(V0, V3), - bomb(V2, V3), not scale(V2, V3).","fish(V2, V3) :- bed(V0, V3), - bomb(V2, V3), not scale(V2, V3).","macula(V0, V1) :- fairy_tale_for_adults(V0, V1), - dais(V1, V2), - meal(V1, V3).","- wing(V0) :- device(V0, V2), not -chicken_wing(V0, V2).","chicken_wing(V3, V2) :- geographical_area(V2), fish(V2, V3).","- helping(V0, V2) :- second_joint(V0, V2), not wing(V0), not -piece(V0).","piece(V1) :- - dark_meat(V1), not defecation(V1), not scratch_glass(V1)."],"noisy_rules":{"a":["small_indefinite_quantity(V0) :- - fish(V2, V3), - macula(V0, V1).","small_indefinite_quantity(V0) :- helping(V0, V3)."],"b":["bird(V1, V2) :- - second_joint(V0, V2), dark_meat(V1), small_indefinite_quantity(V0).","wing(V0) :- small_indefinite_quantity(V0)."],"c":["meal(V2, V3) :- - second_joint(V0, V2), not -wing(V0), helping(V0, V3).","helping(V0, V2) :- - second_joint(V0, V2), wing(V0)."],"d":["defecation(V3) :- not -wing(V0), helping(V0, V3), auscultation(V0).","defecation(V3) :- not -helping(V0, V3), - poop(V0, V3)."],"e":["- launching_shuttles(V2) :- not serve_humanity(V1, V2), swimming_kick(V1, V2).","throng(V0, V2) :- - crowd(V2), - prehensor(V0, V2)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_62_8_11_9_11_0.5_1.0_3_1_2","seed":62,"num_facts":11,"num_rules":12,"num_related_predicates":23,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":12,"target_query":" ammunition(\"William\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["grandfather_clock(\"Keith\").","- death_camp.","- swage_block.","- day_camp.","- work_camp.","shrapnel(\"Keith\").","sliding_seat(\"Keith\").","wing_nut(\"William\").","- film_company(\"William\").","- balloon_bomb.","- fall."],"noisy_facts":["jacket.","- army_ant(\"Keith\").","- screw(\"Keith\").","wood_ant(\"Keith\").","variable_pitch_propeller(\"Keith\").","- dumb_bomb.","hub(\"Keith\")."],"min_fact_dicts_for_query":["- death_camp.","wing_nut(\"William\")."],"noiseless_rules":["- ammunition(V2) :- - powder_and_shot(V2), not -housing(V2), not -round(V2).","shell(V0) :- grandfather_clock(V0), not -shrapnel(V0), not -sliding_seat(V0).","- powder_and_shot(V2) :- - weaponry(V2), not -wing_nut(V2), not film_company(V2).","housing(V0) :- shell(V0), not -camp(V0), not -block(V0).","- concentration_camp(V2) :- - death_camp, wing_nut(V2), not balloon_bomb.","nut(V2) :- - death_camp, wing_nut(V2), not balloon_bomb.","- bomb(V2) :- - death_camp, wing_nut(V2), not balloon_bomb.","- weaponry(V1) :- - concentration_camp(V1), not day_camp, not work_camp.","camp(V1) :- - concentration_camp(V1), not day_camp, not work_camp.","domino(V1) :- - concentration_camp(V1), not day_camp, not work_camp.","block(V2) :- nut(V2), not -domino(V2), not swage_block.","round(V1) :- - bomb(V1), not balloon_bomb, not fall."],"noisy_rules":{"a":["ammunition(V2) :- powder_and_shot(V2), - housing(V2), concentration_camp(V1).","ammunition(V2) :- - shell(V0), - housing(V2), - round(V2)."],"b":["work_camp(V2) :- - domino(V2), not -ammunition(V2).","weaponry(V2) :- not -powder_and_shot(V2), bomb(V1), ammunition(V2)."],"c":["- grandfather_clock(V0) :- - shell(V0), not camp(V0).","film_company(V2) :- - nut(V2)."],"d":["- shell(V2) :- concentration_camp(V1), - nut(V2), jacket.","bomb(V2) :- weaponry(V2), not dumb_bomb."],"e":["- ant(V0) :- not -wood_ant(V0), - army_ant(V0).","- propeller(V0) :- hub(V0), not -variable_pitch_propeller(V0), not screw(V0)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_51_5_7_2_3_0.5_1.0_5_3_4","seed":51,"num_facts":3,"num_rules":8,"num_related_predicates":11,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" wood(\"Michael\", \"Frank\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- bat(\"Michael\", \"Anthony\").","- tennis_ball(\"Anthony\", \"Frank\", \"Michelle\").","- baseball(\"Anthony\", \"Frank\", \"Michelle\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- bat(\"Michael\", \"Anthony\").","- tennis_ball(\"Anthony\", \"Frank\", \"Michelle\")."],"noiseless_rules":["- wood(V0, V3) :- - hitting(V3, V4), oak(V0, V2, V4).","- hitting(V3, V4) :- - bat(V0, V1), - tennis_ball(V1, V3, V4), not baseball(V1, V3, V4).","- bouncing(V0, V1, V4) :- - bat(V0, V1), - tennis_ball(V1, V3, V4), not baseball(V1, V3, V4).","- bird(V0, V1) :- - bat(V0, V1), - tennis_ball(V1, V3, V4), not baseball(V1, V3, V4).","acorn(V0, V3) :- - bat(V0, V1), - tennis_ball(V1, V3, V4), not baseball(V1, V3, V4).","vegetarians(V0, V1, V4) :- - bouncing(V0, V1, V4).","- jack_oak(V0, V4) :- - bouncing(V0, V1, V4), not bird(V0, V1), not -vegetarians(V0, V1, V4).","oak(V0, V3, V4) :- acorn(V0, V3), - jack_oak(V0, V4)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_31_9_9_9_11_0.5_1.0_3_2_3","seed":31,"num_facts":13,"num_rules":10,"num_related_predicates":23,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" covering(\"Nicholas\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["surface(\"Austin\").","region(\"Nicholas\", \"Austin\").","asthenosphere(\"Nicholas\", \"Austin\").","- clitoris(\"Austin\").","- plate(\"Nicholas\", \"Austin\").","tartar(\"Nicholas\", \"Austin\").","- natural_object(\"Austin\").","contest(\"Austin\").","- sao_goncalo(\"Nicholas\").","channel(\"Nicholas\", \"Nina\").","- backwater(\"Nicholas\", \"Nina\").","- loch(\"Nicholas\", \"Nina\").","sense_light(\"Austin\")."],"noisy_facts":["circle_of_curvature(\"Nicholas\").","- exosphere(\"Austin\", \"Micheal\").","measure(\"Austin\").","- wish(\"Austin\", \"Micheal\").","double_salt(\"Nicholas\", \"Austin\").","most_humans(\"Nicholas\", \"Micheal\")."],"min_fact_dicts_for_query":["surface(\"Austin\").","asthenosphere(\"Nicholas\", \"Austin\")."],"noiseless_rules":["- covering(V0) :- layer(V0, V1), crust(V1, V3), not thing(V1, V3).","layer(V0, V1) :- surface(V1), asthenosphere(V0, V1).","lake(V0, V3) :- - inlet(V1), lagoon(V0, V1), - loch(V0, V3).","body_of_water(V0) :- lake(V0, V3), not -channel(V0, V3), not backwater(V0, V3).","lithosphere(V1) :- region(V0, V1).","crust(V1, V0) :- asthenosphere(V0, V1), not plate(V0, V1), not -tartar(V0, V1).","- thing(V0, V0) :- body_of_water(V0), not -carpet(V0), not sao_goncalo(V0).","- inlet(V1) :- lithosphere(V1), not natural_object(V1), not -contest(V1).","carpet(V1) :- lithosphere(V1), not natural_object(V1), not -contest(V1).","lagoon(V1, V1) :- - clitoris(V1), not -contest(V1), not -sense_light(V1)."],"noisy_rules":{"a":["covering(V1) :- inlet(V1).","covering(V1) :- - crust(V1, V3)."],"b":["- region(V0, V1) :- - layer(V0, V1), not -covering(V0).","natural_object(V0) :- - carpet(V0), not -covering(V0)."],"c":["natural_object(V1) :- - lake(V0, V3), inlet(V1).","- lithosphere(V1) :- - layer(V0, V1), not lake(V0, V3), - crust(V1, V3)."],"d":["- surface(V1) :- - body_of_water(V0), - lithosphere(V1), not -circle_of_curvature(V0).","loch(V0, V0) :- - lagoon(V0, V1), double_salt(V0, V1)."],"e":["- similar_awareness_of_time(V1) :- most_humans(V0, V2), - wish(V1, V2).","atmosphere(V2) :- measure(V1), - exosphere(V1, V2)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_66_7_9_9_12_0.5_1.0_5_2_3","seed":66,"num_facts":13,"num_rules":10,"num_related_predicates":23,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" shoreline(\"Sean\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- carbon_atom(\"Jacqueline\", \"Sean\").","- beat(\"Sean\").","teaching_children_how_food_grown(\"Jacqueline\", \"Dustin\").","tomato.","pitahaya(\"Marco\", \"Dustin\").","- handful(\"Sean\").","- hakka(\"Dustin\").","- pat(\"Jacqueline\", \"Sean\").","- picture_book(\"Jacqueline\", \"Dustin\").","- membrane_bone(\"Jacqueline\", \"Dustin\").","- discourtesy(\"Jacqueline\", \"Dustin\").","black_backed_gull(\"Jacqueline\", \"Dustin\").","success(\"Jacqueline\", \"Dustin\")."],"noisy_facts":["- dolphin(\"Jacqueline\", \"Dustin\").","food_preparation(\"Jacqueline\", \"Sean\").","- under_tree(\"Marco\", \"Dustin\").","equator(\"Jacqueline\", \"Sean\").","serving_justice(\"Jacqueline\", \"Sean\").","ascend(\"Jacqueline\", \"Sean\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- shoreline(V1) :- - penetration_bomb(V1), - salt_pork(V2), crush(V2), - fall_off_trees(V1, V2), pitahaya(V2, V3).","- penetration_bomb(V1) :- - carbon_atom(V0, V1), success(V0, V3).","- car(V0, V3) :- - carbon_atom(V0, V1), success(V0, V3).","electron(V0, V0) :- - car(V0, V3), not -separating_words(V0, V3), not membrane_bone(V0, V3), not discourtesy(V0, V3), not -black_backed_gull(V0, V3).","collection(V0, V1) :- - beat(V1), - handful(V1), - hakka(V3), - pat(V0, V1), not picture_book(V0, V3).","- salt_pork(V2) :- teaching_children_how_food_grown(V0, V3), pitahaya(V2, V3), not picture_book(V0, V3).","separating_words(V0, V3) :- teaching_children_how_food_grown(V0, V3), pitahaya(V2, V3), not picture_book(V0, V3).","crush(V2) :- electron(V1, V2), collection(V0, V1), not -write_on(V0, V1).","- fall_off_trees(V1, V1) :- - beat(V1), not -tomato.","write_on(V1, V1) :- - beat(V1), not -tomato."],"noisy_rules":{"a":["shoreline(V1) :- penetration_bomb(V1).","shoreline(V1) :- car(V0, V3), - electron(V1, V2)."],"b":["- electron(V1, V1) :- shoreline(V1).","discourtesy(V0, V3) :- penetration_bomb(V1), - collection(V0, V1), - separating_words(V0, V3), - crush(V2), not -shoreline(V1)."],"c":["beat(V1) :- car(V0, V3), not electron(V1, V2), not -salt_pork(V2), fall_off_trees(V1, V2).","discourtesy(V0, V3) :- penetration_bomb(V1), salt_pork(V2), - separating_words(V0, V3)."],"d":["fall_off_trees(V1, V2) :- car(V0, V3), not collection(V0, V1), salt_pork(V2), ascend(V0, V1), serving_justice(V0, V1).","- separating_words(V0, V0) :- - write_on(V0, V1), not -food_preparation(V0, V1)."],"e":["- cadaver(V2, V3) :- - under_tree(V2, V3).","bacteria(V3) :- equator(V0, V1), - dolphin(V0, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_65_10_12_6_8_0.5_1.0_3_2_3","seed":65,"num_facts":9,"num_rules":13,"num_related_predicates":22,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.7777777777777777,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"inhabitant(\"Catherine\", \"Kathleen\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["plural_of_pet(\"Catherine\", \"Kathleen\").","salmon(\"Brittany\", \"Kathleen\").","safety(\"Nicole\").","no_mans_land(\"Catherine\", \"Kathleen\").","high_country(\"Nicole\", \"Kathleen\").","granite_stater(\"Catherine\", \"Nicole\").","franco_american(\"Nicole\", \"Kathleen\").","gluteus(\"Catherine\", \"Kathleen\").","tentaculata(\"Catherine\", \"Kathleen\")."],"noisy_facts":[],"min_fact_dicts_for_query":["plural_of_pet(\"Catherine\", \"Kathleen\").","salmon(\"Brittany\", \"Kathleen\").","safety(\"Nicole\").","no_mans_land(\"Catherine\", \"Kathleen\").","high_country(\"Nicole\", \"Kathleen\").","granite_stater(\"Catherine\", \"Nicole\").","franco_american(\"Nicole\", \"Kathleen\").","gluteus(\"Catherine\", \"Kathleen\").","tentaculata(\"Catherine\", \"Kathleen\")."],"noiseless_rules":["inhabitant(V0, V3) :- region(V3), american(V0, V2), chromatic_color(V0, V3).","region(V3) :- layer(V3), area(V0, V3), outside(V1, V3).","layer(V3) :- asthenosphere(V1, V3).","crust(V1, V3) :- asthenosphere(V1, V3).","asthenosphere(V3, V3) :- ringer(V0, V3), area(V0, V3).","american(V0, V2) :- beaver(V0, V1), granite_stater(V0, V2), franco_american(V2, V3).","ringer(V0, V3) :- plural_of_pet(V0, V3).","chromatic_color(V3, V3) :- asthenosphere(V1, V3), salmon(V1, V3).","area(V0, V3) :- safety(V2), no_mans_land(V0, V3), high_country(V2, V3).","go_fast(V0, V3) :- safety(V2), no_mans_land(V0, V3), high_country(V2, V3).","beaver(V0, V0) :- go_fast(V0, V3), gluteus(V0, V3), tentaculata(V0, V3).","bagel(V3) :- go_fast(V0, V3), gluteus(V0, V3), tentaculata(V0, V3).","outside(V1, V3) :- crust(V1, V3), bagel(V1)."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_59_5_7_1_4_0.5_1.0_5_2_3","seed":59,"num_facts":3,"num_rules":8,"num_related_predicates":11,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"carp(\"Brian\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- category(\"Steve\", \"Benjamin\").","- pleasing(\"Steve\", \"Benjamin\").","- highway(\"Steve\", \"Brian\")."],"noisy_facts":["nonpareil(\"Christopher\", \"Benjamin\").","- relaxing_with_friends(\"Steve\", \"Brian\").","- roads(\"Steve\", \"Benjamin\").","- sparrow(\"Steve\").","- lake(\"Steve\").","palestine(\"Christopher\", \"Benjamin\").","restaurant(\"Steve\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["carp(V3) :- army(V0), - stop(V2), - tanager(V3), not unnilhexium(V0, V2), not highway(V0, V3).","army(V0) :- - category(V0, V2).","- golden_retriever(V0, V2) :- - category(V0, V2).","- prosthion(V0) :- - category(V0, V2).","- stop(V2) :- - category(V0, V2), not pleasing(V0, V2).","- feel_good(V2) :- - category(V0, V2), not pleasing(V0, V2).","- tanager(V1) :- - golden_retriever(V1, V2), not feel_good(V2).","- unnilhexium(V0, V2) :- - prosthion(V0), - feel_good(V2), not pleasing(V0, V2)."],"noisy_rules":{"a":["- carp(V3) :- - army(V0), tanager(V3).","- carp(V3) :- - army(V0), feel_good(V2), tanager(V3)."],"b":["feel_good(V2) :- golden_retriever(V1, V2), prosthion(V0), feel_good(V2), unnilhexium(V0, V2), - carp(V3).","golden_retriever(V1, V2) :- - army(V0), golden_retriever(V1, V2), - carp(V3)."],"c":["highway(V0, V2) :- unnilhexium(V0, V2).","prosthion(V0) :- - army(V0), golden_retriever(V1, V2), feel_good(V2), tanager(V3), not -unnilhexium(V0, V2)."],"d":["feel_good(V0) :- prosthion(V0).","whole(V0) :- - army(V0), not sparrow(V0)."],"e":["- bone(V1, V2) :- - lake(V0), restaurant(V0), - roads(V0, V2), - relaxing_with_friends(V0, V3), palestine(V1, V2).","better_snack_than_candy(V2) :- nonpareil(V1, V2)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_21_8_11_6_9_0.5_1.0_5_2_3","seed":21,"num_facts":9,"num_rules":12,"num_related_predicates":21,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8571428571428572,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" volunteer(\"Adam\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- cut_steel(\"Linda\").","subdivision(\"Allison\", \"Linda\").","- bladder(\"Kristin\", \"Adam\").","saucer(\"Allison\", \"Adam\").","feeding_school_children(\"Allison\", \"Adam\").","- bodily_process(\"Kristin\", \"Adam\").","- hear(\"Kristin\", \"Linda\").","overgarment(\"Kristin\", \"Linda\").","iroquoian(\"Adam\", \"Linda\")."],"noisy_facts":["- preacher(\"Kristin\", \"Adam\").","teaspoon(\"Allison\", \"Kristin\").","- flesh(\"Allison\", \"Linda\").","back(\"Kristin\", \"Linda\").","sailor(\"Allison\", \"Kristin\")."],"min_fact_dicts_for_query":["- cut_steel(\"Linda\").","subdivision(\"Allison\", \"Linda\").","saucer(\"Allison\", \"Adam\").","feeding_school_children(\"Allison\", \"Adam\").","- bodily_process(\"Kristin\", \"Adam\").","overgarment(\"Kristin\", \"Linda\").","iroquoian(\"Adam\", \"Linda\")."],"noiseless_rules":["- volunteer(V2) :- outgo(V1), - jackdaw(V0, V3), - backpack(V1, V2), not ostrich(V1, V3), not -maturity(V1, V3).","outgo(V1) :- tuareg(V0, V1), - delicious(V0, V3), not delaware(V0, V3).","- jackdaw(V0, V3) :- - cut_steel(V3), saucer(V0, V2), feeding_school_children(V0, V2), - bodily_process(V1, V2), not hear(V1, V3).","tuareg(V0, V1) :- - cut_steel(V3), saucer(V0, V2), feeding_school_children(V0, V2), - bodily_process(V1, V2), not hear(V1, V3).","food_holder(V0, V1) :- - cut_steel(V3), saucer(V0, V2), feeding_school_children(V0, V2), - bodily_process(V1, V2), not hear(V1, V3).","- delicious(V0, V0) :- tuareg(V0, V1), not -throat(V0, V1).","- backpack(V1, V2) :- subdivision(V0, V3), overgarment(V1, V3), iroquoian(V2, V3).","- delaware(V0, V3) :- subdivision(V0, V3), overgarment(V1, V3), iroquoian(V2, V3).","throat(V0, V1) :- subdivision(V0, V3), overgarment(V1, V3), iroquoian(V2, V3).","- ostrich(V1, V1) :- - backpack(V1, V2), not call(V1, V2).","maturity(V1, V3) :- food_holder(V0, V1), overgarment(V1, V3).","- call(V1, V2) :- - bladder(V1, V2)."],"noisy_rules":{"a":["volunteer(V0) :- - tuareg(V0, V1), not food_holder(V0, V1).","volunteer(V1) :- - outgo(V1)."],"b":["bodily_process(V1, V2) :- - maturity(V1, V3), volunteer(V2).","- saucer(V1, V2) :- - maturity(V1, V3), volunteer(V2)."],"c":["call(V1, V1) :- - tuareg(V0, V1), - food_holder(V0, V1), delicious(V0, V3), not -delaware(V0, V3).","cut_steel(V3) :- - outgo(V1), delicious(V0, V3), not maturity(V1, V3)."],"d":["- throat(V0, V1) :- jackdaw(V0, V3), - food_holder(V0, V1), delicious(V0, V3), ostrich(V1, V3), teaspoon(V0, V1).","backpack(V1, V3) :- not -ostrich(V1, V3), back(V1, V3)."],"e":["- gather_sticks_to_make_nest(V0, V3) :- - flesh(V0, V3).","presenter(V1, V2) :- sailor(V0, V1), - preacher(V1, V2)."]}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_75_10_15_11_13_0.5_1.0_5_3_4","seed":75,"num_facts":15,"num_rules":16,"num_related_predicates":31,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"kennel(\"Christina\", \"Rachel\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- backing(\"Brandi\", \"Christina\", \"Rachel\").","somewhere(\"Robert\", \"Rachel\").","four_tires(\"Robert\").","zygoma(\"Robert\", \"Brandi\", \"Christina\").","- girl_toy(\"Rachel\").","- topic(\"Brandi\", \"Christina\").","- mississippi(\"Christina\", \"Rachel\").","baseball(\"Brianna\", \"Robert\", \"Christina\").","- sleeping(\"Brandi\", \"Christina\").","- macadamia_nut(\"Brianna\", \"Robert\", \"Rachel\").","tires(\"Robert\", \"Brandi\", \"Christina\").","gross_estate(\"Robert\", \"Christina\", \"Rachel\").","- brain(\"Robert\", \"Brandi\", \"Christina\").","form_of_public_transportation(\"Robert\", \"Brandi\", \"Christina\").","- accounting(\"Robert\", \"Brandi\", \"Christina\")."],"noisy_facts":["footwear(\"Robert\").","- newborn(\"Robert\", \"Brandi\", \"Christina\").","chicken_brest(\"Christina\", \"Rachel\").","bone(\"Robert\", \"Christina\", \"Rachel\")."],"min_fact_dicts_for_query":["- backing(\"Brandi\", \"Christina\", \"Rachel\").","somewhere(\"Robert\", \"Rachel\").","- sleeping(\"Brandi\", \"Christina\").","- macadamia_nut(\"Brianna\", \"Robert\", \"Rachel\")."],"noiseless_rules":["kennel(V3, V4) :- seat_cushion(V3, V4), cup_of_tea(V0, V2, V4), not disk(V0, V2, V4).","seat_cushion(V3, V4) :- - backing(V2, V3, V4).","in_traffic_jam(V2, V4) :- - backing(V2, V3, V4).","- breast(V1) :- somewhere(V1, V4), - sleeping(V2, V3), - macadamia_nut(V0, V1, V4), not -tires(V1, V2, V3), not -gross_estate(V1, V3, V4).","taste_food(V1, V3, V4) :- somewhere(V1, V4), - sleeping(V2, V3), - macadamia_nut(V0, V1, V4), not -tires(V1, V2, V3), not -gross_estate(V1, V3, V4).","- creation(V2, V3, V4) :- somewhere(V1, V4), - sleeping(V2, V3), - macadamia_nut(V0, V1, V4), not -tires(V1, V2, V3), not -gross_estate(V1, V3, V4).","not_(V0, V1, V3) :- somewhere(V1, V4), - sleeping(V2, V3), - macadamia_nut(V0, V1, V4), not -tires(V1, V2, V3), not -gross_estate(V1, V3, V4).","let_fall(V1, V2, V3) :- somewhere(V1, V4), - sleeping(V2, V3), - macadamia_nut(V0, V1, V4), not -tires(V1, V2, V3), not -gross_estate(V1, V3, V4).","cup_of_tea(V4, V3, V4) :- - breast(V1), taste_food(V1, V3, V4), not -sit_down(V1), not tick(V1).","- store_tuna(V1, V1, V3) :- taste_food(V1, V3, V4).","- money_building(V1, V4, V3) :- taste_food(V1, V3, V4).","sit_down(V1) :- in_traffic_jam(V2, V4), - creation(V2, V3, V4), - store_tuna(V1, V2, V3), not confit(V1, V2, V3).","- disk(V0, V2, V0) :- not_(V0, V1, V3), - money_building(V1, V2, V3).","- confit(V1, V2, V3) :- let_fall(V1, V2, V3), not canarys(V1, V2, V3).","- canarys(V1, V2, V3) :- four_tires(V1), - girl_toy(V4), - topic(V2, V3), - mississippi(V3, V4), baseball(V0, V1, V3).","- tick(V1) :- zygoma(V1, V2, V3), not -tires(V1, V2, V3), not brain(V1, V2, V3), not -form_of_public_transportation(V1, V2, V3), not accounting(V1, V2, V3)."],"noisy_rules":{"a":["- kennel(V3, V4) :- breast(V1), - taste_food(V1, V3, V4), money_building(V1, V2, V3), not -canarys(V1, V2, V3).","- kennel(V3, V4) :- - seat_cushion(V3, V4), disk(V0, V2, V4), confit(V1, V2, V3)."],"b":["- not_(V0, V1, V3) :- - cup_of_tea(V0, V2, V4), - sit_down(V1), disk(V0, V2, V4), tick(V1), - kennel(V3, V4).","breast(V1) :- store_tuna(V1, V2, V3), not sit_down(V1), - kennel(V3, V4)."],"c":["- form_of_public_transportation(V3, V2, V3) :- - in_traffic_jam(V2, V4), creation(V2, V3, V4), disk(V0, V2, V4).","store_tuna(V1, V2, V3) :- creation(V2, V3, V4), not -money_building(V1, V2, V3), confit(V1, V2, V3)."],"d":["- somewhere(V1, V1) :- not -store_tuna(V1, V2, V3), - newborn(V1, V2, V3).","topic(V2, V3) :- creation(V2, V3, V4), not -tick(V1), footwear(V1)."],"e":["- raceway(V3, V4) :- chicken_brest(V3, V4).","combustible(V1, V3, V4) :- bone(V1, V3, V4)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_38_10_15_14_16_0.5_1.0_5_3_4","seed":38,"num_facts":18,"num_rules":16,"num_related_predicates":34,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.2222222222222223,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":"cob(\"Bradley\", \"Jorge\", \"Jessica\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- high_walls(\"Nancy\", \"Jorge\", \"Jessica\").","well(\"Nancy\").","- crops(\"Joseph\", \"Nancy\", \"Jessica\").","watching_musician_perform(\"Nancy\", \"Jorge\", \"Jessica\").","yukon(\"Nancy\", \"Jorge\", \"Jessica\").","- buying_hamburger(\"Nancy\", \"Jorge\", \"Jessica\").","- corner(\"Nancy\", \"Jorge\", \"Jessica\").","concern(\"Nancy\", \"Jorge\", \"Jessica\").","knight(\"Bradley\", \"Jorge\").","- brown_meat(\"Bradley\", \"Joseph\", \"Nancy\").","game_of_no_chance(\"Bradley\", \"Joseph\", \"Jorge\").","- worm(\"Bradley\", \"Joseph\", \"Jessica\").","item(\"Joseph\", \"Jorge\").","- commander(\"Joseph\", \"Jorge\").","- dirt(\"Joseph\", \"Jorge\").","- good_exercise(\"Joseph\", \"Jorge\").","- fins(\"Joseph\", \"Jorge\", \"Jessica\").","- bulletproof_vest(\"Joseph\", \"Jorge\", \"Jessica\")."],"noisy_facts":["hot_person(\"Bradley\", \"Nancy\", \"Jorge\").","- black_oak(\"Bradley\", \"Nancy\").","- meat(\"Bradley\", \"Joseph\").","- diestock(\"Nancy\", \"Jorge\", \"Jessica\").","- dualist(\"Bradley\", \"Nancy\").","digit(\"Bradley\", \"Jessica\").","circle_of_curvature(\"Joseph\", \"Jorge\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["cob(V0, V3, V4) :- razing(V0, V1), - often_home_to_mice(V0, V3), roof(V1, V2, V4), not -fly_little(V1, V2, V4).","- scops_owl(V2, V3, V4) :- - high_walls(V2, V3, V4).","- lepidosauria(V1, V3, V4) :- - driven_by_sails(V1, V4), carbonado(V0, V1, V4), landmass(V1, V2, V3), not -ordinary(V1, V2, V3).","razing(V0, V1) :- well(V2), knight(V0, V3), - brown_meat(V0, V1, V2), game_of_no_chance(V0, V1, V3), - worm(V0, V1, V4).","chickens(V1, V3) :- well(V2), knight(V0, V3), - brown_meat(V0, V1, V2), game_of_no_chance(V0, V1, V3), - worm(V0, V1, V4).","telling(V1, V2, V3) :- well(V2), knight(V0, V3), - brown_meat(V0, V1, V2), game_of_no_chance(V0, V1, V3), - worm(V0, V1, V4).","- often_home_to_mice(V3, V3) :- - lepidosauria(V1, V3, V4), not column(V1, V3, V4), not fins(V1, V3, V4), not bulletproof_vest(V1, V3, V4).","- driven_by_sails(V3, V4) :- - scops_owl(V2, V3, V4), not -susceptibility(V2, V3, V4), not stalk(V2, V3, V4), not buying_hamburger(V2, V3, V4).","roof(V1, V1, V1) :- chickens(V1, V3), not -item(V1, V3), not commander(V1, V3), not dirt(V1, V3), not good_exercise(V1, V3).","carbonado(V3, V1, V3) :- chickens(V1, V3), not -item(V1, V3), not commander(V1, V3), not dirt(V1, V3), not good_exercise(V1, V3).","susceptibility(V3, V3, V1) :- chickens(V1, V3), not -item(V1, V3), not commander(V1, V3), not dirt(V1, V3), not good_exercise(V1, V3).","- stalk(V2, V1, V4) :- fly_little(V1, V2, V4), not crops(V1, V2, V4).","landmass(V1, V2, V3) :- telling(V1, V2, V3).","fly_little(V4, V2, V4) :- watching_musician_perform(V2, V3, V4), not -yukon(V2, V3, V4), not buying_hamburger(V2, V3, V4), not corner(V2, V3, V4), not -concern(V2, V3, V4).","ordinary(V2, V2, V3) :- watching_musician_perform(V2, V3, V4), not -yukon(V2, V3, V4), not buying_hamburger(V2, V3, V4), not corner(V2, V3, V4), not -concern(V2, V3, V4).","- column(V3, V3, V4) :- watching_musician_perform(V2, V3, V4), not -yukon(V2, V3, V4), not buying_hamburger(V2, V3, V4), not corner(V2, V3, V4), not -concern(V2, V3, V4)."],"noisy_rules":{"a":["- cob(V2, V1, V4) :- - roof(V1, V2, V4).","- cob(V0, V3, V4) :- lepidosauria(V1, V3, V4), often_home_to_mice(V0, V3)."],"b":["- ordinary(V1, V2, V3) :- scops_owl(V2, V3, V4), - chickens(V1, V3), - susceptibility(V2, V3, V4), - fly_little(V1, V2, V4), - cob(V0, V3, V4).","- landmass(V1, V0, V3) :- lepidosauria(V1, V3, V4), - cob(V0, V3, V4)."],"c":["brown_meat(V0, V1, V2) :- - razing(V0, V1), stalk(V2, V3, V4).","- landmass(V1, V0, V4) :- - razing(V0, V1), - carbonado(V0, V1, V4)."],"d":["fins(V1, V3, V2) :- - landmass(V1, V2, V3).","dirt(V1, V0) :- - razing(V0, V1), not meat(V0, V1)."],"e":["- silo(V2, V4) :- - dualist(V0, V2), - black_oak(V0, V2), digit(V0, V4), circle_of_curvature(V1, V3), not -hot_person(V0, V2, V3).","letter(V2, V3, V4) :- - diestock(V2, V3, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_48_6_8_7_7_0.5_1.0_5_3_4","seed":48,"num_facts":9,"num_rules":9,"num_related_predicates":18,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"asia(\"Michael\", \"Elizabeth\", \"Craig\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["self_discovery(\"Deborah\").","estate(\"Michael\", \"Elizabeth\", \"Carol\").","- statement(\"Michael\", \"Craig\").","ford(\"Elizabeth\", \"Carol\").","- legs_6(\"Carol\", \"Craig\").","- ear(\"Elizabeth\", \"Deborah\", \"Carol\").","- liaodong_peninsula(\"Elizabeth\", \"Deborah\", \"Craig\").","inner_mongolia(\"Elizabeth\", \"Deborah\", \"Craig\").","bo_hai(\"Elizabeth\", \"Deborah\", \"Craig\")."],"noisy_facts":["respect(\"Deborah\", \"Carol\").","verse(\"Carol\").","- ruddy_duck(\"Elizabeth\", \"Deborah\").","sheldrake(\"Michael\", \"Deborah\", \"Craig\").","- brown_creeper(\"Michael\", \"Elizabeth\", \"Deborah\").","- P25(\"Michael\", \"Elizabeth\", \"Craig\").","eardrum(\"Elizabeth\", \"Deborah\").","- mandarin_duck(\"Michael\", \"Deborah\", \"Carol\")."],"min_fact_dicts_for_query":["self_discovery(\"Deborah\").","estate(\"Michael\", \"Elizabeth\", \"Carol\").","- statement(\"Michael\", \"Craig\").","ford(\"Elizabeth\", \"Carol\")."],"noiseless_rules":["asia(V0, V1, V4) :- - bhutan(V1, V2), china(V1, V4), - kuwait(V0, V1, V3).","- bhutan(V1, V2) :- - bangladesh(V3), - yemen(V1, V2), not -lebanon(V1, V2, V3).","- bangladesh(V3) :- self_discovery(V2), - statement(V0, V4), ford(V1, V3), not legs_6(V3, V4), not ear(V1, V2, V3).","- kyrgyzstan(V0, V1, V4) :- self_discovery(V2), - statement(V0, V4), ford(V1, V3), not legs_6(V3, V4), not ear(V1, V2, V3).","- tien_shan(V1, V2, V4) :- self_discovery(V2), - statement(V0, V4), ford(V1, V3), not legs_6(V3, V4), not ear(V1, V2, V3).","- yemen(V1, V4) :- - kyrgyzstan(V0, V1, V4).","china(V1, V4) :- - tien_shan(V1, V2, V4), not liaodong_peninsula(V1, V2, V4), not -inner_mongolia(V1, V2, V4), not -bo_hai(V1, V2, V4).","lebanon(V1, V2, V1) :- - tien_shan(V1, V2, V4), not liaodong_peninsula(V1, V2, V4), not -inner_mongolia(V1, V2, V4), not -bo_hai(V1, V2, V4).","- kuwait(V0, V1, V3) :- estate(V0, V1, V3)."],"noisy_rules":{"a":["- asia(V0, V1, V4) :- bangladesh(V3), kyrgyzstan(V0, V1, V4), yemen(V1, V2), - china(V1, V4), kuwait(V0, V1, V3).","- asia(V2, V1, V4) :- tien_shan(V1, V2, V4), - lebanon(V1, V2, V3)."],"b":["kyrgyzstan(V0, V1, V4) :- - asia(V0, V1, V4).","- inner_mongolia(V1, V4, V4) :- kyrgyzstan(V0, V1, V4), not asia(V0, V1, V4)."],"c":["statement(V0, V3) :- bangladesh(V3), - lebanon(V1, V2, V3), kuwait(V0, V1, V3).","- ford(V1, V3) :- bangladesh(V3), - lebanon(V1, V2, V3)."],"d":["tien_shan(V1, V2, V1) :- - lebanon(V1, V2, V3).","ear(V1, V2, V3) :- bhutan(V1, V2), yemen(V1, V2), - lebanon(V1, V2, V3), eardrum(V1, V2)."],"e":["- song(V1, V3) :- verse(V3), respect(V2, V3), - brown_creeper(V0, V1, V2).","duck(V0, V1, V4) :- - ruddy_duck(V1, V2), not P25(V0, V1, V4), - mandarin_duck(V0, V2, V3), sheldrake(V0, V2, V4)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_31_9_12_12_15_0.5_1.0_5_2_3","seed":31,"num_facts":15,"num_rules":13,"num_related_predicates":28,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"P12(\"John\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P13(\"John\").","- P14(\"John\", \"Evan\").","P15(\"Stanley\", \"Evan\").","- P16(\"Stanley\").","P17(\"Stanley\").","- P18(\"Stanley\").","- P19(\"Stanley\").","- P20(\"John\", \"Evan\").","P21(\"John\", \"Evan\").","P22(\"John\", \"Evan\").","- P23(\"John\", \"Evan\").","- P24(\"Anthony\").","- P25(\"John\", \"Anthony\").","P26(\"John\", \"Anthony\").","- P27(\"Stanley\", \"Anthony\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- P13(\"John\").","P15(\"Stanley\", \"Evan\").","- P24(\"Anthony\").","- P25(\"John\", \"Anthony\").","P26(\"John\", \"Anthony\").","- P27(\"Stanley\", \"Anthony\")."],"noiseless_rules":["P12(V0) :- P0(V0, V1), - P6(V1, V3), not -P8(V1, V3).","P0(V0, V1) :- - P13(V0), - P24(V2), - P25(V0, V2), P26(V0, V2), - P27(V1, V2).","- P1(V0, V3) :- - P7(V1), P9(V0, V1), - P11(V0, V3).","P2(V0) :- - P1(V0, V3), not -P3(V0, V3), not P10(V0, V3), not -P21(V0, V3).","P3(V0, V3) :- - P14(V0, V3), not P20(V0, V3), not -P21(V0, V3), not -P22(V0, V3), not P23(V0, V3).","- P4(V0) :- - P14(V0, V3), not P20(V0, V3), not -P21(V0, V3), not -P22(V0, V3), not P23(V0, V3).","- P5(V0, V3) :- - P14(V0, V3), not P20(V0, V3), not -P21(V0, V3), not -P22(V0, V3), not P23(V0, V3).","- P6(V1, V3) :- P15(V1, V3).","- P7(V1) :- P15(V1, V3).","P8(V0, V3) :- P2(V0), - P10(V0, V3).","P9(V1, V1) :- - P4(V1), not P16(V1), not -P17(V1), not P18(V1), not P19(V1).","- P10(V1, V1) :- - P4(V1), not P16(V1), not -P17(V1), not P18(V1), not P19(V1).","- P11(V1, V3) :- - P5(V1, V3), not -P17(V1)."],"noisy_rules":{}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_90_8_8_8_8_0.5_1.0_3_3_4","seed":90,"num_facts":11,"num_rules":9,"num_related_predicates":20,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5714285714285716,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" pilot(\"Brenda\", \"Phillip\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- assuaging_hunger(\"Brenda\", \"Anne\").","- most_people(\"Brenda\", \"Christopher\", \"Anne\").","- people(\"Anthony\", \"Phillip\").","- robotics(\"Anthony\", \"Phillip\", \"Christopher\").","hockey(\"Anthony\", \"Christopher\", \"Anne\").","cpatain(\"Brenda\", \"Christopher\", \"Anne\").","person(\"Phillip\", \"Christopher\", \"Anne\").","- song(\"Brenda\", \"Phillip\").","- roots(\"Phillip\", \"Christopher\", \"Anne\").","- omophagia(\"Brenda\", \"Anthony\", \"Phillip\").","- male(\"Christopher\", \"Anne\")."],"noisy_facts":["market(\"Phillip\", \"Christopher\", \"Anne\").","stadium(\"Brenda\", \"Phillip\", \"Christopher\").","spread_disease(\"Phillip\", \"Christopher\", \"Anne\").","womanhood(\"Phillip\", \"Christopher\", \"Anne\").","tanager(\"Brenda\", \"Phillip\", \"Christopher\").","- cabbage(\"Brenda\", \"Anthony\", \"Phillip\").","agriculture(\"Anthony\", \"Phillip\", \"Anne\")."],"min_fact_dicts_for_query":["- assuaging_hunger(\"Brenda\", \"Anne\").","- robotics(\"Anthony\", \"Phillip\", \"Christopher\").","- song(\"Brenda\", \"Phillip\").","- roots(\"Phillip\", \"Christopher\", \"Anne\")."],"noiseless_rules":["- pilot(V0, V2) :- - finch(V2), - song(V0, V2), - roots(V2, V3, V4).","common_canary(V0, V1, V2) :- - assuaging_hunger(V0, V4), - robotics(V1, V2, V3), not -hockey(V1, V3, V4).","- captain(V0, V3, V4) :- - most_people(V0, V3, V4).","- commissioned_military_officer(V3, V4) :- - captain(V0, V3, V4).","canary(V0, V2, V1) :- common_canary(V0, V1, V2), not -captain_ship(V0, V1, V2), not omophagia(V0, V1, V2).","- finch(V2) :- canary(V0, V2, V3), not pyrrhuloxia(V0, V2, V3), not commissioned_officer(V0, V2, V3).","captain_ship(V0, V1, V2) :- - people(V1, V2), cpatain(V0, V3, V4), not -person(V2, V3, V4).","- pyrrhuloxia(V0, V2, V3) :- - people(V1, V2), cpatain(V0, V3, V4), not -person(V2, V3, V4).","- commissioned_officer(V3, V3, V3) :- - commissioned_military_officer(V3, V4), not male(V3, V4)."],"noisy_rules":{"a":["pilot(V2, V2) :- finch(V2).","pilot(V3, V3) :- commissioned_military_officer(V3, V4)."],"b":["most_people(V0, V0, V2) :- pilot(V0, V2).","- captain_ship(V0, V0, V2) :- not -finch(V2), commissioned_officer(V0, V2, V3), not -pilot(V0, V2)."],"c":["omophagia(V0, V1, V2) :- - captain_ship(V0, V1, V2).","song(V0, V2) :- captain(V0, V3, V4), - canary(V0, V2, V3)."],"d":["commissioned_officer(V0, V2, V3) :- stadium(V0, V2, V3).","- oscine(V0, V2, V3) :- finch(V2), commissioned_officer(V0, V2, V3), not -tanager(V0, V2, V3)."],"e":["- rhinoceros(V0, V1, V2) :- - cabbage(V0, V1, V2), spread_disease(V2, V3, V4).","class(V2, V3, V4) :- agriculture(V1, V2, V4), not -market(V2, V3, V4), womanhood(V2, V3, V4)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_50_10_14_13_14_0.5_1.0_5_3_4","seed":50,"num_facts":16,"num_rules":15,"num_related_predicates":31,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P14(\"Shawn\", \"Brittany\", \"Aaron\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P15(\"Aaron\").","P16(\"Shawn\", \"Brittany\", \"Samantha\").","P17(\"Shawn\", \"Samantha\").","P18(\"Shawn\", \"Curtis\").","- P19(\"Shawn\", \"Brittany\", \"Curtis\").","- P20(\"Shawn\", \"Aaron\", \"Samantha\").","P21(\"Brittany\", \"Aaron\", \"Curtis\").","- P22(\"Shawn\", \"Brittany\", \"Samantha\").","- P23(\"Shawn\", \"Samantha\", \"Curtis\").","P24(\"Brittany\", \"Samantha\", \"Curtis\").","- P25(\"Shawn\", \"Brittany\", \"Aaron\").","- P26(\"Shawn\", \"Samantha\", \"Curtis\").","P27(\"Shawn\", \"Samantha\", \"Curtis\").","- P28(\"Brittany\", \"Aaron\", \"Curtis\").","- P29(\"Shawn\", \"Brittany\", \"Aaron\").","- P30(\"Shawn\", \"Samantha\", \"Curtis\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- P15(\"Aaron\").","P16(\"Shawn\", \"Brittany\", \"Samantha\").","P17(\"Shawn\", \"Samantha\").","P18(\"Shawn\", \"Curtis\").","- P19(\"Shawn\", \"Brittany\", \"Curtis\").","- P20(\"Shawn\", \"Aaron\", \"Samantha\").","P21(\"Brittany\", \"Aaron\", \"Curtis\").","- P22(\"Shawn\", \"Brittany\", \"Samantha\").","- P25(\"Shawn\", \"Brittany\", \"Aaron\").","- P26(\"Shawn\", \"Samantha\", \"Curtis\").","- P29(\"Shawn\", \"Brittany\", \"Aaron\").","- P30(\"Shawn\", \"Samantha\", \"Curtis\")."],"noiseless_rules":["- P14(V0, V1, V2) :- P0(V0, V3), - P4(V0, V1, V3), P10(V0, V2, V4).","P0(V0, V3) :- - P1(V1, V4), P5(V1, V4), - P22(V0, V1, V3), not P23(V0, V3, V4), not -P24(V1, V3, V4).","- P1(V1, V4) :- P6(V0, V1, V4).","P2(V0, V2) :- - P15(V2), - P25(V0, V1, V2), - P26(V0, V3, V4), not -P27(V0, V3, V4), not P28(V1, V2, V4).","- P3(V2, V3, V4) :- - P15(V2), - P25(V0, V1, V2), - P26(V0, V3, V4), not -P27(V0, V3, V4), not P28(V1, V2, V4).","- P4(V0, V1, V3) :- P16(V0, V1, V3).","P5(V1, V4) :- - P11(V2, V3), - P29(V0, V1, V2), - P30(V0, V3, V4).","P6(V0, V1, V4) :- P17(V0, V3), P18(V0, V4), - P19(V0, V1, V4), - P20(V0, V2, V3), not -P21(V1, V2, V4).","- P7(V2, V4) :- P17(V0, V3), P18(V0, V4), - P19(V0, V1, V4), - P20(V0, V2, V3), not -P21(V1, V2, V4).","P8(V3, V4) :- P17(V0, V3), P18(V0, V4), - P19(V0, V1, V4), - P20(V0, V2, V3), not -P21(V1, V2, V4).","P9(V0, V1, V4) :- P17(V0, V3), P18(V0, V4), - P19(V0, V1, V4), - P20(V0, V2, V3), not -P21(V1, V2, V4).","P10(V0, V2, V4) :- P2(V0, V2), - P7(V2, V4), not -P12(V0, V2), not P13(V0, V2).","- P11(V2, V3) :- P8(V3, V4), P21(V1, V2, V4).","P12(V2, V2) :- P8(V3, V4), P21(V1, V2, V4).","- P13(V0, V2) :- - P3(V2, V3, V4), P9(V0, V1, V4)."],"noisy_rules":{}},"num_min_facts_for_query":12,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_48_6_8_5_8_0.5_1.0_3_3_4","seed":48,"num_facts":7,"num_rules":9,"num_related_predicates":16,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" statutory_offense(\"Marilyn\", \"Regina\", \"Barbara\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["fish(\"Marilyn\", \"Regina\", \"David\").","care(\"Marilyn\", \"Regina\", \"Barbara\").","- being_social(\"Marilyn\", \"Todd\", \"Barbara\").","- lake(\"Regina\", \"Todd\", \"Barbara\").","explode(\"Regina\", \"Todd\", \"Barbara\").","- chicken(\"Regina\", \"Todd\", \"Barbara\").","- zombie(\"Marilyn\", \"Regina\", \"Barbara\")."],"noisy_facts":[],"min_fact_dicts_for_query":["fish(\"Marilyn\", \"Regina\", \"David\").","care(\"Marilyn\", \"Regina\", \"Barbara\").","- being_social(\"Marilyn\", \"Todd\", \"Barbara\")."],"noiseless_rules":["- statutory_offense(V0, V1, V4) :- - israel(V1, V2), large_body_of_salt_water(V1, V4), repair(V0, V1, V3).","- israel(V1, V2) :- animal(V3), - monster(V1, V2), not -small(V1, V2, V3).","animal(V3) :- fish(V0, V1, V3), - being_social(V0, V2, V4), not lake(V1, V2, V4).","creature(V0, V1, V4) :- fish(V0, V1, V3), - being_social(V0, V2, V4), not lake(V1, V2, V4).","- sea(V1, V2, V4) :- fish(V0, V1, V3), - being_social(V0, V2, V4), not lake(V1, V2, V4).","- monster(V1, V2) :- creature(V0, V1, V4), - being_social(V0, V2, V4), not zombie(V0, V1, V4).","large_body_of_salt_water(V1, V4) :- - sea(V1, V2, V4), not -explode(V1, V2, V4), not chicken(V1, V2, V4).","small(V1, V2, V4) :- - sea(V1, V2, V4), not -explode(V1, V2, V4), not chicken(V1, V2, V4).","repair(V0, V1, V4) :- care(V0, V1, V4), - being_social(V0, V2, V4), not zombie(V0, V1, V4)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_65_6_6_2_3_0.5_1.0_5_3_4","seed":65,"num_facts":6,"num_rules":7,"num_related_predicates":13,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" oval(\"Chris\", \"Robert\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["- chicken_egg(\"William\", \"Steven\", \"Chris\").","- bill(\"Steven\", \"Heidi\").","- motivation(\"William\", \"Steven\", \"Heidi\").","chicken(\"William\", \"Steven\", \"Heidi\").","wings(\"Steven\", \"Heidi\", \"Robert\").","most_birds(\"Steven\", \"Heidi\", \"Robert\")."],"noisy_facts":["brown(\"Steven\", \"Chris\", \"Robert\").","chick(\"William\", \"Steven\", \"Heidi\").","yellow(\"Chris\", \"Heidi\").","blue(\"William\", \"Heidi\", \"Robert\").","do_in_gym(\"William\", \"Chris\").","morse(\"William\", \"Steven\", \"Heidi\").","punt(\"Steven\", \"Chris\", \"Heidi\").","gold(\"Chris\", \"Heidi\", \"Robert\").","- tend(\"Chris\", \"Heidi\", \"Robert\").","- salmon(\"Heidi\")."],"min_fact_dicts_for_query":["- chicken_egg(\"William\", \"Steven\", \"Chris\").","- bill(\"Steven\", \"Heidi\").","- motivation(\"William\", \"Steven\", \"Heidi\").","wings(\"Steven\", \"Heidi\", \"Robert\")."],"noiseless_rules":["- oval(V2, V4) :- bird(V1, V3), birds(V2, V3, V4).","- egg(V1, V2) :- - chicken_egg(V0, V1, V2).","- beak(V3, V4) :- - bill(V1, V3), wings(V1, V3, V4), not -most_birds(V1, V3, V4).","nest(V0, V1, V3) :- - motivation(V0, V1, V3).","bird(V1, V3) :- nest(V0, V1, V3), not -chicken(V0, V1, V3).","bird_home(V0, V1, V3) :- nest(V0, V1, V3), not -chicken(V0, V1, V3).","birds(V2, V3, V4) :- - egg(V1, V2), - beak(V3, V4), nest(V0, V1, V3), not -bird_home(V0, V1, V4)."],"noisy_rules":{"a":["oval(V2, V4) :- egg(V1, V2), - bird_home(V0, V1, V4), - birds(V2, V3, V4).","oval(V4, V4) :- beak(V3, V4)."],"b":["egg(V1, V2) :- beak(V3, V4), - nest(V0, V1, V3), - bird_home(V0, V1, V4), - birds(V2, V3, V4), not -oval(V2, V4).","- wings(V1, V3, V4) :- beak(V3, V4), - bird_home(V0, V1, V4), - birds(V2, V3, V4), not -oval(V2, V4)."],"c":["- chicken(V4, V3, V3) :- beak(V3, V4), - birds(V2, V3, V4).","egg(V1, V2) :- not -beak(V3, V4), - nest(V0, V1, V3), - bird(V1, V3), not bird_home(V0, V1, V4), - birds(V2, V3, V4)."],"d":["- yolk(V2, V4) :- egg(V1, V2), - nest(V0, V1, V3), - bird_home(V0, V1, V4), not -morse(V0, V1, V3).","egg(V1, V2) :- - nest(V0, V1, V3), - bird_home(V0, V1, V4), - birds(V2, V3, V4), chick(V0, V1, V3)."],"e":["- chromatic_color(V0, V1, V3) :- - salmon(V3), yellow(V2, V3), blue(V0, V3, V4), brown(V1, V2, V4).","- totemism(V3, V4) :- do_in_gym(V0, V2), punt(V1, V2, V3), gold(V2, V3, V4), - tend(V2, V3, V4)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_67_7_8_4_5_0.5_1.0_3_2_3","seed":67,"num_facts":6,"num_rules":9,"num_related_predicates":15,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" destroy(\"Morgan\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- large_cap(\"Alicia\", \"Robert\").","- play_basketball(\"Alicia\", \"Robert\").","homing_pigeon(\"Morgan\", \"Robert\").","- drinking_alcohol(\"John\", \"Robert\").","- cylinder(\"Alicia\", \"Robert\").","teach(\"Alicia\", \"Robert\")."],"noisy_facts":["- beefsteak(\"Morgan\", \"Robert\").","- pepsi(\"Robert\").","- geneticism(\"Alicia\", \"Robert\").","avoiding_oversleeping(\"Alicia\", \"Robert\").","- bartholins_gland(\"Robert\").","take_shower(\"Alicia\", \"Morgan\").","particles(\"Morgan\", \"Robert\").","- yellowtail_flounder(\"Alicia\", \"Robert\")."],"min_fact_dicts_for_query":["- large_cap(\"Alicia\", \"Robert\").","- play_basketball(\"Alicia\", \"Robert\").","homing_pigeon(\"Morgan\", \"Robert\").","- drinking_alcohol(\"John\", \"Robert\")."],"noiseless_rules":["- destroy(V1) :- - budgerigar(V1), furnitire(V3), not speed_skating(V1, V3).","hide_sun(V0, V3) :- - large_cap(V0, V3).","admission_day(V1, V3) :- - speed_skating(V1, V3), not -all_mammals(V1, V3).","duct(V0, V3) :- admission_day(V0, V3), not quantum(V0, V3).","- budgerigar(V1) :- - play_basketball(V0, V3), homing_pigeon(V1, V3), - drinking_alcohol(V2, V3).","- quantum(V0, V3) :- - play_basketball(V0, V3), homing_pigeon(V1, V3), - drinking_alcohol(V2, V3).","furnitire(V3) :- duct(V2, V3).","- speed_skating(V0, V3) :- hide_sun(V0, V3), not cylinder(V0, V3), not -teach(V0, V3).","all_mammals(V3, V3) :- hide_sun(V0, V3), not cylinder(V0, V3), not -teach(V0, V3)."],"noisy_rules":{"a":["destroy(V1) :- - furnitire(V3), - all_mammals(V1, V3).","destroy(V1) :- - hide_sun(V0, V3), budgerigar(V1)."],"b":["- duct(V1, V1) :- destroy(V1).","- duct(V1, V3) :- - hide_sun(V0, V3), - all_mammals(V1, V3), not -destroy(V1)."],"c":["- furnitire(V3) :- - hide_sun(V0, V3), not admission_day(V0, V3).","- furnitire(V3) :- quantum(V0, V3), speed_skating(V1, V3)."],"d":["play_basketball(V3, V3) :- - furnitire(V3), - pepsi(V3).","cylinder(V0, V3) :- quantum(V0, V3), not -avoiding_oversleeping(V0, V3), not yellowtail_flounder(V0, V3)."],"e":["- taste_good(V0, V3) :- - geneticism(V0, V3), particles(V1, V3).","- degree(V0, V3) :- - bartholins_gland(V3), take_shower(V0, V1), - beefsteak(V1, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_43_6_8_6_8_0.5_1.0_5_2_3","seed":43,"num_facts":8,"num_rules":9,"num_related_predicates":17,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" boulder(\"Steven\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["lunar_crater(\"Melissa\").","testing_ground(\"Steven\", \"Michael\").","persian_deity(\"Melissa\", \"Michael\").","structure(\"Melissa\", \"Tonya\").","medlar(\"Melissa\", \"Tonya\").","redraft(\"Melissa\", \"Tonya\").","place_to_eat(\"Melissa\").","nocturnal_flying_rodents(\"Melissa\", \"Michael\")."],"noisy_facts":[],"min_fact_dicts_for_query":["lunar_crater(\"Melissa\").","testing_ground(\"Steven\", \"Michael\").","persian_deity(\"Melissa\", \"Michael\").","structure(\"Melissa\", \"Tonya\").","medlar(\"Melissa\", \"Tonya\").","redraft(\"Melissa\", \"Tonya\").","place_to_eat(\"Melissa\").","nocturnal_flying_rodents(\"Melissa\", \"Michael\")."],"noiseless_rules":["boulder(V0) :- jack_oak(V3), crawling_up_wall(V0, V1), living_space(V0, V3).","mine_gold(V2) :- lunar_crater(V1), persian_deity(V1, V2), structure(V1, V3), medlar(V1, V3), redraft(V1, V3).","laugh_at_joke(V1, V2) :- lunar_crater(V1), persian_deity(V1, V2), structure(V1, V3), medlar(V1, V3), redraft(V1, V3).","jack_oak(V3) :- carolinian(V1, V3), structure(V1, V3).","crawling_up_wall(V0, V1) :- testing_ground(V0, V2), nocturnal_flying_rodents(V1, V2).","accommodations(V1) :- testing_ground(V0, V2), nocturnal_flying_rodents(V1, V2).","living_space(V2, V2) :- mine_gold(V2).","airplane_propeller(V2, V2) :- mine_gold(V2).","carolinian(V1, V3) :- laugh_at_joke(V1, V2), accommodations(V1), airplane_propeller(V2, V3), place_to_eat(V1), nocturnal_flying_rodents(V1, V2)."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_27_7_6_3_6_0.5_1.0_3_2_3","seed":27,"num_facts":7,"num_rules":7,"num_related_predicates":14,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"beard(\"Elijah\", \"Samantha\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- arrive_at_airports(\"Samantha\", \"Sydney\").","- emblem(\"Elijah\").","- topic(\"Elijah\", \"Samantha\").","- eat_things_off_of(\"Elijah\", \"Samantha\").","- indian_elephant(\"Jocelyn\", \"Elijah\").","hole(\"Elijah\", \"Sydney\").","device(\"Samantha\", \"Sydney\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- arrive_at_airports(\"Samantha\", \"Sydney\").","- topic(\"Elijah\", \"Samantha\").","- indian_elephant(\"Jocelyn\", \"Elijah\")."],"noiseless_rules":["beard(V1, V2) :- - vandyke_beard(V0, V3), - fuzz(V1, V2), not mustache(V2, V3).","- vandyke_beard(V0, V3) :- - wipe(V3), - indian_elephant(V0, V1), not -hole(V1, V3).","- wipe(V3) :- napkin(V2, V3), not -design(V2, V3), not mustache(V2, V3).","napkin(V2, V3) :- - arrive_at_airports(V2, V3).","design(V2, V3) :- - emblem(V1), - topic(V1, V2), device(V2, V3).","- fuzz(V1, V2) :- - topic(V1, V2), not eat_things_off_of(V1, V2).","- mustache(V2, V2) :- - eat_things_off_of(V1, V2)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_65_7_6_6_8_0.5_1.0_3_3_4","seed":65,"num_facts":10,"num_rules":7,"num_related_predicates":17,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" P6(\"Jessica\", \"Mark\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P7(\"Mary\", \"Mark\").","P8(\"Valerie\", \"Mary\", \"Mark\").","P9(\"Jessica\", \"Mary\").","P10(\"Judith\", \"Valerie\", \"Mary\").","P11(\"Judith\", \"Valerie\", \"Jessica\").","P12(\"Judith\", \"Valerie\", \"Jessica\").","P13(\"Valerie\", \"Mary\", \"Mark\").","P14(\"Jessica\", \"Mary\", \"Mark\").","P15(\"Valerie\", \"Jessica\", \"Mark\").","P16(\"Judith\", \"Jessica\", \"Mark\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P7(\"Mary\", \"Mark\").","P8(\"Valerie\", \"Mary\", \"Mark\").","P9(\"Jessica\", \"Mary\").","P10(\"Judith\", \"Valerie\", \"Mary\").","P11(\"Judith\", \"Valerie\", \"Jessica\").","P12(\"Judith\", \"Valerie\", \"Jessica\").","P13(\"Valerie\", \"Mary\", \"Mark\").","P14(\"Jessica\", \"Mary\", \"Mark\").","P15(\"Valerie\", \"Jessica\", \"Mark\").","P16(\"Judith\", \"Jessica\", \"Mark\")."],"noiseless_rules":["P6(V2, V4) :- P1(V0, V2), P13(V1, V3, V4), P14(V2, V3, V4).","P0(V1, V2) :- P7(V3, V4), P15(V1, V2, V4).","P1(V2, V2) :- P0(V1, V2), P3(V1, V2), P5(V1, V2).","P2(V3, V4) :- P8(V1, V3, V4), P13(V1, V3, V4).","P3(V1, V2) :- P9(V2, V3), P11(V0, V1, V2), P12(V0, V1, V2).","P4(V3, V4) :- P10(V0, V1, V3), P16(V0, V2, V4).","P5(V1, V2) :- P2(V3, V4), P4(V3, V4), P15(V1, V2, V4)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_11_8_10_9_9_0.5_1.0_5_2_3","seed":11,"num_facts":13,"num_rules":11,"num_related_predicates":24,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"P10(\"Michael\", \"Tyler\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P11(\"Michael\").","P12(\"Michael\", \"Tyler\").","P13(\"Erik\", \"Michael\").","P14(\"Tyler\", \"Joshua\").","- P15(\"Michael\", \"Tyler\").","P16(\"Erik\", \"Michael\").","P17(\"Erik\", \"Michael\").","- P18(\"Erik\", \"Tyler\").","- P19(\"Erik\", \"Tyler\").","P20(\"Erik\", \"Michael\").","P21(\"Erik\", \"Tyler\").","- P22(\"Erik\", \"Joshua\").","- P23(\"Tyler\", \"Joshua\")."],"noisy_facts":["- P33(\"Michael\", \"Tyler\").","- P34(\"Michael\", \"Joshua\").","- P32(\"Tyler\").","- P24(\"Michael\", \"Tyler\").","- P30(\"Tyler\", \"Joshua\").","- P25(\"Michael\", \"Tyler\").","P27(\"Joshua\").","P28(\"Erik\", \"Michael\").","- P29(\"Erik\", \"Tyler\")."],"min_fact_dicts_for_query":["- P11(\"Michael\").","P13(\"Erik\", \"Michael\").","P14(\"Tyler\", \"Joshua\").","P16(\"Erik\", \"Michael\").","P17(\"Erik\", \"Michael\").","- P18(\"Erik\", \"Tyler\").","P20(\"Erik\", \"Michael\").","P21(\"Erik\", \"Tyler\").","- P22(\"Erik\", \"Joshua\")."],"noiseless_rules":["P10(V1, V2) :- - P1(V0, V1), P3(V1, V3), - P9(V2, V3).","P0(V1, V2) :- - P7(V1, V2).","- P1(V1, V1) :- P0(V1, V2), not P2(V1, V2), not P4(V1, V2), not P8(V1, V2), not P15(V1, V2).","- P2(V1, V2) :- P5(V0, V1), P6(V1, V2).","P3(V1, V3) :- - P11(V1), P20(V0, V1), P21(V0, V2), - P22(V0, V3), not P23(V2, V3).","- P4(V1, V2) :- - P11(V1), P20(V0, V1), P21(V0, V2), - P22(V0, V3), not P23(V2, V3).","P5(V0, V1) :- - P11(V1), P20(V0, V1), P21(V0, V2), - P22(V0, V3), not P23(V2, V3).","P6(V1, V2) :- P12(V1, V2).","- P7(V1, V2) :- P13(V0, V1), P16(V0, V1), P17(V0, V1), - P18(V0, V2), not P19(V0, V2).","- P8(V1, V2) :- P13(V0, V1), P16(V0, V1), P17(V0, V1), - P18(V0, V2), not P19(V0, V2).","- P9(V2, V3) :- P14(V2, V3)."],"noisy_rules":{"a":["- P10(V1, V2) :- P4(V1, V2), P7(V1, V2), P9(V2, V3).","- P10(V1, V2) :- not P0(V1, V2), - P3(V1, V3), P4(V1, V2), P8(V1, V2)."],"b":["P7(V1, V2) :- - P10(V1, V2).","- P20(V2, V1) :- - P0(V1, V2), not P10(V1, V2)."],"c":["P9(V2, V1) :- P4(V1, V2), - P5(V0, V1).","- P14(V2, V1) :- not -P2(V1, V2), not -P4(V1, V2), P7(V1, V2), P8(V1, V2)."],"d":["P23(V2, V1) :- P7(V1, V2), not P24(V1, V2).","- P16(V2, V1) :- - P0(V1, V2), P4(V1, V2), P7(V1, V2), - P25(V1, V2)."],"e":["P26(V1, V2) :- not -P27(V3), P28(V0, V1), - P29(V0, V2), - P30(V2, V3).","- P31(V2, V3) :- - P32(V2), - P33(V1, V2), - P34(V1, V3)."]}},"num_min_facts_for_query":9,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_75_9_11_6_8_0.5_1.0_3_3_4","seed":75,"num_facts":10,"num_rules":12,"num_related_predicates":22,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" tennis_game(\"Jennifer\", \"Bryan\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- copybook(\"Virginia\", \"Jennifer\", \"Bryan\").","- writing(\"Michelle\", \"Aaron\", \"Jennifer\").","- rain_at_time(\"Michelle\", \"Aaron\", \"Bryan\").","vulture(\"Virginia\", \"Jennifer\", \"Bryan\").","- pasch(\"Michelle\", \"Aaron\", \"Jennifer\").","perfection(\"Michelle\", \"Aaron\", \"Jennifer\").","explode(\"Michelle\", \"Aaron\", \"Bryan\").","bench(\"Michelle\", \"Aaron\", \"Bryan\").","- callus(\"Jennifer\", \"Bryan\").","- countryseat(\"Jennifer\", \"Bryan\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- tennis_game(V3, V4) :- christmass(V3, V4), electronic_device(V0, V2, V4), not briefcase(V0, V2, V4).","live_as_long_as_14_years(V4, V4) :- - copybook(V0, V3, V4).","getting_burger_taste(V3, V4) :- - copybook(V0, V3, V4).","- cost(V3) :- - copybook(V0, V3, V4).","christmass(V3, V4) :- thrill_of(V2, V3), destroying_things(V0, V1, V2), - perchloride(V1, V2, V4).","- conformist(V2, V2, V4) :- live_as_long_as_14_years(V2, V4).","thrill_of(V2, V3) :- - copybook(V0, V3, V4), - writing(V1, V2, V3), not -explode(V1, V2, V4).","destroying_things(V3, V4, V4) :- getting_burger_taste(V3, V4), not callus(V3, V4), not countryseat(V3, V4).","electronic_device(V2, V2, V4) :- - rain_at_time(V1, V2, V4), not -explode(V1, V2, V4), not -bench(V1, V2, V4).","- perchloride(V1, V2, V4) :- - rain_at_time(V1, V2, V4), not -explode(V1, V2, V4), not -bench(V1, V2, V4).","- briefcase(V3, V2, V3) :- - cost(V1), - conformist(V1, V2, V3), not -counterbore(V1).","counterbore(V1) :- vulture(V0, V3, V4), - pasch(V1, V2, V3), not -perfection(V1, V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_21_10_12_12_15_0.5_1.0_5_3_4","seed":21,"num_facts":16,"num_rules":13,"num_related_predicates":29,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8888888888888888,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P12(\"Ruben\", \"Jordan\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P13(\"Robert\").","- P14(\"William\").","P15(\"Ruben\", \"Jordan\", \"Robert\").","P16(\"Ruben\", \"Robert\", \"Christina\").","- P17(\"Ruben\", \"Robert\", \"Christina\").","P18(\"Jordan\", \"William\", \"Christina\").","- P19(\"Jordan\", \"William\", \"Christina\").","P20(\"Jordan\", \"William\").","P21(\"Ruben\", \"Jordan\", \"William\").","- P22(\"Jordan\", \"Robert\", \"Christina\").","P23(\"Robert\", \"William\", \"Christina\").","- P24(\"Ruben\", \"William\", \"Christina\").","P25(\"Jordan\", \"Robert\", \"William\").","P26(\"Jordan\", \"William\", \"Christina\").","- P27(\"Jordan\", \"William\", \"Christina\").","- P28(\"Jordan\", \"William\", \"Christina\")."],"noisy_facts":["P34(\"Ruben\", \"Jordan\", \"Christina\").","P32(\"Jordan\", \"Robert\", \"Christina\").","P31(\"Ruben\", \"Robert\", \"Christina\").","P35(\"Ruben\", \"Robert\", \"William\").","P36(\"Ruben\", \"William\", \"Christina\").","- P29(\"Ruben\")."],"min_fact_dicts_for_query":["- P13(\"Robert\").","- P14(\"William\").","P15(\"Ruben\", \"Jordan\", \"Robert\").","P16(\"Ruben\", \"Robert\", \"Christina\").","- P17(\"Ruben\", \"Robert\", \"Christina\").","P18(\"Jordan\", \"William\", \"Christina\").","P20(\"Jordan\", \"William\").","P21(\"Ruben\", \"Jordan\", \"William\").","- P22(\"Jordan\", \"Robert\", \"Christina\").","- P24(\"Ruben\", \"William\", \"Christina\").","P25(\"Jordan\", \"Robert\", \"William\").","- P28(\"Jordan\", \"William\", \"Christina\")."],"noiseless_rules":["- P12(V0, V1) :- - P0(V0), P1(V2), - P3(V0, V3), - P6(V1, V2, V4), not -P10(V2, V3, V4).","- P0(V0) :- - P4(V0, V2), - P9(V1, V2, V3).","P1(V2) :- P2(V2), - P11(V0, V1, V2), - P17(V0, V2, V4), P18(V1, V3, V4), not P19(V1, V3, V4).","P2(V2) :- - P13(V2), - P24(V0, V3, V4), P25(V1, V2, V3), not -P26(V1, V3, V4), not P27(V1, V3, V4).","- P3(V0, V2) :- - P8(V0, V1, V2), not P11(V0, V1, V2).","- P4(V0, V2) :- - P8(V0, V1, V2), not P11(V0, V1, V2).","- P5(V1, V2, V1) :- - P8(V0, V1, V2), not P11(V0, V1, V2).","- P6(V1, V2, V4) :- - P14(V3), P20(V1, V3), P21(V0, V1, V3), - P22(V1, V2, V4), not -P23(V2, V3, V4).","- P7(V2, V3, V4) :- - P14(V3), P20(V1, V3), P21(V0, V1, V3), - P22(V1, V2, V4), not -P23(V2, V3, V4).","- P8(V0, V1, V2) :- P15(V0, V1, V2).","- P9(V2, V2, V3) :- - P7(V2, V3, V4).","P10(V2, V3, V4) :- - P5(V1, V2, V4), P18(V1, V3, V4), - P24(V0, V3, V4).","- P11(V0, V1, V2) :- P16(V0, V2, V4), - P28(V1, V3, V4)."],"noisy_rules":{"a":["P12(V4, V1) :- P5(V1, V2, V4), P7(V2, V3, V4).","P12(V0, V1) :- P0(V0), - P1(V2), - P2(V2), P5(V1, V2, V4)."],"b":["- P16(V0, V2, V4) :- P5(V1, V2, V4), P9(V1, V2, V3), not -P11(V0, V1, V2), P12(V0, V1).","- P23(V0, V0, V0) :- P12(V0, V1)."],"c":["- P1(V2) :- P8(V0, V1, V2).","P5(V0, V2, V4) :- P4(V0, V2), P7(V2, V3, V4)."],"d":["P6(V3, V2, V4) :- P0(V0), P4(V0, V2), - P10(V2, V3, V4), - P29(V0).","P7(V2, V2, V1) :- P8(V0, V1, V2)."],"e":["- P30(V2, V4) :- P31(V0, V2, V4), P32(V1, V2, V4).","P33(V2, V4) :- P34(V0, V1, V4), P35(V0, V2, V3), P36(V0, V3, V4)."]}},"num_min_facts_for_query":12,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_6_5_6_4_6_0.5_1.0_5_3_4","seed":6,"num_facts":6,"num_rules":7,"num_related_predicates":13,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"P6(\"Donald\", \"Gabriel\", \"Julie\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P7(\"Julie\", \"Desiree\").","- P8(\"Donald\", \"Julie\", \"Desiree\").","P9(\"Donald\", \"Ray\", \"Gabriel\").","- P10(\"Donald\", \"Ray\", \"Gabriel\").","P11(\"Donald\", \"Ray\", \"Gabriel\").","P12(\"Gabriel\", \"Julie\", \"Desiree\")."],"noisy_facts":["- P16(\"Donald\", \"Ray\", \"Desiree\").","- P13(\"Donald\", \"Gabriel\", \"Desiree\").","- P17(\"Donald\", \"Gabriel\", \"Julie\").","P18(\"Donald\", \"Desiree\").","P14(\"Donald\", \"Gabriel\", \"Desiree\")."],"min_fact_dicts_for_query":["P7(\"Julie\", \"Desiree\").","- P8(\"Donald\", \"Julie\", \"Desiree\").","P9(\"Donald\", \"Ray\", \"Gabriel\")."],"noiseless_rules":["P6(V0, V2, V3) :- P2(V3, V4), P4(V0, V2, V4), not -P5(V2, V3, V4).","P0(V0, V1, V4) :- P7(V3, V4), P9(V0, V1, V2), not -P12(V2, V3, V4).","- P1(V2, V3, V4) :- P7(V3, V4), P9(V0, V1, V2), not -P12(V2, V3, V4).","P2(V3, V4) :- - P8(V0, V3, V4).","- P3(V3, V4) :- - P8(V0, V3, V4).","P4(V0, V2, V4) :- P0(V0, V1, V4), - P3(V3, V4), P9(V0, V1, V2), not P10(V0, V1, V2), not -P11(V0, V1, V2).","P5(V2, V3, V4) :- - P1(V2, V3, V4), - P8(V0, V3, V4)."],"noisy_rules":{"a":["- P6(V3, V3, V3) :- - P2(V3, V4), not -P3(V3, V4).","- P6(V0, V2, V3) :- - P0(V0, V1, V4), not P2(V3, V4), not P4(V0, V2, V4), - P5(V2, V3, V4)."],"b":["- P5(V2, V3, V3) :- - P6(V0, V2, V3).","- P5(V2, V3, V4) :- - P0(V0, V1, V4), P3(V3, V4), - P5(V2, V3, V4), not P6(V0, V2, V3)."],"c":["P10(V0, V1, V2) :- - P0(V0, V1, V4), - P2(V3, V4), - P4(V0, V2, V4).","- P4(V4, V2, V4) :- P1(V2, V3, V4), - P2(V3, V4), P3(V3, V4)."],"d":["P8(V0, V3, V4) :- P3(V3, V4), not P4(V0, V2, V4), - P13(V0, V2, V4).","P8(V0, V3, V4) :- P1(V2, V3, V4), - P2(V3, V4), - P4(V0, V2, V4), - P5(V2, V3, V4), P14(V0, V2, V4)."],"e":["P15(V0, V1, V2) :- - P16(V0, V1, V4), - P17(V0, V2, V3).","P19(V0, V4) :- P18(V0, V4)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_90_7_10_2_5_0.5_1.0_5_3_4","seed":90,"num_facts":5,"num_rules":11,"num_related_predicates":16,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" before_night(\"Gina\", \"Kevin\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["mane(\"Gina\", \"Kevin\", \"Mary\").","fur(\"Gina\", \"Kevin\", \"Mary\").","monday(\"Gina\", \"Kevin\", \"Mary\").","dusk(\"Gina\", \"Kevin\", \"Mary\").","down(\"Gina\", \"Kevin\", \"Mary\")."],"noisy_facts":[],"min_fact_dicts_for_query":["mane(\"Gina\", \"Kevin\", \"Mary\").","fur(\"Gina\", \"Kevin\", \"Mary\").","monday(\"Gina\", \"Kevin\", \"Mary\").","dusk(\"Gina\", \"Kevin\", \"Mary\").","down(\"Gina\", \"Kevin\", \"Mary\")."],"noiseless_rules":["before_night(V0, V2) :- evening(V2, V4), vertebrate(V0, V1, V3), afternoon(V0, V1, V3), dusk(V0, V2, V4).","hair(V2) :- mane(V0, V2, V4), dusk(V0, V2, V4), down(V0, V2, V4).","coat(V1, V2, V3) :- wool(V0, V1, V3), fur(V0, V2, V4).","submucosa(V0, V2, V3) :- wool(V0, V1, V3), fur(V0, V2, V4).","evening(V2, V4) :- mane(V0, V2, V4), monday(V0, V2, V4).","lion(V0, V2, V4) :- mane(V0, V2, V4), monday(V0, V2, V4).","wool(V0, V2, V2) :- mane(V0, V2, V4), monday(V0, V2, V4).","mammal(V3, V2) :- hair(V2), coat(V1, V2, V3).","vertebrate(V0, V3, V3) :- submucosa(V0, V2, V3), lion(V0, V3, V4), mammal(V3, V4), bird(V0, V2, V3).","afternoon(V0, V1, V3) :- wool(V0, V1, V3).","bird(V0, V0, V3) :- wool(V0, V1, V3)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_51_5_5_4_6_0.5_1.0_5_2_3","seed":51,"num_facts":5,"num_rules":6,"num_related_predicates":11,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"jack_oak(\"Kevin\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["sense_environment(\"Martin\").","sewers(\"Martin\", \"Kevin\").","fire(\"Martin\", \"Kevin\").","- storing_books(\"Martin\", \"Kevin\").","bowl(\"Martin\", \"Kevin\")."],"noisy_facts":["- chinese_deity(\"Alan\", \"Kevin\").","born_date(\"Martin\", \"Kevin\").","checking(\"Martin\", \"Kevin\").","father(\"Martin\", \"Kevin\")."],"min_fact_dicts_for_query":["sense_environment(\"Martin\").","sewers(\"Martin\", \"Kevin\")."],"noiseless_rules":["jack_oak(V3) :- jelly_bean(V1, V3), not -big_ears(V1, V3).","jelly_bean(V1, V3) :- sense_environment(V1), sewers(V1, V3), not -fire(V1, V3).","flying_bridge(V1, V3) :- sense_environment(V1), sewers(V1, V3), not -fire(V1, V3).","- tragopan(V3) :- flying_bridge(V1, V3), not -sewers(V1, V3), not -fire(V1, V3), not storing_books(V1, V3), not -bowl(V1, V3).","cubeb(V3, V3) :- - tragopan(V3).","big_ears(V1, V3) :- cubeb(V1, V3)."],"noisy_rules":{"a":["- jack_oak(V3) :- - jelly_bean(V1, V3), not flying_bridge(V1, V3), tragopan(V3).","- jack_oak(V3) :- not jelly_bean(V1, V3), - flying_bridge(V1, V3), not -tragopan(V3), not cubeb(V1, V3), - big_ears(V1, V3)."],"b":["- sense_environment(V1) :- - jelly_bean(V1, V3), not big_ears(V1, V3), - jack_oak(V3).","- flying_bridge(V1, V3) :- - jelly_bean(V1, V3), not jack_oak(V3)."],"c":["- cubeb(V3, V3) :- tragopan(V3).","- fire(V1, V3) :- - jelly_bean(V1, V3), not flying_bridge(V1, V3), not -tragopan(V3), - cubeb(V1, V3), not big_ears(V1, V3)."],"d":["- fire(V1, V3) :- - jelly_bean(V1, V3), not flying_bridge(V1, V3), not big_ears(V1, V3), not -born_date(V1, V3).","- sewers(V1, V3) :- - big_ears(V1, V3), not -father(V1, V3)."],"e":["outer(V1, V3) :- checking(V1, V3).","laminar_flow_clean_room(V3) :- - chinese_deity(V0, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_85_10_12_11_14_0.5_1.0_5_3_4","seed":85,"num_facts":15,"num_rules":13,"num_related_predicates":28,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P12(\"Jennifer\", \"Jasmine\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P13(\"Jasmine\", \"Daniel\").","P14(\"Daniel\").","P15(\"Rodney\", \"Daniel\", \"John\").","- P16(\"Rodney\", \"Daniel\", \"John\").","P17(\"Jennifer\", \"Jasmine\", \"John\").","P18(\"Jennifer\", \"Jasmine\", \"John\").","- P19(\"Rodney\", \"Daniel\").","P20(\"Rodney\", \"Jasmine\", \"Daniel\").","- P21(\"Rodney\", \"Jasmine\", \"John\").","- P22(\"Jasmine\", \"Daniel\", \"John\").","P23(\"Jennifer\", \"Jasmine\").","- P24(\"Rodney\", \"Jasmine\").","- P25(\"Rodney\", \"John\").","P26(\"Jennifer\", \"Daniel\", \"John\").","- P27(\"Jennifer\", \"Jasmine\", \"John\")."],"noisy_facts":["P30(\"Rodney\").","P31(\"Jennifer\", \"Rodney\").","- P40(\"Rodney\", \"Jasmine\", \"John\").","P34(\"Rodney\", \"Jasmine\", \"Daniel\").","- P32(\"Rodney\", \"John\").","- P28(\"Rodney\", \"Daniel\").","P37(\"John\").","P36(\"Jasmine\").","- P33(\"Jennifer\", \"Rodney\", \"Daniel\").","- P39(\"Jennifer\", \"Daniel\", \"John\").","- P38(\"Jasmine\", \"John\")."],"min_fact_dicts_for_query":["P13(\"Jasmine\", \"Daniel\").","P14(\"Daniel\").","P15(\"Rodney\", \"Daniel\", \"John\").","P23(\"Jennifer\", \"Jasmine\").","- P24(\"Rodney\", \"Jasmine\").","- P25(\"Rodney\", \"John\").","- P27(\"Jennifer\", \"Jasmine\", \"John\")."],"noiseless_rules":["- P12(V0, V2) :- P0(V2, V3), P2(V0, V2, V3), - P5(V1, V3, V4), not P9(V2, V3, V4).","P0(V2, V3) :- P13(V2, V3), - P27(V0, V2, V4).","P1(V0, V2, V4) :- P13(V2, V3), - P27(V0, V2, V4).","P2(V0, V2, V3) :- P14(V3), P23(V0, V2), - P24(V1, V2), - P25(V1, V4), not -P26(V0, V3, V4).","- P3(V1, V3) :- P14(V3), P23(V0, V2), - P24(V1, V2), - P25(V1, V4), not -P26(V0, V3, V4).","- P4(V0, V2) :- P14(V3), P23(V0, V2), - P24(V1, V2), - P25(V1, V4), not -P26(V0, V3, V4).","- P5(V1, V3, V4) :- P15(V1, V3, V4).","P6(V2, V3, V4) :- - P3(V1, V3), P13(V2, V3), - P27(V0, V2, V4).","- P7(V2, V0, V2) :- - P4(V0, V2).","P8(V1, V4) :- - P10(V1, V3), - P19(V1, V3), P20(V1, V2, V3), - P21(V1, V2, V4), not P22(V2, V3, V4).","- P9(V2, V3, V4) :- - P7(V2, V3, V4), - P11(V1, V2), not P24(V1, V2).","- P10(V1, V3) :- - P16(V1, V3, V4).","- P11(V1, V2) :- P1(V0, V2, V4), P6(V2, V3, V4), P8(V1, V4), not -P17(V0, V2, V4), not -P18(V0, V2, V4)."],"noisy_rules":{"a":["P12(V3, V2) :- P9(V2, V3, V4), P11(V1, V2).","P12(V2, V2) :- P5(V1, V3, V4), P7(V2, V3, V4)."],"b":["- P20(V1, V2, V3) :- - P6(V2, V3, V4), not -P7(V2, V3, V4), P9(V2, V3, V4), P11(V1, V2), P12(V0, V2).","P22(V2, V3, V3) :- P3(V1, V3), P10(V1, V3), P11(V1, V2), P12(V0, V2)."],"c":["- P13(V2, V3) :- P9(V2, V3, V4).","- P15(V1, V1, V2) :- P11(V1, V2)."],"d":["P25(V1, V3) :- P3(V1, V3).","P10(V1, V3) :- P3(V1, V3), not P28(V1, V3)."],"e":["P29(V1, V2, V4) :- P30(V1), P31(V0, V1), - P32(V1, V4), not P33(V0, V1, V3), P34(V1, V2, V3).","P35(V1, V3) :- P36(V2), P37(V4), - P38(V2, V4), - P39(V0, V3, V4), - P40(V1, V2, V4)."]}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_39_5_8_3_4_0.5_1.0_3_2_3","seed":39,"num_facts":4,"num_rules":9,"num_related_predicates":13,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P8(\"Jennifer\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P9(\"Greg\").","P10(\"Gina\", \"Jennifer\").","- P11(\"Gina\", \"Jennifer\").","- P12(\"Greg\", \"Jennifer\")."],"noisy_facts":["P15(\"Gina\", \"Tiffany\").","- P18(\"Gina\", \"Tiffany\").","- P14.","P13(\"Gina\", \"Jennifer\")."],"min_fact_dicts_for_query":["P9(\"Greg\").","- P11(\"Gina\", \"Jennifer\")."],"noiseless_rules":["P8(V3) :- - P0(V3), - P6(V0, V2), not -P7(V0, V3).","- P0(V3) :- P9(V2), - P11(V0, V3), not P12(V2, V3).","- P1(V0, V3) :- P9(V2), - P11(V0, V3), not P12(V2, V3).","- P2(V0) :- P9(V2), - P11(V0, V3), not P12(V2, V3).","P3(V3) :- P9(V2), - P11(V0, V3), not P12(V2, V3).","P4(V0, V3) :- - P1(V0, V3), not -P10(V0, V3).","P5(V3, V3) :- - P1(V0, V3), not -P10(V0, V3).","- P6(V0, V3) :- - P2(V0), P4(V0, V3).","P7(V0, V3) :- P3(V3), P5(V2, V3), P10(V0, V3)."],"noisy_rules":{"a":["- P8(V3) :- P0(V3), P1(V0, V3).","- P8(V3) :- P0(V3), - P3(V3), - P4(V0, V3)."],"b":["- P9(V3) :- - P8(V3).","- P5(V3, V3) :- - P8(V3)."],"c":["P1(V0, V2) :- P2(V0), P6(V0, V2).","- P9(V0) :- P1(V0, V3), not P4(V0, V3)."],"d":["- P7(V0, V3) :- - P4(V0, V3), - P5(V2, V3), not -P13(V0, V3).","P6(V3, V3) :- P0(V3), not P14."],"e":["- P16(V0, V1) :- P15(V0, V1).","P17(V0) :- - P18(V0, V1)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_87_10_9_3_6_0.5_1.0_3_2_3","seed":87,"num_facts":8,"num_rules":10,"num_related_predicates":18,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"game_of_skill(\"Kristen\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["jail(\"Kristen\").","- birds_home(\"James\", \"Kristen\").","- back(\"James\", \"Kristen\").","enjoying_treat(\"Diana\", \"Kristen\").","- knoll(\"James\", \"Kristen\").","- exist(\"Diana\", \"Kristine\").","fizzy(\"Kristen\", \"Kristine\").","light_rain(\"Diana\", \"Kristine\")."],"noisy_facts":["geological_phenomenon(\"Diana\", \"Kristine\").","- five_fingers_on_each_hand(\"Diana\", \"Kristine\").","riding_horses(\"James\", \"Diana\").","nit(\"Diana\", \"Kristen\")."],"min_fact_dicts_for_query":["- birds_home(\"James\", \"Kristen\").","- back(\"James\", \"Kristen\").","- exist(\"Diana\", \"Kristine\")."],"noiseless_rules":["game_of_skill(V2) :- napkin(V2), noisier_than_bills(V0, V1), not transactinide(V1, V2).","- screwdriver(V2, V2) :- napkin(V2), not -people_who_enjoy_playing_game(V2), not -jail(V2).","napkin(V2) :- people_who_enjoy_playing_game(V2).","feeding_teachers(V0, V1) :- - birds_home(V0, V2), - exist(V1, V3), not -fizzy(V2, V3).","- card_game(V0, V2) :- - back(V0, V2).","noisier_than_bills(V1, V1) :- - transactinide(V1, V2), not -enjoying_treat(V1, V2).","- transactinide(V1, V2) :- slave_making_ant(V1, V2).","gurgle(V0) :- - knoll(V0, V2).","slave_making_ant(V1, V1) :- - screwdriver(V1, V3), not -light_rain(V1, V3).","people_who_enjoy_playing_game(V2) :- feeding_teachers(V0, V1), - card_game(V0, V2), not -gurgle(V0)."],"noisy_rules":{"a":["- game_of_skill(V2) :- card_game(V0, V2), - noisier_than_bills(V0, V1), not gurgle(V0).","- game_of_skill(V2) :- screwdriver(V1, V3), - feeding_teachers(V0, V1), card_game(V0, V2)."],"b":["transactinide(V2, V2) :- card_game(V0, V2), not game_of_skill(V2).","card_game(V2, V2) :- screwdriver(V1, V3), - game_of_skill(V2)."],"c":["back(V1, V2) :- screwdriver(V1, V3), transactinide(V1, V2).","- fizzy(V2, V1) :- - noisier_than_bills(V0, V1), transactinide(V1, V2), not people_who_enjoy_playing_game(V2)."],"d":["- napkin(V2) :- - slave_making_ant(V1, V2), not -nit(V1, V2).","screwdriver(V1, V3) :- geological_phenomenon(V1, V3)."],"e":["realization(V1, V3) :- - five_fingers_on_each_hand(V1, V3).","system_clock(V0, V1) :- riding_horses(V0, V1)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_39_10_12_12_13_0.5_1.0_3_0_1","seed":39,"num_facts":16,"num_rules":13,"num_related_predicates":29,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.2222222222222223,"num_noise_rules_per_type":2,"num_rules_with_default_negation":13,"target_query":"kerosene.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["edge.","tribal.","- roomful.","- under.","- water_pimpernel.","- longhorn.","newfoundland.","season_stew.","coloradan.","- moth.","- area.","bay.","- power_drill.","- round.","quill.","telecommuting."],"noisy_facts":["salmon.","- wash_cloth.","- carrot.","- avalanche."],"min_fact_dicts_for_query":["edge."],"noiseless_rules":["kerosene :- - foreign_bill, not perform_work_humans_cannot_perform, not -telecommuting.","tried_judged_and_sentenced_in_court :- location, not thump, not -newfoundland.","- stop :- location, not thump, not -newfoundland.","- foreign_bill :- edge, not water_pimpernel, not longhorn.","location :- edge, not water_pimpernel, not longhorn.","- perform_work_humans_cannot_perform :- tried_judged_and_sentenced_in_court, not rock_concert, not -sagittal_suture.","relays :- tribal, not round, not -quill.","- thump :- - roomful, not area, not -bay.","- sulfur :- - roomful, not area, not -bay.","- rock_concert :- relays, not -achromatic_color, not power_drill.","achromatic_color :- - stop, not songbird, not -season_stew.","sagittal_suture :- - sulfur, not -coloradan, not moth.","- songbird :- - thump, not under."],"noisy_rules":{"a":["- kerosene :- foreign_bill, rock_concert.","- kerosene :- not tried_judged_and_sentenced_in_court, songbird."],"b":["- edge :- - kerosene.","- sagittal_suture :- - kerosene."],"c":["- relays :- not tried_judged_and_sentenced_in_court, not -thump, sulfur.","- bay :- - relays, sulfur."],"d":["foreign_bill :- not relays, rock_concert, - wash_cloth.","songbird :- - tried_judged_and_sentenced_in_court, not achromatic_color, not avalanche."],"e":["- number :- - carrot.","- direction :- salmon."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_34_10_12_9_9_0.5_1.0_3_0_1","seed":34,"num_facts":13,"num_rules":13,"num_related_predicates":26,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.4444444444444446,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":" heal.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- haploid.","- echoencephalography.","- tie_knots.","- russia.","- lab_scientist_to_watch.","- star_of_david.","- compound.","peal.","hunter.","critter.","potassium_chloride.","- vault.","- track."],"noisy_facts":["- getting_cavities_in_teeth.","- banyan.","council.","- fancy_goods.","- music."],"min_fact_dicts_for_query":["- echoencephalography."],"noiseless_rules":["- heal :- - pink, not -curd, not -cranberry_sauce.","- cents :- atom_bomb.","- pink :- shell, not hotel, not -male.","ortolan :- push, not -potassium_chloride, not vault.","curd :- ortolan, not -repayment, not -phatic_speech.","repayment :- - haploid, not track.","cranberry_sauce :- - echoencephalography.","shell :- - echoencephalography.","push :- - cents, not -hunter, not -critter.","- hotel :- - tie_knots, not compound, not -peal.","phatic_speech :- - tie_knots, not compound, not -peal.","atom_bomb :- - russia, not lab_scientist_to_watch, not star_of_david.","male :- - russia, not lab_scientist_to_watch, not star_of_david."],"noisy_rules":{"a":["heal :- cents, not cranberry_sauce, not phatic_speech.","heal :- - shell."],"b":["compound :- heal.","- male :- - phatic_speech, not -heal."],"c":["- male :- - repayment.","compound :- - atom_bomb."],"d":["- potassium_chloride :- - shell, - getting_cavities_in_teeth.","- curd :- not repayment, not atom_bomb, council."],"e":["devices :- - music.","- shirtdress :- not fancy_goods, - banyan."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_9_10_11_8_10_0.5_1.0_3_0_1","seed":9,"num_facts":11,"num_rules":12,"num_related_predicates":23,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"work_time.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["egg.","pocket.","cathedral.","scalp.","safety.","field_day.","midnight.","preparing_for_party.","rooster.","hens.","hen."],"noisy_facts":[],"min_fact_dicts_for_query":["egg.","pocket.","cathedral.","scalp.","safety.","field_day.","midnight.","preparing_for_party.","rooster.","hens.","hen."],"noiseless_rules":["work_time :- produce_eggs, day, field_day.","produce_eggs :- chicken, hens, hen.","chicken :- egg, preparing_for_party, rooster.","late_night_hour :- pocket.","day :- afternoon, night, field_day.","simpleton :- sheep, nebbish.","afternoon :- catholic.","peafowl :- catholic.","night :- late_night_hour, simpleton, midnight.","sheep :- cathedral, scalp, safety.","catholic :- cathedral, scalp, safety.","nebbish :- peafowl, hens."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_91_8_9_7_7_0.5_1.0_3_0_1","seed":91,"num_facts":9,"num_rules":10,"num_related_predicates":19,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" object.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- creating_awareness.","- singer.","east.","- south.","- safety.","no_mans_land.","fox.","- bearskin.","sonora_lac."],"noisy_facts":["baseball_field.","- bat.","- sellers_market.","ostrich.","baseball.","yodeller."],"min_fact_dicts_for_query":["- creating_awareness."],"noiseless_rules":["- object :- head, not fur, not location.","head :- - creating_awareness.","- leopard :- - creating_awareness.","- layer :- seal.","- region :- - layer, not area.","- area :- trouble_spot, not safety, not -no_mans_land.","- fur :- - leopard, not -fox, not bearskin.","seal :- - leopard, not -fox, not bearskin.","trouble_spot :- - singer, not -sonora_lac.","- location :- - region, not -east, not south."],"noisy_rules":{"a":["object :- layer.","object :- - trouble_spot, location."],"b":["- east :- object.","south :- object."],"c":["- no_mans_land :- region, not -area, location.","fur :- - seal, not trouble_spot."],"d":["- sonora_lac :- location.","singer :- region, - trouble_spot, yodeller."],"e":["- playing_baseball :- baseball_field, - bat, not -baseball.","gyrfalcon :- ostrich, not sellers_market."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_70_6_8_3_3_0.5_1.0_5_2_3","seed":70,"num_facts":4,"num_rules":9,"num_related_predicates":13,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"foil(\"Alexis\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["emergency(\"Alexis\").","- rider(\"Alexis\", \"William\").","ebb(\"Jon\", \"William\").","megapode(\"Jon\", \"William\")."],"noisy_facts":[],"min_fact_dicts_for_query":["emergency(\"Alexis\").","- rider(\"Alexis\", \"William\").","ebb(\"Jon\", \"William\")."],"noiseless_rules":["foil(V1) :- - court(V3), - game(V0, V1), not -journey_to_moon(V1, V3).","- tien_shan(V1, V2) :- emergency(V1), - rider(V1, V3), ebb(V2, V3), not -megapode(V2, V3).","stealth_bomber(V1, V2) :- emergency(V1), - rider(V1, V3), ebb(V2, V3), not -megapode(V2, V3).","- veins(V2) :- emergency(V1), - rider(V1, V3), ebb(V2, V3), not -megapode(V2, V3).","- court(V1) :- - tien_shan(V1, V2), not -young_hen(V1, V2).","- game(V2, V1) :- stealth_bomber(V1, V2).","peachick(V2) :- stealth_bomber(V1, V2).","young_hen(V2, V2) :- peachick(V2).","journey_to_moon(V2, V2) :- - veins(V2)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_70_9_12_9_11_0.5_1.0_3_2_3","seed":70,"num_facts":12,"num_rules":13,"num_related_predicates":25,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"morion(\"Katie\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- bean(\"Heather\").","tongues(\"Katie\").","tinting(\"David\").","- giant(\"Julie\", \"David\").","- figure(\"Julie\", \"Heather\").","- traditionalist(\"Katie\", \"Heather\").","- ground_beetle(\"Katie\", \"Heather\").","space(\"Katie\", \"David\").","- computer_memory_unit(\"Katie\", \"Heather\").","- cardiopulmonary_resuscitation(\"Katie\", \"Heather\").","- making_meal(\"David\", \"Heather\").","malian(\"Katie\", \"Heather\")."],"noisy_facts":["fir_cone(\"David\", \"Heather\").","- return_phone_calls(\"Julie\", \"Katie\").","- rudder(\"Julie\", \"Heather\").","- fly_faster_than_propeller_driven_planes(\"Julie\", \"Katie\").","- honey_buzzard(\"Julie\", \"David\")."],"min_fact_dicts_for_query":["- bean(\"Heather\").","tongues(\"Katie\").","tinting(\"David\").","- giant(\"Julie\", \"David\").","space(\"Katie\", \"David\").","- computer_memory_unit(\"Katie\", \"Heather\").","- cardiopulmonary_resuscitation(\"Katie\", \"Heather\")."],"noiseless_rules":["morion(V1) :- byte(V3), celibacy(V0, V1), not -stream(V1, V3).","- book(V1, V2) :- - part_of_finance(V1, V2), trim(V2, V3).","byte(V3) :- - bean(V3), - giant(V0, V2), not figure(V0, V3).","- screw(V2) :- - bean(V3), - giant(V0, V2), not figure(V0, V3).","- transmit_bubonic_plague(V0, V2) :- - bean(V3), - giant(V0, V2), not figure(V0, V3).","- part_of_finance(V1, V2) :- tongues(V1), space(V1, V2), - computer_memory_unit(V1, V3).","trim(V2, V3) :- tinting(V2), - cardiopulmonary_resuscitation(V1, V3), not making_meal(V2, V3).","chinook(V2, V3) :- tinting(V2), - cardiopulmonary_resuscitation(V1, V3), not making_meal(V2, V3).","expressway(V0, V3) :- elk(V0, V3), - ground_beetle(V1, V3), not -malian(V1, V3).","elk(V2, V3) :- trim(V2, V3), - traditionalist(V1, V3), not ground_beetle(V1, V3).","celibacy(V3, V1) :- - book(V1, V2), - screw(V2), chinook(V2, V3).","- crossing_street(V3) :- - book(V1, V2), - screw(V2), chinook(V2, V3).","stream(V0, V3) :- - transmit_bubonic_plague(V0, V2), expressway(V0, V3), not crossing_street(V3)."],"noisy_rules":{"a":["- morion(V1) :- part_of_finance(V1, V2), not trim(V2, V3), - chinook(V2, V3).","- morion(V2) :- transmit_bubonic_plague(V0, V2)."],"b":["figure(V3, V3) :- - trim(V2, V3), - morion(V1).","- chinook(V1, V1) :- - morion(V1)."],"c":["traditionalist(V3, V3) :- not byte(V3), crossing_street(V3).","figure(V0, V3) :- - expressway(V0, V3)."],"d":["- stream(V1, V3) :- - chinook(V2, V3), - celibacy(V0, V1), - return_phone_calls(V0, V1).","part_of_finance(V2, V2) :- - trim(V2, V3), not chinook(V2, V3), fir_cone(V2, V3)."],"e":["live_oak(V0, V2) :- - honey_buzzard(V0, V2).","mcintosh(V1) :- - fly_faster_than_propeller_driven_planes(V0, V1), - rudder(V0, V3)."]}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_19_5_4_4_7_0.5_1.0_3_2_3","seed":19,"num_facts":6,"num_rules":5,"num_related_predicates":11,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"P4(\"Rebecca\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P5(\"Rebecca\", \"Richard\").","P6(\"Rebecca\", \"Teresa\").","- P7(\"Teresa\", \"Richard\").","- P8(\"Teresa\", \"Richard\").","P9(\"Rebecca\", \"Richard\").","- P10(\"Rebecca\", \"Richard\")."],"noisy_facts":["P14(\"Rebecca\").","- P15(\"Rebecca\", \"Teresa\").","- P16(\"Teresa\", \"Courtney\").","P12.","P11."],"min_fact_dicts_for_query":["P5(\"Rebecca\", \"Richard\").","P6(\"Rebecca\", \"Teresa\").","- P7(\"Teresa\", \"Richard\").","P9(\"Rebecca\", \"Richard\")."],"noiseless_rules":["P4(V0) :- - P1(V0, V3), not P2(V0, V3).","- P0(V1) :- P5(V0, V2), - P7(V1, V2), not P8(V1, V2).","- P1(V0, V3) :- - P2(V0, V3), - P3(V0, V2), not -P5(V0, V2).","- P2(V0, V1) :- - P0(V1), P6(V0, V1).","- P3(V0, V2) :- P6(V0, V1), P9(V0, V2), not P10(V0, V2)."],"noisy_rules":{"a":["- P4(V0) :- P1(V0, V3), P2(V0, V3), P3(V0, V2).","- P4(V0) :- P0(V1), P1(V0, V3), P2(V0, V3)."],"b":["P1(V0, V3) :- P1(V0, V3), - P4(V0).","P3(V0, V0) :- - P4(V0)."],"c":["P1(V0, V2) :- P0(V1), P3(V0, V2).","P8(V3, V0) :- P1(V0, V3), not -P2(V0, V3)."],"d":["P2(V0, V2) :- P0(V1), P3(V0, V2), P11.","P8(V3, V0) :- P1(V0, V3), not -P2(V0, V3), not -P12."],"e":["- P13(V0) :- P14(V0).","- P17(V1, V3) :- - P15(V0, V1), - P16(V1, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_32_10_15_10_12_0.5_1.0_5_0_1","seed":32,"num_facts":15,"num_rules":16,"num_related_predicates":31,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":13,"target_query":"commissioned_officer.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["colonel.","sheets.","- cormorant.","- ballpoint_pen.","- auklet.","endurance.","belgian_hare.","general_officer.","subaltern.","captain.","field_grade_officer.","- plates.","old_world_white_pelican.","white_pelican.","silver_certificate."],"noisy_facts":["having_more_time_in_day.","light_bones.","- atom.","war."],"min_fact_dicts_for_query":["colonel."],"noiseless_rules":["commissioned_officer :- commissioned_military_officer, not -pointing_at, not seabird, not company.","commissioned_military_officer :- colonel, not -general_officer, not -subaltern, not -captain, not -field_grade_officer.","penguin :- colonel, not -general_officer, not -subaltern, not -captain, not -field_grade_officer.","dollar :- colonel, not -general_officer, not -subaltern, not -captain, not -field_grade_officer.","come_in_matching_sets :- sheets, not plates, not -old_world_white_pelican, not -white_pelican, not -silver_certificate.","- east_india_company :- sheets, not plates, not -old_world_white_pelican, not -white_pelican, not -silver_certificate.","- pelican :- sheets, not plates, not -old_world_white_pelican, not -white_pelican, not -silver_certificate.","pelecaniform_seabird :- - pelican, not cormorant.","- overhang :- - pelican, not cormorant.","pointing_at :- - ballpoint_pen.","- write_with :- - ballpoint_pen.","- seabird :- pelecaniform_seabird, not -sphenisciform_seabird, not -auk.","sphenisciform_seabird :- penguin, not -come_in_matching_sets.","- company :- come_in_matching_sets, not east_india_company, not overhang, not -monetary_unit.","auk :- - auklet.","monetary_unit :- dollar, not pelican, not write_with, not -endurance, not -belgian_hare."],"noisy_rules":{"a":["- commissioned_officer :- - pelecaniform_seabird, not sphenisciform_seabird.","- commissioned_officer :- overhang, not -company."],"b":["- sphenisciform_seabird :- - commissioned_officer.","- field_grade_officer :- not -company, - commissioned_officer."],"c":["- subaltern :- not pelecaniform_seabird, overhang, not -write_with, company.","east_india_company :- company."],"d":["- dollar :- - pointing_at.","overhang :- not -write_with, having_more_time_in_day."],"e":["- bombs :- war, not atom.","- asian :- light_bones."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_31_7_9_6_8_0.5_1.0_3_3_4","seed":31,"num_facts":8,"num_rules":10,"num_related_predicates":18,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" creation(\"Ronald\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["artifact(\"Joanna\", \"Sharon\").","picture_book.","sharp(\"Ronald\", \"Joanna\", \"James\").","- geometric(\"Joanna\", \"Sharon\", \"James\").","- production_line(\"Sharon\", \"Michael\", \"James\").","by_product(\"Sharon\", \"Michael\", \"James\").","- afterpiece(\"Ronald\", \"Joanna\", \"James\").","morceau(\"Ronald\", \"Joanna\", \"James\")."],"noisy_facts":["murphy_bed(\"Ronald\", \"Sharon\").","- once(\"Ronald\", \"Joanna\", \"James\").","sleep_while_away_from_home(\"Ronald\").","- oscine(\"Ronald\", \"Joanna\", \"Michael\").","- department_store(\"Ronald\", \"Sharon\").","- wooden(\"Michael\", \"James\").","- tugboat(\"Ronald\", \"Joanna\", \"James\")."],"min_fact_dicts_for_query":["artifact(\"Joanna\", \"Sharon\").","sharp(\"Ronald\", \"Joanna\", \"James\")."],"noiseless_rules":["- creation(V0) :- steel_mill(V0, V2, V3), textile_mill(V0, V2, V4), not product(V0, V3, V4).","classic(V0, V2) :- artifact(V1, V2), sharp(V0, V1, V4), not geometric(V1, V2, V4).","steel_mill(V0, V2, V0) :- classic(V0, V2), not piece(V0, V2), not -adult(V0, V2).","textile_mill(V0, V2, V2) :- classic(V0, V2), not -picture_book.","professional(V0, V0, V0) :- classic(V0, V2), not -picture_book.","book(V2, V2, V2) :- classic(V0, V2), not -picture_book.","- piece(V0, V4) :- professional(V0, V1, V4), not afterpiece(V0, V1, V4), not -morceau(V0, V1, V4).","- product(V2, V3, V4) :- book(V2, V3, V4), not production_line(V2, V3, V4), not -by_product(V2, V3, V4).","factory(V4, V2, V4) :- book(V2, V3, V4), not production_line(V2, V3, V4), not -by_product(V2, V3, V4).","adult(V0, V2) :- professional(V0, V1, V4), factory(V1, V2, V4)."],"noisy_rules":{"a":["creation(V1) :- - factory(V1, V2, V4).","creation(V0) :- - classic(V0, V2), not -piece(V0, V2), product(V0, V3, V4)."],"b":["- artifact(V0, V0) :- creation(V0).","- factory(V3, V2, V4) :- - steel_mill(V0, V2, V3), - textile_mill(V0, V2, V4), creation(V0)."],"c":["- factory(V2, V2, V0) :- - classic(V0, V2).","- professional(V0, V3, V4) :- piece(V0, V2), product(V0, V3, V4), - adult(V0, V2)."],"d":["- textile_mill(V0, V0, V4) :- - professional(V0, V1, V4), not tugboat(V0, V1, V4).","- steel_mill(V0, V2, V0) :- not classic(V0, V2), - department_store(V0, V2), not -murphy_bed(V0, V2)."],"e":["passerine(V1, V3) :- - oscine(V0, V1, V3).","- marmot(V0, V3, V4) :- sleep_while_away_from_home(V0), - wooden(V3, V4), - once(V0, V1, V4)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_50_5_4_1_4_0.5_1.0_5_2_3","seed":50,"num_facts":4,"num_rules":5,"num_related_predicates":9,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":3,"target_query":" rifle_butt(\"Andre\", \"Darrell\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["- replacement_cost(\"Andre\", \"Darrell\").","point(\"Andre\", \"Michael\").","- residence(\"Andre\", \"Darrell\").","- chick(\"Andre\", \"Michael\")."],"noisy_facts":["yak_butter(\"Darrell\", \"Michael\").","wet_noses(\"Andre\", \"Darrell\").","- propellers(\"Andre\", \"Darrell\").","colony(\"Margaret\", \"Andre\").","mailer(\"Margaret\", \"Andre\").","- maximizing_use_of_sunlight(\"Margaret\", \"Andre\")."],"min_fact_dicts_for_query":["- replacement_cost(\"Andre\", \"Darrell\").","- residence(\"Andre\", \"Darrell\")."],"noiseless_rules":["- rifle_butt(V1, V2) :- bowling(V0, V3), - keep_yourself_warm(V1, V2), not residence(V1, V2), not chick(V1, V3).","bowling(V2, V2) :- - board(V1, V2), not extremity(V1, V2), not keep_yourself_warm(V1, V2).","- board(V1, V2) :- - replacement_cost(V1, V2).","- extremity(V1, V1) :- point(V1, V3), not chick(V1, V3).","- keep_yourself_warm(V1, V2) :- - residence(V1, V2)."],"noisy_rules":{"a":["rifle_butt(V1, V2) :- - bowling(V0, V3), board(V1, V2), not -extremity(V1, V2), not -keep_yourself_warm(V1, V2).","rifle_butt(V1, V2) :- extremity(V1, V2)."],"b":["replacement_cost(V1, V2) :- extremity(V1, V2), not -keep_yourself_warm(V1, V2), not -rifle_butt(V1, V2).","replacement_cost(V1, V2) :- - bowling(V0, V3), not -board(V1, V2), extremity(V1, V2), not -keep_yourself_warm(V1, V2), not -rifle_butt(V1, V2)."],"c":["extremity(V1, V2) :- - bowling(V0, V3), not -board(V1, V2), keep_yourself_warm(V1, V2).","board(V1, V2) :- - bowling(V0, V3), keep_yourself_warm(V1, V2)."],"d":["chick(V1, V1) :- not -board(V1, V2), - propellers(V1, V2).","keep_yourself_warm(V1, V2) :- not -board(V1, V2), wet_noses(V1, V2)."],"e":["- voice_opinions(V0, V1) :- not -mailer(V0, V1), not maximizing_use_of_sunlight(V0, V1), colony(V0, V1).","- psilosis(V3) :- yak_butter(V2, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_36_10_11_9_12_0.5_1.0_5_0_1","seed":36,"num_facts":13,"num_rules":12,"num_related_predicates":25,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"recalculation.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["series.","lettuce.","instruments.","humpty_dumpty.","- airfield.","conservative.","- preposition.","alum.","- colloquium.","- repair.","protestant_church.","oleo_oil.","gouge."],"noisy_facts":["bumper.","round_steak.","- nut_collector.","penguin.","- bridle.","beer.","- blush.","hybrid.","god.","drama.","- figure."],"min_fact_dicts_for_query":["series."],"noiseless_rules":["recalculation :- - roentgenium.","fancy_goods :- series.","nightmare :- series.","teacher :- series.","- roentgenium :- fancy_goods, not -british_east_africa, not -carissa_plum, not -protestant_church.","- shrapnel :- nightmare, not -tongue, not -gouge.","british_east_africa :- fool, not -religionist, not -ground_hog.","fool :- lettuce, not colloquium, not repair, not -protestant_church, not -oleo_oil.","carissa_plum :- teacher.","religionist :- - shrapnel, not -carissa_plum.","tongue :- instruments, not airfield, not -conservative, not preposition, not -alum.","ground_hog :- series, not -humpty_dumpty."],"noisy_rules":{"a":["- recalculation :- - nightmare, not fool, not tongue.","- recalculation :- - ground_hog."],"b":["colloquium :- - recalculation.","- ground_hog :- - fool, - recalculation."],"c":["colloquium :- roentgenium, - carissa_plum.","roentgenium :- - ground_hog."],"d":["- oleo_oil :- not fancy_goods, - tongue, not -god, - bridle.","- carissa_plum :- shrapnel, not ground_hog, beer."],"e":["sender :- round_steak, penguin, not figure.","torrent :- not nut_collector, drama, not blush, bumper, hybrid."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_43_7_11_9_10_0.5_1.0_5_2_3","seed":43,"num_facts":12,"num_rules":12,"num_related_predicates":24,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" fly_aeroplane(\"Matthew\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- sore_throats.","chili_sauce(\"Sharon\").","hang_upside_down(\"Matthew\").","- thick(\"Tyler\").","- ripcord(\"Tyler\").","side(\"Tyler\").","- asia(\"Matthew\", \"David\").","- surgeon(\"Tyler\", \"David\").","- assuaging_hunger(\"Tyler\", \"David\").","- triptych(\"Tyler\", \"Sharon\").","- top_billing(\"Matthew\", \"Tyler\").","horse(\"Tyler\", \"David\")."],"noisy_facts":["- quince(\"Matthew\", \"David\").","- water_milfoil(\"Matthew\", \"Sharon\").","- making_money_without_really_working(\"Matthew\", \"Sharon\").","barley(\"Matthew\", \"Sharon\").","- material(\"Tyler\", \"Sharon\").","- atlanta(\"David\", \"Sharon\")."],"min_fact_dicts_for_query":["chili_sauce(\"Sharon\").","hang_upside_down(\"Matthew\").","- asia(\"Matthew\", \"David\").","- surgeon(\"Tyler\", \"David\").","- top_billing(\"Matthew\", \"Tyler\").","horse(\"Tyler\", \"David\")."],"noiseless_rules":["- fly_aeroplane(V0) :- irredenta(V3), - race(V0, V1), not popular_form_of_transport(V0, V3).","irredenta(V2) :- studs(V1, V2), not sore_throats.","isogamete(V2) :- studs(V1, V2), not sore_throats.","- hotel_room(V1, V2) :- studs(V1, V2), not sore_throats.","muscles(V2, V2) :- studs(V1, V2), not sore_throats.","thin_paint(V1) :- chili_sauce(V3), - asia(V0, V2), - surgeon(V1, V2), not assuaging_hunger(V1, V2), not triptych(V1, V3).","studs(V1, V2) :- chili_sauce(V3), - asia(V0, V2), - surgeon(V1, V2), not assuaging_hunger(V1, V2), not triptych(V1, V3).","- race(V0, V1) :- hang_upside_down(V0), - top_billing(V0, V1), horse(V1, V2).","tournament(V1, V2) :- hang_upside_down(V0), - top_billing(V0, V1), horse(V1, V2).","- woolgathering(V2, V2) :- isogamete(V2).","japan(V1, V1) :- - hotel_room(V1, V2), not -thin_paint(V1), not thick(V1), not ripcord(V1), not -side(V1).","- popular_form_of_transport(V0, V3) :- muscles(V0, V2), studs(V1, V2), tournament(V1, V2), - woolgathering(V1, V3), not -japan(V0, V3)."],"noisy_rules":{"a":["fly_aeroplane(V0) :- - irredenta(V3), hotel_room(V1, V2), - tournament(V1, V2), - japan(V0, V3), not -popular_form_of_transport(V0, V3).","fly_aeroplane(V3) :- - irredenta(V3), woolgathering(V1, V3)."],"b":["- muscles(V0, V1) :- race(V0, V1), not -fly_aeroplane(V0).","- tournament(V1, V2) :- - irredenta(V3), - muscles(V0, V2), - thin_paint(V1), not studs(V1, V2), fly_aeroplane(V0)."],"c":["hotel_room(V2, V2) :- - muscles(V0, V2).","top_billing(V3, V1) :- - irredenta(V3), - isogamete(V2), hotel_room(V1, V2)."],"d":["surgeon(V1, V2) :- - irredenta(V3), not thin_paint(V1), - tournament(V1, V2), popular_form_of_transport(V0, V3), not water_milfoil(V0, V3).","- muscles(V0, V2) :- - tournament(V1, V2), woolgathering(V1, V3), - japan(V0, V3), - making_money_without_really_working(V0, V3)."],"e":["- surprise(V2) :- - atlanta(V2, V3).","- lincoln(V0, V2) :- - quince(V0, V2), barley(V0, V3), - material(V1, V3)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_3_10_12_12_15_0.5_1.0_3_0_1","seed":3,"num_facts":15,"num_rules":13,"num_related_predicates":28,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":13,"target_query":"P12.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P13.","- P14.","- P15.","P16.","P17.","- P18.","P19.","- P20.","- P21.","- P22.","P23.","- P24.","- P25.","- P26.","- P27."],"noisy_facts":["P32.","- P33.","- P36.","- P29.","P28.","- P34.","- P31."],"min_fact_dicts_for_query":["- P13."],"noiseless_rules":["P12 :- P1, not -P23, not P24.","P0 :- - P11, not P25, not P26.","P1 :- P0, not P8, not P22.","- P2 :- - P13, not -P16, not -P17.","P3 :- - P13, not -P16, not -P17.","P4 :- - P14, not P20, not P21.","- P5 :- - P14, not P20, not P21.","- P6 :- - P14, not P20, not P21.","- P7 :- - P10, not P25, not P27.","- P8 :- - P2, not -P4, not P9.","- P9 :- - P5, not P7, not -P23.","- P10 :- - P15, not P18, not -P19.","- P11 :- P3, not P6, not P7."],"noisy_rules":{"a":["- P12 :- not -P2, P6.","- P12 :- - P4, P9."],"b":["P11 :- - P4, not P12.","- P16 :- P11, not P12."],"c":["P24 :- P5.","P26 :- not -P5, P6, not -P11."],"d":["- P17 :- not -P5, P8, P28.","P11 :- P2, - P29."],"e":["- P30 :- - P31, not -P32, not P33.","- P35 :- - P34, - P36."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_34_7_6_6_7_0.5_1.0_3_1_2","seed":34,"num_facts":10,"num_rules":7,"num_related_predicates":17,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8333333333333333,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"care_for_patients(\"Matthew\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- pod(\"Matthew\").","helium(\"Matthew\").","antiquity(\"Matthew\").","- stock_saddle(\"Matthew\").","- sport(\"Matthew\").","- getting_attention(\"Matthew\").","breast(\"Matthew\").","- hisser(\"Matthew\").","- glove(\"Matthew\").","erogenous_zone(\"Matthew\")."],"noisy_facts":[],"min_fact_dicts_for_query":["helium(\"Matthew\")."],"noiseless_rules":["care_for_patients(V2) :- - bird(V2), not archenteron(V2), not sport(V2).","- germanium(V2) :- - pod(V2).","- bird(V2) :- - mother_hubbard(V2), not -embryo(V2), not american_frogbit(V2).","- mother_hubbard(V2) :- helium(V2), not getting_attention(V2), not -breast(V2).","- archenteron(V2) :- antiquity(V2), not hisser(V2), not glove(V2).","embryo(V2) :- - stock_saddle(V2).","- american_frogbit(V2) :- - germanium(V2), not sport(V2), not -erogenous_zone(V2)."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_2_8_9_9_9_0.5_1.0_3_1_2","seed":2,"num_facts":12,"num_rules":10,"num_related_predicates":22,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"chromatic_color(\"Heather\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["canary_yellow(\"Heather\").","beige(\"Heather\").","airplane(\"Heather\").","- israel(\"Heather\").","brownish_yellow(\"Heather\").","airfoil(\"Heather\").","- keep_track_of_time(\"Heather\").","- racetrack(\"Heather\").","- car(\"Heather\").","- gnathion(\"Heather\").","- puce(\"Heather\").","drawer(\"Heather\")."],"noisy_facts":["beldam(\"Heather\").","- granny(\"Heather\").","- wing(\"Heather\").","bushel(\"Heather\").","leading_edge(\"Heather\").","wicker_basket(\"Heather\").","mother(\"Heather\")."],"min_fact_dicts_for_query":["canary_yellow(\"Heather\")."],"noiseless_rules":["chromatic_color(V0) :- - yellow(V0), not brown(V0).","- yellow(V0) :- canary_yellow(V0), not -brownish_yellow(V0), not -airfoil(V0).","swamp_buggy(V0) :- canary_yellow(V0), not -brownish_yellow(V0), not -airfoil(V0).","- motor_vehicle(V0) :- - amphibian(V0), not car(V0), not gnathion(V0).","- brown(V0) :- - chocolate(V0), not -light_brown(V0), not puce(V0).","- chocolate(V0) :- - motor_vehicle(V0), not ski_plane(V0), not israel(V0).","- amphibian(V0) :- swamp_buggy(V0), not pontoon(V0).","light_brown(V0) :- beige(V0), not keep_track_of_time(V0), not racetrack(V0).","- pontoon(V0) :- beige(V0), not keep_track_of_time(V0), not racetrack(V0).","- ski_plane(V0) :- airplane(V0), not -drawer(V0)."],"noisy_rules":{"a":["- chromatic_color(V0) :- - swamp_buggy(V0).","- chromatic_color(V0) :- chocolate(V0)."],"b":["- swamp_buggy(V0) :- motor_vehicle(V0), not light_brown(V0), not chromatic_color(V0).","yellow(V0) :- - chromatic_color(V0)."],"c":["israel(V0) :- not -motor_vehicle(V0), - light_brown(V0).","amphibian(V0) :- - light_brown(V0)."],"d":["- airplane(V0) :- amphibian(V0), ski_plane(V0), - wing(V0).","- airfoil(V0) :- not -pontoon(V0), leading_edge(V0)."],"e":["basket(V0) :- bushel(V0), wicker_basket(V0).","- old_woman(V0) :- not -mother(V0), - granny(V0), not -beldam(V0)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_13_7_11_10_11_0.5_1.0_5_2_3","seed":13,"num_facts":12,"num_rules":12,"num_related_predicates":24,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" cannon(\"Daniel\", \"Tina\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- biceps_brachii(\"Daniel\", \"Tina\").","triclinium(\"Daniel\").","extremity(\"Daniel\", \"Tina\").","- portal(\"Daniel\", \"Tina\").","high_table(\"Tina\").","dinner_table(\"Daniel\", \"Tina\").","- dining_room_table(\"Daniel\", \"Tiffany\").","- refectory_table(\"Daniel\", \"Tiffany\").","- female(\"Tina\").","invertebrate(\"Tina\").","foot(\"Daniel\").","prehensor(\"Daniel\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- biceps_brachii(\"Daniel\", \"Tina\").","triclinium(\"Daniel\").","high_table(\"Tina\").","dinner_table(\"Daniel\", \"Tina\").","- dining_room_table(\"Daniel\", \"Tiffany\")."],"noiseless_rules":["- cannon(V0, V1) :- limb(V1), dining_table(V0, V1), not animal(V0, V1), not -murine(V0, V1).","limb(V1) :- - arm(V0, V1), not -leg(V0, V1), not -murine(V0, V1), not -extremity(V0, V1), not portal(V0, V1).","- arm(V0, V1) :- - biceps_brachii(V0, V1).","animal_leg(V0) :- - biceps_brachii(V0, V1).","dining_table(V0, V1) :- triclinium(V0), high_table(V1), dinner_table(V0, V1), - dining_room_table(V0, V3), not refectory_table(V0, V3).","- thoroughbred(V1) :- triclinium(V0), high_table(V1), dinner_table(V0, V1), - dining_room_table(V0, V3), not refectory_table(V0, V3).","- animal(V1, V1) :- - thoroughbred(V1), not biped(V1), not embryo(V1), not female(V1), not -invertebrate(V1).","leg(V0, V0) :- animal_leg(V0), not -foot(V0), not -prehensor(V0).","- biped(V0) :- animal_leg(V0), not -foot(V0), not -prehensor(V0).","quadruped(V0) :- animal_leg(V0), not -foot(V0), not -prehensor(V0).","murine(V1, V1) :- quadruped(V1).","- embryo(V1) :- quadruped(V1)."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_24_10_11_9_10_0.5_1.0_3_0_1","seed":24,"num_facts":14,"num_rules":12,"num_related_predicates":26,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":"P11.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P12.","P13.","- P14.","- P15.","P16.","P17.","- P18.","- P19.","- P20.","- P21.","P22.","P23.","P24.","- P25."],"noisy_facts":[],"min_fact_dicts_for_query":["P13."],"noiseless_rules":["P11 :- P3, not -P4, not -P6.","- P0 :- P2, not P7, not P9.","P1 :- - P12, not P21.","P2 :- P13.","P3 :- - P0, not P8, not P19.","P4 :- - P5, not -P10, not -P24.","- P5 :- - P14, not P25.","P6 :- - P15, not -P22, not -P23.","- P7 :- - P15, not -P22, not -P23.","- P8 :- P16, not P20, not P21.","- P9 :- P1, not -P17, not P18.","P10 :- P1, not -P17, not P18."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_31_9_11_9_11_0.5_1.0_5_2_3","seed":31,"num_facts":13,"num_rules":12,"num_related_predicates":25,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P11(\"Lisa\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P12(\"Lisa\", \"Paul\").","P13(\"Lisa\", \"Paul\").","P14(\"Lisa\").","P15(\"Lisa\", \"Paul\").","P16(\"Lisa\").","- P17(\"Lisa\").","P18(\"Lisa\").","- P19(\"Lisa\", \"Raymond\").","P20(\"Paul\", \"Raymond\").","P21(\"Lisa\", \"Paul\").","P22(\"Paul\", \"Adam\").","- P23(\"Adam\", \"Raymond\").","- P24(\"Adam\", \"Raymond\")."],"noisy_facts":["P26(\"Lisa\").","- P25(\"Lisa\").","P28(\"Lisa\", \"Adam\").","P30(\"Paul\").","P31(\"Paul\", \"Adam\").","P29(\"Paul\", \"Adam\")."],"min_fact_dicts_for_query":["P12(\"Lisa\", \"Paul\").","P14(\"Lisa\").","P21(\"Lisa\", \"Paul\").","P22(\"Paul\", \"Adam\").","- P23(\"Adam\", \"Raymond\")."],"noiseless_rules":["- P11(V0) :- - P0(V0, V1), P5(V1, V3), not P7(V1, V3).","- P0(V0, V1) :- P12(V0, V1).","- P1(V0, V3) :- P6(V0), P8(V3), P10(V0, V3), - P19(V0, V3), P20(V1, V3).","- P2(V0) :- - P1(V0, V3), not -P3(V0, V3).","P3(V0, V0) :- - P0(V0, V1), not -P13(V0, V1).","P4(V1) :- - P0(V0, V1), not -P13(V0, V1).","P5(V1, V3) :- P14(V0), P21(V0, V1), P22(V1, V2), - P23(V2, V3), not P24(V2, V3).","P6(V0) :- P14(V0), P21(V0, V1), P22(V1, V2), - P23(V2, V3), not P24(V2, V3).","- P7(V0, V0) :- - P2(V0), not -P9(V0), not -P16(V0), not P17(V0), not -P18(V0).","P8(V1) :- P4(V1).","P9(V1) :- P4(V1).","P10(V0, V0) :- P15(V0, V1), not -P21(V0, V1)."],"noisy_rules":{"a":["P11(V0) :- - P4(V1), - P5(V1, V3), - P9(V0), not P10(V0, V3).","P11(V0) :- not -P2(V0), - P3(V0, V3), not P6(V0)."],"b":["- P5(V0, V0) :- P2(V0), P11(V0).","- P4(V1) :- P0(V0, V1), not P3(V0, V3), - P5(V1, V3), P11(V0)."],"c":["- P14(V0) :- P2(V0), - P4(V1), - P5(V1, V3), not -P7(V1, V3).","- P21(V0, V1) :- P1(V0, V3), P2(V0), P7(V1, V3), - P8(V3), - P10(V0, V3)."],"d":["P0(V0, V0) :- - P6(V0), - P25(V0).","- P18(V0) :- - P3(V0, V3), not P6(V0), not P10(V0, V3), P26(V0)."],"e":["P27(V1) :- P28(V0, V2), P29(V1, V2).","- P32(V2) :- P30(V1), P31(V1, V2)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_21_5_5_1_3_0.5_1.0_3_0_1","seed":21,"num_facts":3,"num_rules":6,"num_related_predicates":9,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" council.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- master_mariner.","- double_negative.","- sucking."],"noisy_facts":[],"min_fact_dicts_for_query":["- double_negative."],"noiseless_rules":["- council :- moon, not sea_animal, not double_negative.","moon :- - hand_cream, not extended_family.","pick_berries :- - master_mariner, not sucking.","- hand_cream :- - double_negative.","- extended_family :- - double_negative.","- sea_animal :- pick_berries, not extended_family."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_60_10_12_11_12_0.5_1.0_5_0_1","seed":60,"num_facts":16,"num_rules":13,"num_related_predicates":29,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.6666666666666667,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P12.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P13.","P14.","P15.","P16.","- P17.","- P18.","- P19.","P20.","P21.","- P22.","- P23.","P24.","P25.","- P26.","- P27.","P28."],"noisy_facts":[],"min_fact_dicts_for_query":["P13."],"noiseless_rules":["P12 :- P0, not P4, not -P5, not P9, not P10.","P0 :- P1, not P3, not -P7.","P1 :- P13.","P2 :- P13.","- P3 :- - P11.","- P4 :- P2, not -P6, not P23.","P5 :- P14, not P18, not P19, not -P20, not -P21.","P6 :- P14, not P18, not P19, not -P20, not -P21.","P7 :- P15.","P8 :- P15.","- P9 :- P8, not P26, not P27, not -P28.","- P10 :- P16, not P22, not P23, not -P24, not -P25.","- P11 :- - P17."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_76_7_11_3_5_0.5_1.0_3_0_1","seed":76,"num_facts":6,"num_rules":12,"num_related_predicates":18,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":12,"target_query":" people_in_good_condition.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["benefit_of_reader.","word_processing.","sense_environment.","- fly_aeroplanes.","- feathering.","- hammer."],"noisy_facts":["- field_trial.","tollkeeper.","one_penny.","ski_conditions."],"min_fact_dicts_for_query":["benefit_of_reader."],"noiseless_rules":["- people_in_good_condition :- - vegetarians, not not_, not coinage.","- vegetarians :- benefit_of_reader, not -sense_environment.","- not_ :- benefit_of_reader, not -sense_environment.","drinking_beer :- keeping_time, not -planking, not belief.","keeping_time :- word_processing, not fly_aeroplanes, not feathering.","- clowder :- word_processing, not fly_aeroplanes, not feathering.","planking :- - not_, not clowder, not -passenger.","savings :- - not_, not clowder, not -passenger.","- belief :- sense_environment, not hammer.","passenger :- sense_environment, not hammer.","- pharaoh_ant :- sense_environment, not hammer.","- coinage :- drinking_beer, not -savings, not pharaoh_ant."],"noisy_rules":{"a":["people_in_good_condition :- not_, not savings, coinage.","people_in_good_condition :- pharaoh_ant."],"b":["- passenger :- not planking, people_in_good_condition.","- drinking_beer :- people_in_good_condition."],"c":["hammer :- vegetarians, not keeping_time.","feathering :- not_."],"d":["- planking :- not savings, - passenger, one_penny.","- seat_cushion :- - keeping_time, tollkeeper."],"e":["pet :- - field_trial.","- draft :- ski_conditions."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_12_8_8_8_10_0.5_1.0_5_0_1","seed":12,"num_facts":12,"num_rules":9,"num_related_predicates":21,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.4285714285714284,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"eating_dinner.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["find_downtown.","strengthening_sense_of_self.","- laying_waste.","square_inch.","- creating_from_raw_materials.","- conversation.","monster.","melody.","- stratum_germinativum.","- selling.","responding_thoughtfully.","square_shape."],"noisy_facts":["- airplane_propeller.","- slops.","- yellowhammer.","cormorant.","launching_plane.","- oscine.","curio."],"min_fact_dicts_for_query":["find_downtown."],"noiseless_rules":["eating_dinner :- - supporting_chess_pieces, not -employer.","step_lightly :- find_downtown.","- supporting_chess_pieces :- step_lightly, not -australian_turtledove.","friction :- step_lightly, not -australian_turtledove.","check_in :- strengthening_sense_of_self.","- canopy :- - laying_waste, not creating_from_raw_materials, not conversation, not -monster, not -melody.","- base :- square_inch, not stratum_germinativum.","australian_turtledove :- - base, not stratum_germinativum, not selling, not -responding_thoughtfully, not -square_shape.","employer :- friction, not -check_in, not canopy, not base."],"noisy_rules":{"a":["- eating_dinner :- not friction, not -canopy, base, not employer.","- eating_dinner :- canopy, not -base, not employer."],"b":["base :- not -supporting_chess_pieces, base, - eating_dinner.","- friction :- not step_lightly, base, - employer, - eating_dinner."],"c":["canopy :- not -supporting_chess_pieces, - friction, base, not employer.","- melody :- - step_lightly, not check_in, canopy, not australian_turtledove, not employer."],"d":["- square_inch :- - friction, not -canopy, - oscine.","- check_in :- - step_lightly, supporting_chess_pieces, not employer, not airplane_propeller."],"e":["frankenstein :- not -curio, not yellowhammer, cormorant.","- timekeeping :- not -launching_plane, - slops."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_19_6_8_1_2_0.5_1.0_5_0_1","seed":19,"num_facts":2,"num_rules":9,"num_related_predicates":11,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"cherry.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["fruit.","immortality."],"noisy_facts":["wet_suit.","- dress.","fly_to_flowers.","- nerve_fiber.","- rhythmic.","- learning_interesting_things_from.","- county_town.","- mass.","aquatic_plant.","two_wheel."],"min_fact_dicts_for_query":["fruit."],"noiseless_rules":["cherry :- chokecherry.","- wet_fly :- fruit, not -immortality.","- yoke :- fruit, not -immortality.","chokecherry :- fly, not -band, not -western_chokecherry, not -immortality.","fly :- - wet_fly, not -garment.","fur :- - wet_fly, not -garment.","band :- fur.","western_chokecherry :- - yoke.","garment :- - yoke."],"noisy_rules":{"a":["- cherry :- yoke.","- cherry :- yoke, - fur, not garment."],"b":["- fur :- not -yoke, not western_chokecherry, - cherry.","- fly :- - cherry."],"c":["yoke :- wet_fly, not fur, not western_chokecherry, not garment.","- fruit :- not -yoke, not chokecherry, - fly, - band, - western_chokecherry."],"d":["- garment :- not fly, - fur, - band, wet_suit.","yoke :- - western_chokecherry, not county_town."],"e":["gown :- not mass, not dress, not -two_wheel, - nerve_fiber.","vascular_plant :- - rhythmic, not -aquatic_plant, not learning_interesting_things_from, fly_to_flowers."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_39_7_6_4_7_0.5_1.0_3_2_3","seed":39,"num_facts":8,"num_rules":7,"num_related_predicates":15,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6666666666666667,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"P6(\"Wayne\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P7(\"Robin\").","P8(\"Wayne\").","- P9(\"Robin\", \"Anne\").","- P10(\"Wayne\").","P11(\"Robin\", \"Wayne\").","P12(\"Anne\", \"Wayne\").","- P13(\"Wayne\").","P14(\"Robin\", \"Wayne\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- P9(\"Robin\", \"Anne\").","P11(\"Robin\", \"Wayne\")."],"noiseless_rules":["P6(V3) :- P2(V3), P3(V0, V2), not -P5(V0, V3).","- P0(V0, V3) :- P7(V0), - P13(V3), not -P14(V0, V3).","- P1(V3) :- P2(V3), not P4(V3), not -P8(V3).","P2(V3) :- - P9(V0, V1), P11(V0, V3), not -P12(V1, V3).","P3(V3, V3) :- P2(V3).","- P4(V3) :- - P10(V3).","P5(V0, V3) :- - P0(V0, V3), not P1(V3), not P4(V3)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_33_6_6_6_7_0.5_1.0_3_3_4","seed":33,"num_facts":8,"num_rules":7,"num_related_predicates":15,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"cattle(\"Mary\", \"Sabrina\", \"Cynthia\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- yellowbelly_marmot(\"Mary\", \"Sabrina\").","- bovine(\"Mary\", \"Alison\", \"Cynthia\").","- horn(\"Mary\", \"Sabrina\", \"Anthony\").","bullock(\"Mary\", \"Cynthia\", \"Anthony\").","hoary_marmot(\"Sabrina\", \"Cynthia\").","- sight_organ(\"Mary\", \"Alison\", \"Sabrina\").","- squirrel(\"Sabrina\", \"Anthony\").","- abrocome(\"Cynthia\", \"Anthony\")."],"noisy_facts":["heliport(\"Mary\", \"Sabrina\").","control_tower(\"Sabrina\", \"Cynthia\").","- tick(\"Mary\", \"Sabrina\", \"Cynthia\").","water_hole(\"Mary\", \"Alison\", \"Sabrina\").","air_terminal(\"Mary\", \"Alison\", \"Sabrina\").","- business_address(\"Alison\", \"Sabrina\", \"Anthony\").","hotel_bill(\"Mary\", \"Alison\", \"Cynthia\")."],"min_fact_dicts_for_query":["- yellowbelly_marmot(\"Mary\", \"Sabrina\").","- bovine(\"Mary\", \"Alison\", \"Cynthia\").","- horn(\"Mary\", \"Sabrina\", \"Anthony\").","hoary_marmot(\"Sabrina\", \"Cynthia\").","- sight_organ(\"Mary\", \"Alison\", \"Sabrina\").","- squirrel(\"Sabrina\", \"Anthony\")."],"noiseless_rules":["cattle(V0, V2, V3) :- - placental(V0, V2, V3).","rodent(V0, V3, V4) :- marmot(V0, V3), - squirrel(V2, V4), not abrocome(V3, V4).","marmot(V0, V3) :- - yellowbelly_marmot(V0, V2), hoary_marmot(V2, V3), - sight_organ(V0, V1, V2).","- bull(V0, V1, V2) :- - bovine(V0, V1, V3), - horn(V0, V2, V4), not -bullock(V0, V3, V4).","- udder(V0, V3, V4) :- - bovine(V0, V1, V3), - horn(V0, V2, V4), not -bullock(V0, V3, V4).","- placental(V0, V2, V3) :- rodent(V0, V3, V4), - bull(V0, V1, V2), not cow(V0, V1, V2).","- cow(V0, V0, V4) :- rodent(V0, V3, V4), not udder(V0, V3, V4)."],"noisy_rules":{"a":["- cattle(V0, V2, V3) :- - marmot(V0, V3), not -bull(V0, V1, V2), cow(V0, V1, V2).","- cattle(V0, V2, V3) :- - rodent(V0, V3, V4), bull(V0, V1, V2)."],"b":["bovine(V0, V2, V3) :- - rodent(V0, V3, V4), placental(V0, V2, V3), not cattle(V0, V2, V3).","abrocome(V3, V3) :- - cattle(V0, V2, V3)."],"c":["udder(V0, V3, V4) :- - rodent(V0, V3, V4), bull(V0, V1, V2).","placental(V0, V2, V3) :- - rodent(V0, V3, V4), - marmot(V0, V3), bull(V0, V1, V2)."],"d":["- hoary_marmot(V2, V3) :- - rodent(V0, V3, V4), cow(V0, V1, V2), not -water_hole(V0, V1, V2).","abrocome(V2, V2) :- cow(V0, V1, V2)."],"e":["- diving(V0, V1) :- not -hotel_bill(V0, V1, V3), - tick(V0, V2, V3), - business_address(V1, V2, V4).","airport(V0, V3) :- heliport(V0, V2), control_tower(V2, V3), air_terminal(V0, V1, V2)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_5_10_10_6_8_0.5_1.0_5_1_2","seed":5,"num_facts":13,"num_rules":11,"num_related_predicates":24,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8888888888888888,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P10(\"Ashley\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P11(\"Ashley\").","- P12(\"Ashley\").","P13(\"Ashley\").","- P14(\"Ashley\").","P15(\"Ashley\").","P16(\"Ashley\").","- P17(\"Ashley\").","P18(\"Ashley\").","P19(\"Ashley\").","P20(\"Ashley\").","- P21(\"Ashley\").","- P22(\"Ashley\").","P23(\"Ashley\")."],"noisy_facts":["- P26(\"Ashley\").","- P29(\"Ashley\").","P24(\"Ashley\").","- P32(\"Dawn\").","- P31(\"Ashley\").","- P33(\"Dawn\").","- P30(\"Ashley\")."],"min_fact_dicts_for_query":["P11(\"Ashley\")."],"noiseless_rules":["- P10(V2) :- - P1(V2), not -P2(V2), not -P3(V2).","P0(V2) :- - P5(V2), not P7(V2).","- P1(V2) :- P11(V2), not P22(V2), not -P23(V2).","P2(V2) :- P0(V2), not -P4(V2), not -P6(V2), not -P8(V2), not -P9(V2).","P3(V2) :- - P12(V2).","P4(V2) :- P13(V2), not -P16(V2).","- P5(V2) :- - P14(V2), not -P16(V2).","P6(V2) :- P15(V2).","- P7(V2) :- P16(V2), not -P18(V2), not -P19(V2), not -P20(V2), not P21(V2).","P8(V2) :- P16(V2), not -P18(V2), not -P19(V2), not -P20(V2), not P21(V2).","P9(V2) :- - P17(V2)."],"noisy_rules":{"a":["P10(V2) :- not P0(V2), not P4(V2), not P6(V2), not -P7(V2), - P9(V2).","P10(V2) :- not -P1(V2), P5(V2), not -P7(V2), not P8(V2), not P9(V2)."],"b":["- P9(V2) :- not P2(V2), - P4(V2), P7(V2), not -P10(V2).","- P20(V2) :- - P0(V2), - P6(V2), not P8(V2), P10(V2)."],"c":["- P11(V2) :- P7(V2), - P8(V2).","- P11(V2) :- not -P1(V2), not P2(V2), not P3(V2), not -P7(V2), - P8(V2)."],"d":["P25(V2) :- P1(V2), not -P24(V2).","- P27(V2) :- - P2(V2), not P6(V2), - P8(V2), - P26(V2)."],"e":["P28(V2) :- not P29(V2), not P30(V2), - P31(V2).","P34(V1) :- - P32(V1), not P33(V1)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_3_5_8_7_10_0.5_1.0_5_2_3","seed":3,"num_facts":9,"num_rules":9,"num_related_predicates":18,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"telegraphic_signal(\"Carlos\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["grizzly_polar(\"John\", \"Carlos\").","eve(\"John\", \"Carlos\").","- rectum(\"John\", \"Carlos\").","- speaking(\"John\", \"Carlos\").","- ethanol(\"John\", \"Carlos\").","partridge(\"John\", \"Meagan\").","- phalanx(\"John\", \"Meagan\").","hydrozoan(\"John\", \"Meagan\").","american_indian_day(\"John\", \"Carlos\")."],"noisy_facts":["- range(\"John\", \"Carlos\").","become_wet(\"John\", \"Meagan\").","corps(\"Meagan\", \"Carlos\").","storing_books(\"John\", \"Meagan\").","gills(\"John\", \"Carlos\")."],"min_fact_dicts_for_query":["grizzly_polar(\"John\", \"Carlos\")."],"noiseless_rules":["telegraphic_signal(V3) :- economic_and_social_council(V1, V2), lepton(V1, V3), not -gone(V1, V3), not capability(V2, V3).","economic_and_social_council(V1, V1) :- lepton(V1, V3), not -grizzly_polar(V1, V3), not -eve(V1, V3), not -american_indian_day(V1, V3).","large_group(V1, V3) :- lepton(V1, V3), not -grizzly_polar(V1, V3), not -eve(V1, V3), not -american_indian_day(V1, V3).","- audit(V1) :- lepton(V1, V3), not -grizzly_polar(V1, V3), not -eve(V1, V3), not -american_indian_day(V1, V3).","lepton(V1, V3) :- grizzly_polar(V1, V3), not -eve(V1, V3).","print_on(V3, V3) :- grizzly_polar(V1, V3), not -eve(V1, V3).","gone(V1, V3) :- large_group(V1, V3), print_on(V2, V3), not rectum(V1, V3), not speaking(V1, V3), not ethanol(V1, V3).","hypospadias(V1, V2) :- large_group(V1, V3), print_on(V2, V3), not rectum(V1, V3), not speaking(V1, V3), not ethanol(V1, V3).","- capability(V2, V2) :- - audit(V2), hypospadias(V1, V2), not -partridge(V1, V2), not phalanx(V1, V2), not -hydrozoan(V1, V2)."],"noisy_rules":{"a":["- telegraphic_signal(V3) :- - economic_and_social_council(V1, V2), - large_group(V1, V3), not print_on(V2, V3), capability(V2, V3).","- telegraphic_signal(V3) :- - economic_and_social_council(V1, V2), - large_group(V1, V3), not print_on(V2, V3), - hypospadias(V1, V2), not -capability(V2, V3)."],"b":["- hydrozoan(V1, V2) :- - economic_and_social_council(V1, V2), - gone(V1, V3), not telegraphic_signal(V3).","audit(V2) :- - large_group(V1, V3), not -audit(V2), - print_on(V2, V3), capability(V2, V3), - telegraphic_signal(V3)."],"c":["ethanol(V1, V3) :- - economic_and_social_council(V1, V2), - large_group(V1, V3), - gone(V1, V3).","ethanol(V1, V3) :- - economic_and_social_council(V1, V2), - lepton(V1, V3), not print_on(V2, V3), - hypospadias(V1, V2)."],"d":["- lepton(V1, V3) :- - large_group(V1, V3), capability(V2, V3), gills(V1, V3).","- print_on(V2, V3) :- - economic_and_social_council(V1, V2), - lepton(V1, V3), not gone(V1, V3), not -become_wet(V1, V2)."],"e":["- moving(V2) :- storing_books(V1, V2).","- chaja(V2, V3) :- - range(V1, V3), corps(V2, V3)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_98_6_8_7_8_0.5_1.0_5_2_3","seed":98,"num_facts":10,"num_rules":9,"num_related_predicates":19,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"garden_stater(\"Deanna\", \"Brandon\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["farm(\"Mark\").","- drinking_alcohol(\"Deanna\", \"Mark\").","creation(\"Deanna\", \"Evan\").","- bell(\"Deanna\").","- cry(\"Deanna\").","quack(\"Deanna\").","avalanche(\"Deanna\").","- contact(\"Deanna\").","ranch(\"Deanna\", \"Mark\").","- studs(\"Brandon\", \"Mark\")."],"noisy_facts":["dessert(\"Deanna\", \"Evan\").","- imitation(\"Deanna\").","- replica(\"Deanna\", \"Mark\").","- place_to_buy_sandwich(\"Mark\").","- choice(\"Deanna\", \"Brandon\").","- angelus_bell(\"Deanna\", \"Brandon\").","- blackhead(\"Deanna\", \"Mark\").","fertilization(\"Deanna\")."],"min_fact_dicts_for_query":["farm(\"Mark\").","ranch(\"Deanna\", \"Mark\").","- studs(\"Brandon\", \"Mark\")."],"noiseless_rules":["garden_stater(V0, V2) :- horses(V0, V2), not -happening(V0, V2), not knell(V0, V2).","horses(V0, V2) :- farm(V3), ranch(V0, V3), - studs(V2, V3).","purr(V0) :- farm(V3), ranch(V0, V3), - studs(V2, V3).","pat(V0, V3) :- - drinking_alcohol(V0, V3).","- social_lubrication(V0) :- - drinking_alcohol(V0, V3).","sound(V0, V3) :- purr(V0), pat(V0, V3), not bell(V0), not cry(V0), not -quack(V0).","happening(V0, V0) :- - social_lubrication(V0), sound(V0, V1), not beginning(V0), not -avalanche(V0), not contact(V0).","- knell(V0, V1) :- sound(V0, V1), not -creation(V0, V1).","- beginning(V0) :- sound(V0, V1), not -creation(V0, V1)."],"noisy_rules":{"a":["- garden_stater(V0, V2) :- - horses(V0, V2), - pat(V0, V3), social_lubrication(V0).","- garden_stater(V0, V2) :- - horses(V0, V2), - pat(V0, V3), social_lubrication(V0), beginning(V0)."],"b":["contact(V0) :- - garden_stater(V0, V2).","- happening(V0, V2) :- - pat(V0, V3), social_lubrication(V0), - sound(V0, V1), - garden_stater(V0, V2)."],"c":["- happening(V0, V1) :- not purr(V0), - pat(V0, V3), not -social_lubrication(V0), - sound(V0, V1), beginning(V0).","- ranch(V0, V0) :- - sound(V0, V1), - happening(V0, V2), knell(V0, V2), beginning(V0)."],"d":["bell(V0) :- knell(V0, V2), not angelus_bell(V0, V2).","- creation(V0, V1) :- - purr(V0), - sound(V0, V1), not -fertilization(V0)."],"e":["blemish(V0) :- - place_to_buy_sandwich(V3), dessert(V0, V1), - choice(V0, V2), - blackhead(V0, V3).","copy(V0, V3) :- - imitation(V0), - replica(V0, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_21_6_8_7_8_0.5_1.0_5_2_3","seed":21,"num_facts":9,"num_rules":9,"num_related_predicates":18,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"tongues(\"Dominic\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- crate(\"Lori\", \"Justin\").","- oldsmobile(\"Justin\", \"Dominic\").","reproductive_cell(\"Lori\", \"Justin\").","blood_clot(\"Lori\", \"Justin\").","- feeding_homeless(\"Lori\", \"Justin\").","manitoba(\"Justin\", \"Dominic\").","soft(\"Justin\", \"Dominic\").","sob(\"Justin\", \"Dominic\").","shawnee(\"Lori\", \"Dominic\")."],"noisy_facts":["- communicator(\"Lori\", \"Stephen\").","- tax(\"Lori\", \"Stephen\").","pine_trees(\"Lori\", \"Justin\").","christmas(\"Lori\", \"Stephen\").","canadian_bacon.","- paycheck(\"Lori\", \"Stephen\").","feed_babies(\"Lori\", \"Dominic\").","constant(\"Lori\", \"Stephen\")."],"min_fact_dicts_for_query":["- crate(\"Lori\", \"Justin\").","shawnee(\"Lori\", \"Dominic\")."],"noiseless_rules":["tongues(V2) :- holiday(V0, V3), - hospital(V2, V3).","holiday(V0, V3) :- writing_instrument(V0, V3), not theca(V0, V3).","- sellout(V0, V1) :- - crate(V0, V1), shawnee(V0, V2).","minimalist(V1, V2) :- - crate(V0, V1), shawnee(V0, V2).","- hospital(V2, V2) :- minimalist(V1, V2), not oldsmobile(V1, V2).","- grimes_golden(V1, V2) :- minimalist(V1, V2), not oldsmobile(V1, V2).","writing_instrument(V0, V2) :- - sellout(V0, V1), - grimes_golden(V1, V2), not -reproductive_cell(V0, V1), not -blood_clot(V0, V1), not feeding_homeless(V0, V1).","- soy_sauce(V1, V1) :- - sellout(V0, V1), - grimes_golden(V1, V2), not -reproductive_cell(V0, V1), not -blood_clot(V0, V1), not feeding_homeless(V0, V1).","- theca(V2, V3) :- minimalist(V1, V2), - soy_sauce(V1, V3), not -manitoba(V1, V2), not -soft(V1, V2), not -sob(V1, V2)."],"noisy_rules":{"a":["- tongues(V0) :- - writing_instrument(V0, V3), soy_sauce(V1, V3).","- tongues(V3) :- soy_sauce(V1, V3), theca(V0, V3)."],"b":["- blood_clot(V2, V2) :- - tongues(V2).","theca(V2, V3) :- hospital(V2, V3), not tongues(V2)."],"c":["- soft(V1, V2) :- - holiday(V0, V3), - minimalist(V1, V2), not -hospital(V2, V3), not -grimes_golden(V1, V2), not -theca(V0, V3).","- writing_instrument(V2, V3) :- - minimalist(V1, V2), not -hospital(V2, V3), not -grimes_golden(V1, V2), soy_sauce(V1, V3)."],"d":["- minimalist(V3, V0) :- - holiday(V0, V3), canadian_bacon.","- holiday(V0, V3) :- theca(V0, V3), not communicator(V0, V3)."],"e":["- cock_doodle_doo(V0, V3) :- pine_trees(V0, V1), - paycheck(V0, V3), not tax(V0, V3), constant(V0, V3).","- cry_loudly(V0, V3) :- feed_babies(V0, V2), christmas(V0, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_95_8_10_7_10_0.5_1.0_5_2_3","seed":95,"num_facts":9,"num_rules":11,"num_related_predicates":20,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.5714285714285714,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"baby(\"Kenneth\", \"David\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- sleeve(\"Timothy\").","- hen.","growing(\"Timothy\", \"Cathy\").","- wool(\"Timothy\", \"Cathy\").","glasses_case(\"Timothy\", \"Cathy\").","shepherd(\"Timothy\", \"Cathy\").","- corn(\"Cathy\", \"David\").","cotton(\"Cathy\", \"David\").","- carrier_bag(\"Cathy\", \"David\")."],"noisy_facts":["- check(\"Cathy\", \"David\").","- farm(\"Timothy\", \"Cathy\").","- bearing(\"Kenneth\", \"David\").","- course(\"Timothy\", \"Cathy\").","- bean(\"Timothy\", \"Cathy\").","- east_west_direction(\"Timothy\", \"David\").","- chick(\"Timothy\", \"Cathy\").","- qibla(\"Timothy\", \"David\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["baby(V1, V3) :- - seed(V3), - nest(V3), - egg(V0, V1), doll(V0, V2), not -crop(V1, V3).","- seed(V3) :- sheep(V0, V3).","- nest(V3) :- chicken(V2, V3).","- egg(V0, V2) :- farmer(V0, V2), not -doll(V0, V2).","farmer(V0, V2) :- - sleeve(V0), glasses_case(V0, V2).","case(V2) :- - sleeve(V0), glasses_case(V0, V2).","sheep(V0, V0) :- case(V2), growing(V0, V2), not wool(V0, V2), not -glasses_case(V0, V2), not -shepherd(V0, V2).","- barnyard(V2, V0) :- case(V2), growing(V0, V2), not wool(V0, V2), not -glasses_case(V0, V2), not -shepherd(V0, V2).","doll(V3, V3) :- - seed(V3), not hen.","chicken(V3, V3) :- - seed(V3), not hen.","crop(V3, V3) :- - barnyard(V2, V3), not corn(V2, V3), not -cotton(V2, V3), not carrier_bag(V2, V3)."],"noisy_rules":{"a":["- baby(V1, V3) :- seed(V3), egg(V0, V1), not farmer(V0, V2), - chicken(V2, V3), - crop(V1, V3).","- baby(V1, V3) :- nest(V3), egg(V0, V1), - farmer(V0, V2), not -barnyard(V2, V3), not chicken(V2, V3)."],"b":["- sheep(V3, V3) :- barnyard(V2, V3), - crop(V1, V3), - baby(V1, V3).","- shepherd(V3, V2) :- seed(V3), - case(V2), - baby(V1, V3)."],"c":["barnyard(V2, V3) :- not -seed(V3), - doll(V0, V2), - crop(V1, V3).","- growing(V0, V2) :- - farmer(V0, V2), - chicken(V2, V3)."],"d":["barnyard(V2, V3) :- - farmer(V0, V2), - sheep(V0, V3), - chicken(V2, V3), - chick(V0, V2).","- growing(V0, V2) :- seed(V3), - farmer(V0, V2), - crop(V1, V3), - farm(V0, V2), - bean(V0, V2)."],"e":["direction(V1, V3) :- - course(V0, V2), - east_west_direction(V0, V3), not qibla(V0, V3), - bearing(V1, V3).","- draft(V2) :- - check(V2, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_70_10_14_10_12_0.5_1.0_3_3_4","seed":70,"num_facts":14,"num_rules":15,"num_related_predicates":29,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"garden_snail(\"Dawn\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["play_violin(\"Dawn\").","- riding_boot(\"Nicholas\", \"Anita\").","- halter(\"Anita\", \"Dawn\", \"Joseph\").","- good_way_to_learn(\"Anita\", \"John\").","- driven(\"John\", \"Dawn\").","spot_prey_from_air(\"Nicholas\", \"John\", \"Joseph\").","- do_harm(\"Anita\", \"John\", \"Joseph\").","- tineoid(\"Nicholas\", \"Dawn\", \"Joseph\").","- waging_war(\"Nicholas\", \"John\", \"Joseph\").","deity(\"Anita\", \"Dawn\", \"Joseph\").","- proclamation(\"Nicholas\", \"Anita\", \"John\").","- beauty(\"Nicholas\", \"John\", \"Dawn\").","cigarillo(\"Anita\", \"Dawn\", \"Joseph\").","- partridge(\"Anita\", \"Dawn\", \"Joseph\")."],"noisy_facts":["jonathan(\"Nicholas\", \"Anita\", \"Dawn\").","black_belt(\"Nicholas\", \"Anita\", \"Joseph\").","- foot(\"Nicholas\", \"Dawn\", \"Joseph\").","crossing(\"Nicholas\", \"Anita\").","finish_coat(\"Anita\", \"John\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["garden_snail(V3) :- - shelfful(V0, V1), - thought(V1, V3), - eurocurrency(V0, V2, V3).","- shelfful(V0, V1) :- - space_helmet(V1, V2), - kestrel(V0, V1, V4), - tineoid(V0, V3, V4).","toilet(V3, V4) :- play_violin(V3), cigarillo(V1, V3, V4), not partridge(V1, V3, V4).","- thought(V1, V3) :- getting_from_one_place_to_another(V0, V3), - proclamation(V0, V1, V2), not beauty(V0, V2, V3).","- space_helmet(V1, V2) :- audubons_caracara(V2), finch(V2, V4), red_green(V1, V2, V3).","- kestrel(V0, V1, V4) :- - riding_boot(V0, V1), - driven(V2, V3), spot_prey_from_air(V0, V2, V4).","audubons_caracara(V3) :- play_violin(V3), - halter(V1, V3, V4), not -cigarillo(V1, V3, V4).","woof(V1, V1, V3) :- play_violin(V3), - halter(V1, V3, V4), not -cigarillo(V1, V3, V4).","finch(V2, V4) :- - good_way_to_learn(V1, V2), - waging_war(V0, V2, V4), deity(V1, V3, V4).","live_underwater(V1, V2, V4) :- - good_way_to_learn(V1, V2), - waging_war(V0, V2, V4), deity(V1, V3, V4).","brome(V1, V2, V3) :- - good_way_to_learn(V1, V2), - waging_war(V0, V2, V4), deity(V1, V3, V4).","- eurocurrency(V2, V2, V4) :- live_underwater(V1, V2, V4), not plaice(V1, V2, V4), not do_harm(V1, V2, V4).","getting_from_one_place_to_another(V1, V4) :- live_underwater(V1, V2, V4), not plaice(V1, V2, V4), not do_harm(V1, V2, V4).","red_green(V1, V2, V3) :- toilet(V3, V4), woof(V1, V2, V3), not -brome(V1, V2, V3).","- plaice(V1, V2, V4) :- toilet(V3, V4), woof(V1, V2, V3), not -brome(V1, V2, V3)."],"noisy_rules":{"a":["- garden_snail(V3) :- - woof(V1, V2, V3), - finch(V2, V4), plaice(V1, V2, V4).","- garden_snail(V4) :- not -space_helmet(V1, V2), plaice(V1, V2, V4)."],"b":["waging_war(V3, V2, V3) :- - audubons_caracara(V2), - garden_snail(V3).","plaice(V1, V2, V4) :- thought(V1, V3), - live_underwater(V1, V2, V4), not garden_snail(V3)."],"c":["- play_violin(V3) :- - getting_from_one_place_to_another(V0, V3), - red_green(V1, V2, V3).","- finch(V2, V1) :- - red_green(V1, V2, V3)."],"d":["driven(V2, V3) :- thought(V1, V3), not -space_helmet(V1, V2), finish_coat(V1, V2).","- position(V1, V2) :- kestrel(V0, V1, V4), - audubons_caracara(V2), black_belt(V0, V1, V4)."],"e":["- clean_bomb(V3, V4) :- - foot(V0, V3, V4).","chatelaine(V1, V3) :- crossing(V0, V1), jonathan(V0, V1, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_7_9_11_11_13_0.5_1.0_5_2_3","seed":7,"num_facts":15,"num_rules":12,"num_related_predicates":27,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" P11(\"Shelby\", \"Paula\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P12(\"Paula\").","P13(\"Michael\", \"Paula\").","P14.","- P15(\"Michael\", \"Jennifer\").","- P16(\"Shelby\", \"Jennifer\").","P17(\"Shelby\", \"Jennifer\").","- P18(\"Shelby\", \"Michael\").","P19(\"Shelby\", \"Jennifer\").","P20(\"Paula\", \"Jennifer\").","- P21(\"Paula\", \"Jennifer\").","P22(\"Shelby\").","- P23(\"Shelby\").","- P24(\"Shelby\").","- P25(\"Michael\", \"Jennifer\").","P26(\"Shelby\", \"Michael\")."],"noisy_facts":["P36(\"Shelby\", \"Michael\").","- P32(\"Michael\").","P33(\"Michael\").","- P30(\"Shelby\", \"Jennifer\").","P27(\"Shelby\").","- P35(\"Shelby\", \"Michael\").","- P34(\"Michael\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- P11(V0, V2) :- P0(V2), P5(V0, V1), - P9(V0, V1), - P10(V1, V2), - P25(V1, V3).","P0(V2) :- P12(V2), - P18(V0, V1), P19(V0, V3), not -P20(V2, V3), not P21(V2, V3).","- P1(V1, V3) :- P12(V2), - P18(V0, V1), P19(V0, V3), not -P20(V2, V3), not P21(V2, V3).","- P2(V1, V2) :- P13(V1, V2).","P3(V2, V1) :- P13(V1, V2), not -P14.","P4(V1, V1) :- P13(V1, V2), not -P14.","P5(V1, V1) :- - P2(V1, V2).","P6(V3) :- - P1(V1, V3), not P15(V1, V3).","P7(V0) :- P3(V0, V1), not -P26(V0, V1).","- P8(V0, V0) :- P3(V0, V1), not -P26(V0, V1).","- P9(V0, V3) :- P4(V0, V3), not -P7(V0), not -P22(V0), not P23(V0), not P24(V0).","- P10(V1, V0) :- - P1(V1, V3), P6(V3), - P8(V0, V3), not P16(V0, V3), not -P17(V0, V3)."],"noisy_rules":{"a":["P11(V2, V2) :- - P0(V2), P2(V1, V2), - P6(V3).","P11(V0, V2) :- - P0(V2), P1(V1, V3), - P3(V0, V1), - P6(V3), not -P10(V1, V2)."],"b":["P21(V2, V0) :- P10(V1, V2), P11(V0, V2).","P1(V0, V3) :- P8(V0, V3), P11(V0, V2)."],"c":["P18(V0, V1) :- P1(V1, V3), P9(V0, V1).","- P19(V0, V3) :- P1(V1, V3), - P3(V0, V1), not P4(V0, V3), not P5(V0, V1), P10(V1, V2)."],"d":["- P20(V1, V3) :- P1(V1, V3), - P7(V0), P9(V0, V1), P27(V0).","P28(V1) :- - P5(V0, V1)."],"e":["P29(V0, V3) :- - P30(V0, V3).","P31(V1) :- not P32(V1), P33(V1), not P34(V1), - P35(V0, V1), not -P36(V0, V1)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_26_9_8_8_9_0.5_1.0_3_2_3","seed":26,"num_facts":12,"num_rules":9,"num_related_predicates":21,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.125,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"adult(\"Stuart\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["specific_seat_on_plane(\"Molly\", \"Stuart\").","pike(\"Tiffany\", \"Stuart\").","nut(\"Molly\", \"Stuart\").","sorrel(\"Tiffany\", \"Molly\").","windows(\"Molly\", \"Stuart\").","experience(\"Molly\").","object(\"Molly\").","eater(\"Tiffany\", \"Stuart\").","ground_beef(\"Tiffany\", \"Stuart\").","catherine_havasi(\"Tiffany\", \"Stuart\").","sierra_leonean(\"Andrew\", \"Molly\").","url(\"Molly\", \"Stuart\")."],"noisy_facts":[],"min_fact_dicts_for_query":["specific_seat_on_plane(\"Molly\", \"Stuart\").","pike(\"Tiffany\", \"Stuart\").","nut(\"Molly\", \"Stuart\").","sorrel(\"Tiffany\", \"Molly\").","windows(\"Molly\", \"Stuart\").","experience(\"Molly\").","object(\"Molly\").","eater(\"Tiffany\", \"Stuart\").","ground_beef(\"Tiffany\", \"Stuart\").","catherine_havasi(\"Tiffany\", \"Stuart\").","sierra_leonean(\"Andrew\", \"Molly\").","url(\"Molly\", \"Stuart\")."],"noiseless_rules":["adult(V3) :- militarist(V3), pacifist(V2, V3).","dove(V0, V3) :- content(V0, V3).","kenosis(V2) :- specific_seat_on_plane(V2, V3).","militarist(V3) :- buffalo(V0), hawk(V0, V2), windows(V2, V3).","buffalo(V0) :- pike(V0, V3), sierra_leonean(V1, V2), url(V2, V3).","seed(V3, V3) :- specific_seat_on_plane(V2, V3), nut(V2, V3).","hawk(V0, V2) :- sorrel(V0, V2), ground_beef(V0, V3), catherine_havasi(V0, V3).","pacifist(V3, V3) :- dove(V0, V3), seed(V1, V3), eater(V0, V3).","content(V2, V2) :- kenosis(V2), experience(V2), object(V2)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_0_8_9_9_11_0.5_1.0_5_3_4","seed":0,"num_facts":11,"num_rules":10,"num_related_predicates":21,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.857142857142857,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"P9(\"Emily\", \"Russell\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P10(\"Karen\", \"Robert\").","P11(\"Tommy\", \"Emily\", \"Russell\").","P12(\"Karen\", \"Emily\", \"Robert\").","P13(\"Karen\", \"Emily\", \"Robert\").","- P14(\"Karen\", \"Emily\", \"Robert\").","- P15(\"Karen\", \"Emily\", \"Robert\").","P16(\"Karen\", \"Tommy\", \"Russell\").","- P17(\"Karen\", \"Tommy\", \"Robert\").","P18(\"Tommy\", \"Emily\", \"Russell\").","- P19(\"Emily\", \"Russell\", \"Robert\").","P20(\"Tommy\", \"Emily\", \"Russell\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["P9(V2, V3) :- - P0(V1, V3), - P6(V0, V1, V3), P12(V0, V2, V4).","- P0(V1, V3) :- - P5(V0, V3, V4), P20(V1, V2, V3).","P1(V0, V1, V4) :- - P5(V0, V3, V4), P20(V1, V2, V3).","P2(V0, V4) :- - P10(V0, V4), P16(V0, V1, V3), - P17(V0, V1, V4), P18(V1, V2, V3), not P19(V2, V3, V4).","- P3(V1, V2, V3) :- - P10(V0, V4), P16(V0, V1, V3), - P17(V0, V1, V4), P18(V1, V2, V3), not P19(V2, V3, V4).","- P4(V0, V1, V0) :- P1(V0, V1, V4), not -P2(V0, V4).","- P5(V0, V3, V4) :- - P8(V0, V3, V4).","- P6(V0, V1, V3) :- - P4(V0, V1, V3), not -P7(V0, V1, V3).","P7(V0, V1, V3) :- - P3(V1, V2, V3), P12(V0, V2, V4), not -P13(V0, V2, V4), not P14(V0, V2, V4), not P15(V0, V2, V4).","- P8(V2, V3, V1) :- P11(V1, V2, V3), not -P18(V1, V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_19_9_13_11_13_0.5_1.0_5_3_4","seed":19,"num_facts":15,"num_rules":14,"num_related_predicates":29,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"social_activity(\"Andrea\", \"Jennifer\", \"Craig\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- boiling(\"Andrea\", \"Jennifer\", \"Tamara\").","finch(\"Andrea\", \"Jennifer\", \"Tamara\").","- spoon(\"Robert\").","- yearly_celebration(\"Craig\").","- unique_personality(\"Robert\").","polo_ball(\"Robert\").","chain(\"Robert\").","toothed_whale(\"Craig\", \"Tamara\").","- tablespoon(\"Robert\", \"Jennifer\", \"Craig\").","- chicken(\"Andrea\", \"Jennifer\", \"Craig\").","animal(\"Jennifer\", \"Craig\", \"Tamara\").","- frustration(\"Jennifer\", \"Tamara\").","gauntlet(\"Robert\", \"Jennifer\", \"Craig\").","- stratum_corneum(\"Andrea\", \"Craig\", \"Tamara\").","crude(\"Jennifer\", \"Craig\", \"Tamara\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["social_activity(V1, V2, V3) :- party(V0, V4), - eating(V0, V1, V3), - eurasia(V1, V2, V4), not -enjoyment(V1, V2, V4).","kyrgyzstan(V3) :- eating_ice_cream(V0, V1, V3), - boiling(V1, V2, V4).","- testing_new_flavor(V0, V3, V4) :- eating_ice_cream(V0, V1, V3), - boiling(V1, V2, V4).","yemen(V2, V4) :- - boiling(V1, V2, V4), not -finch(V1, V2, V4).","party(V0, V4) :- utensil(V0, V2, V3), cooling_off(V0, V3, V4).","asia(V2) :- kyrgyzstan(V3), yemen(V2, V3), not japan(V2, V3), not bangladesh(V2, V3).","- eating(V0, V1, V3) :- - spoon(V0), toothed_whale(V3, V4), - tablespoon(V0, V2, V3), - chicken(V1, V2, V3), not -animal(V2, V3, V4).","utensil(V0, V2, V3) :- - spoon(V0), toothed_whale(V3, V4), - tablespoon(V0, V2, V3), - chicken(V1, V2, V3), not -animal(V2, V3, V4).","- japan(V2, V3) :- - spoon(V0), toothed_whale(V3, V4), - tablespoon(V0, V2, V3), - chicken(V1, V2, V3), not -animal(V2, V3, V4).","eating_ice_cream(V0, V1, V3) :- - spoon(V0), toothed_whale(V3, V4), - tablespoon(V0, V2, V3), - chicken(V1, V2, V3), not -animal(V2, V3, V4).","- eurasia(V0, V4, V4) :- - testing_new_flavor(V0, V3, V4), not -asia(V0), not unique_personality(V0), not -polo_ball(V0), not -chain(V0).","- bangladesh(V2, V3) :- - yearly_celebration(V3), - frustration(V2, V4), gauntlet(V0, V2, V3), - stratum_corneum(V1, V3, V4), not -crude(V2, V3, V4).","enjoyment(V1, V0, V1) :- eating_ice_cream(V0, V1, V3).","cooling_off(V0, V3, V0) :- eating_ice_cream(V0, V1, V3)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_67_7_9_9_9_0.5_1.0_3_3_4","seed":67,"num_facts":11,"num_rules":10,"num_related_predicates":21,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"not_(\"Tammy\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- animal(\"Thomas\", \"Jeremy\", \"Tammy\").","criminals(\"Jeremy\", \"Zachary\").","angels(\"Thomas\", \"Tammy\", \"Laura\").","- city(\"Jeremy\", \"Tammy\", \"Zachary\").","- vinyl_music(\"Tammy\", \"Zachary\").","- thoroughbred(\"Tammy\", \"Zachary\").","creature(\"Thomas\", \"Laura\", \"Zachary\").","exist(\"Tammy\", \"Laura\", \"Zachary\").","cough(\"Tammy\", \"Laura\", \"Zachary\").","bird(\"Thomas\", \"Tammy\", \"Zachary\").","- chicken(\"Thomas\", \"Tammy\", \"Zachary\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- animal(\"Thomas\", \"Jeremy\", \"Tammy\").","criminals(\"Jeremy\", \"Zachary\").","angels(\"Thomas\", \"Tammy\", \"Laura\").","creature(\"Thomas\", \"Laura\", \"Zachary\")."],"noiseless_rules":["not_(V2) :- people(V2), wings(V0, V2), be(V0, V1, V4).","blastopore(V2, V3, V4) :- - animal(V0, V1, V2), creature(V0, V3, V4), not -exist(V2, V3, V4).","- being(V2, V4) :- - animal(V0, V1, V2), creature(V0, V3, V4), not -exist(V2, V3, V4).","- archenteron(V2, V4) :- blastopore(V2, V3, V4), not -peachick(V2, V3, V4), not -cough(V2, V3, V4).","- gastrula(V2, V2, V4) :- - archenteron(V2, V4), not -serving_time(V2, V4).","people(V2) :- criminals(V1, V4), angels(V0, V2, V3), not city(V1, V2, V4).","serving_time(V2, V4) :- criminals(V1, V4), angels(V0, V2, V3), not city(V1, V2, V4).","wings(V0, V2) :- - gastrula(V0, V2, V4), not -bird(V0, V2, V4), not chicken(V0, V2, V4).","be(V2, V2, V4) :- - being(V2, V4), not vinyl_music(V2, V4), not thoroughbred(V2, V4).","peachick(V2, V4, V4) :- - being(V2, V4), not vinyl_music(V2, V4), not thoroughbred(V2, V4)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_32_6_9_7_7_0.5_1.0_5_3_4","seed":32,"num_facts":9,"num_rules":10,"num_related_predicates":19,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" crash(\"Ryan\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- action(\"Ryan\", \"Paul\").","have_fun(\"Jennifer\", \"Jessica\", \"Jeremy\").","- atmospheric_phenomenon(\"Jennifer\", \"Jessica\", \"Ryan\").","energy(\"Jennifer\", \"Jessica\", \"Ryan\").","field(\"Jennifer\", \"Jessica\", \"Ryan\").","lemon_peel(\"Ryan\", \"Jeremy\").","oil(\"Jennifer\", \"Jessica\", \"Jeremy\").","ride(\"Jessica\", \"Ryan\", \"Jeremy\").","- activity(\"Jessica\", \"Paul\", \"Jeremy\")."],"noisy_facts":["running_in_marathon(\"Jennifer\", \"Jessica\", \"Jeremy\").","riding_bicycle(\"Ryan\", \"Paul\").","- fly(\"Jennifer\", \"Jessica\", \"Jeremy\").","- stick(\"Jessica\", \"Paul\", \"Jeremy\").","mental_health(\"Ryan\", \"Paul\", \"Jeremy\").","eating_vegetables(\"Jennifer\", \"Paul\", \"Jeremy\").","- untruth(\"Jennifer\", \"Ryan\", \"Jeremy\").","jogging(\"Ryan\")."],"min_fact_dicts_for_query":["- action(\"Ryan\", \"Paul\").","have_fun(\"Jennifer\", \"Jessica\", \"Jeremy\").","lemon_peel(\"Ryan\", \"Jeremy\").","oil(\"Jennifer\", \"Jessica\", \"Jeremy\")."],"noiseless_rules":["- crash(V2) :- car(V0, V1, V2), - playing_harp(V0, V1, V4), - angels(V1, V3, V4), not -physical_phenomenon(V2, V3, V4).","car(V0, V1, V2) :- - action(V2, V3), lemon_peel(V2, V4), oil(V0, V1, V4), not -ride(V1, V2, V4), not activity(V1, V3, V4).","lemon(V0, V1, V4) :- - action(V2, V3), lemon_peel(V2, V4), oil(V0, V1, V4), not -ride(V1, V2, V4), not activity(V1, V3, V4).","chess_set(V0) :- - action(V2, V3), lemon_peel(V2, V4), oil(V0, V1, V4), not -ride(V1, V2, V4), not activity(V1, V3, V4).","fun(V0, V1, V2) :- - action(V2, V3), lemon_peel(V2, V4), oil(V0, V1, V4), not -ride(V1, V2, V4), not activity(V1, V3, V4).","- playing_harp(V0, V1, V4) :- have_fun(V0, V1, V4).","- angels(V1, V0, V4) :- lemon(V0, V1, V4), not -play(V0, V1, V4).","play(V0, V0, V0) :- chess_set(V0).","- play_strategic_game(V0, V0) :- chess_set(V0).","physical_phenomenon(V2, V3, V1) :- fun(V0, V1, V2), - play_strategic_game(V0, V3), not atmospheric_phenomenon(V0, V1, V2), not -energy(V0, V1, V2), not -field(V0, V1, V2)."],"noisy_rules":{"a":["crash(V2) :- - fun(V0, V1, V2).","crash(V2) :- - car(V0, V1, V2), play_strategic_game(V0, V3)."],"b":["- have_fun(V0, V1, V4) :- - car(V0, V1, V2), - chess_set(V0), playing_harp(V0, V1, V4), play_strategic_game(V0, V3), crash(V2).","- lemon_peel(V2, V4) :- - lemon(V0, V1, V4), crash(V2)."],"c":["- fun(V0, V1, V2) :- - car(V0, V1, V2), - chess_set(V0), playing_harp(V0, V1, V4), not play(V0, V1, V4), play_strategic_game(V0, V3).","angels(V1, V3, V4) :- playing_harp(V0, V1, V4), - play(V0, V1, V4), play_strategic_game(V0, V3), - physical_phenomenon(V2, V3, V4)."],"d":["action(V2, V3) :- not play(V0, V1, V4), - physical_phenomenon(V2, V3, V4), - fly(V0, V1, V4).","activity(V1, V1, V4) :- - play(V0, V1, V4)."],"e":["- health(V0, V2) :- jogging(V2), riding_bicycle(V2, V3), running_in_marathon(V0, V1, V4), eating_vegetables(V0, V3, V4), mental_health(V2, V3, V4).","walking(V1, V4) :- - untruth(V0, V2, V4), - stick(V1, V3, V4)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_55_8_12_12_14_0.5_1.0_5_2_3","seed":55,"num_facts":14,"num_rules":13,"num_related_predicates":27,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5714285714285716,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":"flapping(\"Jeremy\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["airplanes(\"Elizabeth\").","animal(\"Jeremy\", \"Duane\").","- mouth(\"Duane\").","smile(\"Jeremy\", \"Duane\").","- vineyard(\"Jeremy\", \"Duane\").","- modern_ballet(\"Jeremy\", \"Duane\").","egg(\"Elizabeth\", \"Jeremy\").","beak(\"Elizabeth\", \"Jeremy\").","- taxi(\"Elizabeth\", \"Jeremy\").","airplane(\"Elizabeth\", \"Duane\").","boat(\"Jeremy\", \"Daniel\").","buses(\"Jeremy\", \"Daniel\").","- hen(\"Duane\").","- feathers(\"Duane\")."],"noisy_facts":["party(\"Elizabeth\", \"Jeremy\").","- baking_cake(\"Jeremy\", \"Duane\").","chick(\"Duane\", \"Daniel\").","singing_bird(\"Elizabeth\", \"Daniel\").","duck(\"Duane\", \"Daniel\")."],"min_fact_dicts_for_query":["airplanes(\"Elizabeth\").","animal(\"Jeremy\", \"Duane\").","- taxi(\"Elizabeth\", \"Jeremy\").","airplane(\"Elizabeth\", \"Duane\").","boat(\"Jeremy\", \"Daniel\")."],"noiseless_rules":["flapping(V1) :- - form_of_transportation(V0, V3), - wing(V1, V2), not -flying(V2, V3), not lips(V2, V3), not birds(V2, V3).","- form_of_transportation(V0, V3) :- airplanes(V0), - taxi(V0, V1), airplane(V0, V2), boat(V1, V3), not -buses(V1, V3).","wings(V3) :- airplanes(V0), - taxi(V0, V1), airplane(V0, V2), boat(V1, V3), not -buses(V1, V3).","- arrive_at_airports(V2) :- airplanes(V0), - taxi(V0, V1), airplane(V0, V2), boat(V1, V3), not -buses(V1, V3).","circle_airport(V0, V1) :- airplanes(V0), - taxi(V0, V1), airplane(V0, V2), boat(V1, V3), not -buses(V1, V3).","living(V2) :- animal(V1, V2).","- wing(V1, V2) :- animal(V1, V2).","nest(V2) :- living(V2), not mouth(V2).","flying(V3, V3) :- wings(V3), not bird(V3).","- lips(V2, V2) :- - wing(V1, V2), not mouth(V2), not -smile(V1, V2), not vineyard(V1, V2), not modern_ballet(V1, V2).","chicken(V2, V2) :- - arrive_at_airports(V2), not hen(V2), not feathers(V2).","- birds(V0, V3) :- circle_airport(V0, V1), nest(V1), chicken(V0, V3), not -egg(V0, V1), not -beak(V0, V1).","- bird(V3) :- circle_airport(V0, V1), nest(V1), chicken(V0, V3), not -egg(V0, V1), not -beak(V0, V1)."],"noisy_rules":{"a":["- flapping(V1) :- - wings(V3), not -arrive_at_airports(V2), - nest(V1), - flying(V2, V3).","- flapping(V1) :- form_of_transportation(V0, V3), not wings(V3), - nest(V1)."],"b":["feathers(V2) :- - circle_airport(V0, V1), - flying(V2, V3), not -birds(V2, V3), - flapping(V1).","- airplanes(V0) :- arrive_at_airports(V2), - chicken(V0, V3), - flapping(V1)."],"c":["- flying(V2, V3) :- arrive_at_airports(V2), - nest(V1), - chicken(V0, V3), bird(V3).","- beak(V0, V3) :- form_of_transportation(V0, V3), - wings(V3), not flying(V2, V3), birds(V2, V3)."],"d":["wing(V2, V2) :- lips(V2, V3).","- animal(V2, V2) :- - flying(V2, V3), bird(V3), not -duck(V2, V3), not -chick(V2, V3)."],"e":["- people(V0, V1) :- party(V0, V1), singing_bird(V0, V3).","- preparing_for_birthday_party(V1, V2) :- - baking_cake(V1, V2)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_18_7_10_10_10_0.5_1.0_3_2_3","seed":18,"num_facts":11,"num_rules":11,"num_related_predicates":22,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"australian_turtledove(\"Theresa\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- silk(\"Tammy\", \"Zachary\").","goose.","chicken.","encolure(\"Tammy\", \"Connie\").","- providing_opening_into_room(\"Zachary\", \"Theresa\").","- dove.","- domestic_pigeon.","crush(\"Tammy\", \"Theresa\").","- coal(\"Theresa\", \"Connie\").","- macaroni(\"Zachary\", \"Theresa\").","covering(\"Zachary\", \"Theresa\")."],"noisy_facts":["- pasta_salad(\"Zachary\", \"Theresa\").","water_fowl(\"Theresa\", \"Connie\").","passenger_terminal(\"Theresa\").","balloon(\"Zachary\", \"Connie\").","duck.","raise(\"Tammy\", \"Zachary\").","salad_nicoise(\"Theresa\", \"Connie\")."],"min_fact_dicts_for_query":["- silk(\"Tammy\", \"Zachary\").","crush(\"Tammy\", \"Theresa\").","- coal(\"Theresa\", \"Connie\")."],"noiseless_rules":["australian_turtledove(V2) :- squab(V1), P4(V1, V2), pigeon(V1, V3).","atheists(V1, V2) :- - silk(V0, V1), crush(V0, V2), - coal(V2, V3).","gasman(V0, V2) :- - silk(V0, V1), crush(V0, V2), - coal(V2, V3).","doubt_existence_of_god(V2) :- atheists(V1, V2), not macaroni(V1, V2), not -covering(V1, V2).","squab(V2) :- gasman(V0, V2), not poultry(V0, V2), not fairy_swallow(V0, V2).","P4(V3, V3) :- doubt_existence_of_god(V3), not -goose, not -chicken.","- poultry(V3, V3) :- doubt_existence_of_god(V3), not -goose, not -chicken.","- passenger_pigeon(V3) :- doubt_existence_of_god(V3), not -goose, not -chicken.","- fairy_swallow(V0, V2) :- - roller(V0, V1), encolure(V0, V3), - providing_opening_into_room(V1, V2).","pigeon(V2, V2) :- - passenger_pigeon(V2), not dove, not domestic_pigeon.","- roller(V2, V2) :- - passenger_pigeon(V2), not dove, not domestic_pigeon."],"noisy_rules":{"a":["- australian_turtledove(V2) :- - gasman(V0, V2).","- australian_turtledove(V1) :- - squab(V1)."],"b":["dove(V2) :- - australian_turtledove(V2).","passenger_pigeon(V2) :- - P4(V1, V2), not australian_turtledove(V2)."],"c":["poultry(V1, V1) :- - squab(V1).","domestic_pigeon(V1) :- - squab(V1), fairy_swallow(V0, V2), roller(V0, V1)."],"d":["- goose(V1, V1) :- roller(V0, V1), not -raise(V0, V1).","poultry(V1, V1) :- - squab(V1), duck."],"e":["- waiting_for_airplain(V3) :- passenger_terminal(V2), balloon(V1, V3), not -water_fowl(V2, V3).","- salad(V1, V2) :- - pasta_salad(V1, V2), salad_nicoise(V2, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_42_8_11_10_12_0.5_1.0_5_2_3","seed":42,"num_facts":13,"num_rules":12,"num_related_predicates":25,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.7142857142857144,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"echinoderm(\"David\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- press_computer_keys(\"David\").","living_room(\"Joan\", \"Tony\").","- black_belt(\"Joan\", \"Tracy\").","- erasure(\"Tracy\").","- cat(\"Joan\", \"David\").","cumin(\"Joan\", \"Tony\").","- district(\"Joan\", \"Tracy\").","- indian_restaurant(\"Tony\").","- steakhouse(\"Tony\").","taste(\"Tony\").","sitting_furniture(\"David\", \"Tracy\").","record(\"David\", \"Tracy\").","- rhythmic_movement(\"David\", \"Tracy\")."],"noisy_facts":["- onion_roll(\"Joan\", \"Tracy\").","- store_information(\"Joan\", \"Tracy\").","cone(\"Joan\", \"David\").","- soft_roll(\"Tracy\").","- railroad_bed(\"Tracy\").","- moroccan(\"Joan\", \"David\").","- transfer_malaria_while_stinging_persons(\"Joan\", \"David\").","- clover_leaf_roll(\"Tracy\").","- beaver(\"Joan\", \"David\").","ok_charges_to_account(\"Tracy\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["echinoderm(V1) :- - ambulacrum(V0), - sea_cucumber(V0), brittle_star(V0, V1), - sea_urchin(V0, V1), - crinoid(V0, V3).","- ambulacrum(V0) :- - press_computer_keys(V1), - erasure(V3), - cat(V0, V1), cumin(V0, V2), not district(V0, V3).","basket_star(V0, V1) :- - press_computer_keys(V1), - erasure(V3), - cat(V0, V1), cumin(V0, V2), not district(V0, V3).","- starfish(V3) :- - press_computer_keys(V1), - erasure(V3), - cat(V0, V1), cumin(V0, V2), not district(V0, V3).","- sea_cucumber(V0) :- living_room(V0, V2).","tube_foot(V2) :- living_room(V0, V2).","brittle_star(V0, V1) :- basket_star(V0, V1), not press_computer_keys(V1).","water_vascular_system(V1, V0) :- basket_star(V0, V1), not press_computer_keys(V1).","- sea_urchin(V0, V3) :- - starfish(V3), eat_food(V0, V3), not crinoid(V0, V3).","eat_food(V2, V2) :- tube_foot(V2), not plate(V2), not indian_restaurant(V2), not steakhouse(V2), not -taste(V2).","- crinoid(V0, V3) :- - black_belt(V0, V3).","- plate(V3) :- water_vascular_system(V1, V3), not -sitting_furniture(V1, V3), not -record(V1, V3), not rhythmic_movement(V1, V3)."],"noisy_rules":{"a":["- echinoderm(V1) :- starfish(V3), - tube_foot(V2), not water_vascular_system(V1, V3), sea_urchin(V0, V1), crinoid(V0, V3).","- echinoderm(V1) :- ambulacrum(V0), - basket_star(V0, V1), sea_cucumber(V0), - eat_food(V0, V3), plate(V2)."],"b":["ambulacrum(V0) :- - basket_star(V0, V1), - tube_foot(V2), not water_vascular_system(V1, V3), - eat_food(V0, V3), not echinoderm(V1).","- brittle_star(V0, V1) :- sea_cucumber(V0), - tube_foot(V2), crinoid(V0, V3), - echinoderm(V1)."],"c":["sea_cucumber(V0) :- sea_urchin(V0, V1).","starfish(V3) :- crinoid(V0, V3)."],"d":["sea_urchin(V0, V1) :- - basket_star(V0, V1), starfish(V3), not water_vascular_system(V1, V3), not transfer_malaria_while_stinging_persons(V0, V1), - beaver(V0, V1).","sea_cucumber(V0) :- not basket_star(V0, V1), starfish(V3), not brittle_star(V0, V1), cone(V0, V1), - moroccan(V0, V1)."],"e":["bun(V0) :- - soft_roll(V3), - clover_leaf_roll(V3), - onion_roll(V0, V3).","mitzvah(V3) :- - railroad_bed(V3), ok_charges_to_account(V3), - store_information(V0, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_48_6_7_7_8_0.5_1.0_3_2_3","seed":48,"num_facts":9,"num_rules":8,"num_related_predicates":17,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" P7(\"Dustin\", \"Jeremy\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P8(\"Jeremy\").","P9(\"Austin\").","P10(\"Dustin\", \"Jeremy\").","- P11(\"Dustin\", \"Jeremy\").","- P12(\"Dustin\", \"Jeremy\").","P13(\"Dustin\", \"Austin\").","P14(\"Austin\", \"Jeremy\").","- P15(\"Dustin\", \"Austin\").","- P16(\"Dustin\", \"Jeremy\")."],"noisy_facts":["- P20(\"Ryan\", \"Jeremy\").","- P22(\"Austin\", \"Jeremy\").","- P18.","P17(\"Dustin\", \"Jeremy\").","P25(\"Austin\", \"Jeremy\").","P19(\"Ryan\").","- P24(\"Dustin\", \"Jeremy\")."],"min_fact_dicts_for_query":["- P8(\"Jeremy\").","- P15(\"Dustin\", \"Austin\")."],"noiseless_rules":["- P7(V1, V3) :- - P0(V3), P5(V1, V2), not -P6(V2, V3).","- P0(V3) :- - P1(V1), P4(V1, V3), not -P10(V1, V3).","- P1(V1) :- - P8(V3), - P15(V1, V2), not P16(V1, V3).","- P2(V1, V3) :- - P8(V3), - P15(V1, V2), not P16(V1, V3).","- P3(V1, V3) :- - P8(V3), - P15(V1, V2), not P16(V1, V3).","P4(V1, V3) :- - P2(V1, V3), not P11(V1, V3), not P12(V1, V3).","P5(V1, V3) :- - P1(V1), - P3(V1, V3).","P6(V2, V3) :- P9(V2), P13(V1, V2), P14(V2, V3)."],"noisy_rules":{"a":["P7(V1, V3) :- P1(V1), - P6(V2, V3).","P7(V1, V3) :- P3(V1, V3), not P5(V1, V2), - P6(V2, V3)."],"b":["- P6(V1, V3) :- not -P1(V1), P3(V1, V3), P7(V1, V3).","P1(V1) :- P1(V1), P7(V1, V3)."],"c":["- P4(V1, V3) :- P3(V1, V3).","P12(V3, V3) :- - P6(V2, V3)."],"d":["P11(V1, V3) :- not -P3(V1, V3), - P4(V1, V3), P17(V1, V3).","- P6(V1, V1) :- P1(V1), not P18."],"e":["- P21(V0, V2) :- P19(V0), - P20(V0, V3), - P22(V2, V3).","P23(V1, V3) :- - P24(V1, V3), P25(V2, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_45_9_12_7_9_0.5_1.0_5_2_3","seed":45,"num_facts":11,"num_rules":13,"num_related_predicates":24,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P12(\"Rachael\", \"Richard\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P13(\"Rachael\", \"Miguel\").","P14(\"Rachael\", \"Richard\").","P15(\"Richard\", \"Miguel\").","P16(\"Rachael\", \"Richard\").","P17(\"Rachael\", \"Miguel\").","P18(\"Richard\", \"Miguel\").","P19(\"Rachael\", \"Miguel\").","P20(\"Rachael\", \"Miguel\").","P21(\"Rachael\", \"Brandon\").","P22(\"Richard\", \"Miguel\").","P23(\"Richard\", \"Miguel\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P13(\"Rachael\", \"Miguel\").","P14(\"Rachael\", \"Richard\").","P15(\"Richard\", \"Miguel\").","P16(\"Rachael\", \"Richard\").","P17(\"Rachael\", \"Miguel\").","P18(\"Richard\", \"Miguel\").","P19(\"Rachael\", \"Miguel\").","P20(\"Rachael\", \"Miguel\").","P21(\"Rachael\", \"Brandon\").","P22(\"Richard\", \"Miguel\").","P23(\"Richard\", \"Miguel\")."],"noiseless_rules":["P12(V0, V1) :- P0(V2), P3(V2), P8(V0, V1), P9(V0, V1), P11(V0, V2).","P0(V2) :- P3(V2), P6(V2).","P1(V2, V2) :- P3(V2), P6(V2).","P2(V1) :- P1(V1, V2), P7(V1, V2), P10(V1, V2), P18(V1, V2).","P3(V2) :- P13(V0, V2).","P4(V0, V2) :- P13(V0, V2).","P5(V1) :- P14(V0, V1), P21(V0, V3), P22(V1, V2), P23(V1, V2).","P6(V2) :- P15(V1, V2).","P7(V1, V2) :- P15(V1, V2).","P8(V0, V1) :- P16(V0, V1).","P9(V0, V1) :- P4(V0, V2), P17(V0, V2), P18(V1, V2), P19(V0, V2), P20(V0, V2).","P10(V1, V2) :- P4(V0, V2), P17(V0, V2), P18(V1, V2), P19(V0, V2), P20(V0, V2).","P11(V1, V1) :- P2(V1), P5(V1)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_13_7_10_8_11_0.5_1.0_5_2_3","seed":13,"num_facts":10,"num_rules":11,"num_related_predicates":21,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" race(\"Kenneth\", \"Brian\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["jockey(\"Alex\", \"Monique\").","drive(\"Monique\").","oil(\"Kenneth\", \"Alex\").","- seat(\"Kenneth\", \"Alex\").","- street(\"Alex\", \"Monique\").","- fly(\"Kenneth\", \"Monique\").","- cry(\"Brian\", \"Alex\").","- sleep(\"Brian\", \"Alex\").","roll(\"Alex\", \"Monique\").","- climb(\"Alex\", \"Monique\")."],"noisy_facts":["- purplish_blue(\"Kenneth\", \"Alex\").","bat(\"Kenneth\", \"Brian\").","- camp(\"Brian\", \"Alex\").","- change_of_integrity(\"Kenneth\", \"Brian\").","- steel_blue(\"Brian\", \"Monique\").","- getting_air_to_lungs(\"Brian\").","- powder_blue(\"Kenneth\", \"Alex\").","- vinyl_music(\"Brian\", \"Alex\").","- good_place_to_lose_weight(\"Kenneth\").","wings(\"Kenneth\", \"Brian\").","black(\"Kenneth\", \"Brian\").","- white(\"Brian\", \"Monique\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- race(V0, V1) :- cars(V2), - action(V0, V1), not -activity(V1, V2).","cars(V2) :- - horse(V3), animal(V0, V1), oil(V0, V2), not seat(V0, V2), not street(V2, V3).","- horse(V3) :- jockey(V2, V3), not street(V2, V3), not climb(V2, V3).","canary(V2) :- jockey(V2, V3), not street(V2, V3), not climb(V2, V3).","- action(V0, V1) :- drive(V3), - fly(V0, V3), - cry(V1, V2), not sleep(V1, V2), not -roll(V2, V3).","steer(V0, V3) :- drive(V3), - fly(V0, V3), - cry(V1, V2), not sleep(V1, V2), not -roll(V2, V3).","activity(V3, V2) :- steer(V0, V3), singing(V0, V3), - run(V0, V3), drive(V3), - climb(V2, V3).","singing(V2, V2) :- canary(V2).","- bird(V2) :- canary(V2).","animal(V2, V2) :- - bird(V2).","- run(V2, V2) :- - bird(V2)."],"noisy_rules":{"a":["race(V0, V0) :- run(V0, V3).","race(V0, V2) :- horse(V3), - steer(V0, V3), bird(V2)."],"b":["- animal(V0, V1) :- race(V0, V1).","- animal(V0, V1) :- - activity(V1, V2), - animal(V0, V1), not -race(V0, V1)."],"c":["- canary(V3) :- horse(V3).","- animal(V0, V1) :- action(V0, V1)."],"d":["- flying(V0, V1) :- action(V0, V1), - steer(V0, V3), bird(V2), not -wings(V0, V1), bat(V0, V1).","- activity(V1, V2) :- - camp(V1, V2)."],"e":["achromatic_color(V3) :- - getting_air_to_lungs(V1), - change_of_integrity(V0, V1), black(V0, V1), - white(V1, V3).","- blue(V3) :- - good_place_to_lose_weight(V0), not purplish_blue(V0, V2), - powder_blue(V0, V2), - vinyl_music(V1, V2), - steel_blue(V1, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_37_10_12_5_8_0.5_1.0_5_3_4","seed":37,"num_facts":8,"num_rules":13,"num_related_predicates":21,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"social_activity(\"Michael\", \"Nicholas\", \"Chloe\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["cake(\"April\", \"Michael\", \"Nicholas\").","satisfying_hunger(\"Michael\", \"Nicholas\", \"Chloe\").","bat(\"Nicholas\", \"Chloe\", \"Aaron\").","thoughts(\"Michael\").","- frog_legs(\"Michael\").","talipot(\"Michael\").","- food(\"Michael\").","competition(\"Nicholas\", \"Chloe\", \"Aaron\")."],"noisy_facts":["- night(\"Chloe\", \"Aaron\").","judgment_day(\"April\", \"Chloe\", \"Aaron\").","college(\"April\", \"Nicholas\", \"Aaron\").","- field_day(\"April\", \"Michael\", \"Aaron\").","self_destruction(\"Michael\", \"Chloe\", \"Aaron\").","school(\"Michael\", \"Nicholas\", \"Aaron\").","reading(\"Nicholas\", \"Chloe\", \"Aaron\").","- literature(\"April\", \"Michael\", \"Aaron\").","vascular_plant(\"April\", \"Michael\", \"Aaron\")."],"min_fact_dicts_for_query":["cake(\"April\", \"Michael\", \"Nicholas\").","satisfying_hunger(\"Michael\", \"Nicholas\", \"Chloe\")."],"noiseless_rules":["social_activity(V1, V2, V3) :- - eating(V1), party(V1, V2), - playing_sports(V2, V3), getting_exercise(V3, V4), not eating_meals_together(V1, V3, V4).","- eating(V1) :- - chicken(V0, V1, V2).","party(V1, V2) :- cake(V0, V1, V2).","- chicken(V0, V1, V2) :- cake(V0, V1, V2).","- playing_sports(V2, V3) :- satisfying_hunger(V1, V2, V3).","education(V1) :- satisfying_hunger(V1, V2, V3).","- chick(V1, V1, V1) :- education(V1), not -thoughts(V1), not frog_legs(V1), not -talipot(V1), not food(V1).","getting_exercise(V3, V4) :- - eating_meals_together(V1, V3, V4), not climbing_mountain(V1, V3, V4).","playing_baseball(V2, V3, V4) :- bat(V2, V3, V4).","- eating_meals_together(V3, V3, V2) :- - playing_sports(V2, V3), not eggs(V2, V3).","- eggs(V2, V2) :- - chick(V0, V2, V4), - nest(V0, V1, V2), not -cake(V0, V1, V2).","- climbing_mountain(V2, V3, V4) :- playing_baseball(V2, V3, V4), not -competition(V2, V3, V4).","- nest(V2, V4, V2) :- playing_baseball(V2, V3, V4), not -competition(V2, V3, V4)."],"noisy_rules":{"a":["- social_activity(V1, V2, V3) :- eating(V1), not party(V1, V2), eggs(V2, V3).","- social_activity(V1, V2, V3) :- playing_sports(V2, V3), nest(V0, V1, V2)."],"b":["- competition(V2, V3, V4) :- - playing_baseball(V2, V3, V4), - social_activity(V1, V2, V3).","- satisfying_hunger(V1, V2, V3) :- eating(V1), - getting_exercise(V3, V4), eating_meals_together(V1, V3, V4), - social_activity(V1, V2, V3)."],"c":["- competition(V2, V3, V4) :- playing_sports(V2, V3), chick(V0, V2, V4).","chicken(V0, V1, V2) :- playing_sports(V2, V3), - getting_exercise(V3, V4), eating_meals_together(V1, V3, V4), eggs(V2, V3), nest(V0, V1, V2)."],"d":["food(V3) :- eggs(V2, V3).","playing_sports(V1, V3) :- - getting_exercise(V3, V4), eating_meals_together(V1, V3, V4), not -self_destruction(V1, V3, V4)."],"e":["learning(V0, V2, V4) :- - literature(V0, V1, V4), college(V0, V2, V4), school(V1, V2, V4), reading(V2, V3, V4).","- day(V1, V3, V4) :- - night(V3, V4), vascular_plant(V0, V1, V4), not field_day(V0, V1, V4), not -judgment_day(V0, V3, V4)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_17_9_9_9_10_0.5_1.0_3_2_3","seed":17,"num_facts":12,"num_rules":10,"num_related_predicates":22,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.125,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" P9(\"Krista\", \"John\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P10(\"Stephen\", \"Krista\").","P11(\"John\").","- P12(\"Krista\", \"John\").","- P13(\"Stephen\", \"Krista\").","P14(\"Stephen\", \"Krista\").","P15(\"Krista\", \"Brian\").","- P16(\"Krista\", \"John\").","P17(\"Krista\", \"John\").","- P18(\"Krista\", \"John\").","P19(\"Stephen\", \"Krista\").","- P20(\"Krista\", \"John\").","P21(\"Brian\", \"John\")."],"noisy_facts":["P24(\"Stephen\", \"Krista\").","- P23(\"Stephen\", \"Krista\").","- P27(\"Stephen\", \"Krista\").","P22(\"Stephen\", \"John\")."],"min_fact_dicts_for_query":["P10(\"Stephen\", \"Krista\").","P11(\"John\").","- P12(\"Krista\", \"John\").","P15(\"Krista\", \"Brian\").","P19(\"Stephen\", \"Krista\").","P21(\"Brian\", \"John\")."],"noiseless_rules":["- P9(V1, V3) :- P0(V0, V1), - P2(V0, V2), - P4(V1, V3).","P0(V0, V1) :- P10(V0, V1), not P13(V0, V1), not -P14(V0, V1).","P1(V0, V1) :- P10(V0, V1), not P13(V0, V1), not -P14(V0, V1).","- P2(V0, V2) :- - P3(V0, V2).","- P3(V0, V0) :- P1(V0, V1).","- P4(V1, V3) :- - P5(V1), - P6(V1, V3), P21(V2, V3).","- P5(V1) :- P7(V1, V3), not P12(V1, V3).","- P6(V1, V3) :- - P8(V0, V3), P15(V1, V2), not P16(V1, V3).","P7(V1, V3) :- P11(V3), P19(V0, V1), not P20(V1, V3).","- P8(V1, V3) :- - P12(V1, V3), not -P17(V1, V3), not P18(V1, V3)."],"noisy_rules":{"a":["P9(V1, V3) :- - P0(V0, V1), - P7(V1, V3).","P9(V0, V0) :- P2(V0, V2)."],"b":["- P15(V1, V1) :- - P0(V0, V1), P9(V1, V3).","- P7(V1, V3) :- P9(V1, V3)."],"c":["P16(V2, V2) :- P3(V0, V2).","- P14(V0, V1) :- - P0(V0, V1), not P1(V0, V1)."],"d":["P5(V1) :- - P7(V1, V3), P8(V0, V3), not -P22(V0, V3).","- P14(V0, V1) :- - P1(V0, V1), P4(V1, V3), not P23(V0, V1)."],"e":["P25(V0, V1) :- P24(V0, V1).","P26(V0, V1) :- - P27(V0, V1)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_50_9_12_9_11_0.5_1.0_3_2_3","seed":50,"num_facts":12,"num_rules":13,"num_related_predicates":25,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.125,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" point(\"Michael\", \"Ryan\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["dwarf_chinkapin_oak(\"Thomas\", \"Ryan\").","two_wheel_vehicle(\"Michelle\").","- miner(\"Thomas\", \"Ryan\").","- song(\"Michael\", \"Michelle\").","- impressing_people_want_to_shag(\"Ryan\", \"Michelle\").","traveler(\"Michael\").","- bare_bone(\"Michael\", \"Ryan\").","- porringer(\"Michael\", \"Ryan\").","- air_sac(\"Thomas\", \"Michelle\").","- talking(\"Michael\", \"Ryan\").","cere(\"Michael\", \"Ryan\").","- greek_partridge(\"Ryan\", \"Michelle\")."],"noisy_facts":["- finding_new_ways_to_prepare_food(\"Thomas\", \"Michelle\").","- promontory(\"Michael\", \"Michelle\").","exercise_device(\"Thomas\", \"Ryan\").","- lundehund(\"Michael\").","- residence(\"Thomas\", \"Michael\").","- mogul_empire(\"Thomas\", \"Ryan\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- point(V1, V2) :- agriculture(V2), metopion(V1, V2), - time_unit(V1, V3).","agriculture(V2) :- - doves(V0, V1), social_meetings_with_friends(V0, V2), - tiny_insect(V0, V3).","- subsidiary_company(V3) :- dwarf_chinkapin_oak(V0, V2), - song(V1, V3), not impressing_people_want_to_shag(V2, V3).","pinecone(V1, V2) :- dwarf_chinkapin_oak(V0, V2), - song(V1, V3), not impressing_people_want_to_shag(V2, V3).","transcendence(V1) :- two_wheel_vehicle(V3), cere(V1, V2), not greek_partridge(V2, V3).","- chestnut_oak(V1, V3) :- two_wheel_vehicle(V3), cere(V1, V2), not greek_partridge(V2, V3).","metopion(V1, V1) :- - subsidiary_company(V3), attendance(V1, V3), not time_unit(V1, V3).","- doves(V2, V1) :- pinecone(V1, V2), not bare_bone(V1, V2), not porringer(V1, V2).","attendance(V1, V2) :- pinecone(V1, V2), not bare_bone(V1, V2), not porringer(V1, V2).","social_meetings_with_friends(V1, V1) :- transcendence(V1), not safety(V1), not -traveler(V1).","- time_unit(V1, V3) :- - chestnut_oak(V1, V3), - porringer(V1, V2).","- tiny_insect(V0, V3) :- - miner(V0, V2), - air_sac(V0, V3), - talking(V1, V2).","- safety(V1) :- - miner(V0, V2), - air_sac(V0, V3), - talking(V1, V2)."],"noisy_rules":{"a":["point(V2, V2) :- - agriculture(V2), subsidiary_company(V3).","point(V1, V1) :- doves(V0, V1)."],"b":["- pinecone(V1, V2) :- doves(V0, V1), - attendance(V1, V3), point(V1, V2).","doves(V2, V1) :- time_unit(V1, V3), safety(V1), point(V1, V2)."],"c":["air_sac(V1, V3) :- - metopion(V1, V2), - attendance(V1, V3).","time_unit(V1, V1) :- safety(V1)."],"d":["song(V1, V0) :- doves(V0, V1), - social_meetings_with_friends(V0, V2), - residence(V0, V1).","owl(V3, V1) :- - transcendence(V1), chestnut_oak(V1, V3), not lundehund(V1)."],"e":["- beaver(V3) :- - mogul_empire(V0, V2), not finding_new_ways_to_prepare_food(V0, V3), - promontory(V1, V3).","- screen(V0, V2) :- exercise_device(V0, V2)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_8_9_11_10_11_0.5_1.0_5_3_4","seed":8,"num_facts":14,"num_rules":12,"num_related_predicates":26,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"toyota(\"Samuel\", \"Bonnie\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["write_with(\"Samuel\", \"Philip\", \"Brian\").","skinnerian(\"Samuel\", \"Kelly\", \"Bonnie\").","act(\"Philip\", \"Kelly\", \"Brian\").","thorax(\"Samuel\", \"Brian\").","- part(\"Brian\").","carrot(\"Samuel\", \"Philip\").","- danaid(\"Philip\", \"Kelly\", \"Bonnie\").","sales_incentive(\"Philip\", \"Kelly\", \"Bonnie\").","- round_shape(\"Philip\", \"Kelly\", \"Bonnie\").","- party(\"Philip\", \"Kelly\", \"Brian\").","mythical_being(\"Philip\", \"Kelly\", \"Brian\").","brother(\"Philip\", \"Kelly\", \"Brian\").","limbs(\"Philip\", \"Kelly\", \"Brian\").","- pay_bills(\"Philip\", \"Kelly\", \"Brian\")."],"noisy_facts":["- contain_food(\"Philip\", \"Bonnie\").","- council(\"Philip\").","pedestrians(\"Samuel\", \"Philip\", \"Bonnie\").","- property(\"Samuel\", \"Philip\", \"Brian\").","beef_loin(\"Philip\", \"Bonnie\", \"Brian\").","- personal_property(\"Samuel\", \"Philip\", \"Bonnie\").","plastic_bomb(\"Philip\", \"Kelly\", \"Brian\").","- national_flag(\"Philip\", \"Bonnie\", \"Brian\").","- storm_cloud(\"Samuel\", \"Philip\").","- osmoreceptor(\"Samuel\", \"Philip\", \"Bonnie\").","shirring(\"Philip\").","- tank(\"Samuel\", \"Kelly\").","- conditioned_emotional_response(\"Kelly\", \"Brian\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["toyota(V0, V3) :- shin(V0, V4), - legging(V2, V3), launching_space_shuttle(V2, V3), good_exercise(V0, V1, V3), not -ab_crunches(V0, V1, V4).","shin(V0, V4) :- setting(V0, V2, V4).","storm_castle(V4) :- write_with(V0, V1, V4).","rule(V0, V1, V4) :- write_with(V0, V1, V4).","- legging(V2, V3) :- skinnerian(V0, V2, V3).","- bed_sheet(V1, V2, V4) :- act(V1, V2, V4).","setting(V0, V2, V4) :- thorax(V0, V4), - danaid(V1, V2, V3), not -sales_incentive(V1, V2, V3), not round_shape(V1, V2, V3), not party(V1, V2, V4).","replacement_cost(V0, V1) :- thorax(V0, V4), - danaid(V1, V2, V3), not -sales_incentive(V1, V2, V3), not round_shape(V1, V2, V3), not party(V1, V2, V4).","launching_space_shuttle(V4, V4) :- storm_castle(V4), not part(V4).","good_exercise(V0, V1, V0) :- rule(V0, V1, V4), not -replacement_cost(V0, V1), not -box(V0, V1), not part(V4), not -carrot(V0, V1).","ab_crunches(V1, V1, V4) :- - bed_sheet(V1, V2, V4), not -mythical_being(V1, V2, V4), not -brother(V1, V2, V4), not -limbs(V1, V2, V4), not pay_bills(V1, V2, V4).","box(V2, V1) :- - bed_sheet(V1, V2, V4), not -mythical_being(V1, V2, V4), not -brother(V1, V2, V4), not -limbs(V1, V2, V4), not pay_bills(V1, V2, V4)."],"noisy_rules":{"a":["- toyota(V0, V4) :- - shin(V0, V4), not -bed_sheet(V1, V2, V4), - setting(V0, V2, V4), - box(V0, V1).","- toyota(V0, V3) :- - shin(V0, V4), - rule(V0, V1, V4), legging(V2, V3), not setting(V0, V2, V4), - box(V0, V1)."],"b":["- ab_crunches(V0, V2, V2) :- legging(V2, V3), - toyota(V0, V3).","- replacement_cost(V0, V1) :- - storm_castle(V4), - replacement_cost(V0, V1), - launching_space_shuttle(V2, V3), - box(V0, V1), not toyota(V0, V3)."],"c":["- limbs(V1, V2, V4) :- bed_sheet(V1, V2, V4), - replacement_cost(V0, V1).","- setting(V0, V2, V4) :- - storm_castle(V4), - rule(V0, V1, V4), legging(V2, V3), not -bed_sheet(V1, V2, V4), - good_exercise(V0, V1, V3)."],"d":["- box(V0, V1) :- - good_exercise(V0, V1, V3), not osmoreceptor(V0, V1, V3), not personal_property(V0, V1, V3).","part(V4) :- - storm_castle(V4), - replacement_cost(V0, V1), not storm_cloud(V0, V1)."],"e":["- county_town(V2, V3) :- shirring(V1), - tank(V0, V2), - conditioned_emotional_response(V2, V4), - national_flag(V1, V3, V4), not -beef_loin(V1, V3, V4).","- vertebrates(V0, V2) :- - council(V1), - contain_food(V1, V3), pedestrians(V0, V1, V3), - property(V0, V1, V4), plastic_bomb(V1, V2, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_62_8_11_6_7_0.5_1.0_3_3_4","seed":62,"num_facts":8,"num_rules":12,"num_related_predicates":20,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":" P11(\"Brittany\", \"Vanessa\", \"Joshua\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- eiderdown(\"Vanessa\", \"Joshua\").","second_joint(\"Brittany\", \"Tiffany\", \"Vanessa\").","- small_indefinite_quantity(\"Brittany\", \"Tiffany\").","poultry(\"Brittany\", \"Joshua\", \"Anthony\").","- dark_meat(\"Tiffany\", \"Vanessa\", \"Anthony\").","mesh(\"Brittany\", \"Tiffany\").","- mil(\"Brittany\", \"Tiffany\").","wing(\"Brittany\", \"Tiffany\", \"Vanessa\")."],"noisy_facts":["- bad_check(\"Tiffany\", \"Joshua\", \"Anthony\").","helminth(\"Vanessa\").","doctor(\"Vanessa\", \"Joshua\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- P11(V0, V2, V3) :- - duckling(V0, V2), sea_duck(V0, V3), not -inch(V0, V2, V3).","- eider(V2) :- - eiderdown(V2, V3).","- duckling(V0, V2) :- helping(V0, V2, V4).","sea_duck(V2, V2) :- - eider(V2), not old_squaw(V2), not -merganser(V2).","mandarin_duck(V1, V2, V3) :- second_joint(V0, V1, V2), poultry(V0, V3, V4), not dark_meat(V1, V2, V4).","bird(V1, V4) :- second_joint(V0, V1, V2), poultry(V0, V3, V4), not dark_meat(V1, V2, V4).","- duck(V0, V1) :- second_joint(V0, V1, V2), poultry(V0, V3, V4), not dark_meat(V1, V2, V4).","helping(V0, V2, V0) :- mandarin_duck(V1, V2, V3), second_joint(V0, V1, V2), not -wing(V0, V1, V2).","- old_squaw(V2) :- mandarin_duck(V1, V2, V3), second_joint(V0, V1, V2), not -wing(V0, V1, V2).","ruddy_duck(V0, V1) :- mandarin_duck(V1, V2, V3), second_joint(V0, V1, V2), not -wing(V0, V1, V2).","merganser(V1) :- bird(V1, V4), ruddy_duck(V0, V1), not small_indefinite_quantity(V0, V1).","inch(V0, V1, V0) :- - duck(V0, V1), not -mesh(V0, V1), not mil(V0, V1)."],"noisy_rules":{"a":["P11(V0, V2, V1) :- duck(V0, V1), - helping(V0, V2, V4).","P11(V0, V2, V3) :- - mandarin_duck(V1, V2, V3), duck(V0, V1)."],"b":["- poultry(V0, V3, V0) :- eider(V2), duck(V0, V1), P11(V0, V2, V3).","duck(V0, V1) :- - sea_duck(V0, V3), - ruddy_duck(V0, V1), P11(V0, V2, V3)."],"c":["small_indefinite_quantity(V0, V0) :- duckling(V0, V2), - helping(V0, V2, V4).","eider(V2) :- - mandarin_duck(V1, V2, V3), - helping(V0, V2, V4), not -old_squaw(V2)."],"d":["dark_meat(V2, V2, V2) :- eider(V2), not -helminth(V2).","duck(V3, V1) :- - mandarin_duck(V1, V2, V3)."],"e":["professional(V2) :- doctor(V2, V3).","check(V3, V4) :- - bad_check(V1, V3, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_0_10_11_10_13_0.5_1.0_3_3_4","seed":0,"num_facts":14,"num_rules":12,"num_related_predicates":26,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.4444444444444446,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" color(\"Jacqueline\", \"Jared\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["bovine(\"Lucas\", \"Jacqueline\").","yellow_fever_mosquito.","- temporal_bone(\"Adam\", \"Lucas\", \"Jared\").","entering_water(\"Lucas\", \"Jacqueline\").","extremity(\"Lucas\", \"Jacqueline\").","- water_body(\"Lucas\", \"Jacqueline\").","- destroy_city(\"Jared\", \"Kayla\").","- diner(\"Adam\", \"Jacqueline\", \"Kayla\").","hurt_people(\"Adam\", \"Lucas\", \"Jared\").","- sandwich(\"Lucas\", \"Jacqueline\", \"Kayla\").","spirit(\"Adam\", \"Lucas\", \"Jacqueline\").","sex(\"Adam\", \"Lucas\", \"Jacqueline\").","living_room(\"Adam\", \"Lucas\", \"Jared\").","- pigment(\"Adam\", \"Lucas\", \"Jared\")."],"noisy_facts":["- welsh(\"Lucas\", \"Jacqueline\").","circle_of_curvature(\"Adam\", \"Lucas\", \"Jared\").","- hypocrite(\"Jacqueline\").","- soaring(\"Jacqueline\").","state_capital(\"Adam\", \"Jacqueline\", \"Jared\").","immigration(\"Adam\", \"Jared\").","high_tea(\"Lucas\", \"Jacqueline\", \"Jared\").","stripe(\"Adam\", \"Lucas\", \"Jacqueline\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- color(V2, V3) :- - indian_elephant(V0, V2), - appendage(V0, V3), living_room(V0, V1, V3).","- indian_elephant(V0, V2) :- - spatchcock(V2), hurt_people(V0, V1, V3), - sandwich(V1, V2, V4).","olive(V1, V2) :- - spatchcock(V2), hurt_people(V0, V1, V3), - sandwich(V1, V2, V4).","- bodily_process(V0, V1, V2) :- - mosquitoes(V0, V3), - news(V0, V1, V2), not -hepatomegaly(V0, V1, V3).","- mosquitoes(V1, V2) :- olive(V1, V2), not -bovine(V1, V2).","fixed_charge(V1) :- bovine(V1, V2), not -extremity(V1, V2), not water_body(V1, V2).","- news(V0, V0, V0) :- fixed_charge(V0), not -yellow_fever_mosquito.","caterpillar(V0, V0, V0) :- fixed_charge(V0), not -yellow_fever_mosquito.","- drinking_with_guys(V0, V2, V0) :- - bodily_process(V0, V1, V2), not -spirit(V0, V1, V2), not -sex(V0, V1, V2).","- spatchcock(V0) :- - temporal_bone(V0, V1, V3), not -living_room(V0, V1, V3), not pigment(V0, V1, V3).","- appendage(V0, V3) :- fixed_charge(V0), caterpillar(V1, V2, V3), not drinking_with_guys(V0, V2, V3).","hepatomegaly(V0, V1, V3) :- entering_water(V1, V2), - destroy_city(V3, V4), - diner(V0, V2, V4)."],"noisy_rules":{"a":["color(V2, V3) :- indian_elephant(V0, V2), - caterpillar(V1, V2, V3).","color(V2, V3) :- news(V0, V1, V2), drinking_with_guys(V0, V2, V3)."],"b":["pigment(V3, V2, V3) :- color(V2, V3).","- sex(V0, V1, V2) :- bodily_process(V0, V1, V2), not -appendage(V0, V3), color(V2, V3)."],"c":["destroy_city(V1, V0) :- - olive(V1, V2), news(V0, V1, V2).","- extremity(V3, V2) :- - fixed_charge(V0), drinking_with_guys(V0, V2, V3), not -spatchcock(V2)."],"d":["- hepatomegaly(V0, V1, V3) :- - olive(V1, V2), mosquitoes(V0, V3), not -immigration(V0, V3).","- hepatomegaly(V2, V2, V2) :- spatchcock(V2), not soaring(V2), not hypocrite(V2)."],"e":["back_garden(V1) :- - welsh(V1, V2), stripe(V0, V1, V2).","canary(V0, V1, V3) :- circle_of_curvature(V0, V1, V3), state_capital(V0, V2, V3), not -high_tea(V1, V2, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_28_7_10_4_5_0.5_1.0_5_2_3","seed":28,"num_facts":8,"num_rules":11,"num_related_predicates":19,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P10(\"Robert\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P11(\"Robert\", \"Nancy\").","- P12(\"Mitchell\", \"Jessica\").","P13(\"Mitchell\", \"Nancy\").","P14(\"Nancy\").","P15(\"Nancy\").","P16(\"Nancy\").","- P17(\"Jessica\", \"Nancy\").","- P18(\"Jessica\", \"Nancy\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- P11(\"Robert\", \"Nancy\").","- P12(\"Mitchell\", \"Jessica\").","P13(\"Mitchell\", \"Nancy\").","- P17(\"Jessica\", \"Nancy\")."],"noiseless_rules":["- P10(V1) :- - P0(V1), - P5(V1), P6(V0, V3), not -P8(V1, V3).","- P0(V1) :- - P11(V1, V3).","P1(V1, V3) :- - P11(V1, V3).","- P2(V3) :- - P12(V0, V2), - P17(V2, V3), not P18(V2, V3).","P3(V2) :- - P12(V0, V2), - P17(V2, V3), not P18(V2, V3).","- P4(V3, V3) :- - P2(V3), not P7(V3), not -P9(V3), not -P15(V3), not -P16(V3).","- P5(V1) :- P1(V1, V3), P3(V2), not P4(V1, V2).","P6(V0, V3) :- P13(V0, V3).","- P7(V3) :- P13(V0, V3).","P8(V3, V3) :- P14(V3), not -P15(V3).","P9(V3) :- P14(V3), not -P15(V3)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_22_6_8_2_4_0.5_1.0_3_3_4","seed":22,"num_facts":5,"num_rules":9,"num_related_predicates":14,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P8(\"Roy\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P9(\"Mark\", \"Colton\", \"Roy\").","P10(\"Mark\", \"Nathan\", \"Colton\").","- P11(\"Melissa\", \"Roy\").","- P12(\"Mark\", \"Melissa\", \"Roy\").","P13(\"Colton\", \"Melissa\", \"Roy\")."],"noisy_facts":["P19(\"Mark\", \"Colton\", \"Roy\").","- P15(\"Roy\").","- P21(\"Mark\", \"Nathan\").","P14(\"Mark\", \"Melissa\", \"Roy\").","P16(\"Roy\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["P8(V4) :- - P1(V4), P4(V3, V4), P5(V0, V3, V4).","- P0(V0) :- P9(V0, V2, V4).","- P1(V4) :- P10(V0, V1, V2), - P12(V0, V3, V4), not -P13(V2, V3, V4).","- P2(V3, V4) :- P10(V0, V1, V2), - P12(V0, V3, V4), not -P13(V2, V3, V4).","P3(V0, V1) :- P10(V0, V1, V2), - P12(V0, V3, V4), not -P13(V2, V3, V4).","P4(V3, V4) :- - P2(V3, V4), - P6(V2, V3, V4), not -P13(V2, V3, V4).","P5(V0, V0, V1) :- - P0(V0), P3(V0, V1), not -P7(V0).","- P6(V3, V3, V4) :- - P2(V3, V4), not P11(V3, V4).","P7(V4) :- - P2(V3, V4), not P11(V3, V4)."],"noisy_rules":{"a":["- P8(V0) :- - P3(V0, V1).","- P8(V4) :- P1(V4)."],"b":["- P4(V4, V4) :- - P8(V4).","P2(V3, V4) :- - P5(V0, V3, V4), P6(V2, V3, V4), not P8(V4)."],"c":["- P3(V0, V0) :- P0(V0), P1(V4).","P2(V3, V4) :- - P3(V0, V1), - P4(V3, V4)."],"d":["- P4(V3, V4) :- - P5(V0, V3, V4), P6(V2, V3, V4), not -P14(V0, V3, V4).","P17(V4, V4) :- P1(V4), not P15(V4), not -P16(V4)."],"e":["P18(V0, V2, V4) :- P19(V0, V2, V4).","- P20(V0, V1) :- - P21(V0, V1)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_85_8_10_9_12_0.5_1.0_5_3_4","seed":85,"num_facts":12,"num_rules":11,"num_related_predicates":23,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.4285714285714284,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" organism(\"James\", \"Dakota\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- birds_house(\"James\", \"Dawn\").","- government_agent(\"James\", \"Dakota\").","gnat(\"James\", \"Kathryn\", \"Dakota\").","withers(\"James\", \"Kathryn\", \"Dakota\").","universal_agent(\"James\", \"Dakota\", \"Erica\").","- small(\"James\", \"Kathryn\", \"Dakota\").","miner(\"James\", \"Kathryn\", \"Dakota\").","kit_fox(\"James\", \"Kathryn\", \"Dakota\").","- cost_money(\"James\", \"Kathryn\", \"Dakota\").","device(\"James\", \"Kathryn\", \"Dakota\").","- torero(\"Kathryn\", \"Dakota\").","- banderillero(\"James\", \"Kathryn\", \"Dawn\")."],"noisy_facts":["- breast(\"Kathryn\", \"Dakota\", \"Dawn\").","- restaurant(\"Dawn\").","golf(\"James\", \"Dakota\", \"Erica\").","- lawn_bowling(\"Dawn\", \"Erica\").","foramen_magnum(\"Dawn\", \"Erica\").","- playing_football(\"Dawn\", \"Erica\").","- napkin(\"Dawn\", \"Erica\").","heifer(\"Dawn\", \"Erica\").","conclusion(\"James\", \"Dakota\", \"Erica\").","- fast_food_restaurant(\"James\", \"Dakota\", \"Erica\").","- steak_house(\"Dakota\", \"Dawn\", \"Erica\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- organism(V0, V2) :- cell(V0, V1, V2), - person(V0, V3, V4), not animal(V1, V2, V3).","bullfighter(V3) :- - birds_house(V0, V3), - torero(V1, V2), not banderillero(V0, V1, V3).","cell(V0, V1, V2) :- - birds_house(V0, V3), - torero(V1, V2), not banderillero(V0, V1, V3).","agent(V0, V2) :- - government_agent(V0, V2), universal_agent(V0, V2, V4).","- person(V3, V3, V3) :- bullfighter(V3), not creature(V3), not -talent_agent(V3).","- animal(V1, V2, V3) :- literary_agent(V1, V2, V3).","- creature(V3) :- literary_agent(V1, V2, V3).","literary_agent(V1, V2, V3) :- - handler(V0, V3), - body_part(V3, V4), - cost_money(V0, V1, V2).","- handler(V0, V2) :- gnat(V0, V1, V2), not -miner(V0, V1, V2), not -kit_fox(V0, V1, V2), not cost_money(V0, V1, V2), not -device(V0, V1, V2).","talent_agent(V4) :- cell(V0, V1, V2), agent(V0, V2), withers(V0, V1, V2), universal_agent(V0, V2, V4), not small(V0, V1, V2).","- body_part(V0, V4) :- cell(V0, V1, V2), agent(V0, V2), withers(V0, V1, V2), universal_agent(V0, V2, V4), not small(V0, V1, V2)."],"noisy_rules":{"a":["organism(V0, V2) :- - cell(V0, V1, V2), body_part(V3, V4).","organism(V0, V2) :- person(V0, V3, V4), animal(V1, V2, V3), not -creature(V3), - literary_agent(V1, V2, V3)."],"b":["- agent(V0, V2) :- - literary_agent(V1, V2, V3), handler(V0, V3), - talent_agent(V3), body_part(V3, V4), not -organism(V0, V2).","creature(V3) :- - bullfighter(V3), - literary_agent(V1, V2, V3), organism(V0, V2)."],"c":["creature(V3) :- - bullfighter(V3), animal(V1, V2, V3), body_part(V3, V4).","- kit_fox(V0, V4, V2) :- - agent(V0, V2), person(V0, V3, V4), not talent_agent(V3), not -body_part(V3, V4)."],"d":["- literary_agent(V1, V2, V3) :- - breast(V1, V2, V3).","- agent(V3, V4) :- not -body_part(V3, V4), - playing_football(V3, V4), not lawn_bowling(V3, V4), foramen_magnum(V3, V4), heifer(V3, V4)."],"e":["- growl(V0, V2, V4) :- golf(V0, V2, V4), not -conclusion(V0, V2, V4).","eating_out(V3) :- - restaurant(V3), not napkin(V3, V4), - fast_food_restaurant(V0, V2, V4), - steak_house(V2, V3, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_81_5_7_7_8_0.5_1.0_5_2_3","seed":81,"num_facts":9,"num_rules":8,"num_related_predicates":17,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"christmas(\"Henry\", \"Jonathan\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["department_store(\"Richard\", \"Darryl\").","- messuage(\"Henry\", \"Jonathan\").","- egg(\"Richard\", \"Darryl\").","hermitage(\"Darryl\", \"Jonathan\").","head(\"Richard\", \"Darryl\").","record(\"Richard\", \"Darryl\").","- tree(\"Richard\", \"Darryl\").","- call(\"Richard\", \"Jonathan\").","phones(\"Darryl\", \"Jonathan\")."],"noisy_facts":["- hair(\"Richard\", \"Darryl\").","- long_staple_cotton(\"Henry\", \"Jonathan\").","- short_staple_cotton(\"Richard\", \"Jonathan\").","- absorbent_cotton(\"Richard\", \"Henry\").","- flies(\"Richard\", \"Henry\").","crown(\"Richard\", \"Darryl\").","plate(\"Richard\", \"Darryl\").","insects(\"Henry\", \"Jonathan\").","- satisfying_desire(\"Henry\", \"Jonathan\")."],"min_fact_dicts_for_query":["department_store(\"Richard\", \"Darryl\").","- messuage(\"Henry\", \"Jonathan\").","- egg(\"Richard\", \"Darryl\").","hermitage(\"Darryl\", \"Jonathan\").","- tree(\"Richard\", \"Darryl\").","- call(\"Richard\", \"Jonathan\")."],"noiseless_rules":["christmas(V1, V3) :- - giving_gift(V0, V3), - buying_presents(V0, V3), - dwelling(V1, V2), not -ornament(V1, V3).","- giving_gift(V0, V3) :- - merry(V0, V3), round(V1, V3).","- buying_presents(V0, V3) :- department_store(V0, V2), - tree(V0, V2), - call(V0, V3), not -phones(V2, V3).","- merry(V0, V3) :- department_store(V0, V2), - tree(V0, V2), - call(V0, V3), not -phones(V2, V3).","ring(V0, V2) :- department_store(V0, V2), - tree(V0, V2), - call(V0, V3), not -phones(V2, V3).","- dwelling(V1, V2) :- - messuage(V1, V3), hermitage(V2, V3).","ornament(V2, V3) :- ring(V0, V2), - egg(V0, V2), hermitage(V2, V3), not -head(V0, V2), not -record(V0, V2).","round(V0, V3) :- ring(V0, V2), - egg(V0, V2), hermitage(V2, V3), not -head(V0, V2), not -record(V0, V2)."],"noisy_rules":{"a":["- christmas(V1, V3) :- buying_presents(V0, V3), merry(V0, V3), - ring(V0, V2), - ornament(V1, V3), not round(V1, V3).","- christmas(V1, V3) :- buying_presents(V0, V3), not -merry(V0, V3), - ornament(V1, V3)."],"b":["egg(V0, V2) :- buying_presents(V0, V3), not -merry(V0, V3), dwelling(V1, V2), - round(V1, V3), not christmas(V1, V3).","tree(V1, V3) :- - christmas(V1, V3)."],"c":["messuage(V1, V3) :- giving_gift(V0, V3), merry(V0, V3), dwelling(V1, V2).","- ornament(V3, V3) :- giving_gift(V0, V3), not -buying_presents(V0, V3), - ring(V0, V2)."],"d":["- head(V0, V2) :- not -buying_presents(V0, V3), - ring(V0, V2), - ornament(V1, V3), not hair(V0, V2), crown(V0, V2).","circle(V0, V2) :- not ring(V0, V2), plate(V0, V2)."],"e":["compound_eyes(V1, V3) :- - flies(V0, V1), insects(V1, V3), not satisfying_desire(V1, V3).","cotton(V0, V3) :- - absorbent_cotton(V0, V1), - short_staple_cotton(V0, V3), not long_staple_cotton(V1, V3)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_87_5_7_5_6_0.5_1.0_3_2_3","seed":87,"num_facts":6,"num_rules":8,"num_related_predicates":14,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"P7(\"Phillip\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P8(\"Katherine\", \"Riley\").","P9(\"Riley\", \"Paul\").","P10(\"Phillip\", \"Paul\").","P11.","P12.","- P13(\"Riley\", \"Paul\")."],"noisy_facts":["P23(\"Riley\", \"Paul\").","- P19(\"Riley\", \"Phillip\").","P20(\"Riley\", \"Paul\").","P17(\"Riley\", \"Paul\").","- P14(\"Riley\", \"Phillip\").","- P22(\"Katherine\", \"Riley\")."],"min_fact_dicts_for_query":["- P8(\"Katherine\", \"Riley\").","P9(\"Riley\", \"Paul\").","P10(\"Phillip\", \"Paul\")."],"noiseless_rules":["P7(V2) :- - P1(V2), - P3(V0, V1), not -P6(V1, V2).","- P0(V1, V3) :- - P4(V3), - P13(V1, V3).","- P1(V2) :- - P8(V0, V1), P9(V1, V3), P10(V2, V3).","P2(V0, V1) :- - P8(V0, V1), P9(V1, V3), P10(V2, V3).","- P3(V2, V2) :- - P1(V2), not -P11, not -P12.","- P4(V2) :- - P1(V2), not -P11, not -P12.","P5(V2, V2) :- - P1(V2), not -P11, not -P12.","P6(V1, V1) :- - P0(V1, V3), P2(V0, V1), not -P5(V1, V3)."],"noisy_rules":{"a":["- P7(V1) :- - P5(V1, V3).","- P7(V2) :- - P2(V0, V1), - P6(V1, V2)."],"b":["P4(V2) :- - P7(V2).","- P9(V3, V3) :- P4(V3), - P7(V2)."],"c":["- P12(V3) :- P4(V3).","- P12(V0) :- - P2(V0, V1)."],"d":["P15(V2) :- - P6(V1, V2), not P14(V1, V2).","P16(V1, V1) :- not -P0(V1, V3), P17(V1, V3)."],"e":["- P18(V1, V3) :- - P19(V1, V2), P20(V1, V3).","- P21(V1) :- - P22(V0, V1), P23(V1, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_38_5_5_4_7_0.5_1.0_5_2_3","seed":38,"num_facts":7,"num_rules":6,"num_related_predicates":13,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"P5(\"Theresa\", \"James\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P6(\"Sarah\").","- P7(\"James\").","- P8(\"Theresa\", \"Sarah\").","P9(\"Theresa\", \"Sarah\").","P10(\"Theresa\", \"Alex\").","- P11(\"Theresa\", \"Alex\").","- P12(\"Alex\", \"James\")."],"noisy_facts":["P13(\"Theresa\", \"James\").","- P18(\"Theresa\", \"Alex\").","- P19(\"Alex\", \"James\").","- P14(\"Theresa\", \"James\").","- P15(\"Theresa\", \"Alex\").","P17(\"Sarah\")."],"min_fact_dicts_for_query":["- P7(\"James\").","P9(\"Theresa\", \"Sarah\").","P10(\"Theresa\", \"Alex\")."],"noiseless_rules":["P5(V0, V3) :- - P1(V0, V3), not P3(V0, V3).","- P0(V1) :- P6(V1), - P8(V0, V1).","- P1(V0, V3) :- - P7(V3), P9(V0, V1), P10(V0, V2), not P11(V0, V2), not P12(V2, V3).","- P2(V0, V2) :- - P7(V3), P9(V0, V1), P10(V0, V2), not P11(V0, V2), not P12(V2, V3).","- P3(V0, V0) :- - P0(V1), - P2(V0, V2), not -P4(V1, V2).","P4(V1, V2) :- - P0(V1), - P8(V0, V1), - P11(V0, V2)."],"noisy_rules":{"a":["- P5(V0, V3) :- not -P0(V1), P1(V0, V3), P3(V0, V3), - P4(V1, V2).","- P5(V0, V3) :- P2(V0, V2), P3(V0, V3), - P4(V1, V2)."],"b":["P1(V0, V3) :- not -P0(V1), P1(V0, V3), P3(V0, V3), - P4(V1, V2), - P5(V0, V3).","P1(V0, V3) :- P0(V1), P2(V0, V2), not P4(V1, V2), - P5(V0, V3)."],"c":["P11(V0, V2) :- P1(V0, V3), P2(V0, V2), - P4(V1, V2).","P7(V3) :- P1(V0, V3), P2(V0, V2)."],"d":["P12(V2, V3) :- not -P1(V0, V3), not -P3(V0, V3), - P4(V1, V2), P13(V0, V3), - P14(V0, V3).","P12(V2, V0) :- P2(V0, V2), not P15(V0, V2)."],"e":["P16(V1) :- P17(V1).","- P20(V0, V2) :- - P18(V0, V2), - P19(V2, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_30_8_10_8_11_0.5_1.0_5_3_4","seed":30,"num_facts":11,"num_rules":11,"num_related_predicates":22,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" fly(\"Jason\", \"Tiffany\", \"Bianca\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["bed(\"Jason\", \"Ashley\", \"Bianca\").","- article_in_magazine(\"Tiffany\", \"Ashley\").","- roll(\"Jason\", \"Ashley\", \"Bianca\").","- gossip(\"Ashley\").","waffler(\"Jason\", \"Ashley\", \"Bianca\").","rambler(\"Jason\", \"Ashley\", \"Bianca\").","- baby(\"Tiffany\", \"Julie\", \"Bianca\").","table(\"Ashley\", \"Julie\").","literature(\"Julie\", \"Bianca\").","truffle(\"Jason\", \"Tiffany\", \"Bianca\").","tears(\"Tiffany\", \"Julie\", \"Bianca\")."],"noisy_facts":["chicken(\"Jason\", \"Tiffany\", \"Bianca\").","cot(\"Ashley\").","jogging(\"Ashley\", \"Julie\", \"Bianca\").","- cytoplasm(\"Tiffany\", \"Ashley\").","- mattress(\"Ashley\").","- eating_vegetables(\"Jason\", \"Tiffany\", \"Julie\")."],"min_fact_dicts_for_query":["bed(\"Jason\", \"Ashley\", \"Bianca\").","- article_in_magazine(\"Tiffany\", \"Ashley\").","- roll(\"Jason\", \"Ashley\", \"Bianca\").","table(\"Ashley\", \"Julie\").","literature(\"Julie\", \"Bianca\").","truffle(\"Jason\", \"Tiffany\", \"Bianca\")."],"noiseless_rules":["- fly(V0, V1, V4) :- cry(V4), nest(V0, V1), chick(V0, V4), - read(V1, V3), - kite(V0, V2, V4).","- communicator(V0, V2, V4) :- - action(V2), - gossip(V2), waffler(V0, V2, V4), rambler(V0, V2, V4), - baby(V1, V3, V4).","cry(V4) :- chick(V0, V4), not -bird(V0, V4).","nest(V0, V1) :- learning_from(V0, V1, V4).","chick(V0, V4) :- bed(V0, V2, V4), not -waffler(V0, V2, V4).","- sleep(V4, V2, V2) :- bed(V0, V2, V4), not -waffler(V0, V2, V4).","- read(V1, V3) :- - article_in_magazine(V1, V2), table(V2, V3), literature(V3, V4), truffle(V0, V1, V4), not -tears(V1, V3, V4).","learning_from(V0, V1, V4) :- - article_in_magazine(V1, V2), table(V2, V3), literature(V3, V4), truffle(V0, V1, V4), not -tears(V1, V3, V4).","bird(V0, V4) :- - communicator(V0, V2, V4), - sleep(V1, V2, V3), not kite(V0, V2, V4).","- action(V2) :- - roll(V0, V2, V4).","- kite(V0, V2, V4) :- - roll(V0, V2, V4)."],"noisy_rules":{"a":["fly(V0, V1, V4) :- communicator(V0, V2, V4), - nest(V0, V1), - chick(V0, V4), sleep(V1, V2, V3), not -action(V2).","fly(V0, V1, V4) :- communicator(V0, V2, V4), - cry(V4), - chick(V0, V4), sleep(V1, V2, V3), - bird(V0, V4)."],"b":["action(V2) :- not cry(V4), sleep(V1, V2, V3), not -read(V1, V3), not learning_from(V0, V1, V4), fly(V0, V1, V4).","baby(V1, V0, V4) :- - cry(V4), - nest(V0, V1), not -fly(V0, V1, V4)."],"c":["baby(V1, V3, V4) :- - nest(V0, V1), - chick(V0, V4), sleep(V1, V2, V3), action(V2).","- tears(V4, V4, V4) :- - cry(V4)."],"d":["- bird(V0, V4) :- not chick(V0, V4), not learning_from(V0, V1, V4), chicken(V0, V1, V4).","- bed(V2, V2, V2) :- action(V2), - mattress(V2), cot(V2)."],"e":["cell(V1, V2) :- - cytoplasm(V1, V2).","health(V0, V2, V4) :- - eating_vegetables(V0, V1, V3), jogging(V2, V3, V4)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_15_7_6_4_6_0.5_1.0_5_1_2","seed":15,"num_facts":6,"num_rules":7,"num_related_predicates":13,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" solitaire(\"Jacob\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["irradiation(\"Keith\").","- crossing.","- patter(\"Jacob\").","- placement(\"Jacob\").","muck(\"Jacob\").","sofa(\"Jacob\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- solitaire(V0) :- - foam(V0), not -impersonation(V0).","- heteropterous_insect(V2) :- - desert(V2).","- desert(V2) :- irradiation(V2).","- foam(V0) :- - dividend(V0), not patter(V0), not placement(V0), not -muck(V0), not -sofa(V0).","- lending_library(V2) :- - heteropterous_insect(V2).","- dividend(V2) :- - heteropterous_insect(V2), not crossing.","impersonation(V0) :- - lending_library(V0), not placement(V0)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_39_10_12_10_13_0.5_1.0_3_2_3","seed":39,"num_facts":14,"num_rules":13,"num_related_predicates":27,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.2222222222222223,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"P12(\"Lee\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P13(\"Michelle\").","- P14(\"Jennifer\", \"Lee\").","- P15(\"Jennifer\", \"Michelle\").","- P16(\"Michelle\", \"Lee\").","- P17(\"Michelle\", \"Lee\").","P18(\"Michelle\", \"Lee\").","P19(\"Jennifer\", \"Lee\").","- P20(\"Jennifer\").","P21(\"Jennifer\", \"Gregory\").","- P22(\"Jennifer\", \"Gregory\").","- P23(\"Jennifer\", \"Michelle\").","P24(\"Gregory\", \"Michelle\").","P25(\"Michelle\", \"Lee\").","- P26(\"Jennifer\", \"Lee\")."],"noisy_facts":["- P28(\"Jennifer\", \"Lee\").","- P30(\"Jennifer\").","- P33(\"Lee\").","- P32(\"Jennifer\", \"Lee\").","P35(\"Jennifer\", \"Lee\").","- P27(\"Jennifer\", \"Lee\").","- P34(\"Lee\").","P31(\"Lee\")."],"min_fact_dicts_for_query":["P13(\"Michelle\").","- P15(\"Jennifer\", \"Michelle\").","- P17(\"Michelle\", \"Lee\").","P19(\"Jennifer\", \"Lee\").","- P23(\"Jennifer\", \"Michelle\").","P24(\"Gregory\", \"Michelle\")."],"noiseless_rules":["P12(V3) :- - P2(V3), P4(V0, V2), not -P11(V0, V3).","P0(V0, V3) :- P3(V2), P6(V0, V2), P19(V0, V3).","P1(V0) :- P3(V2), P6(V0, V2), P19(V0, V3).","- P2(V3) :- P13(V2), - P17(V2, V3), not -P18(V2, V3).","P3(V2) :- P13(V2), - P17(V2, V3), not -P18(V2, V3).","P4(V0, V3) :- P0(V0, V3), not P8(V0, V3), not P10(V0, V3).","P5(V0, V3) :- P11(V0, V3), not P14(V0, V3), not P26(V0, V3).","P6(V0, V2) :- - P15(V0, V2), - P23(V0, V2), P24(V1, V2).","P7(V0, V1) :- - P15(V0, V2), - P23(V0, V2), P24(V1, V2).","- P8(V2, V3) :- P5(V2, V3), not P9(V2, V3), not -P25(V2, V3).","- P9(V3, V3) :- P1(V0), P11(V0, V3), not P20(V0).","- P10(V0, V1) :- P7(V0, V1), not -P21(V0, V1), not P22(V0, V1).","P11(V3, V3) :- - P16(V2, V3), not -P18(V2, V3)."],"noisy_rules":{"a":["- P12(V1) :- - P7(V0, V1).","- P12(V0) :- - P1(V0)."],"b":["- P1(V0) :- - P0(V0, V3), - P12(V3).","- P13(V3) :- - P12(V3)."],"c":["- P19(V2, V3) :- - P5(V2, V3).","P15(V0, V2) :- - P4(V0, V2), not P6(V0, V2)."],"d":["P22(V0, V0) :- - P11(V0, V3), not P27(V0, V3).","- P13(V2) :- - P3(V2), P8(V0, V3), not P28(V0, V3)."],"e":["P29(V0, V3) :- - P30(V0), P31(V3), not P32(V0, V3).","- P36(V3) :- - P33(V3), - P34(V3), P35(V0, V3)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_7_10_10_10_11_0.5_1.0_5_1_2","seed":7,"num_facts":15,"num_rules":11,"num_related_predicates":26,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2222222222222223,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" reading_magazine(\"Allen\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- automobiles(\"Allen\").","cloud_logic(\"Kelly\").","dog_pest(\"Allen\").","borsch(\"Kelly\").","- precipitation(\"Allen\").","- books.","half_and_half.","- ocellated_turkey.","second_wind.","winter.","- making_sandwiches.","right.","- having_steak_dinner(\"Allen\").","- vroom(\"Allen\").","- stylist(\"Allen\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- reading_magazine(V1) :- landscaping(V1), not stage(V1), not -bible(V1), not catch_buzz(V1), not having_steak_dinner(V1).","landscaping(V1) :- thereness(V1).","- work_in_airplane(V1) :- thereness(V1).","- stage(V1) :- - automobiles(V1), not vroom(V1), not stylist(V1).","oosphere(V2) :- cloud_logic(V2), not -borsch(V2).","bags(V1) :- dog_pest(V1).","gather(V1) :- bags(V1), not -second_wind, not -winter, not making_sandwiches, not -right.","thereness(V2) :- borsch(V2).","bible(V1) :- - work_in_airplane(V1), not measure(V1).","- measure(V2) :- oosphere(V2), not -gather(V2), not books, not -half_and_half, not ocellated_turkey.","- catch_buzz(V1) :- - precipitation(V1)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_14_5_4_4_5_0.5_1.0_5_3_4","seed":14,"num_facts":7,"num_rules":5,"num_related_predicates":12,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":3,"target_query":"lightweight(\"Christina\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- writing_surface(\"Lindsey\", \"Christina\", \"Matthew\").","least_effort(\"Aaron\", \"Lindsey\", \"Amy\").","- persons_pet(\"Lindsey\", \"Matthew\").","- world_series_games(\"Amy\", \"Christina\").","- set_broken_bone(\"Aaron\", \"Amy\", \"Christina\").","- immigration(\"Aaron\", \"Amy\", \"Matthew\").","winter(\"Aaron\", \"Amy\", \"Matthew\")."],"noisy_facts":[],"min_fact_dicts_for_query":["least_effort(\"Aaron\", \"Lindsey\", \"Amy\").","- persons_pet(\"Lindsey\", \"Matthew\").","- world_series_games(\"Amy\", \"Christina\").","- set_broken_bone(\"Aaron\", \"Amy\", \"Christina\")."],"noiseless_rules":["lightweight(V3) :- pilothouse(V1, V3, V4), not pony_trekking(V1, V3, V4).","pilothouse(V1, V3, V4) :- - pony_trekking(V1, V3, V4), not writing_surface(V1, V3, V4).","- pony_trekking(V1, V3, V4) :- marker(V0, V1, V2), - communication(V0, V3, V4).","marker(V0, V1, V2) :- least_effort(V0, V1, V2).","- communication(V0, V3, V4) :- - persons_pet(V1, V4), - world_series_games(V2, V3), - set_broken_bone(V0, V2, V3), not immigration(V0, V2, V4), not -winter(V0, V2, V4)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_70_8_12_9_9_0.5_1.0_5_2_3","seed":70,"num_facts":11,"num_rules":13,"num_related_predicates":24,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.857142857142857,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"hawaii_volcanoes_national_park(\"Elizabeth\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["form_of_transportation(\"Elizabeth\").","azure(\"John\", \"Elizabeth\").","not_often(\"John\", \"Elizabeth\").","piece(\"John\", \"Judy\").","store_photographs(\"Elizabeth\", \"Keith\").","late_night_snacks(\"Keith\", \"Judy\").","liveliness(\"Elizabeth\", \"Keith\").","handles(\"Elizabeth\", \"Keith\").","making_look_nice(\"Elizabeth\", \"Keith\").","ticket(\"Elizabeth\", \"Keith\").","torpedo(\"Keith\", \"Judy\")."],"noisy_facts":[],"min_fact_dicts_for_query":["form_of_transportation(\"Elizabeth\").","azure(\"John\", \"Elizabeth\").","not_often(\"John\", \"Elizabeth\").","piece(\"John\", \"Judy\").","store_photographs(\"Elizabeth\", \"Keith\").","late_night_snacks(\"Keith\", \"Judy\").","liveliness(\"Elizabeth\", \"Keith\").","handles(\"Elizabeth\", \"Keith\").","making_look_nice(\"Elizabeth\", \"Keith\").","ticket(\"Elizabeth\", \"Keith\").","torpedo(\"Keith\", \"Judy\")."],"noiseless_rules":["hawaii_volcanoes_national_park(V1) :- bill_of_entry(V3), steeplechaser(V0, V1), lamboid_suture(V1, V3).","stringed_instrument(V1, V2) :- form_of_transportation(V1), not_often(V0, V1), piece(V0, V3), store_photographs(V1, V2), late_night_snacks(V2, V3).","bench(V1, V2) :- form_of_transportation(V1), not_often(V0, V1), piece(V0, V3), store_photographs(V1, V2), late_night_snacks(V2, V3).","feed_babies(V2) :- form_of_transportation(V1), not_often(V0, V1), piece(V0, V3), store_photographs(V1, V2), late_night_snacks(V2, V3).","bill_of_entry(V3) :- hunan(V3), cheap_money(V3).","steeplechaser(V0, V1) :- azure(V0, V1), ticket(V1, V2), torpedo(V2, V3).","hunan(V3) :- azure(V0, V1), ticket(V1, V2), torpedo(V2, V3).","electric(V2) :- azure(V0, V1), ticket(V1, V2), torpedo(V2, V3).","lamboid_suture(V1, V1) :- stringed_instrument(V1, V2).","hat(V2, V2) :- stringed_instrument(V1, V2).","lepton(V2, V2) :- bench(V1, V2), electric(V2), liveliness(V1, V2), handles(V1, V2), making_look_nice(V1, V2).","cheap_money(V3) :- hat(V0, V3), lepton(V0, V3), bregma(V0, V3).","bregma(V2, V2) :- feed_babies(V2)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_33_9_10_10_13_0.5_1.0_5_3_4","seed":33,"num_facts":14,"num_rules":11,"num_related_predicates":25,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" vicar(\"Samantha\", \"Kevin\", \"Justin\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["ocean_current(\"Kevin\", \"Nathan\").","wave_hands(\"Samantha\", \"Justin\", \"Nathan\").","rand(\"Samantha\", \"Justin\", \"Nathan\").","sierra_leonean(\"Samantha\", \"Justin\", \"Nathan\").","destroy_all_things(\"Samantha\", \"Nathan\").","answer_questions(\"Samantha\", \"Nathan\").","storing_data(\"Samantha\", \"Justin\", \"Nathan\").","namibian(\"Samantha\", \"Justin\", \"Nathan\").","ewe(\"Samantha\", \"Justin\", \"Nathan\").","atms(\"Samantha\", \"Justin\", \"Nathan\").","edible_snail(\"Justin\", \"Nathan\").","gilt(\"Samantha\", \"Kevin\", \"Nathan\").","canary(\"Samantha\", \"Rodney\", \"Nathan\").","pyrrhuloxia(\"Samantha\", \"Justin\", \"Nathan\")."],"noisy_facts":[],"min_fact_dicts_for_query":["ocean_current(\"Kevin\", \"Nathan\").","wave_hands(\"Samantha\", \"Justin\", \"Nathan\").","rand(\"Samantha\", \"Justin\", \"Nathan\").","sierra_leonean(\"Samantha\", \"Justin\", \"Nathan\").","destroy_all_things(\"Samantha\", \"Nathan\").","answer_questions(\"Samantha\", \"Nathan\").","storing_data(\"Samantha\", \"Justin\", \"Nathan\").","namibian(\"Samantha\", \"Justin\", \"Nathan\").","ewe(\"Samantha\", \"Justin\", \"Nathan\").","atms(\"Samantha\", \"Justin\", \"Nathan\").","edible_snail(\"Justin\", \"Nathan\").","gilt(\"Samantha\", \"Kevin\", \"Nathan\").","canary(\"Samantha\", \"Rodney\", \"Nathan\").","pyrrhuloxia(\"Samantha\", \"Justin\", \"Nathan\")."],"noiseless_rules":["vicar(V0, V2, V3) :- current(V2), passerine(V4), african(V0, V1), edible_snail(V3, V4), gilt(V0, V2, V4).","oscine(V0, V3, V4) :- finch(V0, V3, V4).","current(V2) :- ocean_current(V2, V4), pyrrhuloxia(V0, V3, V4).","crane_fly(V0, V4) :- ocean_current(V2, V4), pyrrhuloxia(V0, V3, V4).","siskin(V0, V3, V4) :- wave_hands(V0, V3, V4), namibian(V0, V3, V4).","junco(V0, V4, V4) :- crane_fly(V0, V4), dark_eyed_junco(V0, V4), machine(V0, V4), destroy_all_things(V0, V4), answer_questions(V0, V4).","finch(V0, V3, V4) :- siskin(V0, V3, V4), junco(V0, V1, V4), canary(V0, V1, V4), pyrrhuloxia(V0, V3, V4).","dark_eyed_junco(V0, V4) :- rand(V0, V3, V4).","passerine(V4) :- oscine(V0, V3, V4), siskin(V0, V3, V4).","african(V0, V4) :- sierra_leonean(V0, V3, V4), storing_data(V0, V3, V4), namibian(V0, V3, V4), ewe(V0, V3, V4), atms(V0, V3, V4).","machine(V0, V4) :- sierra_leonean(V0, V3, V4), storing_data(V0, V3, V4), namibian(V0, V3, V4), ewe(V0, V3, V4), atms(V0, V3, V4)."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_40_9_13_10_12_0.5_1.0_5_1_2","seed":40,"num_facts":13,"num_rules":14,"num_related_predicates":27,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":" equines(\"Thomas\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- doctor.","neuroblast(\"Thomas\").","afterglow(\"Cheryl\").","binomial.","broadcast_area.","dampener.","large_pond(\"Thomas\").","update.","camp(\"Thomas\").","- cool.","horse_racing(\"Thomas\").","ninian(\"Thomas\").","- soda_can(\"Thomas\")."],"noisy_facts":["- sunrise(\"Thomas\").","- canal_boat(\"Thomas\").","- tile(\"Cheryl\").","migratory_quail(\"Cheryl\").","plastic_bag(\"Thomas\")."],"min_fact_dicts_for_query":["- doctor.","large_pond(\"Thomas\")."],"noiseless_rules":["- equines(V1) :- - noctuid_moth(V1), not -watching_sunrise(V1), not parents_and_chilren(V1), not beginning(V1).","- noctuid_moth(V1) :- - doctor, large_pond(V1), not -update, not -camp(V1), not cool.","- traveling_faster(V1) :- - doctor, large_pond(V1), not -update, not -camp(V1), not cool.","watching_sunrise(V0) :- - traveling_faster(V0), not serving(V0), not -binomial, not -broadcast_area, not -dampener.","mastaba(V0) :- - traveling_faster(V0), not serving(V0), not -binomial, not -broadcast_area, not -dampener.","- parents_and_chilren(V1) :- pear(V1), not -number_of_songs_on(V1), not -horse_racing(V1), not -ninian(V1), not soda_can(V1).","pear(V1) :- feel_pain(V1), not makeing_music(V1), not -camp(V1).","feel_pain(V1) :- neuroblast(V1), not -large_pond(V1).","- burden(V1) :- neuroblast(V1), not -large_pond(V1).","album(V1) :- neuroblast(V1), not -large_pond(V1).","number_of_songs_on(V1) :- mastaba(V1), not burden(V1).","- beginning(V1) :- album(V1).","- makeing_music(V1) :- album(V1).","- serving(V0) :- afterglow(V0)."],"noisy_rules":{"a":["equines(V1) :- burden(V1).","equines(V1) :- noctuid_moth(V1), not -beginning(V1)."],"b":["parents_and_chilren(V1) :- makeing_music(V1), not -equines(V1).","- broadcast_area(V1) :- makeing_music(V1), not -equines(V1)."],"c":["- watching_sunrise(V1) :- noctuid_moth(V1), traveling_faster(V0), parents_and_chilren(V1), - feel_pain(V1), not -burden(V1).","doctor(V1) :- - number_of_songs_on(V1), not -beginning(V1)."],"d":["- horse_racing(V1) :- - album(V1), makeing_music(V1), plastic_bag(V1).","beginning(V1) :- not number_of_songs_on(V1), - canal_boat(V1)."],"e":["baked(V1) :- - sunrise(V1).","- white_grains(V0) :- not -migratory_quail(V0), - tile(V0)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_62_9_10_4_6_0.5_1.0_5_1_2","seed":62,"num_facts":7,"num_rules":11,"num_related_predicates":18,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":1.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" shrapnel(\"Colleen\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- glass_ceiling(\"David\").","heaven(\"Justin\").","garlic_bread.","food_holder(\"David\").","leg.","vermicide.","- glass_cutter."],"noisy_facts":["form_of_exercise(\"Justin\").","- matador.","- hospital(\"Justin\").","- blue(\"Justin\").","four_legs(\"Justin\").","- rudd.","- vestibule_of_ear(\"Justin\").","holding_soda(\"Justin\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- shrapnel(V2) :- signet_ring(V2), not -sphenisciform_seabird(V2), not -mealie(V2), not -getting_invited_to_parties(V2), not section(V2).","signet_ring(V1) :- - anchorage(V1), not -vermicide.","calgary(V1) :- - anchorage(V1), not -vermicide.","chigoe(V0) :- calgary(V0).","- anchorage(V1) :- - glass_ceiling(V1), not -food_holder(V1).","- alaskan_brown_bear(V1) :- - glass_ceiling(V1), not -food_holder(V1).","current(V0) :- heaven(V0).","sphenisciform_seabird(V1) :- - alaskan_brown_bear(V1).","mealie(V0) :- current(V0).","getting_invited_to_parties(V1) :- garlic_bread, food_holder(V1), not -leg, not -vermicide, not glass_cutter.","- section(V0) :- chigoe(V0)."],"noisy_rules":{"a":["shrapnel(V2) :- - getting_invited_to_parties(V2).","shrapnel(V2) :- - signet_ring(V2), - mealie(V2)."],"b":["alaskan_brown_bear(V0) :- - calgary(V0), - chigoe(V0), not current(V0), not getting_invited_to_parties(V2), shrapnel(V2).","alaskan_brown_bear(V2) :- shrapnel(V2)."],"c":["glass_ceiling(V1) :- - signet_ring(V2), - chigoe(V0), alaskan_brown_bear(V1).","- current(V2) :- - mealie(V2), section(V2)."],"d":["- signet_ring(V2) :- - current(V0), - sphenisciform_seabird(V2), not rudd.","- garlic_bread(V0) :- - current(V0), - matador."],"e":["completing_coursework(V0) :- - blue(V0), not -holding_soda(V0), form_of_exercise(V0), - hospital(V0).","- ginger_beer(V0) :- - vestibule_of_ear(V0), not -four_legs(V0)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_5_8_8_8_8_0.5_1.0_5_2_3","seed":5,"num_facts":12,"num_rules":9,"num_related_predicates":21,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"P8(\"Cathy\", \"Victoria\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P9(\"Annette\").","- P10(\"Jennifer\").","- P11(\"Jennifer\", \"Cathy\").","- P12(\"Jennifer\", \"Victoria\").","P13(\"Jennifer\", \"Cathy\").","P14(\"Jennifer\", \"Victoria\").","- P15(\"Annette\", \"Cathy\").","P16(\"Annette\", \"Cathy\").","- P17(\"Cathy\").","P18(\"Jennifer\", \"Cathy\").","- P19(\"Annette\", \"Cathy\").","- P20(\"Annette\", \"Cathy\")."],"noisy_facts":["- P23(\"Jennifer\", \"Cathy\").","P28(\"Jennifer\", \"Victoria\").","- P24(\"Jennifer\", \"Cathy\").","- P21(\"Jennifer\", \"Cathy\").","- P26(\"Jennifer\", \"Victoria\").","P27(\"Cathy\", \"Victoria\")."],"min_fact_dicts_for_query":["P9(\"Annette\").","- P10(\"Jennifer\").","P13(\"Jennifer\", \"Cathy\").","P14(\"Jennifer\", \"Victoria\").","- P17(\"Cathy\").","P18(\"Jennifer\", \"Cathy\").","- P19(\"Annette\", \"Cathy\")."],"noiseless_rules":["P8(V2, V3) :- - P1(V3), - P4(V0, V2), not P7(V0, V3).","- P0(V0, V2) :- P3(V0, V2).","- P1(V3) :- P9(V1), P13(V0, V2), P14(V0, V3), not P15(V1, V2), not -P16(V1, V2).","- P2(V1, V2) :- P9(V1), P13(V0, V2), P14(V0, V3), not P15(V1, V2), not -P16(V1, V2).","P3(V0, V2) :- - P5(V0, V2).","- P4(V0, V2) :- - P0(V0, V2), - P2(V1, V2), not -P6(V0, V2).","- P5(V0, V2) :- - P10(V0), - P17(V2), P18(V0, V2), - P19(V1, V2), not P20(V1, V2).","P6(V0, V2) :- - P11(V0, V2).","- P7(V0, V3) :- - P12(V0, V3)."],"noisy_rules":{"a":["- P8(V2, V3) :- P0(V0, V2), P2(V1, V2), not -P4(V0, V2), not -P5(V0, V2), P7(V0, V3).","- P8(V2, V3) :- not -P0(V0, V2), - P3(V0, V2), P4(V0, V2), P7(V0, V3)."],"b":["- P13(V1, V2) :- P2(V1, V2), - P8(V2, V3).","P4(V0, V2) :- P0(V0, V2), - P8(V2, V3)."],"c":["P5(V0, V2) :- P2(V1, V2), P7(V0, V3).","- P13(V0, V2) :- P0(V0, V2), not -P4(V0, V2)."],"d":["P22(V2, V0) :- P5(V0, V2), not P21(V0, V2).","P12(V0, V3) :- - P6(V0, V2), P7(V0, V3), - P23(V0, V2), not P24(V0, V2)."],"e":["P25(V0, V2) :- - P26(V0, V3), P27(V2, V3).","- P29(V0) :- P28(V0, V3)."]}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_60_8_12_9_12_0.5_1.0_5_3_4","seed":60,"num_facts":13,"num_rules":13,"num_related_predicates":26,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.4285714285714284,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P12(\"Robert\", \"Timothy\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P13(\"Robert\", \"Timothy\", \"Daisy\").","P14(\"Robert\", \"Timothy\", \"Daisy\").","- P15(\"Eric\").","- P16.","P17(\"Timothy\", \"Eric\").","- P18(\"Timothy\", \"Daisy\").","- P19(\"Eric\", \"Daisy\").","- P20(\"Robert\", \"Timothy\", \"Eric\").","- P21(\"Robert\", \"Timothy\", \"Daisy\").","- P22(\"Robert\", \"Timothy\", \"Daisy\").","P23(\"Robert\", \"Timothy\", \"Daisy\").","- P24(\"Angela\", \"Eric\", \"Daisy\").","- P25(\"Angela\", \"Robert\", \"Eric\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- P12(V1, V2) :- P0(V4), - P2(V4), P7(V0, V1, V2), - P10(V2, V3, V4).","P0(V4) :- P4(V0, V2), - P6(V2, V3), - P8(V2, V3), - P24(V0, V3, V4).","P1(V0, V2, V3) :- P4(V0, V2), - P6(V2, V3), - P8(V2, V3), - P24(V0, V3, V4).","- P2(V4) :- P13(V1, V2, V4).","P3(V4) :- P13(V1, V2, V4).","P4(V1, V2) :- P13(V1, V2, V4), not -P14(V1, V2, V4).","P5(V1, V2, V4) :- P13(V1, V2, V4), not -P14(V1, V2, V4).","- P6(V2, V3) :- - P15(V3), P17(V2, V3), - P18(V2, V4), - P19(V3, V4), - P20(V1, V2, V3).","P7(V3, V3, V3) :- - P15(V3), not P16.","- P8(V3, V3) :- - P15(V3), not P16.","P9(V3, V3, V3) :- - P15(V3), not P16.","- P10(V2, V3, V4) :- P1(V0, V2, V3), P9(V0, V1, V3), - P11(V0, V1, V3), - P24(V0, V3, V4), not P25(V0, V1, V3).","- P11(V2, V1, V4) :- P3(V4), P5(V1, V2, V4), not P21(V1, V2, V4), not P22(V1, V2, V4), not -P23(V1, V2, V4)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_47_9_12_11_13_0.5_1.0_5_2_3","seed":47,"num_facts":14,"num_rules":13,"num_related_predicates":27,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" ding(\"Laura\", \"Anthony\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- quittance(\"Mary\", \"Anthony\").","- war_party(\"Laura\", \"Anthony\").","audit(\"Mary\", \"Anthony\").","weimar_republic(\"Mary\", \"Anthony\").","- roach(\"Mary\", \"Anthony\").","- dusk(\"Mary\", \"Anthony\").","- celebrating_someones_birthday(\"Mary\", \"Anthony\").","sick_bag(\"Mary\", \"Anthony\").","- folio(\"Mary\", \"Anthony\").","- tennis_ball(\"Mary\", \"Anthony\").","- getting_on_top(\"Mary\", \"Anthony\").","- tree_rat(\"Mary\", \"Heather\").","- eater(\"Mary\", \"Heather\").","gallinaceous_bird(\"Mary\", \"Heather\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- ding(V0, V2) :- eating_apple(V0), - lot_of_calcium(V1), - trailing_edge(V0, V1), crucifer(V0, V2), not dusk(V1, V2).","eating_apple(V0) :- jewel(V0, V2), - south_american(V0, V3).","handhold(V1, V3) :- tennessee(V0, V1), - compact(V0, V3), audit(V1, V2).","- lot_of_calcium(V1) :- - quittance(V1, V2), not -weimar_republic(V1, V2), not roach(V1, V2), not dusk(V1, V2), not celebrating_someones_birthday(V1, V2).","jewel(V1, V2) :- - quittance(V1, V2), not -weimar_republic(V1, V2), not roach(V1, V2), not dusk(V1, V2), not celebrating_someones_birthday(V1, V2).","tennessee(V2, V1) :- - quittance(V1, V2), not -weimar_republic(V1, V2), not roach(V1, V2), not dusk(V1, V2), not celebrating_someones_birthday(V1, V2).","canal(V2, V2) :- - quittance(V1, V2), not -weimar_republic(V1, V2), not roach(V1, V2), not dusk(V1, V2), not celebrating_someones_birthday(V1, V2).","cartload(V0) :- - war_party(V0, V2).","- compact(V1, V1) :- audit(V1, V2), not -sick_bag(V1, V2), not folio(V1, V2), not tennis_ball(V1, V2), not getting_on_top(V1, V2).","- adam(V2, V2) :- audit(V1, V2), not -sick_bag(V1, V2), not folio(V1, V2), not tennis_ball(V1, V2), not getting_on_top(V1, V2).","- south_american(V3, V3) :- canal(V2, V3).","- trailing_edge(V3, V1) :- handhold(V1, V3), - adam(V2, V3), not tree_rat(V1, V3), not eater(V1, V3), not -gallinaceous_bird(V1, V3).","crucifer(V0, V0) :- cartload(V0)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_45_7_11_10_11_0.5_1.0_5_2_3","seed":45,"num_facts":13,"num_rules":12,"num_related_predicates":25,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"condylion(\"Amanda\", \"Kim\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- power_play(\"Amanda\", \"Andrea\").","urchin(\"Andrea\").","- manitoba(\"Andrea\").","kale(\"Amanda\").","- distill(\"Amanda\").","- lamb(\"Amanda\").","- kill_mice(\"Andrea\").","- restaurant(\"Amanda\", \"Andrea\").","- military_ceremony(\"Kim\", \"Patrick\").","law(\"Andrea\", \"Patrick\").","ocellated_turkey(\"Amanda\", \"Patrick\").","- edam(\"Kim\", \"Andrea\").","paint_canvas(\"Andrea\", \"Patrick\")."],"noisy_facts":["drug(\"Amanda\", \"Andrea\").","- opening(\"Amanda\").","- out(\"Amanda\", \"Kim\").","- geological_formation(\"Kim\", \"Andrea\").","early(\"Amanda\", \"Kim\").","- trace_element(\"Amanda\", \"Patrick\").","losing_weight(\"Amanda\", \"Andrea\").","- lock_locker(\"Kim\")."],"min_fact_dicts_for_query":["urchin(\"Andrea\").","- manitoba(\"Andrea\").","- kill_mice(\"Andrea\").","- restaurant(\"Amanda\", \"Andrea\").","- military_ceremony(\"Kim\", \"Patrick\").","ocellated_turkey(\"Amanda\", \"Patrick\").","- edam(\"Kim\", \"Andrea\")."],"noiseless_rules":["condylion(V0, V1) :- coal_black(V2), stoner(V0, V1), not -aquatic_bird(V0, V2), not people_gathering(V1, V2).","board(V1, V2) :- commercial_bribery(V0, V1), - power_play(V0, V2).","crafts(V0, V1) :- commercial_bribery(V0, V1), - power_play(V0, V2).","coal_black(V2) :- urchin(V2), - kill_mice(V2), - restaurant(V0, V2), - military_ceremony(V1, V3), not -law(V2, V3).","commercial_bribery(V0, V1) :- urchin(V2), - kill_mice(V2), - restaurant(V0, V2), - military_ceremony(V1, V3), not -law(V2, V3).","sound_bow(V0, V1) :- urchin(V2), - kill_mice(V2), - restaurant(V0, V2), - military_ceremony(V1, V3), not -law(V2, V3).","stoner(V0, V1) :- - manitoba(V2), ocellated_turkey(V0, V3), - edam(V1, V2), not -paint_canvas(V2, V3).","phasianid(V0) :- - manitoba(V2), ocellated_turkey(V0, V3), - edam(V1, V2), not -paint_canvas(V2, V3).","- santa_gertrudis(V1) :- - manitoba(V2), ocellated_turkey(V0, V3), - edam(V1, V2), not -paint_canvas(V2, V3).","- gland(V0) :- commercial_bribery(V0, V1), not -phasianid(V0), not -kale(V0), not distill(V0), not lamb(V0).","aquatic_bird(V0, V2) :- board(V1, V2), sound_bow(V0, V1), not gland(V0).","- people_gathering(V1, V1) :- crafts(V0, V1), not santa_gertrudis(V1)."],"noisy_rules":{"a":["- condylion(V0, V1) :- - coal_black(V2), - commercial_bribery(V0, V1), - aquatic_bird(V0, V2), people_gathering(V1, V2).","- condylion(V1, V1) :- santa_gertrudis(V1)."],"b":["lamb(V0) :- - condylion(V0, V1).","- ocellated_turkey(V0, V0) :- - crafts(V0, V1), not sound_bow(V0, V1), not -santa_gertrudis(V1), not condylion(V0, V1)."],"c":["- law(V2, V1) :- not board(V1, V2), - coal_black(V2), - commercial_bribery(V0, V1), - stoner(V0, V1), people_gathering(V1, V2).","gland(V0) :- - commercial_bribery(V0, V1), - sound_bow(V0, V1), - aquatic_bird(V0, V2)."],"d":["- coal_black(V0) :- not commercial_bribery(V0, V1), santa_gertrudis(V1), - out(V0, V1).","gland(V0) :- - coal_black(V2), - sound_bow(V0, V1), not phasianid(V0), not opening(V0)."],"e":["- synod(V1, V2) :- - lock_locker(V1), drug(V0, V2), losing_weight(V0, V2), not geological_formation(V1, V2).","- direction(V1) :- early(V0, V1), - trace_element(V0, V3)."]}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_5_6_6_5_8_0.5_1.0_5_2_3","seed":5,"num_facts":9,"num_rules":7,"num_related_predicates":16,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"body_part(\"Heather\", \"Ethan\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- butterfly(\"Heather\", \"Ethan\").","european_creeper(\"Heather\", \"Ethan\").","cat_flea(\"Heather\", \"Ethan\").","- pennon(\"Michele\").","- halter(\"Heather\").","- shadow(\"Michele\", \"Heather\").","organism(\"Michele\", \"Heather\").","ago(\"Heather\", \"Ethan\").","- air_sac(\"Heather\", \"Ethan\")."],"noisy_facts":["- opinion(\"Michele\", \"Heather\").","conviction(\"William\", \"Michele\").","- circle(\"Michele\", \"Ethan\").","- odonate(\"William\", \"Ethan\").","- apodeme(\"William\", \"Heather\").","- ala(\"William\", \"Ethan\").","flare(\"Michele\").","spiritual_being(\"Heather\", \"Ethan\")."],"min_fact_dicts_for_query":["- butterfly(\"Heather\", \"Ethan\").","- pennon(\"Michele\").","- halter(\"Heather\").","- shadow(\"Michele\", \"Heather\").","organism(\"Michele\", \"Heather\").","ago(\"Heather\", \"Ethan\")."],"noiseless_rules":["body_part(V2, V3) :- - insect(V3), - thorax(V0, V2), not -flea(V0, V3).","- insect(V3) :- - lepidopterous_insect(V3), - arachnid(V3), - wing(V1, V2), not air_sac(V2, V3).","- lepidopterous_insect(V3) :- - butterfly(V2, V3), not air_sac(V2, V3).","- thorax(V3, V2) :- - butterfly(V2, V3), not -european_creeper(V2, V3).","flea(V2, V3) :- - butterfly(V2, V3), not -cat_flea(V2, V3).","- arachnid(V3) :- - butterfly(V2, V3), not -cat_flea(V2, V3).","- wing(V1, V2) :- - pennon(V1), - halter(V2), - shadow(V1, V2), organism(V1, V2), ago(V2, V3)."],"noisy_rules":{"a":["- body_part(V2, V3) :- insect(V3), lepidopterous_insect(V3), thorax(V0, V2), - flea(V0, V3), wing(V1, V2).","- body_part(V2, V3) :- not -insect(V3), lepidopterous_insect(V3), arachnid(V3), wing(V1, V2)."],"b":["- organism(V3, V2) :- insect(V3), - body_part(V2, V3).","insect(V3) :- not -insect(V3), - body_part(V2, V3)."],"c":["arachnid(V3) :- lepidopterous_insect(V3), thorax(V0, V2).","arachnid(V3) :- insect(V3), lepidopterous_insect(V3), thorax(V0, V2), wing(V1, V2)."],"d":["insect(V3) :- lepidopterous_insect(V3), - flea(V0, V3), wing(V1, V2), - odonate(V0, V3), not ala(V0, V3).","arthropod(V0, V2) :- not -insect(V3), thorax(V0, V2), - flea(V0, V3), not -arachnid(V3), not apodeme(V0, V2)."],"e":["belief(V0) :- conviction(V0, V1), - opinion(V1, V2), spiritual_being(V2, V3).","shape(V3) :- flare(V1), - circle(V1, V3)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_81_9_14_1_4_0.5_1.0_5_2_3","seed":81,"num_facts":3,"num_rules":15,"num_related_predicates":18,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":12,"target_query":" P14(\"Anthony\", \"Stephanie\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["P15(\"Anthony\", \"Stephanie\").","P16.","P17(\"Anthony\", \"Stephanie\")."],"noisy_facts":["P22(\"Julia\", \"Phyllis\").","P29(\"Anthony\", \"Phyllis\").","- P24(\"Phyllis\", \"Stephanie\").","- P19(\"Anthony\", \"Phyllis\").","- P21(\"Stephanie\").","P27(\"Julia\", \"Phyllis\").","P26(\"Phyllis\").","P23(\"Anthony\", \"Phyllis\").","P28(\"Julia\", \"Stephanie\").","- P30(\"Phyllis\", \"Stephanie\").","- P18(\"Anthony\", \"Phyllis\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- P14(V1, V3) :- - P0(V0, V3), P4(V0, V3), - P7(V1, V2), not -P9(V1, V3).","- P0(V3, V3) :- - P1(V1, V3), not -P9(V1, V3), not P12(V1, V3).","- P1(V1, V3) :- - P6(V3), - P8(V1, V3), not -P17(V1, V3).","P2(V1, V3) :- P15(V1, V3).","- P3(V1, V3) :- P15(V1, V3).","P4(V1, V3) :- P9(V1, V3), not -P16.","P5(V1, V3) :- P9(V1, V3), not -P16.","- P6(V3) :- P13(V3).","- P7(V1, V3) :- P2(V1, V3), not -P10(V1, V3).","- P8(V1, V3) :- P2(V1, V3), not -P10(V1, V3).","P9(V1, V3) :- P2(V1, V3), not P3(V1, V3).","P10(V1, V3) :- P2(V1, V3), not P3(V1, V3).","P11(V3) :- P2(V1, V3), not P3(V1, V3).","- P12(V1, V1) :- P5(V1, V2), not -P11(V2).","P13(V2) :- P5(V1, V2), not -P11(V2)."],"noisy_rules":{"a":["P14(V1, V3) :- - P2(V1, V3), - P5(V1, V2), P7(V1, V2), not P11(V2).","P14(V1, V3) :- P7(V1, V2), P8(V1, V3), not P11(V2)."],"b":["- P10(V1, V3) :- P14(V1, V3).","P12(V1, V3) :- - P4(V0, V3), P14(V1, V3)."],"c":["P7(V1, V2) :- P1(V1, V3), - P5(V1, V2), - P10(V1, V3), not P11(V2), not -P12(V1, V3).","P6(V3) :- P1(V1, V3), - P2(V1, V3), - P5(V1, V2), not -P7(V1, V2), - P13(V3)."],"d":["P12(V1, V2) :- P7(V1, V2), not P18(V1, V2).","P12(V1, V3) :- - P5(V1, V2), - P10(V1, V3), - P11(V2), - P19(V1, V2)."],"e":["- P20(V1, V3) :- - P21(V3), P22(V0, V2), P23(V1, V2), not P24(V2, V3).","P25(V0, V3) :- P26(V2), P27(V0, V2), not -P28(V0, V3), P29(V1, V2), - P30(V2, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_33_6_6_5_6_0.5_1.0_3_3_4","seed":33,"num_facts":7,"num_rules":7,"num_related_predicates":14,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" P6(\"Jimmy\", \"Sandra\", \"Kevin\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P7(\"Jimmy\", \"Sandra\", \"Kevin\").","P8(\"Jimmy\", \"Kevin\").","P9(\"Jennifer\", \"Sandra\", \"Veronica\").","P10(\"Jimmy\", \"Kevin\", \"Veronica\").","P11(\"Sandra\", \"Veronica\").","P12(\"Kevin\", \"Veronica\").","P13(\"Jennifer\", \"Kevin\", \"Veronica\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P7(\"Jimmy\", \"Sandra\", \"Kevin\").","P8(\"Jimmy\", \"Kevin\").","P9(\"Jennifer\", \"Sandra\", \"Veronica\").","P10(\"Jimmy\", \"Kevin\", \"Veronica\").","P11(\"Sandra\", \"Veronica\").","P12(\"Kevin\", \"Veronica\").","P13(\"Jennifer\", \"Kevin\", \"Veronica\")."],"noiseless_rules":["P6(V0, V2, V3) :- P4(V0, V2, V3).","P0(V0, V3, V4) :- P1(V0, V3), P11(V2, V4), P12(V3, V4).","P1(V0, V3) :- P7(V0, V2, V3).","P2(V0, V1, V2) :- P8(V0, V3), P9(V1, V2, V4), P13(V1, V3, V4).","P3(V0, V3, V4) :- P8(V0, V3), P9(V1, V2, V4), P13(V1, V3, V4).","P4(V0, V2, V3) :- P0(V0, V3, V4), P2(V0, V1, V2), P5(V0, V1, V2).","P5(V0, V1, V2) :- P3(V0, V3, V4), P9(V1, V2, V4), P10(V0, V3, V4)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_65_9_9_7_8_0.5_1.0_3_2_3","seed":65,"num_facts":11,"num_rules":10,"num_related_predicates":21,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.125,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P9(\"Robert\", \"Ronald\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P10(\"Douglas\").","P11(\"Robert\", \"Keith\").","P12(\"Keith\", \"Ronald\").","P13(\"Robert\", \"Douglas\").","P14(\"Keith\", \"Ronald\").","P15(\"Douglas\", \"Ronald\").","P16(\"Keith\", \"Douglas\").","P17(\"Keith\", \"Douglas\").","P18(\"Robert\", \"Douglas\").","P19(\"Douglas\", \"Ronald\").","P20(\"Robert\", \"Douglas\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P10(\"Douglas\").","P11(\"Robert\", \"Keith\").","P12(\"Keith\", \"Ronald\").","P13(\"Robert\", \"Douglas\").","P14(\"Keith\", \"Ronald\").","P15(\"Douglas\", \"Ronald\").","P16(\"Keith\", \"Douglas\").","P17(\"Keith\", \"Douglas\").","P18(\"Robert\", \"Douglas\").","P19(\"Douglas\", \"Ronald\").","P20(\"Robert\", \"Douglas\")."],"noiseless_rules":["P9(V0, V3) :- P0(V3), P6(V0, V2), P8(V0, V3).","P0(V3) :- P4(V0, V2), P5(V0, V3).","P1(V1, V3) :- P10(V2), P14(V1, V3), P15(V2, V3).","P2(V1, V2) :- P11(V0, V1), P18(V0, V2), P19(V2, V3).","P3(V1, V3) :- P12(V1, V3).","P4(V1, V2) :- P2(V1, V2), P16(V1, V2), P17(V1, V2).","P5(V1, V3) :- P1(V1, V3), P3(V1, V3).","P6(V0, V2) :- P13(V0, V2), P18(V0, V2).","P7(V0, V2) :- P13(V0, V2), P18(V0, V2).","P8(V0, V2) :- P7(V0, V2), P20(V0, V2)."],"noisy_rules":{}},"num_min_facts_for_query":6,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_51_7_6_6_9_0.5_1.0_3_2_3","seed":51,"num_facts":9,"num_rules":7,"num_related_predicates":16,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" P6(\"Michael\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P7(\"Michael\").","- P8(\"Rhonda\", \"Michael\").","P9(\"Henry\", \"Michael\").","P10(\"Henry\", \"Michael\").","P11(\"Henry\", \"Michael\").","P12(\"Michael\").","- P13(\"Henry\", \"Michael\").","P14(\"Henry\", \"Michael\").","P15(\"Henry\", \"Michael\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- P7(\"Michael\").","P9(\"Henry\", \"Michael\").","P12(\"Michael\").","- P13(\"Henry\", \"Michael\")."],"noiseless_rules":["- P6(V3) :- - P3(V0, V3).","P0(V3) :- - P7(V3), P12(V3), - P13(V1, V3).","P1(V1, V3) :- - P8(V0, V3), P11(V1, V3).","P2(V3, V3) :- P9(V1, V3), not -P10(V1, V3), not -P11(V1, V3).","- P3(V0, V3) :- P0(V3), P2(V0, V3), not P5(V0, V3).","- P4(V1, V3) :- P1(V1, V3), not P7(V3), not -P11(V1, V3).","- P5(V3, V3) :- - P4(V1, V3), not -P14(V1, V3), not -P15(V1, V3)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_77_7_6_6_9_0.5_1.0_3_2_3","seed":77,"num_facts":9,"num_rules":7,"num_related_predicates":16,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"shortening(\"Vickie\", \"Lisa\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- female_chest(\"Vickie\", \"Lisa\").","remaining_healthy(\"Vickie\", \"Troy\").","- warm(\"Vickie\", \"Troy\").","get_bombed(\"Troy\").","act(\"Troy\").","- page_employee(\"Troy\").","- katharobe(\"Vickie\", \"Troy\").","- ranch(\"Vickie\", \"Troy\").","holy_day_of_obligation(\"Vickie\", \"Troy\")."],"noisy_facts":["- wash_paws(\"Lisa\", \"Lindsey\").","- sense_smell(\"Troy\").","- measure_weight(\"Lindsey\", \"Troy\").","- mustache(\"Vickie\", \"Lisa\").","- fire(\"Lisa\", \"Lindsey\").","- sapote(\"Lindsey\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["shortening(V0, V1) :- - amount(V3), salmon(V0, V1), not -holy_day_of_obligation(V0, V3).","- amount(V3) :- being_stalked(V3), - hypostasis(V2, V3).","being_stalked(V3) :- - female_chest(V0, V1), remaining_healthy(V0, V3).","- testing_ground(V3) :- remaining_healthy(V0, V3), not warm(V0, V3).","salmon(V3, V3) :- - amount(V3), not -size(V3), not -get_bombed(V3).","size(V3) :- - testing_ground(V3), not -act(V3), not page_employee(V3).","- hypostasis(V0, V3) :- - warm(V0, V3), not katharobe(V0, V3), not ranch(V0, V3)."],"noisy_rules":{"a":["- shortening(V2, V3) :- - being_stalked(V3), not -testing_ground(V3), hypostasis(V2, V3).","- shortening(V3, V3) :- not -amount(V3), not -testing_ground(V3), - size(V3)."],"b":["- get_bombed(V3) :- amount(V3), not -testing_ground(V3), - shortening(V0, V1).","testing_ground(V3) :- - salmon(V0, V1), hypostasis(V2, V3), not shortening(V0, V1)."],"c":["warm(V0, V3) :- - being_stalked(V3), testing_ground(V3), - salmon(V0, V1).","- remaining_healthy(V2, V3) :- not -testing_ground(V3), - size(V3), hypostasis(V2, V3)."],"d":["mane(V0, V1) :- testing_ground(V3), - salmon(V0, V1), not mustache(V0, V1).","testing_ground(V3) :- amount(V3), not being_stalked(V3), - sense_smell(V3)."],"e":["- military_quarters(V3) :- not sapote(V2), - fire(V1, V2), - measure_weight(V2, V3).","- bug(V1) :- - wash_paws(V1, V2)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_93_10_10_9_10_0.5_1.0_5_2_3","seed":93,"num_facts":14,"num_rules":11,"num_related_predicates":25,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" hot_person(\"Robert\", \"Frederick\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["farm(\"Robert\", \"Frederick\").","airfoil(\"Jacob\").","- turnery(\"Frederick\", \"Michael\").","jockey(\"Robert\", \"Frederick\").","travel(\"Robert\", \"Frederick\").","- stabilizer(\"Jacob\", \"Robert\").","strengthener(\"Robert\", \"Frederick\").","musical_instrument(\"Robert\", \"Michael\").","diestock(\"Frederick\", \"Michael\").","- new_zealand(\"Robert\", \"Frederick\").","drink_water(\"Robert\", \"Frederick\").","- inch(\"Robert\", \"Frederick\").","- contrail(\"Robert\", \"Frederick\").","- breast_drill."],"noisy_facts":["- lice(\"Robert\", \"Michael\").","- coronet(\"Jacob\", \"Frederick\").","peanut(\"Robert\", \"Frederick\").","digit(\"Jacob\", \"Frederick\").","- butternut(\"Jacob\").","- almond(\"Jacob\", \"Frederick\").","- pecan(\"Frederick\", \"Michael\")."],"min_fact_dicts_for_query":["farm(\"Robert\", \"Frederick\").","airfoil(\"Jacob\").","- stabilizer(\"Jacob\", \"Robert\").","strengthener(\"Robert\", \"Frederick\").","musical_instrument(\"Robert\", \"Michael\")."],"noiseless_rules":["- hot_person(V1, V2) :- - silo(V1, V2), - device(V2, V3), not -claw(V2, V3), not animal(V2, V3).","- silo(V1, V2) :- farm(V1, V2), not new_zealand(V1, V2).","- device(V2, V3) :- airfoil(V0), - stabilizer(V0, V1), strengthener(V1, V2), musical_instrument(V1, V3), not -diestock(V2, V3).","fingertip(V1) :- airfoil(V0), - stabilizer(V0, V1), strengthener(V1, V2), musical_instrument(V1, V3), not -diestock(V2, V3).","finger(V1, V1) :- fingertip(V1), not breast_drill.","claw(V2, V3) :- - turnery(V2, V3).","- animal(V2, V3) :- - bird(V2), - horse(V1, V2), - chicken(V1, V3).","- bird(V2) :- - vertebrate_foot(V2, V3).","- horse(V1, V2) :- jockey(V1, V2).","- vertebrate_foot(V2, V2) :- travel(V1, V2), not new_zealand(V1, V2), not -drink_water(V1, V2), not inch(V1, V2), not contrail(V1, V2).","- chicken(V2, V0) :- finger(V0, V2)."],"noisy_rules":{"a":["hot_person(V1, V2) :- silo(V1, V2), not -device(V2, V3), not -animal(V2, V3), chicken(V1, V3).","hot_person(V1, V2) :- silo(V1, V2), chicken(V1, V3)."],"b":["- drink_water(V1, V2) :- hot_person(V1, V2).","- drink_water(V1, V2) :- horse(V1, V2), hot_person(V1, V2)."],"c":["bird(V2) :- silo(V1, V2), device(V2, V3), not -vertebrate_foot(V2, V3).","chicken(V1, V1) :- silo(V1, V2)."],"d":["- claw(V2, V3) :- device(V2, V3), animal(V2, V3), bird(V2), chicken(V1, V3), not lice(V1, V3).","extremity(V2, V3) :- silo(V1, V2), - finger(V0, V2), - claw(V2, V3), not -vertebrate_foot(V2, V3), digit(V0, V2)."],"e":["- edible_nut(V1) :- - butternut(V0), not almond(V0, V2), peanut(V1, V2), - pecan(V2, V3).","- spoon(V0, V2) :- - coronet(V0, V2)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_81_9_12_6_6_0.5_1.0_3_2_3","seed":81,"num_facts":8,"num_rules":13,"num_related_predicates":21,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.125,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P12(\"Justin\", \"Frank\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P13(\"Justin\", \"Frank\").","- P14(\"David\", \"Justin\").","- P15(\"Justin\", \"Frank\").","P16(\"Justin\", \"Frank\").","- P17(\"Justin\", \"Frank\").","- P18(\"Justin\", \"Frank\").","P19(\"Justin\", \"Frank\").","P20(\"Julie\", \"Frank\")."],"noisy_facts":["- P22(\"Justin\", \"Frank\").","- P23(\"David\", \"Frank\").","P24(\"Julie\", \"Frank\")."],"min_fact_dicts_for_query":["P13(\"Justin\", \"Frank\").","- P14(\"David\", \"Justin\").","P19(\"Justin\", \"Frank\").","P20(\"Julie\", \"Frank\")."],"noiseless_rules":["P12(V1, V3) :- - P0(V1, V3), - P4(V2, V3), not -P7(V2, V3).","- P0(V1, V3) :- - P1(V1, V3), not P10(V1, V3).","- P1(V1, V3) :- P5(V3), P6(V1, V3), not -P16(V1, V3).","- P2(V1, V3) :- P13(V1, V3).","P3(V1, V3) :- P13(V1, V3).","- P4(V2, V3) :- - P14(V0, V1), P19(V1, V3), P20(V2, V3).","P5(V3) :- P11(V3).","P6(V1, V3) :- - P2(V1, V3), not -P8(V1, V3), not P15(V1, V3).","P7(V1, V3) :- P3(V1, V3), not P17(V1, V3), not P18(V1, V3).","P8(V1, V3) :- P3(V1, V3), not P17(V1, V3), not P18(V1, V3).","- P9(V3) :- P3(V1, V3), not P17(V1, V3), not P18(V1, V3).","- P10(V2, V2) :- - P9(V2).","P11(V2) :- - P9(V2)."],"noisy_rules":{"a":["- P12(V1, V3) :- - P5(V3), - P7(V2, V3), - P8(V1, V3).","- P12(V3, V3) :- - P7(V2, V3)."],"b":["- P11(V3) :- - P3(V1, V3), - P12(V1, V3).","P17(V1, V3) :- - P12(V1, V3)."],"c":["P10(V1, V3) :- not -P2(V1, V3), not P3(V1, V3), - P6(V1, V3).","P14(V2, V3) :- P4(V2, V3), - P5(V3), not P11(V3)."],"d":["- P7(V3, V3) :- - P3(V1, V3).","P4(V2, V3) :- - P7(V2, V3)."],"e":["P21(V1, V3) :- - P22(V1, V3).","- P25(V0, V2) :- - P23(V0, V3), P24(V2, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_2_4_5_5_7_0.5_1.0_5_3_4","seed":2,"num_facts":6,"num_rules":6,"num_related_predicates":12,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"digit(\"Leslie\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- nest(\"Chris\", \"Allen\").","- phalanx(\"Chris\", \"Allen\").","minimus(\"Patrick\", \"Allen\").","nail(\"Chris\", \"Leslie\", \"Patrick\").","- soup(\"Chris\", \"Allen\").","woman(\"Chris\", \"Allen\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- nest(\"Chris\", \"Allen\").","- phalanx(\"Chris\", \"Allen\").","minimus(\"Patrick\", \"Allen\").","nail(\"Chris\", \"Leslie\", \"Patrick\")."],"noiseless_rules":["digit(V1) :- - toe(V4), - eating_from(V0, V4), - phalanx(V0, V4), minimus(V3, V4), nail(V0, V1, V3).","- toe(V4) :- - nest(V0, V4), not phalanx(V0, V4), not soup(V0, V4), not -woman(V0, V4).","bowl(V4, V0, V4) :- - nest(V0, V4), not phalanx(V0, V4), not soup(V0, V4), not -woman(V0, V4).","- record(V0) :- - nest(V0, V4), not phalanx(V0, V4), not soup(V0, V4), not -woman(V0, V4).","- eating_from(V3, V4) :- bowl(V2, V3, V4), not plate(V2, V3, V4).","- plate(V0, V4, V4) :- - record(V0), - soup(V0, V4)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_32_10_14_8_10_0.5_1.0_5_3_4","seed":32,"num_facts":13,"num_rules":15,"num_related_predicates":28,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"jacket(\"Haley\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- mackinaw(\"Jessica\").","- straw(\"David\", \"Haley\", \"Dillon\").","wicks(\"Haley\", \"Sandra\", \"Dillon\").","- jumper(\"David\", \"Haley\", \"Sandra\").","cake(\"Haley\", \"Sandra\", \"Dillon\").","- member(\"Haley\", \"Sandra\").","- funny_wagon(\"Haley\", \"Sandra\").","- natural_fiber(\"David\", \"Dillon\").","- newmarket(\"Jessica\", \"David\", \"Haley\").","- demonstrating_affection(\"David\", \"Haley\", \"Sandra\").","box_coat(\"Haley\", \"Sandra\", \"Dillon\").","- cotton(\"David\", \"Haley\", \"Dillon\").","raffia(\"David\", \"Haley\", \"Dillon\")."],"noisy_facts":["imposter(\"Haley\", \"Sandra\").","- owls(\"Haley\", \"Sandra\").","face(\"Haley\").","wall_clock(\"Jessica\", \"Dillon\").","- lens(\"Jessica\", \"Haley\", \"Dillon\").","use_guns_to_commit_crimes(\"Jessica\", \"Dillon\").","cry_loudly(\"Haley\", \"Sandra\").","thrown_ball(\"Jessica\", \"Haley\", \"Dillon\").","cake_candles(\"Jessica\", \"David\").","concern(\"Jessica\").","- donor_card(\"Jessica\", \"Haley\").","from_america(\"Haley\", \"Sandra\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["jacket(V2) :- bolero(V4), - lumberjack(V0, V4), - mao_jacket(V2, V3), - jumper(V1, V2, V3), not -raffia(V1, V2, V4).","coat(V0, V3) :- - mackinaw(V0), - natural_fiber(V1, V4), - newmarket(V0, V1, V2), - demonstrating_affection(V1, V2, V3), not -box_coat(V2, V3, V4).","blanket(V2, V3) :- - mackinaw(V0), - natural_fiber(V1, V4), - newmarket(V0, V1, V2), - demonstrating_affection(V1, V2, V3), not -box_coat(V2, V3, V4).","- plant_fiber(V2, V1, V1) :- - straw(V1, V2, V4), not cotton(V1, V2, V4), not -raffia(V1, V2, V4).","cut(V1, V1) :- - straw(V1, V2, V4), not cotton(V1, V2, V4), not -raffia(V1, V2, V4).","record_jacket(V2, V2, V4) :- - straw(V1, V2, V4), not cotton(V1, V2, V4), not -raffia(V1, V2, V4).","bean(V2, V3) :- wicks(V2, V3, V4).","- single_breasted_jacket(V2, V3, V4) :- wicks(V2, V3, V4).","bolero(V2) :- - jumper(V1, V2, V3).","- dress(V3) :- - jumper(V1, V2, V3).","- lumberjack(V2, V3) :- bean(V2, V3), not -plant_product(V2, V3), not -candles(V2, V3).","plant_product(V3, V3) :- coat(V0, V3), - plant_fiber(V0, V1, V3).","- mao_jacket(V2, V3) :- cut(V1, V3), - single_breasted_jacket(V2, V3, V4), not womans_clothing(V1, V3).","candles(V2, V3) :- cake(V2, V3, V4).","- womans_clothing(V2, V3) :- blanket(V2, V3), record_jacket(V2, V3, V4), not dress(V3), not member(V2, V3), not funny_wagon(V2, V3)."],"noisy_rules":{"a":["- jacket(V1) :- dress(V3), womans_clothing(V1, V3).","- jacket(V2) :- not record_jacket(V2, V3, V4), single_breasted_jacket(V2, V3, V4), not bolero(V4), dress(V3), not -mao_jacket(V2, V3)."],"b":["- coat(V2, V2) :- - jacket(V2).","natural_fiber(V1, V1) :- plant_fiber(V0, V1, V3), - bean(V2, V3), not -womans_clothing(V1, V3), not jacket(V2)."],"c":["- raffia(V1, V2, V4) :- - coat(V0, V3), plant_fiber(V0, V1, V3), - bolero(V4), mao_jacket(V2, V3).","womans_clothing(V1, V3) :- - blanket(V2, V3), - cut(V1, V3), - bean(V2, V3), - bolero(V4)."],"d":["- wicks(V2, V3, V3) :- not plant_product(V2, V3), not candles(V2, V3), from_america(V2, V3), cry_loudly(V2, V3), not -imposter(V2, V3).","natural_fiber(V0, V4) :- lumberjack(V0, V4), wall_clock(V0, V4)."],"e":["couverture(V0, V2, V4) :- - owls(V2, V3), not -thrown_ball(V0, V2, V4), - lens(V0, V2, V4).","- negative_stimulus(V0, V1, V4) :- concern(V0), face(V2), cake_candles(V0, V1), not donor_card(V0, V2), use_guns_to_commit_crimes(V0, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_71_10_12_12_13_0.5_1.0_3_3_4","seed":71,"num_facts":16,"num_rules":13,"num_related_predicates":29,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"hide_sun(\"Thomas\", \"Caleb\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- swimmers(\"Jerome\").","council(\"Jerome\", \"Caleb\").","smoke(\"Caleb\").","- origin(\"Julie\").","- saloon(\"Michael\").","hand_luggage(\"Jerome\", \"Michael\").","- handbag(\"Jerome\", \"Julie\", \"Michael\").","shake(\"Jerome\", \"Michael\").","gallon(\"Jerome\", \"Michael\").","walk_fast(\"Jerome\", \"Julie\", \"Michael\").","mist(\"Jerome\", \"Thomas\", \"Michael\").","- chicken(\"Thomas\", \"Julie\", \"Caleb\").","- start(\"Jerome\", \"Michael\").","- creation(\"Julie\", \"Caleb\", \"Michael\").","second_balcony(\"Thomas\", \"Michael\").","- heteropterous_insect(\"Jerome\", \"Thomas\", \"Julie\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["hide_sun(V1, V3) :- cloud(V1, V4), drink(V0, V2, V3), not -beginning(V0, V2, V4).","- carrying_things(V0, V2, V4) :- - swimmers(V0), hand_luggage(V0, V4), - handbag(V0, V2, V4).","- water(V1, V4) :- cloud(V1, V4), not -duck(V1, V4).","white(V4) :- cloud(V1, V4), not -duck(V1, V4).","- administrative_unit(V2, V3, V4) :- council(V0, V3), second_balcony(V1, V4), - heteropterous_insect(V0, V1, V2).","cloud(V1, V4) :- smoke(V3), mist(V0, V1, V4), - chicken(V1, V2, V3).","- like(V0, V4) :- smoke(V3), mist(V0, V1, V4), - chicken(V1, V2, V3).","drink(V0, V4, V4) :- - water(V0, V4), not milk(V0, V4), not -bar(V0, V4).","duck(V0, V4) :- - like(V0, V4), not -shake(V0, V4), not -gallon(V0, V4).","- milk(V0, V4) :- - like(V0, V4), not -shake(V0, V4), not -gallon(V0, V4).","beginning(V0, V2, V4) :- - origin(V2), - start(V0, V4), - creation(V2, V3, V4).","bar(V4, V4) :- white(V4), not soap(V4), not saloon(V4).","- soap(V4) :- - carrying_things(V0, V2, V4), - administrative_unit(V2, V3, V4), not -walk_fast(V0, V2, V4)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_54_7_8_6_8_0.5_1.0_3_2_3","seed":54,"num_facts":8,"num_rules":9,"num_related_predicates":17,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" motivation(\"Charles\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["crop(\"Kent\", \"Daniel\").","- everywhere(\"Charles\", \"Daniel\").","- acardia.","- sight_organ(\"Kimberly\", \"Kent\").","- legs_6(\"Charles\", \"Daniel\").","thirteen(\"Charles\", \"Daniel\").","hand_brake(\"Kimberly\", \"Charles\").","archways(\"Charles\", \"Daniel\")."],"noisy_facts":["appendage(\"Kent\", \"Daniel\").","- sewing(\"Kimberly\", \"Charles\").","oyster_shell(\"Kent\", \"Charles\").","state_banks(\"Kimberly\", \"Kent\").","- atlantic(\"Kimberly\", \"Kent\").","whole(\"Charles\", \"Daniel\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- motivation(V2) :- - ebb(V0, V2), not lapdog(V0, V2), not -hand_brake(V0, V2).","- ebb(V0, V2) :- - dabbling_duck(V0, V3), archways(V2, V3).","- china(V0, V1) :- - colorful(V0, V3), crop(V1, V3), - everywhere(V2, V3).","produce_eggs(V1, V2) :- - colorful(V0, V3), crop(V1, V3), - everywhere(V2, V3).","- colorful(V3, V3) :- - everywhere(V2, V3), not legs_6(V2, V3), not -thirteen(V2, V3).","water_animal(V2, V3) :- - everywhere(V2, V3), not legs_6(V2, V3), not -thirteen(V2, V3).","- quagga(V1, V3) :- - china(V0, V1), - colorful(V0, V3), not sight_organ(V0, V1).","- lapdog(V0, V0) :- water_animal(V0, V3).","- dabbling_duck(V1, V2) :- produce_eggs(V1, V2), not quagga(V1, V2), not acardia."],"noisy_rules":{"a":["motivation(V2) :- ebb(V0, V2), - water_animal(V0, V3).","motivation(V2) :- ebb(V0, V2), - produce_eggs(V1, V2)."],"b":["acardia(V2) :- motivation(V2).","quagga(V1, V2) :- china(V0, V1), motivation(V2)."],"c":["quagga(V0, V2) :- ebb(V0, V2), - water_animal(V0, V3).","legs_6(V2, V0) :- not -ebb(V0, V2), lapdog(V0, V2)."],"d":["- hand_brake(V0, V2) :- ebb(V0, V2).","colorful(V1, V2) :- - produce_eggs(V1, V2)."],"e":["tablespoon(V1, V2) :- - atlantic(V0, V1), not -appendage(V1, V3), whole(V2, V3).","indigo_bunting(V0, V1) :- state_banks(V0, V1), not sewing(V0, V2), oyster_shell(V1, V2)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_75_10_12_11_14_0.5_1.0_3_3_4","seed":75,"num_facts":15,"num_rules":13,"num_related_predicates":28,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" stars(\"David\", \"Robert\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- placing_chess_pieces_on(\"Michael\", \"David\").","- pledger(\"Michael\", \"Robert\").","scratch_back(\"Annette\", \"Michael\", \"William\").","- mound(\"William\", \"David\").","unitarian(\"Annette\", \"Michael\", \"William\").","upholstery(\"Annette\", \"William\", \"Robert\").","bigos(\"Annette\", \"William\", \"Robert\").","- artifact(\"Annette\", \"William\", \"David\").","- liquid(\"Annette\", \"David\", \"Robert\").","- facial(\"David\", \"Robert\").","echocardiography(\"William\", \"David\", \"Robert\").","- polish(\"Annette\", \"Michael\", \"William\").","- tank(\"Annette\", \"William\", \"David\").","crash_on_aircraft_roadway(\"Annette\", \"David\", \"Robert\").","encolure(\"Michael\", \"William\", \"David\")."],"noisy_facts":["- lanolin(\"Annette\", \"William\", \"Robert\").","sussex(\"Michael\", \"William\", \"David\").","- ununquadium(\"David\", \"Robert\").","- propagandist(\"Michael\", \"David\", \"Robert\").","- larva(\"Annette\", \"William\", \"Robert\").","- separate(\"Annette\", \"William\", \"Robert\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- stars(V3, V4) :- - cane(V3, V4), - palm(V0, V2, V4), not -bigos(V0, V2, V4).","bit(V2, V4) :- - placing_chess_pieces_on(V1, V3), crash_on_aircraft_roadway(V0, V3, V4), encolure(V1, V2, V3).","whey(V1) :- - pledger(V1, V4), - facial(V3, V4), echocardiography(V2, V3, V4).","- birth(V1, V3, V4) :- - pledger(V1, V4), - facial(V3, V4), echocardiography(V2, V3, V4).","recreation(V2, V3, V4) :- - pledger(V1, V4), - facial(V3, V4), echocardiography(V2, V3, V4).","- cane(V1, V1) :- whey(V1), not -cartridge(V1), not greenbelt(V1).","pepper(V1, V2, V3) :- - birth(V1, V3, V4), upholstery(V0, V2, V4), not -bigos(V0, V2, V4).","feast_day(V0, V1, V2) :- - birth(V1, V3, V4), upholstery(V0, V2, V4), not -bigos(V0, V2, V4).","cartridge(V1) :- bit(V2, V4), pepper(V1, V2, V3), not advance_toward_enemy(V1, V2, V3).","- palm(V0, V2, V4) :- recreation(V2, V3, V4), feast_day(V0, V1, V2), not -unitarian(V0, V1, V2).","- advance_toward_enemy(V1, V2, V3) :- repeat(V1, V3), - artifact(V0, V2, V3), - liquid(V0, V3, V4).","repeat(V1, V3) :- pepper(V1, V2, V3), scratch_back(V0, V1, V2), not -unitarian(V0, V1, V2).","- greenbelt(V1) :- - mound(V2, V3), - polish(V0, V1, V2), not tank(V0, V2, V3)."],"noisy_rules":{"a":["stars(V3, V0) :- - feast_day(V0, V1, V2), advance_toward_enemy(V1, V2, V3).","stars(V3, V3) :- - whey(V1), - pepper(V1, V2, V3), not repeat(V1, V3)."],"b":["polish(V3, V1, V1) :- - repeat(V1, V3), stars(V3, V4).","- bit(V2, V4) :- - feast_day(V0, V1, V2), stars(V3, V4)."],"c":["cane(V3, V2) :- - pepper(V1, V2, V3).","- bit(V2, V2) :- - pepper(V1, V2, V3), - repeat(V1, V3)."],"d":["greenbelt(V2) :- palm(V0, V2, V4), not separate(V0, V2, V4).","- bit(V2, V3) :- - pepper(V1, V2, V3), not -advance_toward_enemy(V1, V2, V3), not -sussex(V1, V2, V3)."],"e":["girls_toy(V3, V4) :- - ununquadium(V3, V4).","hunt(V1, V3, V4) :- - larva(V0, V2, V4), - lanolin(V0, V2, V4), - propagandist(V1, V3, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_34_10_12_11_14_0.5_1.0_3_3_4","seed":34,"num_facts":15,"num_rules":13,"num_related_predicates":28,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.4444444444444446,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" attending_lecture(\"Kaitlyn\", \"Timothy\", \"Kim\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["quarter(\"Kaitlyn\").","romantic_evening(\"Kaitlyn\").","chopping_block(\"Kim\").","sandwich_shop(\"Timothy\", \"Kim\").","advance_toward_enemy(\"Kaitlyn\", \"Timothy\", \"Haley\").","informing_others(\"Timothy\", \"Kim\", \"Rebecca\").","grabbing(\"Kaitlyn\", \"Haley\", \"Kim\").","celtic_deity(\"Kaitlyn\", \"Haley\", \"Kim\").","whisker(\"Kaitlyn\", \"Haley\", \"Rebecca\").","dispose_of_trash(\"Timothy\", \"Kim\", \"Rebecca\").","merganser(\"Kaitlyn\", \"Haley\", \"Rebecca\").","unit_character(\"Kaitlyn\", \"Kim\", \"Rebecca\").","penis(\"Kaitlyn\").","south_dakotan(\"Kaitlyn\").","smash(\"Kaitlyn\", \"Haley\", \"Rebecca\")."],"noisy_facts":[],"min_fact_dicts_for_query":["quarter(\"Kaitlyn\").","romantic_evening(\"Kaitlyn\").","chopping_block(\"Kim\").","sandwich_shop(\"Timothy\", \"Kim\").","advance_toward_enemy(\"Kaitlyn\", \"Timothy\", \"Haley\").","informing_others(\"Timothy\", \"Kim\", \"Rebecca\").","grabbing(\"Kaitlyn\", \"Haley\", \"Kim\").","celtic_deity(\"Kaitlyn\", \"Haley\", \"Kim\").","whisker(\"Kaitlyn\", \"Haley\", \"Rebecca\").","dispose_of_trash(\"Timothy\", \"Kim\", \"Rebecca\").","merganser(\"Kaitlyn\", \"Haley\", \"Rebecca\").","unit_character(\"Kaitlyn\", \"Kim\", \"Rebecca\").","penis(\"Kaitlyn\").","south_dakotan(\"Kaitlyn\").","smash(\"Kaitlyn\", \"Haley\", \"Rebecca\")."],"noiseless_rules":["attending_lecture(V0, V1, V3) :- shoulders(V1, V3), ducks(V0, V1, V2), cob(V0, V3, V4).","sudanese(V0, V2, V3) :- soundstage(V0), whisker(V0, V2, V4), dispose_of_trash(V1, V3, V4).","shoulders(V1, V3) :- wrinkle(V0, V1), warbler(V0, V1, V2), acorn(V0, V3, V4).","magenta(V0) :- marang(V0, V2, V4), whisker(V0, V2, V4), smash(V0, V2, V4).","ducks(V0, V0, V0) :- magenta(V0), circlet(V0), prison(V0).","circlet(V0) :- prison(V0), quarter(V0), south_dakotan(V0).","cob(V0, V0, V0) :- romantic_evening(V0), penis(V0), south_dakotan(V0).","wrinkle(V0, V0) :- romantic_evening(V0), penis(V0), south_dakotan(V0).","marang(V0, V2, V0) :- sudanese(V0, V2, V3), grabbing(V0, V2, V3), celtic_deity(V0, V2, V3).","warbler(V0, V1, V2) :- chopping_block(V3), advance_toward_enemy(V0, V1, V2), informing_others(V1, V3, V4).","prison(V0) :- chopping_block(V3), advance_toward_enemy(V0, V1, V2), informing_others(V1, V3, V4).","soundstage(V0) :- sandwich_shop(V1, V3), merganser(V0, V2, V4), unit_character(V0, V3, V4).","acorn(V0, V3, V4) :- sandwich_shop(V1, V3), merganser(V0, V2, V4), unit_character(V0, V3, V4)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_76_10_12_11_14_0.5_1.0_3_3_4","seed":76,"num_facts":14,"num_rules":13,"num_related_predicates":27,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"fix(\"Oscar\", \"Melissa\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["cool(\"Denise\", \"Hannah\").","iron_blue(\"Denise\", \"Melissa\").","churches(\"Oscar\", \"Hannah\").","grotto(\"Denise\", \"Kathryn\", \"Melissa\").","eyeful(\"Oscar\", \"Kathryn\", \"Melissa\").","- accipitriformes(\"Denise\", \"Melissa\").","grandfather_clock(\"Denise\", \"Oscar\", \"Hannah\").","variation(\"Denise\", \"Hannah\", \"Melissa\").","whirlpool(\"Denise\", \"Kathryn\", \"Melissa\").","- pedal(\"Oscar\", \"Hannah\").","- guide_blind_people(\"Oscar\", \"Hannah\").","- people(\"Oscar\", \"Hannah\").","- seashell(\"Hannah\", \"Kathryn\").","- good_sense_of_smell(\"Denise\", \"Melissa\")."],"noisy_facts":[],"min_fact_dicts_for_query":["iron_blue(\"Denise\", \"Melissa\").","variation(\"Denise\", \"Hannah\", \"Melissa\").","whirlpool(\"Denise\", \"Kathryn\", \"Melissa\").","- people(\"Oscar\", \"Hannah\")."],"noiseless_rules":["fix(V1, V4) :- - creeper(V1, V3), - bristle_brush(V0, V2, V4), not -mountains(V1, V2, V3).","bombycid(V2, V0) :- yell(V0, V2, V4), not bristle_brush(V0, V2, V4).","- creeper(V1, V3) :- aiding_memory(V0, V3), - people(V1, V2), not seashell(V2, V3).","yell(V0, V2, V4) :- lock_locker(V2), - accipitriformes(V0, V4), grandfather_clock(V0, V1, V2).","- bristle_brush(V0, V2, V4) :- - plants(V0, V4), variation(V0, V2, V4), whirlpool(V0, V3, V4).","aiding_memory(V0, V3) :- - plants(V0, V4), variation(V0, V2, V4), whirlpool(V0, V3, V4).","mountains(V1, V2, V3) :- - jail(V0, V3), - starfish(V1, V2, V3), not real_estate(V1, V2, V3).","lock_locker(V2) :- cool(V0, V2), grotto(V0, V3, V4), eyeful(V1, V3, V4).","- bodybuilder(V1, V2) :- cool(V0, V2), grotto(V0, V3, V4), eyeful(V1, V3, V4).","- jail(V2, V3) :- bombycid(V2, V3), - bodybuilder(V1, V2), not guide_blind_people(V1, V2).","- plants(V0, V4) :- iron_blue(V0, V4), not accipitriformes(V0, V4), not good_sense_of_smell(V0, V4).","- starfish(V4, V0, V4) :- iron_blue(V0, V4), not accipitriformes(V0, V4), not good_sense_of_smell(V0, V4).","- real_estate(V1, V2, V1) :- churches(V1, V2), not pedal(V1, V2), not guide_blind_people(V1, V2)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_45_6_8_5_8_0.5_1.0_5_1_2","seed":45,"num_facts":8,"num_rules":9,"num_related_predicates":17,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P8(\"Victor\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P9(\"Victor\").","P10.","P11(\"Victor\").","- P12.","- P13(\"Victor\").","P14.","- P15.","P16(\"Victor\")."],"noisy_facts":["P26(\"Victor\").","- P27(\"Victor\").","P19(\"Victor\").","- P18(\"Victor\").","P28(\"Victor\").","- P22(\"Victor\").","- P17(\"Victor\").","- P24(\"Victor\").","- P25(\"Victor\").","P21(\"Victor\")."],"min_fact_dicts_for_query":["P10.","- P12.","- P13(\"Victor\")."],"noiseless_rules":["- P8(V1) :- - P0(V1), not -P1(V1), not -P3(V1), not P5(V1), not P6(V1).","- P0(V1) :- - P2(V1), not P7(V1).","P1(V1) :- - P7(V1), not -P9(V1), not P13(V1).","- P2(V1) :- - P7(V1), not -P9(V1), not P13(V1).","P3(V1) :- P10, - P12, - P13(V1), not -P14, not P15.","- P4(V1) :- P10, - P12, - P13(V1), not -P14, not P15.","- P5(V0) :- - P4(V0).","- P6(V1) :- - P5(V1), not -P11(V1), not -P16(V1).","- P7(V1) :- - P5(V1), not -P11(V1), not -P16(V1)."],"noisy_rules":{"a":["P8(V1) :- P4(V0), P5(V1).","P8(V1) :- - P1(V1), P2(V1)."],"b":["P6(V1) :- P0(V1), P2(V1), P4(V0), P8(V1).","- P9(V1) :- P2(V1), P4(V0), not -P5(V1), P7(V1), not -P8(V1)."],"c":["P6(V1) :- not -P5(V1), P7(V1).","- P16(V1) :- not P1(V1), not -P2(V1), P4(V0), not -P5(V1), P7(V1)."],"d":["P13(V1) :- P0(V1), not P17(V1).","P12(V1) :- not -P2(V1), P6(V1), not P18(V1), not -P19(V1)."],"e":["P20(V1) :- not -P21(V1), - P22(V1).","P23(V1) :- not P24(V1), - P25(V1), not -P26(V1), not P27(V1), not -P28(V1)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_79_5_5_2_4_0.5_1.0_5_2_3","seed":79,"num_facts":5,"num_rules":6,"num_related_predicates":11,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"P5(\"Nicholas\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P6(\"Tami\").","- P7(\"Nicholas\", \"Tami\").","P8(\"Nicholas\", \"Tami\").","P9(\"Jose\", \"Tami\").","P10(\"Nicholas\", \"Tami\")."],"noisy_facts":["- P13.","P12(\"Tami\").","- P15(\"Jose\", \"Nicholas\").","- P18(\"Susan\").","- P20(\"Tami\").","- P11(\"Tami\").","P21(\"Tami\").","P19(\"Susan\").","- P22(\"Susan\", \"Tami\")."],"min_fact_dicts_for_query":["- P6(\"Tami\").","P9(\"Jose\", \"Tami\").","P10(\"Nicholas\", \"Tami\")."],"noiseless_rules":["P5(V2) :- P0(V0, V2), not P2(V0, V2), not P4(V0, V2).","P0(V0, V2) :- - P6(V3), P9(V0, V3), P10(V2, V3).","P1(V2, V3) :- - P7(V2, V3).","- P2(V3, V2) :- P1(V2, V3), not -P8(V2, V3).","P3(V3) :- P1(V2, V3), not -P8(V2, V3).","- P4(V2, V2) :- P1(V2, V3), not -P3(V3), not -P8(V2, V3)."],"noisy_rules":{"a":["- P5(V2) :- - P0(V0, V2).","- P5(V2) :- - P1(V2, V3), P2(V0, V2), - P3(V3), not -P4(V0, V2)."],"b":["- P8(V2, V3) :- - P1(V2, V3), - P5(V2).","- P3(V3) :- - P0(V0, V2), - P3(V3), - P5(V2)."],"c":["- P0(V0, V2) :- - P1(V2, V3), P2(V0, V2), not P3(V3), not -P4(V0, V2).","- P8(V2, V3) :- - P0(V0, V2), - P1(V2, V3), not -P2(V0, V2), not P3(V3), not -P4(V0, V2)."],"d":["- P1(V3, V3) :- - P3(V3), not P11(V3), not -P12(V3).","- P14(V2, V2) :- - P0(V0, V2), P2(V0, V2), - P3(V3), - P13."],"e":["P16(V0, V2) :- - P15(V0, V2).","P17(V3) :- not P18(V1), not -P19(V1), - P20(V3), P21(V3), - P22(V1, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_76_8_9_9_11_0.5_1.0_5_2_3","seed":76,"num_facts":13,"num_rules":10,"num_related_predicates":23,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" march(\"Kelly\", \"Amy\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["cudgel(\"Kelly\", \"Amy\").","- common_form_of_public_transportation(\"Kelly\", \"Amy\").","staying_in_shape(\"Kelly\", \"Tina\").","- mountain_climbing.","- affection(\"Kelly\").","cane(\"Kelly\").","myrmidon(\"Kelly\", \"Tina\").","- areolar_tissue(\"Kelly\", \"Tina\").","transpiration(\"Kelly\", \"Tina\").","- crotaphion(\"Kelly\", \"Tina\").","bird_home(\"Kelly\", \"Tina\").","- gatherer(\"Kelly\", \"Amy\").","moat(\"Kelly\", \"Amy\")."],"noisy_facts":["morgue(\"Tina\", \"Amy\").","peolpe_breaks_law(\"Kelly\", \"Amy\").","- precious(\"Kelly\", \"Gregory\")."],"min_fact_dicts_for_query":["cudgel(\"Kelly\", \"Amy\").","- common_form_of_public_transportation(\"Kelly\", \"Amy\")."],"noiseless_rules":["- march(V0, V2) :- smother(V2), wedding(V0, V2), - mastoidale(V1, V3), not profession(V2, V3).","smother(V2) :- buying_ticket(V0, V2), sweden(V2, V3).","wedding(V0, V2) :- cudgel(V0, V2).","buying_ticket(V0, V2) :- - common_form_of_public_transportation(V0, V2).","aileron(V0) :- staying_in_shape(V0, V1), bird_home(V0, V1), - gatherer(V0, V2), not -moat(V0, V2).","sweden(V2, V2) :- wedding(V0, V2), not -aileron(V0), not stir(V0), not affection(V0), not -cane(V0).","- mastoidale(V2, V0) :- cudgel(V0, V2), not mountain_climbing.","- stir(V0) :- cudgel(V0, V2), not mountain_climbing.","- studying_for_test(V0, V2) :- cudgel(V0, V2), not mountain_climbing.","- profession(V1, V0) :- - studying_for_test(V0, V1), not -myrmidon(V0, V1), not areolar_tissue(V0, V1), not -transpiration(V0, V1), not crotaphion(V0, V1)."],"noisy_rules":{"a":["march(V0, V2) :- - buying_ticket(V0, V2).","march(V0, V2) :- - wedding(V0, V2), - buying_ticket(V0, V2), mastoidale(V1, V3)."],"b":["- smother(V2) :- - wedding(V0, V2), stir(V0), studying_for_test(V0, V1), not -march(V0, V2).","profession(V2, V3) :- mastoidale(V1, V3), profession(V2, V3), march(V0, V2)."],"c":["crotaphion(V0, V1) :- - buying_ticket(V0, V2), studying_for_test(V0, V1), profession(V2, V3).","- wedding(V0, V2) :- - smother(V2), - aileron(V0)."],"d":["- myrmidon(V3, V2) :- profession(V2, V3).","mythical_being(V0, V2) :- - wedding(V0, V2), mastoidale(V1, V3)."],"e":["- chutney(V1, V2) :- morgue(V1, V2).","bong(V3) :- peolpe_breaks_law(V0, V2), - precious(V0, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_84_9_8_8_9_0.5_1.0_3_3_4","seed":84,"num_facts":13,"num_rules":9,"num_related_predicates":22,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.375,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" P8(\"Justin\", \"James\", \"Claudia\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P9(\"Brian\").","P10(\"Jeremy\", \"Justin\", \"James\").","P11(\"Justin\", \"Claudia\").","P12(\"Brian\", \"James\", \"Claudia\").","P13(\"Brian\", \"James\", \"Claudia\").","P14(\"Justin\", \"Brian\").","P15(\"Brian\", \"James\", \"Claudia\").","P16(\"Jeremy\", \"Justin\", \"Brian\").","P17(\"Jeremy\", \"Justin\", \"Brian\").","P18(\"James\", \"Claudia\").","P19(\"Justin\", \"Brian\", \"Claudia\").","P20(\"Justin\", \"Brian\", \"Claudia\").","P21(\"Brian\", \"James\", \"Claudia\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P9(\"Brian\").","P10(\"Jeremy\", \"Justin\", \"James\").","P11(\"Justin\", \"Claudia\").","P12(\"Brian\", \"James\", \"Claudia\").","P13(\"Brian\", \"James\", \"Claudia\").","P14(\"Justin\", \"Brian\").","P15(\"Brian\", \"James\", \"Claudia\").","P16(\"Jeremy\", \"Justin\", \"Brian\").","P17(\"Jeremy\", \"Justin\", \"Brian\").","P18(\"James\", \"Claudia\").","P19(\"Justin\", \"Brian\", \"Claudia\").","P20(\"Justin\", \"Brian\", \"Claudia\").","P21(\"Brian\", \"James\", \"Claudia\")."],"noiseless_rules":["P8(V1, V3, V4) :- P7(V1, V2), P18(V3, V4), P19(V1, V2, V4).","P0(V2, V3, V4) :- P9(V2), P14(V1, V2), P15(V2, V3, V4).","P1(V2, V4, V2) :- P0(V2, V3, V4), P5(V2, V3, V4).","P2(V0, V1, V3) :- P10(V0, V1, V3).","P3(V0, V2) :- P4(V1, V2), P6(V0, V1, V4), P20(V1, V2, V4).","P4(V1, V2) :- P11(V1, V4), P16(V0, V1, V2), P17(V0, V1, V2).","P5(V2, V3, V4) :- P12(V2, V3, V4).","P6(V4, V3, V4) :- P5(V2, V3, V4), P13(V2, V3, V4), P21(V2, V3, V4).","P7(V1, V2) :- P1(V0, V1, V2), P2(V0, V1, V3), P3(V0, V2)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_39_10_11_7_10_0.5_1.0_3_2_3","seed":39,"num_facts":12,"num_rules":12,"num_related_predicates":24,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.2222222222222223,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"bone(\"John\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["chocolate(\"Gloria\").","jugale(\"Kellie\", \"John\").","two_arms(\"Kellie\", \"Gloria\").","- landmark(\"Kellie\", \"John\").","hawk(\"Kellie\", \"Gloria\").","auriculare(\"Kellie\", \"John\").","metopion(\"Kellie\", \"John\").","letter(\"Kathleen\", \"John\").","- cone(\"Gloria\", \"John\").","beard(\"Kellie\", \"John\").","butter(\"Gloria\", \"John\").","- cheese(\"Gloria\", \"John\")."],"noisy_facts":["stick(\"Kellie\").","form_of_mass_transit(\"John\").","informal_restaurant(\"Kellie\", \"John\").","betatron(\"John\").","- atom(\"Kellie\", \"John\").","carbon(\"John\").","- metallic_element(\"John\").","- substitution(\"Kellie\")."],"min_fact_dicts_for_query":["chocolate(\"Gloria\").","two_arms(\"Kellie\", \"Gloria\").","beard(\"Kellie\", \"John\").","butter(\"Gloria\", \"John\")."],"noiseless_rules":["bone(V3) :- gladiolus(V3), hyoid(V0, V2), not -auriculare(V0, V3).","ethmoid(V0, V3) :- food(V2), militarist(V0, V2), beard(V0, V3).","temporal_bone(V0) :- food(V2), militarist(V0, V2), beard(V0, V3).","gladiolus(V3) :- chocolate(V2), butter(V2, V3), not cheese(V2, V3).","food(V2) :- chocolate(V2), butter(V2, V3), not cheese(V2, V3).","hyoid(V0, V0) :- ethmoid(V0, V3), not -skull(V0, V3), not gnathion(V0, V3).","- craniometric_point(V3, V3) :- jugale(V0, V3), not -auriculare(V0, V3), not -metopion(V0, V3).","militarist(V0, V2) :- two_arms(V0, V2), not -hawk(V0, V2).","skull(V2, V3) :- - craniometric_point(V2, V3), not -cranium(V2, V3).","cranium(V3, V3) :- ethmoid(V0, V3), not -temporal_bone(V0), not calvaria(V0).","- gnathion(V0, V3) :- - landmark(V0, V3), letter(V1, V3), - cone(V2, V3).","- calvaria(V0) :- hawk(V0, V2)."],"noisy_rules":{"a":["- bone(V3) :- - cranium(V2, V3).","- bone(V3) :- - ethmoid(V0, V3), craniometric_point(V2, V3), not skull(V0, V3)."],"b":["calvaria(V3) :- - bone(V3).","craniometric_point(V0, V3) :- gnathion(V0, V3), not bone(V3)."],"c":["gnathion(V3, V3) :- - gladiolus(V3).","landmark(V0, V3) :- craniometric_point(V2, V3), - militarist(V0, V2), not skull(V0, V3)."],"d":["- butter(V2, V3) :- - temporal_bone(V0), craniometric_point(V2, V3), stick(V0).","- letter(V3, V3) :- - gladiolus(V3), not -form_of_mass_transit(V3)."],"e":["- change(V0, V3) :- not substitution(V0), not -betatron(V3), informal_restaurant(V0, V3).","- chemical_element(V3) :- carbon(V3), - metallic_element(V3), - atom(V0, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_31_8_9_6_8_0.5_1.0_3_2_3","seed":31,"num_facts":10,"num_rules":10,"num_related_predicates":20,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" manchuria(\"Troy\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["keeping_fit(\"Troy\", \"Lori\").","breath(\"Troy\").","ability.","- res_gestae(\"Troy\", \"Lori\").","- appendage(\"Troy\", \"Cheryl\").","tenpence(\"Lori\", \"Cheryl\").","- water_lily(\"Troy\", \"Calvin\").","orientation_course(\"Lori\", \"Calvin\").","- van(\"Lori\", \"Calvin\").","claws(\"Calvin\", \"Cheryl\")."],"noisy_facts":[],"min_fact_dicts_for_query":["keeping_fit(\"Troy\", \"Lori\").","breath(\"Troy\").","- appendage(\"Troy\", \"Cheryl\").","tenpence(\"Lori\", \"Cheryl\").","- water_lily(\"Troy\", \"Calvin\").","- van(\"Lori\", \"Calvin\")."],"noiseless_rules":["- manchuria(V0) :- only_birds(V0, V1), elk(V1, V3), not -old_boy(V1, V3).","biological_function(V1) :- keeping_fit(V0, V1), - water_lily(V0, V2), not -orientation_course(V1, V2).","only_birds(V0, V1) :- gaggle(V1), - horse_rider(V1), probable(V0, V1).","elk(V1, V3) :- - mug(V0, V3), - van(V1, V2), not -claws(V2, V3).","old_boy(V1, V3) :- breath(V0), - appendage(V0, V3), tenpence(V1, V3).","gaggle(V1) :- breath(V0), - appendage(V0, V3), tenpence(V1, V3).","- mug(V1, V1) :- - horse_rider(V1), not -ability.","- horse_rider(V1) :- biological_function(V1), not -scampi(V1).","probable(V0, V1) :- keeping_fit(V0, V1), not res_gestae(V0, V1).","scampi(V1) :- keeping_fit(V0, V1), not res_gestae(V0, V1)."],"noisy_rules":{}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_63_9_14_10_10_0.5_1.0_5_2_3","seed":63,"num_facts":13,"num_rules":15,"num_related_predicates":28,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.125,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":" valve(\"Robert\", \"Richard\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["edam(\"Amy\", \"Robert\").","- dart(\"Amy\", \"Robert\").","- paintball(\"Amy\").","- amastia(\"Robert\").","landscaping(\"Robert\").","answering_door(\"Robert\").","civilian_clothing(\"Robert\").","- attire(\"Amy\", \"Robert\").","- weight(\"Amy\", \"Robert\").","breastplate(\"Amy\", \"Robert\").","- contact(\"Amy\", \"Robert\").","eyes_nose(\"Robert\", \"Richard\").","- slops(\"Robert\", \"Richard\")."],"noisy_facts":["- life(\"Amy\", \"Richard\").","power(\"Richard\", \"Patricia\").","mustang(\"Robert\").","- friend(\"Amy\", \"Patricia\").","- mutism(\"Amy\", \"Richard\").","farrow(\"Amy\", \"Richard\").","- serve_humanity(\"Robert\").","guilder(\"Amy\", \"Richard\").","- getting_food_to_feed_to_others(\"Amy\", \"Robert\").","- water_pimpernel(\"Amy\", \"Robert\").","storm_sewer(\"Robert\").","- foot(\"Robert\")."],"min_fact_dicts_for_query":["- paintball(\"Amy\").","- contact(\"Amy\", \"Robert\").","eyes_nose(\"Robert\", \"Richard\")."],"noiseless_rules":["- valve(V1, V2) :- usa(V2), - plutonium(V0, V1), not -desperate_measure(V0, V1), not -cochin(V0, V1), not knell(V1, V2).","usa(V2) :- anyone(V0, V2), not -edge(V0, V2).","- plutonium(V0, V1) :- - legal_entity(V0, V1).","beauty(V0, V1) :- - legal_entity(V0, V1).","desperate_measure(V0, V1) :- edam(V0, V1).","passenger(V1) :- edam(V0, V1).","- cereal_bowl(V1) :- beauty(V0, V1), not article_in_magazine(V0, V1), not -gill(V0, V1).","cochin(V0, V1) :- - dart(V0, V1).","- knell(V1, V2) :- - paintball(V0), - contact(V0, V1), eyes_nose(V1, V2), not slops(V1, V2).","anyone(V0, V2) :- - paintball(V0), - contact(V0, V1), eyes_nose(V1, V2), not slops(V1, V2).","- legal_entity(V0, V1) :- - paintball(V0), - contact(V0, V1), eyes_nose(V1, V2), not slops(V1, V2).","- article_in_magazine(V0, V1) :- - paintball(V0), - contact(V0, V1), eyes_nose(V1, V2), not slops(V1, V2).","miner(V0, V1) :- - paintball(V0), - contact(V0, V1), eyes_nose(V1, V2), not slops(V1, V2).","edge(V1, V1) :- - cereal_bowl(V1), not amastia(V1), not -landscaping(V1), not -answering_door(V1), not -civilian_clothing(V1).","gill(V0, V1) :- passenger(V1), miner(V0, V1), not attire(V0, V1), not weight(V0, V1), not -breastplate(V0, V1)."],"noisy_rules":{"a":["valve(V1, V0) :- legal_entity(V0, V1).","valve(V1, V0) :- - desperate_measure(V0, V1), not gill(V0, V1)."],"b":["knell(V1, V2) :- - miner(V0, V1), valve(V1, V2).","- anyone(V0, V2) :- - beauty(V0, V1), - cochin(V0, V1), valve(V1, V2)."],"c":["- civilian_clothing(V1) :- - anyone(V0, V2), legal_entity(V0, V1), not gill(V0, V1).","- miner(V0, V1) :- - usa(V2), not desperate_measure(V0, V1), - passenger(V1), legal_entity(V0, V1), not gill(V0, V1)."],"d":["- civilian_clothing(V1) :- not -cereal_bowl(V1), - serve_humanity(V1), not foot(V1).","- beauty(V0, V2) :- - edge(V0, V2), not -farrow(V0, V2)."],"e":["quilt(V0, V1) :- mustang(V1), storm_sewer(V1), - getting_food_to_feed_to_others(V0, V1), guilder(V0, V2), - friend(V0, V3).","- disability_benefit(V1, V2) :- - water_pimpernel(V0, V1), - mutism(V0, V2), - life(V0, V2), power(V2, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_85_8_12_9_9_0.5_1.0_5_3_4","seed":85,"num_facts":12,"num_rules":13,"num_related_predicates":25,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.4285714285714284,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" bird(\"George\", \"Cheryl\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["chicken(\"David\", \"Keith\").","card_game(\"Cheryl\", \"David\", \"Keith\").","playing_baseball(\"George\", \"David\").","- chicken_egg(\"Donna\", \"David\").","humpty_dumpty(\"Donna\", \"David\").","weeb(\"Donna\", \"David\").","- work(\"George\", \"David\").","playing_basketball(\"Donna\", \"Cheryl\").","- waiting_tables(\"Donna\", \"David\").","- working(\"Donna\", \"David\", \"Keith\").","apodeme(\"George\", \"Donna\", \"Cheryl\").","- gallinaceous_bird(\"George\", \"David\", \"Keith\")."],"noisy_facts":["bugaboo(\"George\", \"Keith\").","- broken_computer(\"Donna\", \"Cheryl\", \"Keith\").","powwow(\"George\", \"Cheryl\", \"Keith\").","north_atlantic_council(\"George\").","- point_of_honor(\"George\", \"Cheryl\", \"David\").","business(\"Keith\").","city_council(\"Donna\", \"David\", \"Keith\").","- post(\"Cheryl\", \"David\", \"Keith\").","- indaba(\"Donna\", \"Cheryl\", \"David\").","- napkin(\"George\", \"Cheryl\", \"Keith\").","- burden(\"George\", \"Donna\", \"Cheryl\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- bird(V0, V2) :- - bird_home(V0, V2, V3), - place(V1, V2, V3).","nest(V0, V2, V4) :- chicken(V3, V4), apodeme(V0, V1, V2), not gallinaceous_bird(V0, V3, V4).","judge(V3) :- chicken(V3, V4), apodeme(V0, V1, V2), not gallinaceous_bird(V0, V3, V4).","chick(V1, V3) :- chicken(V3, V4), apodeme(V0, V1, V2), not gallinaceous_bird(V0, V3, V4).","- desk(V2, V3, V4) :- card_game(V2, V3, V4).","- bird_home(V0, V2, V2) :- nest(V0, V2, V4), not -court(V0, V2, V4), not egg(V0, V2, V4).","- place(V3, V3, V3) :- judge(V3), not home(V3), not office(V3).","court(V3, V3, V3) :- judge(V3), not home(V3), not office(V3).","- home(V3) :- earning_money(V2, V3), - bat(V1, V2, V4).","earning_money(V2, V3) :- playing_baseball(V0, V3), - work(V0, V3), playing_basketball(V1, V2), - waiting_tables(V1, V3), - working(V1, V3, V4).","- egg(V4, V2, V4) :- chick(V1, V3), - desk(V2, V3, V4), not chicken_egg(V1, V3), not -humpty_dumpty(V1, V3), not -weeb(V1, V3).","- office(V3) :- chick(V1, V3), - desk(V2, V3, V4), not chicken_egg(V1, V3), not -humpty_dumpty(V1, V3), not -weeb(V1, V3).","- bat(V1, V2, V4) :- chick(V1, V3), - desk(V2, V3, V4), not chicken_egg(V1, V3), not -humpty_dumpty(V1, V3), not -weeb(V1, V3)."],"noisy_rules":{"a":["bird(V0, V2) :- egg(V0, V2, V4), bat(V1, V2, V4).","bird(V3, V2) :- place(V1, V2, V3), not -home(V3)."],"b":["- playing_basketball(V1, V2) :- - court(V0, V2, V4), home(V3), egg(V0, V2, V4), bat(V1, V2, V4), bird(V0, V2).","working(V1, V3, V4) :- desk(V2, V3, V4), office(V3), bat(V1, V2, V4), bird(V0, V2)."],"c":["- chicken(V4, V4) :- egg(V0, V2, V4).","- playing_baseball(V4, V1) :- bat(V1, V2, V4)."],"d":["- legs(V3, V2) :- desk(V2, V3, V4).","office(V3) :- desk(V2, V3, V4), not post(V2, V3, V4)."],"e":["council(V3) :- north_atlantic_council(V0), powwow(V0, V2, V4), not indaba(V1, V2, V3), not broken_computer(V1, V2, V4), city_council(V1, V3, V4).","concern(V0, V4) :- business(V4), bugaboo(V0, V4), - burden(V0, V1, V2), - point_of_honor(V0, V2, V3), not napkin(V0, V2, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_6_10_12_10_12_0.5_1.0_3_2_3","seed":6,"num_facts":14,"num_rules":13,"num_related_predicates":27,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P12(\"Joel\", \"Gerald\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P13(\"Teresa\").","P14(\"Teresa\", \"Jason\").","- P15(\"Jason\", \"Joel\").","- P16(\"Teresa\", \"Gerald\").","P17(\"Jason\", \"Joel\").","P18(\"Joel\", \"Gerald\").","- P19(\"Joel\", \"Gerald\").","- P20(\"Jason\", \"Gerald\").","- P21(\"Jason\", \"Joel\").","P22(\"Jason\", \"Gerald\").","- P23(\"Teresa\", \"Jason\").","- P24(\"Teresa\", \"Jason\").","- P25(\"Teresa\", \"Joel\").","P26(\"Joel\", \"Gerald\")."],"noisy_facts":["- P30(\"Teresa\", \"Jason\").","- P31(\"Jason\").","- P27(\"Teresa\", \"Jason\").","- P32(\"Teresa\", \"Jason\").","P28(\"Teresa\", \"Jason\")."],"min_fact_dicts_for_query":["P14(\"Teresa\", \"Jason\").","- P15(\"Jason\", \"Joel\").","- P16(\"Teresa\", \"Gerald\").","P17(\"Jason\", \"Joel\").","- P19(\"Joel\", \"Gerald\").","- P21(\"Jason\", \"Joel\").","P22(\"Jason\", \"Gerald\").","- P25(\"Teresa\", \"Joel\").","P26(\"Joel\", \"Gerald\")."],"noiseless_rules":["P12(V2, V3) :- - P0(V1, V3), P4(V2, V3), not P6(V2, V3).","- P0(V1, V3) :- P3(V0, V1), P8(V0, V3), - P19(V2, V3).","P1(V1) :- P3(V0, V1), P8(V0, V3), - P19(V2, V3).","P2(V0, V1) :- - P13(V0), - P23(V0, V1), not P24(V0, V1).","P3(V0, V1) :- P14(V0, V1).","P4(V2, V3) :- P5(V2), - P25(V0, V2), P26(V2, V3).","P5(V2) :- - P15(V1, V2), - P21(V1, V2), P22(V1, V3).","- P6(V1, V1) :- P1(V1), not P7(V1), not P10(V1).","- P7(V1) :- - P9(V0, V1), - P11(V0, V1), - P20(V1, V3).","P8(V0, V3) :- - P16(V0, V3), P17(V1, V2), not -P18(V2, V3).","- P9(V0, V1) :- - P16(V0, V3), P17(V1, V2), not -P18(V2, V3).","- P10(V1) :- P1(V1), P2(V0, V1), not P13(V0).","- P11(V0, V1) :- P1(V1), P2(V0, V1), not P13(V0)."],"noisy_rules":{"a":["- P12(V2, V3) :- P0(V1, V3), - P4(V2, V3), not -P10(V1).","- P12(V3, V3) :- P0(V1, V3), - P2(V0, V1), P10(V1)."],"b":["P20(V1, V3) :- P0(V1, V3), - P12(V2, V3).","- P18(V2, V3) :- not P4(V2, V3), - P12(V2, V3)."],"c":["- P3(V0, V1) :- not P1(V1), P7(V1), - P8(V0, V3).","P20(V1, V2) :- - P1(V1), - P5(V2), P7(V1)."],"d":["P0(V1, V3) :- - P4(V2, V3), P9(V0, V1), - P27(V0, V1).","- P17(V1, V3) :- - P8(V0, V3), P11(V0, V1), not -P28(V0, V1)."],"e":["- P29(V0, V1) :- - P30(V0, V1).","P33(V0) :- - P31(V1), - P32(V0, V1)."]}},"num_min_facts_for_query":9,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_92_5_5_5_8_0.5_1.0_5_1_2","seed":92,"num_facts":7,"num_rules":6,"num_related_predicates":13,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" P5(\"Tina\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P6.","P7(\"Tina\").","P8(\"Tina\").","P9(\"Tina\").","P10(\"Tina\").","P11(\"Tina\").","P12(\"Tina\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P6.","P7(\"Tina\").","P8(\"Tina\").","P9(\"Tina\").","P10(\"Tina\").","P11(\"Tina\").","P12(\"Tina\")."],"noiseless_rules":["P5(V1) :- P0(V1), P3(V1), P4(V1), P8(V1), P9(V1).","P0(V1) :- P1(V1), P10(V1), P11(V1), P12(V1).","P1(V1) :- P6, P10(V1).","P2(V1) :- P6, P10(V1).","P3(V1) :- P7(V1), P12(V1).","P4(V2) :- P2(V2), P6."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_14_5_8_8_8_0.5_1.0_5_2_3","seed":14,"num_facts":9,"num_rules":9,"num_related_predicates":18,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"acculturation(\"Kyle\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- open_sesame(\"Paul\").","- skin(\"Sarah\").","coloring(\"Eric\", \"Kyle\").","race(\"Kyle\", \"Sarah\").","dimension(\"Paul\", \"Sarah\").","- small_print(\"Kyle\", \"Sarah\").","- utensil(\"Kyle\", \"Sarah\").","- mother_of_pearl(\"Eric\", \"Kyle\").","- smoke(\"Eric\", \"Kyle\")."],"noisy_facts":["- hong_kong_dollar(\"Kyle\").","sing_songs(\"Eric\", \"Kyle\").","- erectile_tissue(\"Paul\", \"Sarah\").","- beryl(\"Kyle\", \"Paul\").","kill(\"Eric\", \"Kyle\").","heating_element(\"Eric\", \"Kyle\").","carbonado(\"Eric\", \"Kyle\").","- bass(\"Eric\", \"Sarah\").","- ninian(\"Paul\", \"Sarah\").","- adult(\"Sarah\").","- sawdust_doll(\"Eric\", \"Paul\").","- bureaucratic_procedure(\"Kyle\", \"Sarah\")."],"min_fact_dicts_for_query":["- open_sesame(\"Paul\").","- skin(\"Sarah\").","coloring(\"Eric\", \"Kyle\")."],"noiseless_rules":["acculturation(V1) :- hand_luggage(V1, V2), warner(V1, V3), not -holding(V2, V3).","hand_luggage(V1, V2) :- - open_sesame(V2), - skin(V3), coloring(V0, V1), not -race(V1, V3), not -dimension(V2, V3).","- drinking_establishment(V1, V3) :- - open_sesame(V2), - skin(V3), coloring(V0, V1), not -race(V1, V3), not -dimension(V2, V3).","solleret(V3) :- - open_sesame(V2), - skin(V3), coloring(V0, V1), not -race(V1, V3), not -dimension(V2, V3).","- connect_to_hallways(V0, V1) :- - open_sesame(V2), - skin(V3), coloring(V0, V1), not -race(V1, V3), not -dimension(V2, V3).","warner(V1, V3) :- - drinking_establishment(V1, V3), not -central_america(V1, V3), not coinage(V1, V3), not small_print(V1, V3), not utensil(V1, V3).","holding(V3, V3) :- solleret(V3).","central_america(V3, V3) :- solleret(V3).","- coinage(V1, V0) :- - connect_to_hallways(V0, V1), not mother_of_pearl(V0, V1), not smoke(V0, V1)."],"noisy_rules":{"a":["- acculturation(V1) :- connect_to_hallways(V0, V1).","- acculturation(V1) :- drinking_establishment(V1, V3), connect_to_hallways(V0, V1), - holding(V2, V3)."],"b":["open_sesame(V1) :- - acculturation(V1).","open_sesame(V2) :- - holding(V2, V3), not central_america(V1, V3), - acculturation(V1)."],"c":["- solleret(V1) :- - hand_luggage(V1, V2).","open_sesame(V0) :- connect_to_hallways(V0, V1)."],"d":["mother_of_pearl(V0, V1) :- not -connect_to_hallways(V0, V1), - warner(V1, V3), not -heating_element(V0, V1), sing_songs(V0, V1), carbonado(V0, V1).","connect_to_hallways(V3, V1) :- not warner(V1, V3), not central_america(V1, V3), - bureaucratic_procedure(V1, V3)."],"e":["cinnamon_bread(V1) :- - adult(V3), kill(V0, V1), not bass(V0, V3).","- fishing_trip(V1) :- - hong_kong_dollar(V1), - sawdust_doll(V0, V2), - beryl(V1, V2), - erectile_tissue(V2, V3), - ninian(V2, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_78_10_11_11_13_0.5_1.0_3_3_4","seed":78,"num_facts":16,"num_rules":12,"num_related_predicates":28,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P11(\"Shelby\", \"Kendra\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P12(\"Kendra\", \"Ronald\").","- P13(\"Shelby\").","- P14(\"Kendra\", \"Mark\", \"Ronald\").","P15(\"Shelby\", \"Kendra\").","P16(\"Shelby\", \"Barbara\", \"Kendra\").","P17(\"Barbara\", \"Kendra\", \"Mark\").","- P18(\"Kendra\", \"Mark\", \"Ronald\").","- P19(\"Barbara\", \"Mark\", \"Ronald\").","P20(\"Kendra\", \"Mark\", \"Ronald\").","- P21(\"Shelby\", \"Barbara\", \"Kendra\").","- P22(\"Barbara\", \"Kendra\", \"Ronald\").","- P23(\"Barbara\", \"Kendra\", \"Ronald\").","P24(\"Barbara\", \"Mark\", \"Ronald\").","P25(\"Kendra\", \"Mark\", \"Ronald\").","P26(\"Kendra\", \"Mark\", \"Ronald\").","- P27(\"Barbara\", \"Kendra\")."],"noisy_facts":["- P30(\"Shelby\", \"Ronald\").","- P34(\"Kendra\", \"Mark\", \"Ronald\").","- P32(\"Shelby\", \"Barbara\", \"Ronald\").","P36(\"Barbara\", \"Mark\", \"Ronald\").","- P31(\"Shelby\", \"Ronald\").","- P28(\"Shelby\", \"Kendra\", \"Mark\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- P11(V0, V2) :- - P2(V2), P4(V0, V4), not P9(V2, V4).","- P0(V1, V2) :- - P5(V0, V2, V4), P10(V0, V3, V4), P24(V1, V3, V4).","P1(V1, V3, V4) :- - P3(V0, V4), P6(V0, V2, V3), - P23(V1, V2, V4).","- P2(V2) :- - P12(V2, V4), P25(V2, V3, V4).","- P3(V0, V4) :- - P13(V0), - P21(V0, V1, V2), - P22(V1, V2, V4).","P4(V1, V4) :- - P0(V1, V2), P1(V1, V3, V4), not P27(V1, V2).","- P5(V2, V2, V4) :- - P14(V2, V3, V4), not -P25(V2, V3, V4), not -P26(V2, V3, V4).","P6(V2, V2, V3) :- - P14(V2, V3, V4), not -P25(V2, V3, V4), not -P26(V2, V3, V4).","P7(V2, V3, V4) :- - P14(V2, V3, V4), not -P25(V2, V3, V4), not -P26(V2, V3, V4).","- P8(V2, V3, V4) :- P15(V0, V2), P17(V1, V2, V3), - P18(V2, V3, V4).","- P9(V2, V4) :- P7(V0, V3, V4), - P8(V2, V3, V4), not -P10(V0, V3, V4).","P10(V0, V3, V4) :- P16(V0, V1, V2), - P19(V1, V3, V4), not -P20(V2, V3, V4)."],"noisy_rules":{"a":["P11(V0, V2) :- P5(V0, V2, V4), - P10(V0, V3, V4).","P11(V0, V2) :- P0(V1, V2), - P1(V1, V3, V4), P5(V0, V2, V4)."],"b":["P13(V0) :- P11(V0, V2).","P2(V2) :- - P6(V0, V2, V3), - P7(V0, V3, V4), not -P11(V0, V2)."],"c":["- P6(V0, V2, V3) :- - P7(V0, V3, V4), P8(V2, V3, V4), not P10(V0, V3, V4).","- P4(V0, V4) :- - P7(V0, V3, V4), P9(V2, V4)."],"d":["- P16(V0, V4, V2) :- - P6(V0, V2, V3), P8(V2, V3, V4), - P28(V0, V2, V3).","P29(V0) :- P3(V0, V4), not P4(V0, V4), - P30(V0, V4)."],"e":["- P33(V1, V2, V3) :- - P31(V0, V4), - P32(V0, V1, V4), - P34(V2, V3, V4).","- P35(V1, V3, V4) :- P36(V1, V3, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_84_7_7_7_7_0.5_1.0_5_3_4","seed":84,"num_facts":11,"num_rules":8,"num_related_predicates":19,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6666666666666667,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"P7(\"James\", \"Tyler\", \"Tamara\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P8(\"Marc\", \"Tyler\", \"Tamara\").","P9(\"Joseph\", \"James\", \"Marc\").","P10(\"Joseph\", \"James\", \"Tyler\").","P11(\"Tyler\").","- P12(\"Joseph\", \"Marc\").","P13(\"Tyler\", \"Tamara\").","P14(\"Joseph\", \"James\", \"Marc\").","P15(\"James\", \"Tyler\", \"Tamara\").","- P16(\"James\", \"Marc\", \"Tyler\").","P17(\"James\", \"Marc\", \"Tyler\").","- P18(\"James\", \"Marc\", \"Tyler\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- P8(\"Marc\", \"Tyler\", \"Tamara\").","P9(\"Joseph\", \"James\", \"Marc\").","P10(\"Joseph\", \"James\", \"Tyler\").","- P16(\"James\", \"Marc\", \"Tyler\")."],"noiseless_rules":["P7(V1, V3, V4) :- P3(V1, V2), - P4(V3, V4), not P5(V1, V2, V4).","- P0(V2, V3, V4) :- - P8(V2, V3, V4).","P1(V0, V1, V2) :- P9(V0, V1, V2).","- P2(V0, V1, V3) :- P10(V0, V1, V3), - P16(V1, V2, V3), not -P17(V1, V2, V3), not P18(V1, V2, V3).","P3(V1, V2) :- P1(V0, V1, V2).","- P4(V3, V4) :- - P0(V2, V3, V4), - P2(V0, V1, V3), not P6(V0, V1, V3).","- P5(V1, V2, V4) :- P11(V3), - P12(V0, V2), P13(V3, V4), P14(V0, V1, V2), not -P15(V1, V3, V4).","- P6(V0, V1, V3) :- P11(V3), - P12(V0, V2), P13(V3, V4), P14(V0, V1, V2), not -P15(V1, V3, V4)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_53_8_9_7_8_0.5_1.0_5_1_2","seed":53,"num_facts":10,"num_rules":10,"num_related_predicates":20,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8571428571428572,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"chincapin(\"Laura\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["sibling(\"Laura\").","miracle(\"Laura\").","percussion(\"Laura\").","before(\"Laura\").","change_subjective_consciousness(\"Laura\").","hand_brake(\"Laura\").","bludgeon(\"Laura\").","murine(\"Laura\").","germanium(\"Laura\").","snorkel(\"Laura\")."],"noisy_facts":[],"min_fact_dicts_for_query":["sibling(\"Laura\").","miracle(\"Laura\").","percussion(\"Laura\").","before(\"Laura\").","change_subjective_consciousness(\"Laura\").","hand_brake(\"Laura\").","bludgeon(\"Laura\").","murine(\"Laura\").","germanium(\"Laura\").","snorkel(\"Laura\")."],"noiseless_rules":["chincapin(V2) :- mosan(V2), relation(V2), vegetables(V2), sewing(V2), murine(V2).","mosan(V2) :- smother(V2), automobiles(V2), bludgeon(V2).","faster(V2) :- sibling(V2), germanium(V2), snorkel(V2).","relation(V2) :- tin(V2).","vegetables(V2) :- miracle(V2), before(V2), change_subjective_consciousness(V2), hand_brake(V2), bludgeon(V2).","tin(V2) :- miracle(V2), before(V2), change_subjective_consciousness(V2), hand_brake(V2), bludgeon(V2).","sleeve(V2) :- miracle(V2), before(V2), change_subjective_consciousness(V2), hand_brake(V2), bludgeon(V2).","smother(V2) :- sleeve(V2).","sewing(V2) :- percussion(V2).","automobiles(V2) :- faster(V2)."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_90_8_12_4_7_0.5_1.0_5_0_1","seed":90,"num_facts":6,"num_rules":13,"num_related_predicates":19,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" green.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["ping.","snoop.","moose_and_turtles_both.","- gallon.","- three_notes.","- paste."],"noisy_facts":[],"min_fact_dicts_for_query":["ping."],"noiseless_rules":["- green :- - bus, not finale.","sleeping_place :- ping, not -moose_and_turtles_both, not gallon, not three_notes, not paste.","- form_of_personal_transportation :- ping, not -moose_and_turtles_both, not gallon, not three_notes, not paste.","- picturesqueness :- snoop.","litchi :- snoop.","- currency :- - picturesqueness, not -quark_cheese, not -ping, not gallon.","quark_cheese :- sleeping_place, not nervous_tissue.","- eat_bones :- sleeping_place, not nervous_tissue.","- bus :- quark_cheese, not mob, not succussion.","- nervous_tissue :- litchi.","- mob :- litchi.","- finale :- - form_of_personal_transportation, not currency, not eat_bones.","- succussion :- - form_of_personal_transportation, not currency, not eat_bones."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_57_10_14_12_15_0.5_1.0_5_0_1","seed":57,"num_facts":14,"num_rules":15,"num_related_predicates":29,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.7777777777777777,"num_noise_rules_per_type":2,"num_rules_with_default_negation":13,"target_query":"region.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["canal.","surface.","lagoon.","loch.","- bean.","watercourse.","- rill.","- gut.","- strait.","asthenosphere.","upper_mantle.","- troposphere.","- cell_wall.","dip."],"noisy_facts":["- rudder.","honey_buzzard.","seven_seas.","- computer_memory_unit.","- friend.","making_meal."],"min_fact_dicts_for_query":["surface."],"noiseless_rules":["region :- covering, not -thing.","- landmark :- canal, not -watercourse, not rill, not gut, not strait.","channel :- canal, not -watercourse, not rill, not gut, not strait.","- stream :- canal, not -watercourse, not rill, not gut, not strait.","- inlet :- bay, not troposphere.","- figure :- bay, not troposphere.","- layer :- surface, not -asthenosphere, not -upper_mantle, not troposphere, not cell_wall.","crust :- surface, not -asthenosphere, not -upper_mantle, not troposphere, not cell_wall.","shell :- - inlet.","backwater :- - inlet.","bay :- - landmark, not -surface, not -dip.","lake :- channel, not layer, not -lagoon, not -loch, not bean.","body_of_water :- channel, not stream, not -lake.","covering :- crust, not -shell.","thing :- - figure, not -backwater, not -body_of_water."],"noisy_rules":{"a":["- region :- not -layer, - crust.","- region :- stream."],"b":["rill :- landmark, not shell, not covering, not region.","- surface :- - region."],"c":["- lagoon :- not crust, - shell, - thing.","- watercourse :- - channel, not crust, - lake, not thing."],"d":["- surface :- stream, not shell, - bay, - body_of_water, honey_buzzard.","- body_of_water :- not -inlet, not backwater, - bay, - lake, seven_seas."],"e":["- return_phone_calls :- not friend, - rudder, not -making_meal.","- tinting :- - computer_memory_unit."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_89_7_7_1_4_0.5_1.0_5_2_3","seed":89,"num_facts":4,"num_rules":8,"num_related_predicates":12,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8333333333333333,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"act(\"Nicholas\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- actors(\"Heather\", \"Nicholas\").","- action(\"Heather\", \"Nicholas\").","earning_money(\"Heather\", \"Nicholas\").","- letter(\"Heather\", \"Nicholas\")."],"noisy_facts":["- bed(\"Nicholas\").","fur(\"John\").","P15(\"John\").","- band(\"Nicholas\", \"John\").","fly(\"Nicholas\", \"Vincent\").","- playing_baseball(\"Nicholas\", \"John\").","gusset(\"Vincent\", \"John\").","cloud(\"Nicholas\", \"John\").","- seat(\"Heather\", \"Nicholas\")."],"min_fact_dicts_for_query":["- actors(\"Heather\", \"Nicholas\")."],"noiseless_rules":["act(V1) :- - entertainment(V1, V2), - play(V1, V3), not -performing(V1, V3).","stage(V0, V1) :- - actors(V0, V1).","- entertainment(V1, V2) :- remember_lines(V1, V2), not -character(V1, V2).","- play(V1, V1) :- stage(V0, V1).","place(V1) :- stage(V0, V1).","performing(V1, V3) :- - play(V1, V3), not -place(V1).","remember_lines(V1, V0) :- - actors(V0, V1), not action(V0, V1), not letter(V0, V1).","character(V1, V1) :- earning_money(V0, V1), not letter(V0, V1)."],"noisy_rules":{"a":["- act(V1) :- - character(V1, V2).","- act(V1) :- - stage(V0, V1), entertainment(V1, V2), - character(V1, V2)."],"b":["entertainment(V1, V2) :- entertainment(V1, V2), - performing(V1, V3), - act(V1).","actors(V0, V1) :- - stage(V0, V1), play(V1, V3), not performing(V1, V3), - character(V1, V2), not act(V1)."],"c":["- remember_lines(V1, V2) :- - stage(V0, V1), entertainment(V1, V2), - performing(V1, V3).","- stage(V2, V1) :- play(V1, V3), - place(V1), - character(V1, V2)."],"d":["action(V3, V1) :- play(V1, V3), - performing(V1, V3), - character(V1, V2), not -fly(V1, V2).","- earning_money(V3, V1) :- not performing(V1, V3), - playing_baseball(V1, V3)."],"e":["garment(V2) :- P15(V3), fur(V3), - band(V1, V3), gusset(V2, V3).","pillows(V1) :- - bed(V1), - seat(V0, V1), cloud(V1, V3)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_76_9_12_2_4_0.5_1.0_5_1_2","seed":76,"num_facts":6,"num_rules":13,"num_related_predicates":19,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.375,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P12(\"Jeff\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P13(\"Jeff\").","P14(\"Jeff\").","- P15(\"Jeff\").","P16(\"Jeff\").","- P17(\"Jeff\").","- P18(\"Jeff\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- P15(\"Jeff\")."],"noiseless_rules":["- P12(V1) :- - P5(V1), not -P6(V1), not P11(V1).","- P0(V1) :- P1(V1), not -P3(V1), not P9(V1).","P1(V1) :- - P13(V1).","- P2(V1) :- - P13(V1).","P3(V1) :- P14(V1).","- P4(V1) :- P14(V1).","- P5(V1) :- - P15(V1).","P6(V1) :- - P2(V1), not -P8(V1).","P7(V1) :- - P2(V1), not -P8(V1).","P8(V1) :- - P4(V1).","- P9(V1) :- - P4(V1), not P5(V1), not -P16(V1).","- P10(V1) :- - P4(V1), not P5(V1), not -P16(V1).","- P11(V1) :- - P0(V1), not -P7(V1), not P10(V1), not P17(V1), not P18(V1)."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_36_10_11_7_7_0.5_1.0_3_0_1","seed":36,"num_facts":11,"num_rules":12,"num_related_predicates":23,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" action.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["store_photographs.","vestiture.","ring.","mesohippus.","fahrenheit.","current.","dirtiness.","- restaurant_diner.","- landmark.","kirtle.","- midsummer_eve."],"noisy_facts":["- wash.","- kill.","- beautiful.","baked_good."],"min_fact_dicts_for_query":["store_photographs."],"noiseless_rules":["- action :- asthenosphere.","golden_retrievers :- store_photographs, not midsummer_eve.","- moving :- store_photographs, not midsummer_eve.","- pike :- store_photographs, not midsummer_eve.","asthenosphere :- golden_retrievers, not -microwave_bomb.","taste :- - moving, not trunk, not -fahrenheit.","microwave_bomb :- - ophryon, not -flow, not -fortune.","- ophryon :- vestiture.","- order_book :- - pike.","flow :- taste, not order_book, not restaurant_diner.","- trunk :- ring, not landmark, not -kirtle.","fortune :- mesohippus, not -current, not -dirtiness."],"noisy_rules":{"a":["action :- not golden_retrievers, - asthenosphere.","action :- - golden_retrievers, - taste."],"b":["midsummer_eve :- - asthenosphere, not flow, action.","- asthenosphere :- moving, not fortune, not -action."],"c":["- microwave_bomb :- not -moving, not flow, - fortune.","moving :- pike, not asthenosphere, trunk."],"d":["- ring :- ophryon, not wash.","pike :- - asthenosphere."],"e":["- adult_education :- baked_good.","- heteroploid :- - kill, not beautiful."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_17_9_14_1_4_0.5_1.0_5_0_1","seed":17,"num_facts":2,"num_rules":15,"num_related_predicates":17,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"P14.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["P15.","- P16."],"noisy_facts":[],"min_fact_dicts_for_query":["P15."],"noiseless_rules":["P14 :- - P0, not P5, not -P8, not P10.","- P0 :- P15.","- P1 :- P15.","- P2 :- P15.","- P3 :- P15.","- P4 :- P15.","- P5 :- - P1, not P6, not -P11.","- P6 :- - P2.","- P7 :- - P2.","P8 :- P9, not P10.","P9 :- - P3, not P12.","- P10 :- - P3, not P13.","P11 :- - P3, not P7.","- P12 :- - P3, not P7.","- P13 :- - P4, not P16."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_24_6_8_6_7_0.5_1.0_3_2_3","seed":24,"num_facts":8,"num_rules":9,"num_related_predicates":17,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.4,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" P8(\"Ian\", \"Melissa\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P9(\"Ian\", \"Natalie\").","P10(\"Christopher\").","P11(\"Christopher\", \"Melissa\").","P12(\"Natalie\", \"Melissa\").","P13(\"Ian\", \"Christopher\").","P14(\"Natalie\", \"Melissa\").","P15(\"Ian\", \"Melissa\").","P16(\"Christopher\", \"Melissa\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P9(\"Ian\", \"Natalie\").","P10(\"Christopher\").","P11(\"Christopher\", \"Melissa\").","P12(\"Natalie\", \"Melissa\").","P13(\"Ian\", \"Christopher\").","P14(\"Natalie\", \"Melissa\").","P15(\"Ian\", \"Melissa\").","P16(\"Christopher\", \"Melissa\")."],"noiseless_rules":["P8(V0, V3) :- P1(V0, V3), P4(V2, V3), P7(V2, V3).","P0(V2, V3) :- P2(V2), P6(V1, V2), P12(V1, V3).","P1(V0, V3) :- P9(V0, V1), P13(V0, V2), P14(V1, V3).","P2(V2) :- P9(V0, V1), P13(V0, V2), P14(V1, V3).","P3(V3) :- P9(V0, V1), P13(V0, V2), P14(V1, V3).","P4(V2, V3) :- P10(V2), P15(V0, V3), P16(V2, V3).","P5(V3) :- P10(V2), P15(V0, V3), P16(V2, V3).","P6(V0, V0) :- P1(V0, V3), P3(V3).","P7(V2, V3) :- P0(V2, V3), P5(V3), P11(V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_67_7_7_4_7_0.5_1.0_5_3_4","seed":67,"num_facts":6,"num_rules":8,"num_related_predicates":14,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"flying(\"Ashley\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["chicken(\"Samantha\", \"Ashley\", \"Jade\").","people(\"Chase\", \"Jade\", \"Melissa\").","maximizing_use_of_sunlight(\"Chase\", \"Ashley\", \"Jade\").","wings(\"Chase\", \"Jade\", \"Melissa\").","bird(\"Samantha\", \"Ashley\", \"Jade\").","be(\"Chase\", \"Jade\", \"Melissa\")."],"noisy_facts":[],"min_fact_dicts_for_query":["chicken(\"Samantha\", \"Ashley\", \"Jade\").","people(\"Chase\", \"Jade\", \"Melissa\").","maximizing_use_of_sunlight(\"Chase\", \"Ashley\", \"Jade\").","wings(\"Chase\", \"Jade\", \"Melissa\").","bird(\"Samantha\", \"Ashley\", \"Jade\").","be(\"Chase\", \"Jade\", \"Melissa\")."],"noiseless_rules":["flying(V2) :- voice_opinions(V1), bat(V2), maximizing_use_of_sunlight(V0, V2, V3), wings(V0, V3, V4), bird(V1, V2, V3).","animal(V2, V3, V2) :- chicken(V1, V2, V3), bird(V1, V2, V3).","tea_ceremony(V3, V4) :- living(V2, V3, V4).","negative(V4, V4) :- tea_ceremony(V3, V4), not_(V3, V4).","voice_opinions(V0) :- people(V0, V3, V4), wings(V0, V3, V4), be(V0, V3, V4).","not_(V3, V4) :- people(V0, V3, V4), wings(V0, V3, V4), be(V0, V3, V4).","bat(V0) :- negative(V0, V4).","living(V2, V3, V4) :- animal(V2, V3, V4), bird(V1, V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_77_8_7_1_3_0.5_1.0_3_0_1","seed":77,"num_facts":5,"num_rules":8,"num_related_predicates":13,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.4285714285714284,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"mane.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- beaver.","budgerigar.","edible_fruit.","- medical.","appendicle."],"noisy_facts":["anisogamete.","quality.","rotifer.","position.","new_world_goldfinch.","- screw.","- meow."],"min_fact_dicts_for_query":["- beaver."],"noiseless_rules":["mane :- - rock.","- atms :- test_driver, not government_officials.","test_driver :- - beaver, not -appendicle.","plaything :- budgerigar.","- rock :- - atms, not -speed.","speed :- plaything, not -red_spotted_purple, not medical.","- government_officials :- edible_fruit.","red_spotted_purple :- - atms, not medical."],"noisy_rules":{"a":["- mane :- - test_driver, - plaything.","- mane :- not -rock, - speed."],"b":["atms :- - red_spotted_purple, - mane.","- red_spotted_purple :- - test_driver, - plaything, not mane."],"c":["beaver :- - test_driver, not -government_officials, not red_spotted_purple.","- appendicle :- atms, - speed, not -government_officials."],"d":["- appendicle :- not speed, anisogamete, not -position.","beaver :- not -government_officials, not red_spotted_purple, quality."],"e":["airbus :- not meow, new_world_goldfinch, - screw.","atlantic_coast :- rotifer."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_3_10_11_5_7_0.5_1.0_5_0_1","seed":3,"num_facts":8,"num_rules":12,"num_related_predicates":20,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" commodity.","target_query_in_answerset":false,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["opinion.","hunt_foxes.","material.","player.","ethanol.","forelock.","fall_out_of_love.","footbridge."],"noisy_facts":[],"min_fact_dicts_for_query":["opinion.","hunt_foxes.","material.","player.","ethanol.","forelock.","fall_out_of_love.","footbridge."],"noiseless_rules":["commodity :- antelope, sausage.","acquisition_of_knowledge_and_understanding :- starnose_mole.","antelope :- acquisition_of_knowledge_and_understanding, layer.","neuroblast :- opinion.","teal :- opinion.","chukka :- hunt_foxes, footbridge.","protecting_others_during_sex :- hunt_foxes, footbridge.","sausage :- lamarckian, player, ethanol, forelock, fall_out_of_love.","layer :- neuroblast, chukka, gladiolus, starnose_mole.","gladiolus :- protecting_others_during_sex.","lamarckian :- material.","starnose_mole :- teal, sausage."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_70_8_11_4_4_0.5_1.0_3_2_3","seed":70,"num_facts":7,"num_rules":12,"num_related_predicates":19,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"bell(\"Nathaniel\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["getting_even(\"Nathaniel\").","blower(\"Nathaniel\", \"Jason\").","chicken_hawk(\"Stephanie\", \"Nathan\").","barn.","weather(\"Nathaniel\", \"Jason\").","europe(\"Nathaniel\", \"Jason\").","economy_of_scale(\"Nathaniel\", \"Nathan\")."],"noisy_facts":[],"min_fact_dicts_for_query":["getting_even(\"Nathaniel\").","blower(\"Nathaniel\", \"Jason\").","chicken_hawk(\"Stephanie\", \"Nathan\").","barn.","weather(\"Nathaniel\", \"Jason\").","europe(\"Nathaniel\", \"Jason\").","economy_of_scale(\"Nathaniel\", \"Nathan\")."],"noiseless_rules":["bell(V1) :- snow_leopard(V3), experimental_procedure(V0, V1), economy_of_scale(V1, V3).","process_information(V1, V2) :- getting_even(V1), weather(V1, V2), europe(V1, V2).","leaning(V1, V2) :- getting_even(V1), weather(V1, V2), europe(V1, V2).","snow_leopard(V1) :- process_information(V1, V2), berth(V1, V2), common_canary(V1, V2).","berth(V1, V2) :- blower(V1, V2).","shoe_bomb(V1) :- blower(V1, V2).","chain(V2) :- blower(V1, V2).","lawn_bowling(V1, V1) :- shoe_bomb(V1).","common_canary(V1, V2) :- leaning(V1, V2), chain(V2), barn.","launching_probes(V2, V2) :- leaning(V1, V2), chain(V2), barn.","experimental_procedure(V0, V0) :- lawn_bowling(V0, V3), launching_probes(V0, V3), monday(V0, V3).","monday(V0, V3) :- chicken_hawk(V0, V3)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_98_7_8_4_6_0.5_1.0_3_1_2","seed":98,"num_facts":7,"num_rules":9,"num_related_predicates":16,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8333333333333333,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" exoneration(\"Alexandra\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["trent.","design(\"Alexandra\").","- natural_disaster(\"Alexandra\").","- lignite(\"Alexandra\").","east.","- roar.","- then."],"noisy_facts":["- snout(\"Raymond\").","- arm_themselves(\"Alexandra\").","- calymmatobacterium(\"Alexandra\").","bulletproof_vest(\"Alexandra\")."],"min_fact_dicts_for_query":["design(\"Alexandra\")."],"noiseless_rules":["- exoneration(V1) :- natural_childbirth(V1), not -lobe(V1).","natural_childbirth(V1) :- place_where_one_lives(V1), not -meat(V1), not lignite(V1).","place_where_one_lives(V1) :- meat(V1), not -trent, not then.","- day(V1) :- meat(V1), not -trent, not then.","- swazi(V1) :- meat(V1), not -trent, not then.","meat(V1) :- design(V1).","lobe(V1) :- - day(V1), not -ground_bass(V1), not -goat_antelope(V1).","ground_bass(V0) :- - swazi(V0), not -east, not roar.","goat_antelope(V1) :- - natural_disaster(V1), not lignite(V1)."],"noisy_rules":{"a":["exoneration(V1) :- not -day(V1), - lobe(V1).","exoneration(V1) :- swazi(V0), - meat(V1), not goat_antelope(V1)."],"b":["then(V1) :- - natural_childbirth(V1), - lobe(V1), exoneration(V1).","roar(V1) :- day(V1), swazi(V0), exoneration(V1)."],"c":["natural_disaster(V1) :- day(V1), not meat(V1), - lobe(V1).","roar(V1) :- not lobe(V1), - ground_bass(V1)."],"d":["- place_where_one_lives(V1) :- not -day(V1), not lobe(V1), bulletproof_vest(V1).","- trent(V1) :- - arm_themselves(V1)."],"e":["produce_knowledge(V0) :- - snout(V0).","water_spaniel(V1) :- - calymmatobacterium(V1)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_95_10_12_7_9_0.5_1.0_5_2_3","seed":95,"num_facts":11,"num_rules":13,"num_related_predicates":24,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.6666666666666667,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P12(\"Jerry\", \"Brian\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P13(\"John\").","- P14(\"John\").","P15(\"John\", \"Jerry\").","P16(\"John\", \"Brian\").","- P17(\"John\", \"Jerry\").","P18(\"John\", \"Jerry\").","- P19(\"Jerry\").","P20(\"John\", \"Brian\").","- P21(\"Jerry\", \"Jason\").","P22(\"Jerry\", \"Brian\").","- P23(\"John\", \"Brian\")."],"noisy_facts":["P26(\"Jerry\", \"Jason\").","- P28(\"Jason\", \"Brian\").","- P27(\"Jerry\", \"Jason\").","- P24(\"John\").","P31(\"Jason\", \"Brian\").","P30(\"Jason\", \"Brian\").","- P29(\"Jerry\", \"Jason\")."],"min_fact_dicts_for_query":["P13(\"John\").","P15(\"John\", \"Jerry\").","- P19(\"Jerry\").","P20(\"John\", \"Brian\").","- P21(\"Jerry\", \"Jason\").","- P23(\"John\", \"Brian\")."],"noiseless_rules":["- P12(V1, V3) :- P3(V3), P7(V0, V1), not -P9(V1, V3), not -P10(V1, V3).","- P0(V1, V3) :- P13(V0), - P19(V1), P20(V0, V3), - P21(V1, V2), not -P22(V1, V3).","- P1(V2) :- P13(V0), - P19(V1), P20(V0, V3), - P21(V1, V2), not -P22(V1, V3).","- P2(V1, V2) :- P13(V0), - P19(V1), P20(V0, V3), - P21(V1, V2), not -P22(V1, V3).","P3(V3) :- P5(V0, V3).","P4(V0) :- - P14(V0).","P5(V0, V3) :- P15(V0, V1), - P23(V0, V3).","- P6(V0, V1) :- P15(V0, V1), - P23(V0, V3).","P7(V1, V1) :- - P0(V1, V3), not P11(V1, V3).","P8(V2, V2) :- - P1(V2).","P9(V0, V0) :- P4(V0).","P10(V1, V3) :- - P2(V1, V2), - P6(V0, V1), P8(V2, V3), not P17(V0, V1), not -P18(V0, V1).","- P11(V1, V3) :- - P0(V1, V3), P16(V0, V3), not -P20(V0, V3)."],"noisy_rules":{"a":["P12(V1, V3) :- P0(V1, V3), P2(V1, V2), - P7(V0, V1), - P8(V2, V3), not -P11(V1, V3).","P12(V1, V3) :- P1(V2), not P3(V3), not P8(V2, V3), - P9(V1, V3), not -P11(V1, V3)."],"b":["- P13(V0) :- - P5(V0, V3), P12(V1, V3).","- P22(V1, V3) :- P1(V2), not -P2(V1, V2), - P5(V0, V3), not P10(V1, V3), P12(V1, V3)."],"c":["P11(V1, V3) :- - P3(V3), P6(V0, V1), - P9(V1, V3).","P6(V1, V1) :- P11(V1, V3)."],"d":["- P3(V3) :- - P4(V0), P6(V0, V1), - P8(V2, V3), not -P11(V1, V3), not P24(V0).","P0(V2, V3) :- - P8(V2, V3)."],"e":["P25(V1, V3) :- P26(V1, V2), - P27(V1, V2), - P28(V2, V3).","- P32(V1, V3) :- - P29(V1, V2), P30(V2, V3), not -P31(V2, V3)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_76_7_8_3_5_0.5_1.0_5_2_3","seed":76,"num_facts":6,"num_rules":9,"num_related_predicates":15,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" P8(\"Anthony\", \"Amber\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P9(\"Anthony\", \"Amber\").","P10(\"Nicole\", \"William\").","- P11.","P12(\"William\").","- P13(\"William\").","- P14(\"William\")."],"noisy_facts":["P15(\"Amber\", \"William\").","- P16(\"Nicole\", \"Amber\").","P18(\"Anthony\", \"Amber\").","- P21(\"Anthony\", \"William\").","P19(\"Anthony\", \"William\")."],"min_fact_dicts_for_query":["- P9(\"Anthony\", \"Amber\")."],"noiseless_rules":["- P8(V0, V2) :- P0(V0, V2), - P7(V2, V3).","P0(V0, V2) :- - P9(V0, V2).","P1(V3) :- P2(V3), P4(V1, V2), not P6(V1, V3).","P2(V3) :- - P6(V1, V3), not -P10(V1, V3).","P3(V3) :- - P6(V1, V3), not -P10(V1, V3).","P4(V0, V0) :- P3(V0).","- P5(V0) :- P3(V0).","- P6(V0, V2) :- - P9(V0, V2), not P11.","- P7(V3, V3) :- P1(V3), not P5(V3), not -P12(V3), not P13(V3), not P14(V3)."],"noisy_rules":{"a":["P8(V1, V2) :- - P1(V3), - P2(V3), - P4(V1, V2), P7(V2, V3).","P8(V0, V1) :- - P1(V3), - P3(V0), P6(V1, V3)."],"b":["- P12(V3) :- not P1(V3), - P2(V3), not -P5(V3), P7(V2, V3), P8(V0, V2).","- P12(V3) :- - P3(V0), P5(V3), P8(V0, V2)."],"c":["P6(V2, V3) :- - P0(V0, V2), not P1(V3), not -P5(V3), P7(V2, V3).","- P0(V1, V2) :- - P1(V3), - P2(V3), - P4(V1, V2)."],"d":["- P0(V3, V2) :- P7(V2, V3), P15(V2, V3).","P11(V1, V2) :- - P4(V1, V2), not P16(V1, V2)."],"e":["P17(V3) :- P18(V0, V2), P19(V0, V3).","P20(V0) :- - P21(V0, V3)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_88_8_12_8_9_0.5_1.0_5_3_4","seed":88,"num_facts":11,"num_rules":13,"num_related_predicates":24,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5714285714285716,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P12(\"Shannon\", \"Tyler\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P13(\"Christian\", \"Marc\", \"Shannon\").","- P14(\"Christian\").","P15(\"Christian\", \"Tyler\").","P16(\"Christian\", \"Savannah\").","- P17(\"Marc\", \"Savannah\").","P18(\"Christian\", \"Marc\", \"Shannon\").","P19(\"Marc\", \"Shannon\", \"Tyler\").","- P20(\"Marc\").","P21(\"Christian\", \"Marc\").","P22(\"Christian\", \"Shannon\", \"Tyler\").","- P23(\"Marc\", \"Shannon\", \"Tyler\")."],"noisy_facts":["- P27(\"Shannon\").","- P36(\"Marc\", \"Shannon\", \"Tyler\").","- P32(\"Christian\").","P28(\"Marc\", \"Tyler\").","P29(\"Christian\", \"Marc\", \"Shannon\").","- P33(\"Marc\").","P34(\"Christian\", \"Tyler\", \"Savannah\").","- P24(\"Marc\", \"Tyler\").","- P25(\"Christian\", \"Marc\").","P30(\"Marc\", \"Tyler\", \"Savannah\").","- P35(\"Marc\", \"Shannon\", \"Tyler\")."],"min_fact_dicts_for_query":["- P13(\"Christian\", \"Marc\", \"Shannon\").","P15(\"Christian\", \"Tyler\").","P16(\"Christian\", \"Savannah\").","- P17(\"Marc\", \"Savannah\").","P18(\"Christian\", \"Marc\", \"Shannon\")."],"noiseless_rules":["- P12(V2, V3) :- - P1(V2), P5(V2, V3), - P7(V0, V1, V4), not P11(V0, V2, V3).","P0(V2, V2) :- - P1(V2), not P3(V2), not -P8(V2).","- P1(V2) :- - P13(V0, V1, V2).","- P2(V0, V1) :- - P13(V0, V1, V2).","- P3(V2) :- - P14(V0), - P20(V1), P21(V0, V1), P22(V0, V2, V3), not P23(V1, V2, V3).","P4(V0, V1, V3) :- - P14(V0), - P20(V1), P21(V0, V1), P22(V0, V2, V3), not P23(V1, V2, V3).","P5(V2, V3) :- P15(V0, V3), P16(V0, V4), - P17(V1, V4), P18(V0, V1, V2), not -P19(V1, V2, V3).","P6(V1, V3) :- P15(V0, V3), P16(V0, V4), - P17(V1, V4), P18(V0, V1, V2), not -P19(V1, V2, V3).","- P7(V3, V1, V3) :- P6(V1, V3).","P8(V3) :- P6(V1, V3).","- P9(V1, V1) :- P6(V1, V3).","- P10(V1) :- - P2(V0, V1), P4(V0, V1, V3).","- P11(V0, V3, V3) :- P0(V1, V3), - P9(V0, V1), not P10(V1)."],"noisy_rules":{"a":["P12(V2, V3) :- not P0(V1, V3), P2(V0, V1), not -P3(V2), - P5(V2, V3).","P12(V2, V3) :- P11(V0, V2, V3)."],"b":["P14(V1) :- - P5(V2, V3), not P6(V1, V3), P10(V1), not -P12(V2, V3).","P1(V2) :- P2(V0, V1), P3(V2), P12(V2, V3)."],"c":["P7(V0, V3, V0) :- P11(V0, V2, V3).","P23(V1, V2, V3) :- - P6(V1, V3), P7(V0, V1, V4), - P8(V2), not -P11(V0, V2, V3)."],"d":["- P21(V3, V1) :- - P0(V1, V3), not P24(V1, V3).","P10(V1) :- P9(V0, V1), P11(V0, V2, V3), not P25(V0, V1)."],"e":["P26(V1, V3) :- - P27(V2), P28(V1, V3), P29(V0, V1, V2), P30(V1, V3, V4).","- P31(V0, V3, V4) :- not P32(V0), not P33(V1), P34(V0, V3, V4), - P35(V1, V2, V3), not P36(V1, V2, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_30_10_10_10_13_0.5_1.0_5_0_1","seed":30,"num_facts":15,"num_rules":11,"num_related_predicates":26,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":1.8888888888888888,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"stoner.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- sorority.","zairean.","meeting.","soften.","- being_social.","what_people_eat.","- austria.","- fast.","knowledge_domain.","maximizing_use_of_sunlight.","rap.","- declined_presses.","- calymmatobacterium.","- buckthorn_berry.","- chain_tongs."],"noisy_facts":["calculating.","funny_wagon.","color.","anticyclone.","flat_dish.","swimming_kick.","visor.","hotness.","southwest."],"min_fact_dicts_for_query":["zairean."],"noiseless_rules":["stoner :- sporting_dog, not gamete, not -many_houses, not drive.","atom :- - sorority, not -maximizing_use_of_sunlight, not -rap, not declined_presses, not calymmatobacterium.","learn :- zairean, not fast.","cross_street :- zairean, not fast.","sporting_dog :- learn, not -conjunction, not amulet.","cheddar :- atom.","conjunction :- meeting, not fast, not buckthorn_berry, not chain_tongs.","- amulet :- cheddar.","- gamete :- cross_street, not sorority.","many_houses :- soften, not -what_people_eat, not austria, not fast, not -knowledge_domain.","- drive :- - being_social."],"noisy_rules":{"a":["- stoner :- - atom, not sporting_dog, - cheddar, not conjunction.","- stoner :- not learn, - cheddar, not conjunction, amulet, - many_houses."],"b":["- maximizing_use_of_sunlight :- - stoner.","amulet :- - cross_street, not -gamete, not stoner."],"c":["- rap :- not atom, not cross_street, not cheddar, not many_houses, drive.","- learn :- not atom, - cross_street, not conjunction, not many_houses."],"d":["- cross_street :- - cheddar, not -swimming_kick.","being_social :- not conjunction, amulet, visor."],"e":["- house :- not -hotness, not -calculating, anticyclone, not -funny_wagon.","dog_bug :- not -color, not -southwest, flat_dish."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_16_9_12_12_13_0.5_1.0_3_0_1","seed":16,"num_facts":14,"num_rules":13,"num_related_predicates":27,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":13,"target_query":"two_hands.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["couch.","sea_urchin.","- tuition.","handsomeness.","- wool.","- mothers_daughter.","broken_computer.","mountain_chinchilla.","buying_for_loved_one.","- kill.","- walrus.","- service.","- sleeping.","- black_footed_albatross."],"noisy_facts":["- pocket.","friends.","football.","plankton.","- wash_paws.","- babbler."],"min_fact_dicts_for_query":["couch."],"noiseless_rules":["two_hands :- mountain_climbing, not meow, not divine.","point_at :- federal_banks, not -bullpen, not overnighter.","outlive_owners :- - divine_messenger, not wool, not mothers_daughter.","mountain_climbing :- couch, not sleeping, not black_footed_albatross.","federal_banks :- couch, not sleeping, not black_footed_albatross.","press :- couch, not sleeping, not black_footed_albatross.","bullpen :- sea_urchin, not walrus, not service.","- meow :- point_at, not -outlive_owners, not service.","- divine :- press, not tuition, not -handsomeness.","large_group :- press, not tuition, not -handsomeness.","- overnighter :- large_group, not -broken_computer, not -mountain_chinchilla.","place_of_learning :- large_group, not -broken_computer, not -mountain_chinchilla.","- divine_messenger :- place_of_learning, not -buying_for_loved_one, not kill."],"noisy_rules":{"a":["- two_hands :- divine, not -divine_messenger.","- two_hands :- - point_at, not -meow."],"b":["overnighter :- - two_hands.","- press :- overnighter, not -divine_messenger, not two_hands."],"c":["- press :- - place_of_learning.","- mountain_chinchilla :- - press, not place_of_learning."],"d":["- broken_computer :- - press, not -friends.","service :- not point_at, not large_group, - wash_paws."],"e":["- hands :- plankton, football, - babbler.","tusk :- - pocket."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_1_7_11_8_11_0.5_1.0_5_3_4","seed":1,"num_facts":11,"num_rules":12,"num_related_predicates":23,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" emblem(\"Gregory\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- insignia(\"Dawn\").","singing(\"Stephanie\", \"Dawn\", \"Gregory\").","- mineral.","- country(\"Stephanie\", \"Dawn\", \"Tyler\").","- cheddar(\"Richard\", \"Dawn\", \"Tyler\").","- area(\"Stephanie\", \"Dawn\", \"Tyler\").","- chevron(\"Dawn\", \"Tyler\").","- blue_ribbon(\"Dawn\", \"Tyler\").","- merit_badge(\"Dawn\", \"Gregory\").","- stripe(\"Stephanie\", \"Richard\", \"Gregory\").","being(\"Richard\", \"Tyler\", \"Gregory\")."],"noisy_facts":["motor(\"Stephanie\", \"Dawn\").","first(\"Dawn\").","- not_people(\"Dawn\", \"Tyler\", \"Gregory\").","- electric_clock(\"Stephanie\", \"Tyler\", \"Gregory\").","- pilot_boat(\"Tyler\").","- leader(\"Stephanie\", \"Richard\").","- ride(\"Stephanie\", \"Tyler\", \"Gregory\").","- oil(\"Tyler\").","- song(\"Stephanie\", \"Dawn\", \"Tyler\")."],"min_fact_dicts_for_query":["- insignia(\"Dawn\").","singing(\"Stephanie\", \"Dawn\", \"Gregory\").","- chevron(\"Dawn\", \"Tyler\").","- blue_ribbon(\"Dawn\", \"Tyler\").","- merit_badge(\"Dawn\", \"Gregory\").","- stripe(\"Stephanie\", \"Richard\", \"Gregory\")."],"noiseless_rules":["- emblem(V4) :- - badge(V0, V1), - spread_eagle(V2, V4), not donkey(V2, V4), not -agnus_dei(V0, V1, V2).","- dove(V0, V2, V3) :- scarlet_letter(V1), medallion(V0, V4), - health(V0, V4), - cheddar(V1, V2, V3), not -being(V1, V3, V4).","- badge(V0, V1) :- - insignia(V2), - chevron(V2, V3), - blue_ribbon(V2, V3), - merit_badge(V2, V4), - stripe(V0, V1, V4).","scarlet_letter(V1) :- - insignia(V2), - chevron(V2, V3), - blue_ribbon(V2, V3), - merit_badge(V2, V4), - stripe(V0, V1, V4).","- symbol(V1, V3, V4) :- - insignia(V2), - chevron(V2, V3), - blue_ribbon(V2, V3), - merit_badge(V2, V4), - stripe(V0, V1, V4).","- spread_eagle(V0, V4) :- medallion(V0, V4), not -star_of_david(V0, V4), not cupid(V0, V4).","- donkey(V2, V4) :- singing(V0, V2, V4).","medallion(V0, V4) :- singing(V0, V2, V4).","agnus_dei(V2, V2, V2) :- - insignia(V2), not mineral.","- health(V2, V2) :- - insignia(V2), not mineral.","star_of_david(V2, V2) :- - insignia(V2), not mineral.","- cupid(V0, V4) :- - dove(V0, V2, V3), - symbol(V1, V3, V4), not country(V0, V2, V3), not cheddar(V1, V2, V3), not area(V0, V2, V3)."],"noisy_rules":{"a":["emblem(V4) :- dove(V0, V2, V3), - scarlet_letter(V1), donkey(V2, V4), - agnus_dei(V0, V1, V2), not star_of_david(V0, V4).","emblem(V4) :- dove(V0, V2, V3), badge(V0, V1), donkey(V2, V4), - medallion(V0, V4), not -cupid(V0, V4)."],"b":["symbol(V3, V3, V4) :- dove(V0, V2, V3), not star_of_david(V0, V4), emblem(V4).","blue_ribbon(V2, V3) :- dove(V0, V2, V3), donkey(V2, V4), health(V0, V4), not -cupid(V0, V4), not -emblem(V4)."],"c":["- being(V1, V3, V4) :- badge(V0, V1), - scarlet_letter(V1), symbol(V1, V3, V4), spread_eagle(V2, V4), not -health(V0, V4).","dove(V0, V2, V3) :- badge(V0, V1), symbol(V1, V3, V4), spread_eagle(V2, V4), not medallion(V0, V4), - star_of_david(V0, V4)."],"d":["- singing(V0, V2, V4) :- badge(V0, V1), - scarlet_letter(V1), spread_eagle(V2, V4), not leader(V0, V1).","donkey(V2, V4) :- dove(V0, V2, V3), - scarlet_letter(V1), cupid(V0, V4), not song(V0, V2, V3)."],"e":["car(V2, V3, V4) :- - oil(V3), motor(V0, V2), - ride(V0, V3, V4).","- early(V0, V4) :- not -first(V2), not pilot_boat(V3), - electric_clock(V0, V3, V4), - not_people(V2, V3, V4)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_60_6_8_3_6_0.5_1.0_3_2_3","seed":60,"num_facts":5,"num_rules":9,"num_related_predicates":14,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"sea_animal(\"Madeline\", \"Sheena\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- quartile(\"Madeline\", \"Timothy\").","- geese(\"Madeline\", \"Sheena\").","- find_outside(\"Madeline\", \"Sheena\").","river(\"Madeline\", \"Sheena\").","animal(\"Madeline\", \"Craig\")."],"noisy_facts":["rightist(\"Madeline\", \"Craig\").","- square(\"Madeline\", \"Timothy\").","predator(\"Madeline\", \"Sheena\").","- sip(\"Madeline\", \"Craig\").","- bridge(\"Madeline\", \"Sheena\").","- vintner(\"Madeline\", \"Sheena\")."],"min_fact_dicts_for_query":["- quartile(\"Madeline\", \"Timothy\").","- geese(\"Madeline\", \"Sheena\").","animal(\"Madeline\", \"Craig\")."],"noiseless_rules":["sea_animal(V0, V1) :- fish(V2), sponge(V0, V1), not -lobster(V1, V2).","fish(V2) :- - pond(V2, V3), not -bass(V2, V3).","sponge(V0, V1) :- - cake(V0, V1), find_underwater(V0, V1), animal(V0, V2).","lobster(V1, V2) :- - cake(V0, V1), find_underwater(V0, V1), animal(V0, V2).","- cake(V0, V1) :- lake(V0, V1), - quartile(V0, V3).","- pond(V2, V1) :- lobster(V1, V2), lake(V0, V1), not geese(V0, V1).","bass(V1, V0) :- - geese(V0, V1), not find_outside(V0, V1), not -river(V0, V1).","find_underwater(V0, V1) :- - geese(V0, V1), not find_outside(V0, V1), not -river(V0, V1).","lake(V0, V1) :- - geese(V0, V1), not find_outside(V0, V1), not -river(V0, V1)."],"noisy_rules":{"a":["- sea_animal(V0, V1) :- pond(V2, V3), - lake(V0, V1).","- sea_animal(V0, V1) :- - lobster(V1, V2), - lake(V0, V1)."],"b":["- find_underwater(V0, V1) :- - sea_animal(V0, V1).","- animal(V0, V2) :- - fish(V2), cake(V0, V1), not sea_animal(V0, V1)."],"c":["geese(V0, V1) :- - fish(V2), pond(V2, V3), - find_underwater(V0, V1).","cake(V0, V1) :- - sponge(V0, V1), - lobster(V1, V2), - bass(V2, V3)."],"d":["find_outside(V0, V1) :- - find_underwater(V0, V1), - lake(V0, V1), not -predator(V0, V1).","- river(V0, V1) :- - bass(V2, V3), - find_underwater(V0, V1), not bridge(V0, V1)."],"e":["conservative(V2, V3) :- rightist(V0, V2), - square(V0, V3).","sucking(V0, V1) :- - vintner(V0, V1), - sip(V0, V2)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_76_9_13_8_10_0.5_1.0_5_1_2","seed":76,"num_facts":12,"num_rules":14,"num_related_predicates":26,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" invaluableness(\"April\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- precious_metal(\"April\").","beige(\"April\").","west(\"April\").","- group(\"April\").","blowback(\"April\").","- drinking_beer(\"April\").","canada(\"April\").","- seabird(\"April\").","hammer(\"April\").","- tollkeeper(\"April\").","leeward(\"April\").","- eats_nuts(\"April\")."],"noisy_facts":["- blister_copper(\"Robert\").","- belief(\"April\").","- word_processing(\"Robert\").","pharaoh_ant(\"Robert\").","fly_aeroplanes(\"Robert\").","- field_trial(\"Robert\").","people_in_good_condition(\"Robert\").","manitoba(\"April\").","- vegetarians(\"Robert\")."],"min_fact_dicts_for_query":["west(\"April\")."],"noiseless_rules":["- invaluableness(V1) :- - gold(V1), not explosion(V1), not -yukon(V1), not -canada(V1), not seabird(V1).","position(V1) :- direction(V1), not -nunavut(V1), not -puffin(V1).","direction(V1) :- - precious_metal(V1), not -west(V1), not -leeward(V1).","northwest(V1) :- - precious_metal(V1), not -west(V1), not -leeward(V1).","nunavut(V1) :- beige(V1), not -hammer(V1), not tollkeeper(V1), not -leeward(V1), not eats_nuts(V1).","light_brown(V1) :- beige(V1), not -hammer(V1), not tollkeeper(V1), not -leeward(V1), not eats_nuts(V1).","- gold(V1) :- west(V1).","- baffin_island(V1) :- west(V1).","- explosion(V1) :- northwest(V1), not baffin_island(V1), not blast(V1), not -blowback(V1), not drinking_beer(V1).","- compass_point(V1) :- northwest(V1), not baffin_island(V1), not blast(V1), not -blowback(V1), not drinking_beer(V1).","- blast(V1) :- light_brown(V1).","puffin(V1) :- - group(V1).","- figure(V1) :- - group(V1).","yukon(V1) :- position(V1), not compass_point(V1), not figure(V1)."],"noisy_rules":{"a":["invaluableness(V1) :- - nunavut(V1), not -baffin_island(V1), not -explosion(V1).","invaluableness(V1) :- not light_brown(V1), not -explosion(V1), figure(V1)."],"b":["- puffin(V1) :- - yukon(V1), invaluableness(V1).","- canada(V1) :- - nunavut(V1), not -gold(V1), baffin_island(V1), - yukon(V1), not -invaluableness(V1)."],"c":["seabird(V1) :- not puffin(V1), - yukon(V1).","- nunavut(V1) :- not position(V1), not light_brown(V1), compass_point(V1), not -blast(V1), - yukon(V1)."],"d":["- canada(V1) :- - position(V1), not nunavut(V1), not -gold(V1), not -blast(V1), not -manitoba(V1).","- direction(V1) :- - northwest(V1), compass_point(V1), - puffin(V1), - yukon(V1), not belief(V1)."],"e":["shirring(V0) :- not field_trial(V0), pharaoh_ant(V0), - word_processing(V0), - vegetarians(V0).","- copper(V0) :- - blister_copper(V0), not -fly_aeroplanes(V0), people_in_good_condition(V0)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_22_6_9_1_3_0.5_1.0_5_1_2","seed":22,"num_facts":4,"num_rules":10,"num_related_predicates":14,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.4,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P9(\"Hector\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P10(\"Hector\").","- P11(\"Hector\").","- P12(\"Hector\").","- P13(\"Hector\")."],"noisy_facts":["- P20(\"Hector\").","P18(\"Hector\").","- P15(\"Hector\").","P14(\"Hector\").","P16(\"Hector\")."],"min_fact_dicts_for_query":["- P11(\"Hector\")."],"noiseless_rules":["- P9(V0) :- P1(V0), not P3(V0), not P4(V0), not P5(V0), not P6(V0).","- P0(V0) :- P10(V0).","P1(V0) :- - P11(V0), not P13(V0).","P2(V0) :- - P11(V0), not P13(V0).","- P3(V0) :- - P11(V0), not P13(V0).","- P4(V0) :- P2(V0), not P6(V0), not P7(V0).","- P5(V0) :- - P0(V0), not P3(V0), not P8(V0).","- P6(V0) :- - P0(V0), not P3(V0), not P8(V0).","- P7(V0) :- - P12(V0).","- P8(V0) :- - P12(V0)."],"noisy_rules":{"a":["P9(V0) :- not P2(V0), not -P3(V0), P6(V0), P8(V0).","P9(V0) :- - P1(V0), not -P3(V0), P6(V0)."],"b":["P12(V0) :- not -P0(V0), - P1(V0), not P2(V0), P7(V0), P9(V0).","P7(V0) :- P5(V0), P8(V0), P9(V0)."],"c":["- P2(V0) :- not -P0(V0), P3(V0).","P6(V0) :- not -P0(V0), not P1(V0), not P2(V0), not -P3(V0), P7(V0)."],"d":["P0(V0) :- not -P8(V0), P14(V0).","P11(V0) :- P4(V0), not P15(V0)."],"e":["P17(V0) :- not -P16(V0), P18(V0).","P19(V0) :- - P20(V0)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_26_8_12_4_7_0.5_1.0_3_2_3","seed":26,"num_facts":6,"num_rules":13,"num_related_predicates":19,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" subway_station(\"Henry\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- mule(\"Jon\", \"Henry\").","- zairean(\"Jordan\").","line_item(\"Jordan\", \"Henry\").","continuing_to_walk(\"Jon\", \"Henry\").","- baby_showers(\"Jon\", \"Henry\").","birthday_desert(\"Jon\", \"Henry\")."],"noisy_facts":["change(\"Jordan\", \"Henry\").","crow(\"Andrea\", \"Jon\").","daughter(\"Andrea\", \"Henry\").","- air_sac(\"Jon\").","- subscript(\"Jordan\", \"Andrea\").","notch(\"Jon\", \"Henry\").","- protection(\"Jordan\", \"Jon\")."],"min_fact_dicts_for_query":["- mule(\"Jon\", \"Henry\").","- zairean(\"Jordan\").","line_item(\"Jordan\", \"Henry\").","continuing_to_walk(\"Jon\", \"Henry\")."],"noiseless_rules":["- subway_station(V3) :- fringe_benefit(V2), calymmatobacterium(V2, V3), not -pony(V2, V3).","fringe_benefit(V2) :- - buried_bodies(V2), hold_carry_on_luggage(V0, V2), - medical_diagnosis(V0, V3).","- irritability(V0, V3) :- - buried_bodies(V2), hold_carry_on_luggage(V0, V2), - medical_diagnosis(V0, V3).","- buried_bodies(V2) :- - mule(V2, V3).","- bowling(V2) :- - mule(V2, V3).","calymmatobacterium(V2, V3) :- - zairean(V0), line_item(V0, V3), continuing_to_walk(V2, V3).","hold_carry_on_luggage(V0, V2) :- - waiting_list(V0, V2), commander(V1, V2), - united_states_dollar(V2, V3).","pony(V2, V3) :- - irritability(V0, V3), commander(V1, V2), not mule(V2, V3).","- waiting_list(V2, V2) :- - buried_bodies(V2), not bowling(V2).","commander(V2, V2) :- - buried_bodies(V2), not bowling(V2).","- national_flag(V2, V2) :- - buried_bodies(V2), not bowling(V2).","- medical_diagnosis(V3, V3) :- - national_flag(V2, V3), not baby_showers(V2, V3), not -birthday_desert(V2, V3).","- united_states_dollar(V2, V3) :- - national_flag(V2, V3), not baby_showers(V2, V3), not -birthday_desert(V2, V3)."],"noisy_rules":{"a":["subway_station(V3) :- bowling(V2), medical_diagnosis(V0, V3), not -united_states_dollar(V2, V3).","subway_station(V3) :- united_states_dollar(V2, V3)."],"b":["zairean(V3) :- subway_station(V3).","waiting_list(V3, V2) :- buried_bodies(V2), united_states_dollar(V2, V3), subway_station(V3)."],"c":["- fringe_benefit(V0) :- irritability(V0, V3).","irritability(V3, V3) :- - fringe_benefit(V2), - commander(V1, V2), united_states_dollar(V2, V3)."],"d":["zairean(V3) :- - fringe_benefit(V2), national_flag(V2, V3), - air_sac(V2).","- birthday_desert(V2, V3) :- - pony(V2, V3)."],"e":["- felony(V3) :- - subscript(V0, V1), daughter(V1, V3), notch(V2, V3).","cost_money(V2, V3) :- - protection(V0, V2), change(V0, V3), crow(V1, V2)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_57_10_15_12_13_0.5_1.0_3_0_1","seed":57,"num_facts":14,"num_rules":16,"num_related_predicates":30,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":16,"target_query":" copper.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- satisfying_hunger.","- cook_hot_dog.","- female_offspring.","- making_sandwich.","aberrance.","long_eared_owl.","- peaceableness.","- faster.","- laughter.","- hide.","horned_owl.","- brocket.","- vapor.","- lung."],"noisy_facts":["- point.","pity.","- rain_on_parade.","- lightweight."],"min_fact_dicts_for_query":["- cook_hot_dog."],"noiseless_rules":["- copper :- - slanted_rooves, not new_york_bay, not brocket.","- england :- - satisfying_hunger, not -long_eared_owl, not peaceableness.","- head_of_household :- - satisfying_hunger, not -long_eared_owl, not peaceableness.","killer_whale :- - satisfying_hunger, not -long_eared_owl, not peaceableness.","impedimenta :- cupid, not carry_freight, not -horned_owl.","- putting_food_on_table :- cupid, not carry_freight, not -horned_owl.","- american_crow :- - cook_hot_dog, not female_offspring, not making_sandwich.","- nose :- - cook_hot_dog, not female_offspring, not making_sandwich.","- countries :- impedimenta, not faster, not laughter.","- watching_television_show :- impedimenta, not faster, not laughter.","cupid :- - england, not vapor, not lung.","- carry_freight :- - head_of_household, not american_crow, not hide.","handkerchief :- - head_of_household, not american_crow, not hide.","world :- killer_whale, not -handkerchief, not hide.","- slanted_rooves :- - nose, not countries, not -aberrance.","- new_york_bay :- - putting_food_on_table, not watching_television_show, not -world."],"noisy_rules":{"a":["copper :- slanted_rooves, not -new_york_bay.","copper :- england, not -new_york_bay."],"b":["- killer_whale :- not -slanted_rooves, copper.","- cupid :- not -watching_television_show, copper."],"c":["american_crow :- not -england, slanted_rooves.","- world :- - cupid, not handkerchief."],"d":["- handkerchief :- - cupid, not lightweight.","slanted_rooves :- nose."],"e":["- media :- pity.","tuna :- - rain_on_parade, not point."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_36_10_13_3_3_0.5_1.0_3_0_1","seed":36,"num_facts":7,"num_rules":14,"num_related_predicates":21,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"event.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["re_creation.","movie.","artifact.","publication.","gallery.","- provide_companionship.","- nonevent."],"noisy_facts":["play_basketball.","punishment.","- act_in_movie.","slang.","classic."],"min_fact_dicts_for_query":["re_creation."],"noiseless_rules":["event :- miracle, not nonevent.","might_have_been :- re_creation.","- creation :- re_creation.","- social_event :- re_creation.","miracle :- might_have_been, not -making_sandwich, not -P8.","activity :- - creation, not variation.","making_sandwich :- - show, not -act, not -makeup.","- show :- movie.","- product :- movie.","P8 :- - social_event, not product.","- motivation :- - social_event, not product.","act :- activity, not motivation.","- variation :- artifact, not -gallery, not provide_companionship.","makeup :- publication."],"noisy_rules":{"a":["- event :- - might_have_been, - makeup.","- event :- social_event, not miracle, not act."],"b":["social_event :- show, motivation, not event.","- makeup :- - event."],"c":["- artifact :- - miracle, not P8, variation.","- gallery :- - might_have_been, not -social_event, not -motivation."],"d":["- P8 :- not act, classic.","variation :- show, not act_in_movie."],"e":["- dining :- play_basketball, not -slang.","partition :- punishment."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_18_10_12_11_13_0.5_1.0_5_2_3","seed":18,"num_facts":14,"num_rules":13,"num_related_predicates":27,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"lips_for_kissing(\"Gina\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- pan(\"April\", \"Gina\").","moon(\"April\", \"Gina\").","- cause_overeating(\"April\").","environmentally_friendly_means_of_transportation(\"Gina\").","- four_legs(\"April\", \"Aimee\").","zygomatic_process(\"Gina\", \"Aimee\").","synod(\"Gina\", \"Aimee\").","backhander(\"Aimee\").","rape_oil(\"Aimee\").","refusal(\"Aimee\").","digitally_encoded_music(\"Aimee\").","- outlive_owners(\"Christina\", \"Gina\").","- screech_owl(\"April\", \"Gina\").","sunfish(\"Gina\", \"Aimee\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- pan(\"April\", \"Gina\").","moon(\"April\", \"Gina\").","- outlive_owners(\"Christina\", \"Gina\").","- screech_owl(\"April\", \"Gina\").","sunfish(\"Gina\", \"Aimee\")."],"noiseless_rules":["lips_for_kissing(V2) :- - leg_presses(V2), brood(V0, V2).","- cargo_ship(V1, V2) :- lac(V1, V2), not -throng(V1, V2).","- lieutenant_colonel(V1) :- - pan(V1, V2).","- oligochaete(V2) :- - pan(V1, V2).","- cup_breast(V1, V2) :- - pan(V1, V2).","lac(V1, V2) :- moon(V1, V2).","- phatic_speech(V3) :- - lieutenant_colonel(V3), not -backhander(V3), not -rape_oil(V3), not -refusal(V3), not -digitally_encoded_music(V3).","- leg_presses(V2) :- - cargo_ship(V1, V2), not phatic_speech(V2), not surgeon(V1, V2).","throng(V3, V3) :- - oligochaete(V3), not gathering(V3).","brood(V0, V2) :- ignorance(V2), - outlive_owners(V0, V2), - screech_owl(V1, V2), sunfish(V2, V3).","- surgeon(V1, V2) :- - cause_overeating(V1), environmentally_friendly_means_of_transportation(V2), - four_legs(V1, V3), not -zygomatic_process(V2, V3), not -synod(V2, V3).","- gathering(V1) :- - cup_breast(V1, V2), not pan(V1, V2), not -moon(V1, V2).","ignorance(V2) :- - cup_breast(V1, V2), not pan(V1, V2), not -moon(V1, V2)."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_41_5_4_4_6_0.5_1.0_3_0_1","seed":41,"num_facts":6,"num_rules":5,"num_related_predicates":11,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" phalanx.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- apple.","- digit.","speaking.","- become_wet.","- resistance.","rent."],"noisy_facts":["- range.","away.","vertebrates.","- gallon.","american_indian_day."],"min_fact_dicts_for_query":["- apple."],"noiseless_rules":["- phalanx :- - susceptibility.","eve :- - apple, not -speaking, not become_wet.","capability :- - activity, not resistance, not -rent.","- susceptibility :- eve, not -capability, not activity.","- activity :- - digit, not -speaking."],"noisy_rules":{"a":["phalanx :- not capability, activity.","phalanx :- not eve, - capability, not -activity."],"b":["digit :- phalanx.","- rent :- not -susceptibility, activity, phalanx."],"c":["digit :- susceptibility.","- capability :- activity."],"d":["- eve :- - capability, - range.","- speaking :- - eve, not -vertebrates."],"e":["gone :- away, - gallon.","day :- american_indian_day."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_90_10_15_4_7_0.5_1.0_5_0_1","seed":90,"num_facts":9,"num_rules":16,"num_related_predicates":25,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":3.2222222222222223,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":"cortex.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- slip.","- lay.","- nest.","- chicken.","- captain.","ark.","sail.","yacht.","- submarine."],"noisy_facts":[],"min_fact_dicts_for_query":["- chicken."],"noiseless_rules":["cortex :- animal, not fall_down, not down, not birds, not -frock.","animal :- - bird, not produce_eggs, not boat.","- fall_down :- - slip.","- chick :- - slip.","hen :- - chick, not -fall, not egg, not bird, not head.","- down :- - slip, not lay.","fall :- - slip, not lay.","- dress :- - slip, not lay.","- birds :- - nest.","- egg :- - nest.","- bird :- - chicken.","- produce_eggs :- hen, not -female.","- boat :- - captain, not -ark, not -sail, not -yacht, not submarine.","- head :- - captain, not -ark, not -sail, not -yacht, not submarine.","frock :- - dress, not chicken.","female :- - dress, not chicken."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_65_8_7_7_7_0.5_1.0_3_1_2","seed":65,"num_facts":11,"num_rules":8,"num_related_predicates":19,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"camera_and_film(\"Larry\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- quality(\"William\").","- put(\"Larry\").","neophyte(\"Larry\").","- medical_procedure(\"Larry\").","yankee_doodle(\"Larry\").","- cover_bed(\"Larry\").","pacifism(\"Larry\").","- tanzanian(\"Larry\").","prison_camp(\"William\").","- clericalist(\"William\").","cocoa_powder(\"Larry\")."],"noisy_facts":["kickapoo(\"Larry\").","- pupil(\"William\").","carry_people(\"Larry\").","eider.","captain_ship(\"Larry\")."],"min_fact_dicts_for_query":["neophyte(\"Larry\")."],"noiseless_rules":["camera_and_film(V1) :- compound(V1), not storybook(V1).","compound(V1) :- - slide_fastener(V1), not cartesian(V1), not -cocoa_powder(V1).","- soap(V2) :- - quality(V2), not -prison_camp(V2), not clericalist(V2).","- storybook(V1) :- - put(V1), not -yankee_doodle(V1), not cover_bed(V1).","before(V1) :- neophyte(V1), not -pacifism(V1), not tanzanian(V1).","- slide_fastener(V1) :- before(V1), not lemon(V1).","- cartesian(V1) :- - medical_procedure(V1).","- lemon(V2) :- - soap(V2)."],"noisy_rules":{"a":["- camera_and_film(V1) :- storybook(V1), lemon(V1).","- camera_and_film(V1) :- not -storybook(V1), - before(V1), slide_fastener(V1)."],"b":["lemon(V1) :- cartesian(V1), not camera_and_film(V1).","cartesian(V1) :- - camera_and_film(V1)."],"c":["- yankee_doodle(V1) :- storybook(V1).","quality(V1) :- - before(V1), not -cartesian(V1), lemon(V1)."],"d":["put(V1) :- slide_fastener(V1), not -captain_ship(V1).","medical_procedure(V2) :- soap(V2), not -eider."],"e":["stock_cube(V1) :- carry_people(V1), not -kickapoo(V1).","- vaquita(V2) :- - pupil(V2)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_38_7_9_7_10_0.5_1.0_5_3_4","seed":38,"num_facts":8,"num_rules":10,"num_related_predicates":18,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P9(\"Luis\", \"Ryan\", \"Mark\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P10(\"Miranda\").","- P11(\"Luis\", \"Ryan\").","- P12(\"Miranda\", \"Gina\").","- P13(\"Miranda\", \"Ryan\", \"Mark\").","P14(\"Gina\", \"Ryan\", \"Mark\").","- P15(\"Gina\", \"Ryan\", \"Mark\").","- P16(\"Luis\", \"Ryan\").","P17(\"Luis\", \"Ryan\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- P10(\"Miranda\").","- P11(\"Luis\", \"Ryan\").","- P12(\"Miranda\", \"Gina\").","- P13(\"Miranda\", \"Ryan\", \"Mark\")."],"noiseless_rules":["- P9(V0, V3, V4) :- - P3(V2, V4), P8(V0, V2, V3).","- P0(V2, V4) :- - P10(V1), - P11(V0, V3), - P12(V1, V2), - P13(V1, V3, V4), not -P14(V2, V3, V4).","- P1(V2, V3, V4) :- - P10(V1), - P11(V0, V3), - P12(V1, V2), - P13(V1, V3, V4), not -P14(V2, V3, V4).","P2(V1, V3, V4) :- - P10(V1), - P11(V0, V3), - P12(V1, V2), - P13(V1, V3, V4), not -P14(V2, V3, V4).","- P3(V2, V4) :- - P0(V2, V4), not P4(V2, V4), not -P5(V2, V4).","- P4(V2, V4) :- P7(V2, V3, V4), not -P14(V2, V3, V4).","P5(V2, V4) :- - P1(V2, V3, V4), not P15(V2, V3, V4).","- P6(V3, V2, V4) :- - P1(V2, V3, V4), not P15(V2, V3, V4).","P7(V4, V3, V4) :- P2(V1, V3, V4).","P8(V0, V2, V3) :- - P6(V1, V2, V4), - P11(V0, V3), not P15(V2, V3, V4), not P16(V0, V3), not -P17(V0, V3)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_91_9_13_7_9_0.5_1.0_5_0_1","seed":91,"num_facts":8,"num_rules":14,"num_related_predicates":22,"max_depth_of_rule_graph":7,"average_depth_of_rule_graph":3.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P13.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P14.","P15.","P16.","- P17.","P18.","- P19.","P20.","P21."],"noisy_facts":[],"min_fact_dicts_for_query":["- P14."],"noiseless_rules":["- P13 :- P0, not P19, not -P20, not -P21.","P0 :- - P4, not -P6, not P10, not P11, not P17.","- P1 :- - P14.","- P2 :- - P14.","- P3 :- - P14.","- P4 :- - P1, not -P15, not -P16, not P17, not -P18.","- P5 :- - P1, not -P15, not -P16, not P17, not -P18.","P6 :- - P5.","P7 :- - P5.","- P8 :- P7, not P14.","- P9 :- P7, not P14.","- P10 :- - P2, not -P12.","- P11 :- - P8.","P12 :- - P3, not P9."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_32_9_11_3_6_0.5_1.0_3_0_1","seed":32,"num_facts":6,"num_rules":12,"num_related_predicates":18,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"P11.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P12.","- P13.","- P14.","P15.","P16.","P17."],"noisy_facts":[],"min_fact_dicts_for_query":["- P14."],"noiseless_rules":["P11 :- - P0, not -P2, not P5.","- P0 :- - P4, not P6, not -P17.","- P1 :- - P12, not -P15, not -P16.","P2 :- - P13.","P3 :- - P13.","- P4 :- P7, not -P8, not -P10.","- P5 :- P9, not -P17.","- P6 :- P9, not -P17.","P7 :- P9, not -P17.","P8 :- P3, not -P10.","P9 :- - P14.","P10 :- - P1, not -P3."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_63_6_9_7_8_0.5_1.0_5_2_3","seed":63,"num_facts":9,"num_rules":10,"num_related_predicates":19,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P9(\"Andrea\", \"Rodney\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P10(\"Rodney\").","- P11(\"Andrea\", \"Rodney\").","P12(\"Luke\", \"Andrea\").","- P13(\"Luke\", \"Joseph\").","- P14(\"Luke\", \"Joseph\").","- P15(\"Rodney\", \"Joseph\").","- P16(\"Luke\", \"Andrea\").","P17(\"Luke\", \"Rodney\").","P18(\"Andrea\", \"Rodney\")."],"noisy_facts":["- P28(\"Luke\", \"Joseph\").","- P22(\"Andrea\").","P23(\"Andrea\", \"Rodney\").","P24(\"Andrea\", \"Rodney\").","- P29(\"Andrea\", \"Rodney\").","P25(\"Andrea\", \"Rodney\").","- P19(\"Luke\", \"Andrea\").","P30(\"Rodney\", \"Joseph\").","- P27(\"Rodney\").","- P20(\"Luke\", \"Andrea\")."],"min_fact_dicts_for_query":["- P10(\"Rodney\").","- P11(\"Andrea\", \"Rodney\").","P12(\"Luke\", \"Andrea\").","- P13(\"Luke\", \"Joseph\")."],"noiseless_rules":["- P9(V1, V2) :- - P0(V2), P3(V0, V1), not -P4(V0, V1), not P7(V0, V1), not -P18(V1, V2).","- P0(V2) :- P1(V1), P5(V2), P8(V0, V1), not P16(V0, V1), not -P17(V0, V2).","P1(V1) :- - P10(V2), P12(V0, V1), - P13(V0, V3), not P14(V0, V3), not P15(V2, V3).","P2(V0, V1) :- - P10(V2), P12(V0, V1), - P13(V0, V3), not P14(V0, V3), not P15(V2, V3).","P3(V0, V1) :- P2(V0, V1).","P4(V1, V1) :- - P11(V1, V2), not -P18(V1, V2).","P5(V2) :- - P11(V1, V2), not -P18(V1, V2).","- P6(V1) :- - P11(V1, V2), not -P18(V1, V2).","- P7(V1, V1) :- - P6(V1).","P8(V1, V1) :- - P6(V1)."],"noisy_rules":{"a":["P9(V1, V0) :- - P1(V1), - P4(V0, V1).","P9(V1, V0) :- - P3(V0, V1), not -P6(V1)."],"b":["- P5(V2) :- not P5(V2), P9(V1, V2).","- P1(V1) :- not P1(V1), - P3(V0, V1), P9(V1, V2)."],"c":["- P17(V0, V1) :- - P2(V0, V1), - P4(V0, V1).","P15(V2, V2) :- - P5(V2)."],"d":["- P12(V0, V1) :- - P8(V0, V1).","P15(V1, V0) :- not P2(V0, V1), P6(V1), not -P7(V0, V1), - P19(V0, V1), - P20(V0, V1)."],"e":["- P21(V1, V2) :- - P22(V1), P23(V1, V2), not -P24(V1, V2), not -P25(V1, V2).","P26(V0, V1) :- - P27(V2), - P28(V0, V3), - P29(V1, V2), P30(V2, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_14_10_12_9_11_0.5_1.0_5_0_1","seed":14,"num_facts":13,"num_rules":13,"num_related_predicates":26,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" exposing_crime.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- safety.","east.","making_investment.","- dog_poop.","- living_thing.","object.","crown.","south.","- pass.","west.","- outer_space.","diploma.","fleet."],"noisy_facts":["- shelfful.","credits.","- find_outside.","- can.","blastoderm."],"min_fact_dicts_for_query":["- safety."],"noiseless_rules":["- exposing_crime :- article_in_magazine, not region, not -diploma, not -fleet.","head :- - safety.","- area :- - safety.","- location :- east, not -south, not pass, not -west, not outer_space.","camp :- making_investment.","P4 :- making_investment.","- site :- camp.","- poll :- P4, not site, not whole.","article_in_magazine :- head, not location, not living_thing, not -object, not -crown.","- whole :- head, not location, not living_thing, not -object, not -crown.","- layer :- - dog_poop.","top :- - poll, not layer, not -crown.","- region :- - area, not layer, not -top."],"noisy_rules":{"a":["exposing_crime :- area, - camp, not -poll, layer.","exposing_crime :- not head, location, not camp, - P4."],"b":["- camp :- not camp, layer, not -exposing_crime.","location :- not -area, not -region, exposing_crime."],"c":["- object :- - head, location, whole.","safety :- - top."],"d":["- P4 :- layer, blastoderm.","safety :- not -region, credits."],"e":["containerful :- - shelfful, - can.","- wind :- - find_outside."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_17_8_9_9_9_0.5_1.0_3_0_1","seed":17,"num_facts":11,"num_rules":10,"num_related_predicates":21,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"circular.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- officers.","- habitat.","- crab.","- coptic_church.","- professional.","mark.","uninterestingness.","partridge.","- kylix.","plumule.","forecourt."],"noisy_facts":["underground_animal.","- ammunition.","- cavern.","hydrogen_bomb.","make_mundane_things_seem_romantic.","head_sea."],"min_fact_dicts_for_query":["- habitat."],"noiseless_rules":["circular :- - phimosis, not prepare_meal, not mozambican.","- phimosis :- shoe_bomb.","- prepare_meal :- - officers, not -mark, not -uninterestingness.","- mossback :- - reliving, not blush, not professional.","- reliving :- - habitat, not crab, not coptic_church.","airdock :- - habitat, not crab, not coptic_church.","- saddle_horn :- - habitat, not crab, not coptic_church.","- blush :- airdock, not -partridge, not kylix.","- mozambican :- - mossback, not -plumule, not -forecourt.","shoe_bomb :- - saddle_horn."],"noisy_rules":{"a":["- circular :- mossback, not airdock, not -blush.","- circular :- reliving."],"b":["- partridge :- not -saddle_horn, - circular.","blush :- - circular."],"c":["kylix :- prepare_meal, not shoe_bomb.","- uninterestingness :- not -mossback, blush, mozambican."],"d":["prepare_meal :- saddle_horn, not shoe_bomb, not -make_mundane_things_seem_romantic.","- shoe_bomb :- reliving, saddle_horn, not -underground_animal."],"e":["- sit_down :- hydrogen_bomb, not ammunition.","water_skiing :- - cavern, head_sea."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_61_9_14_8_10_0.5_1.0_5_0_1","seed":61,"num_facts":10,"num_rules":15,"num_related_predicates":25,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.125,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P14.","target_query_in_answerset":false,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P15.","P16.","P17.","P18.","P19.","P20.","P21.","P22.","P23.","P24."],"noisy_facts":[],"min_fact_dicts_for_query":["P15.","P16.","P17.","P18.","P19.","P20.","P21.","P22.","P23.","P24."],"noiseless_rules":["P14 :- P0, P4, P9, P12, P22.","P0 :- P7, P10.","P1 :- P15, P17, P18, P19, P20.","P2 :- P15, P17, P18, P19, P20.","P3 :- P15, P17, P18, P19, P20.","P4 :- P16.","P5 :- P16.","P6 :- P16.","P7 :- P1, P5, P8, P24.","P8 :- P13.","P9 :- P2.","P10 :- P2.","P11 :- P2.","P12 :- P6, P21, P22, P23, P24.","P13 :- P3, P11."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_55_10_14_11_11_0.5_1.0_5_0_1","seed":55,"num_facts":13,"num_rules":15,"num_related_predicates":28,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":"rubber_band.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["player.","- nickel.","- carton.","main.","antler.","dog_poop.","colony.","mine.","furcation.","- black_gold.","- ticket_office.","dovecote.","- female_offspring."],"noisy_facts":[],"min_fact_dicts_for_query":["player."],"noiseless_rules":["rubber_band :- - peppercorn_rent, not -down, not -dog_poop, not -colony, not -mine.","long_time :- player, not female_offspring.","first_class_travel :- - nickel, not -furcation, not black_gold, not ticket_office, not -dovecote.","- body_part :- - nickel, not -furcation, not black_gold, not ticket_office, not -dovecote.","winter :- - nickel, not -furcation, not black_gold, not ticket_office, not -dovecote.","- yukon :- - nickel, not -furcation, not black_gold, not ticket_office, not -dovecote.","- flock :- - nickel, not -furcation, not black_gold, not ticket_office, not -dovecote.","steenbok :- first_class_travel.","- phone_call :- first_class_travel.","- aitchbone :- - body_part, not -steenbok, not carton, not -main, not -antler.","- storage_ring :- sticks, not homecourt_advantage.","sticks :- winter.","- peppercorn_rent :- long_time, not yukon.","down :- - phone_call, not aitchbone, not storage_ring.","- homecourt_advantage :- - flock."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_74_9_13_11_13_0.5_1.0_5_0_1","seed":74,"num_facts":15,"num_rules":14,"num_related_predicates":29,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" anachronism.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- egg.","classic.","- kite.","lighter.","- creature.","- bat.","signal.","- amount.","seats.","hen.","piece.","product.","artifact.","- representation.","pull_carts."],"noisy_facts":["dog_collar.","embryo.","hame.","canada.","- prison_camp.","- facing."],"min_fact_dicts_for_query":["classic."],"noiseless_rules":["- anachronism :- - creation, not plaything, not -animal, not -holophyte.","- chicken :- - egg.","- creation :- classic, not -piece, not -product, not -artifact, not representation.","- farm :- classic, not -piece, not -product, not -artifact, not representation.","- plant :- classic, not -piece, not -product, not -artifact, not representation.","- plaything :- - kite.","duck :- - kite.","- bird :- - chicken, not -duck, not -oriole, not nest.","animal :- - farm, not bird, not chick, not creature, not bat.","holophyte :- - orioles.","oriole :- - orioles.","- orioles :- lighter, not -signal, not amount, not -seats, not -hen.","- nest :- - plant, not -oriole, not egg, not -pull_carts.","- chick :- - plant, not -oriole, not egg, not -pull_carts."],"noisy_rules":{"a":["anachronism :- plaything, not -bird, not animal.","anachronism :- - animal."],"b":["- artifact :- not -creation, not -plaything, anachronism.","bird :- not -chick, anachronism."],"c":["- hen :- chicken, chick.","- product :- creation, not duck, not -nest."],"d":["plant :- not -plaything, - holophyte, not -embryo.","bat :- farm, not duck, not -bird, not -canada."],"e":["camp :- - prison_camp.","- collar :- hame, - facing, not -dog_collar."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_87_7_7_6_7_0.5_1.0_3_3_4","seed":87,"num_facts":9,"num_rules":8,"num_related_predicates":17,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8333333333333333,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" relative(\"Melissa\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["weaponry(\"Benjamin\", \"Marcia\", \"Melissa\").","- buddy(\"Benjamin\", \"Ashley\", \"Melissa\").","occupation(\"Benjamin\", \"Ashley\", \"Melissa\").","- park(\"Benjamin\", \"Ashley\", \"Melissa\").","lock(\"Benjamin\", \"Ashley\", \"Melissa\").","care_for_patients(\"Ashley\", \"Diana\", \"Melissa\").","flax(\"Ashley\", \"Diana\", \"Melissa\").","- nose(\"Benjamin\", \"Ashley\", \"Melissa\").","camail(\"Ashley\", \"Diana\", \"Marcia\")."],"noisy_facts":[],"min_fact_dicts_for_query":["weaponry(\"Benjamin\", \"Marcia\", \"Melissa\").","occupation(\"Benjamin\", \"Ashley\", \"Melissa\").","care_for_patients(\"Ashley\", \"Diana\", \"Melissa\").","camail(\"Ashley\", \"Diana\", \"Marcia\")."],"noiseless_rules":["- relative(V4) :- sewing(V3, V4), attachment(V0, V1, V2), not -carriage_bolt(V0, V2, V4).","sewing(V3, V4) :- weaponry(V0, V3, V4), care_for_patients(V1, V2, V4), not -flax(V1, V2, V4).","zebras(V0, V2) :- weaponry(V0, V3, V4), care_for_patients(V1, V2, V4), not -flax(V1, V2, V4).","hypertrophy(V0, V1, V4) :- - buddy(V0, V1, V4).","attachment(V0, V1, V2) :- runway(V0, V4), - clerical_collar(V1, V2), not nose(V0, V1, V4).","carriage_bolt(V0, V4, V4) :- hypertrophy(V0, V1, V4), not park(V0, V1, V4), not -lock(V0, V1, V4).","runway(V0, V4) :- occupation(V0, V1, V4), camail(V1, V2, V3).","- clerical_collar(V1, V2) :- zebras(V0, V2), occupation(V0, V1, V4)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_23_6_6_5_8_0.5_1.0_5_0_1","seed":23,"num_facts":7,"num_rules":7,"num_related_predicates":14,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.4,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"cliff.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- change.","- corner.","down.","blade.","- action.","- venter.","two_wheel_vehicle."],"noisy_facts":["turkey.","small_farmer.","- italy.","- farm.","gonococcus.","- disturbance."],"min_fact_dicts_for_query":["- corner."],"noiseless_rules":["cliff :- - edge, not -direction, not change.","- edge :- - coast, not -blade.","- turn :- - change.","- coast :- - corner.","- fly :- - corner.","border :- - edge, not action, not venter, not -two_wheel_vehicle.","direction :- - turn, not fly, not -border, not -down, not -blade."],"noisy_rules":{"a":["- cliff :- not -edge, turn, fly, - border.","- cliff :- coast, - border, - direction."],"b":["corner :- edge, not -turn, not -fly, not direction, - cliff.","turn :- turn, - direction, - cliff."],"c":["action :- turn, coast, fly.","change :- turn, not -coast."],"d":["- side :- edge, not -coast, - border, not -small_farmer, not disturbance.","- flow :- - border."],"e":["- bacteria :- gonococcus.","- country :- not italy, not farm, turkey."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_3_9_13_9_9_0.5_1.0_5_0_1","seed":3,"num_facts":11,"num_rules":14,"num_related_predicates":25,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.125,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" sporting_dog.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- government_agent.","- sum_.","plant_cell.","big_animal.","- big_church.","dough.","- universal_agent.","- literary_agent.","- handler.","talent_agent.","- ramus."],"noisy_facts":["- claws.","- auditorium.","red_poll.","- live_in_houses.","- conchologist.","breast.","menorrhea.","- charm.","go_bankrupt."],"min_fact_dicts_for_query":["- government_agent."],"noiseless_rules":["- sporting_dog :- spaniel, not -tree_cotton, not preventing_cancer.","spaniel :- - springer_spaniel, not cocker_spaniel, not -sussex_spaniel.","tree_cotton :- - government_agent, not universal_agent, not literary_agent, not handler, not -talent_agent.","- president :- - government_agent, not universal_agent, not literary_agent, not handler, not -talent_agent.","agent :- - government_agent, not universal_agent, not literary_agent, not handler, not -talent_agent.","cell_wall :- - government_agent, not universal_agent, not literary_agent, not handler, not -talent_agent.","- eating_vegetables :- - sum_.","- crowd :- - president.","- bush :- - president.","- side :- - president.","- springer_spaniel :- - crowd.","- preventing_cancer :- - eating_vegetables, not -plant_cell, not -big_animal, not big_church, not -dough.","- cocker_spaniel :- agent, not bush, not ramus.","sussex_spaniel :- cell_wall, not side."],"noisy_rules":{"a":["sporting_dog :- side, springer_spaniel.","sporting_dog :- - spaniel, not tree_cotton, not cell_wall, bush, not -springer_spaniel."],"b":["literary_agent :- president, not -sporting_dog.","- dough :- - spaniel, sporting_dog."],"c":["universal_agent :- not -crowd, not -preventing_cancer, cocker_spaniel, - sussex_spaniel.","- plant_cell :- - agent, not cell_wall."],"d":["universal_agent :- eating_vegetables, not -preventing_cancer, - sussex_spaniel, - charm, not auditorium.","universal_agent :- crowd, not -cocker_spaniel, - sussex_spaniel, not conchologist."],"e":["- scratch :- - claws.","- adult_female_body :- breast, not live_in_houses, not -red_poll, go_bankrupt, menorrhea."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_1_10_14_12_15_0.5_1.0_5_0_1","seed":1,"num_facts":15,"num_rules":15,"num_related_predicates":30,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":" P14.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P15.","P16.","P17.","- P18.","P19.","- P20.","- P21.","- P22.","P23.","- P24.","- P25.","- P26.","- P27.","- P28.","- P29."],"noisy_facts":[],"min_fact_dicts_for_query":["P16."],"noiseless_rules":["- P14 :- - P2, not P6, not P9, not P10, not P11.","P0 :- - P15.","P1 :- - P15.","- P2 :- P16, not P18, not -P19, not P20, not P21.","P3 :- P16, not P18, not -P19, not P20, not P21.","P4 :- P16, not P18, not -P19, not P20, not P21.","- P5 :- P0, not -P3, not P28.","- P6 :- P0, not -P4, not P28, not P29.","- P7 :- P0, not -P4, not P28, not P29.","- P8 :- P0, not -P4, not P28, not P29.","- P9 :- P17.","- P10 :- P1, not -P12, not P13, not P26, not P27.","- P11 :- - P7.","P12 :- - P5, not P7.","- P13 :- - P8, not P22, not -P23, not P24, not P25."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_38_9_12_11_14_0.5_1.0_5_3_4","seed":38,"num_facts":15,"num_rules":13,"num_related_predicates":28,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" P12(\"Amanda\", \"Jessica\", \"Justin\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P13(\"Amanda\", \"Victoria\", \"Jessica\").","P14(\"Amanda\", \"Jessica\", \"Justin\").","P15(\"Amanda\").","P16(\"Jennifer\", \"Justin\").","P17(\"Jessica\").","- P18(\"Amanda\", \"Jennifer\", \"Jessica\").","P19(\"Jennifer\", \"Victoria\", \"Jessica\").","P20(\"Jennifer\", \"Victoria\", \"Jessica\").","P21(\"Amanda\", \"Jennifer\", \"Victoria\").","P22(\"Amanda\", \"Jennifer\", \"Victoria\").","P23(\"Jennifer\", \"Victoria\", \"Jessica\").","P24(\"Amanda\", \"Jennifer\", \"Victoria\").","P25(\"Amanda\", \"Jennifer\", \"Justin\").","- P26(\"Jennifer\", \"Victoria\", \"Justin\").","- P27(\"Amanda\", \"Jennifer\", \"Justin\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- P12(V0, V3, V4) :- P2(V0), - P3(V4), - P6(V1, V3), - P8(V0, V1, V2), not -P10(V2, V3, V4).","- P0(V0, V3) :- - P13(V0, V2, V3).","P1(V1, V2, V3) :- P4(V2), - P7(V1, V3), P24(V0, V1, V2), P25(V0, V1, V4), not P26(V1, V2, V4).","P2(V3) :- P1(V1, V2, V3), not -P11(V1, V2, V3), not -P23(V1, V2, V3).","- P3(V4) :- P9(V0, V1, V4), not -P25(V0, V1, V4), not P27(V0, V1, V4).","P4(V0) :- P9(V0, V1, V4), not -P25(V0, V1, V4), not P27(V0, V1, V4).","- P5(V0, V4) :- P14(V0, V3, V4).","- P6(V1, V3) :- P15(V0), P17(V3), - P18(V0, V1, V3), P19(V1, V2, V3), not -P20(V1, V2, V3).","- P7(V1, V3) :- P15(V0), P17(V3), - P18(V0, V1, V3), P19(V1, V2, V3), not -P20(V1, V2, V3).","- P8(V0, V1, V2) :- P16(V1, V4), P22(V0, V1, V2).","P9(V0, V1, V4) :- P16(V1, V4), P22(V0, V1, V2).","P10(V2, V3, V4) :- - P0(V0, V3), - P5(V0, V4), P21(V0, V1, V2), not -P22(V0, V1, V2), not -P23(V1, V2, V3).","P11(V1, V2, V3) :- - P0(V0, V3), - P5(V0, V4), P21(V0, V1, V2), not -P22(V0, V1, V2), not -P23(V1, V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_36_10_14_8_11_0.5_1.0_3_3_4","seed":36,"num_facts":12,"num_rules":15,"num_related_predicates":27,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"acorns(\"Julie\", \"Beth\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["building(\"Julie\", \"Lisa\").","plane_ticket(\"Robert\", \"Beth\").","raise_baseballs(\"Robert\", \"Julie\").","ship_wreak(\"Julie\", \"Lisa\").","- rod(\"Robert\", \"Julie\", \"Jacob\").","- flock(\"Robert\", \"Jacob\", \"Beth\").","stigmatism(\"Julie\", \"Jacob\", \"Lisa\").","- reviewing_restaurant(\"Robert\", \"Julie\").","- tupi_guarani(\"Robert\", \"Julie\").","game_fowl(\"Robert\", \"Julie\", \"Jacob\").","gland(\"Julie\", \"Beth\", \"Lisa\").","great_auk(\"Jacob\", \"Beth\")."],"noisy_facts":["- kiss(\"Robert\", \"Beth\").","claymore(\"Robert\", \"Lisa\").","sac(\"Julie\", \"Beth\").","dig(\"Robert\", \"Lisa\").","aunt(\"Jacob\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["acorns(V1, V3) :- mud(V1, V2), darkness(V1, V3), not -great_auk(V2, V3).","platyctenean(V1, V3) :- building(V1, V4), game_fowl(V0, V1, V2), gland(V1, V3, V4).","- presence(V0, V3) :- building(V1, V4), game_fowl(V0, V1, V2), gland(V1, V3, V4).","- starting_day(V0, V1) :- building(V1, V4), game_fowl(V0, V1, V2), gland(V1, V3, V4).","mud(V1, V1) :- platyctenean(V1, V3), not -raptors(V1, V3), not autotelism(V1, V3).","darkness(V0, V3) :- - presence(V0, V3), not blue(V0, V3), not -confidant(V0, V3).","raptors(V1, V3) :- - vision_organ(V0, V4), - admiral(V0, V1, V2), home_on(V1, V3, V4).","- blue(V0, V3) :- - presence(V0, V3), not -plane_ticket(V0, V3).","- vision_organ(V0, V0) :- - presence(V0, V3), not -plane_ticket(V0, V3).","dagger(V0, V3, V3) :- - presence(V0, V3), not -plane_ticket(V0, V3).","- autotelism(V1, V3) :- - starting_day(V0, V1), dagger(V0, V2, V3), not reviewing_restaurant(V0, V1).","hit(V1, V2, V2) :- - starting_day(V0, V1), dagger(V0, V2, V3), not reviewing_restaurant(V0, V1).","- admiral(V1, V1, V2) :- darkness(V1, V3), hit(V1, V2, V4), not -stigmatism(V1, V2, V4).","confidant(V0, V1) :- raise_baseballs(V0, V1), not reviewing_restaurant(V0, V1), not tupi_guarani(V0, V1).","home_on(V1, V3, V4) :- ship_wreak(V1, V4), - rod(V0, V1, V2), - flock(V0, V2, V3)."],"noisy_rules":{"a":["- acorns(V1, V3) :- - platyctenean(V1, V3), - home_on(V1, V3, V4).","- acorns(V1, V4) :- starting_day(V0, V1), - mud(V1, V2), - hit(V1, V2, V4)."],"b":["starting_day(V0, V1) :- blue(V0, V3), autotelism(V1, V3), not acorns(V1, V3).","- confidant(V3, V3) :- - acorns(V1, V3)."],"c":["- plane_ticket(V0, V3) :- - mud(V1, V2), admiral(V0, V1, V2), - confidant(V0, V3).","- ship_wreak(V1, V1) :- - platyctenean(V1, V3), starting_day(V0, V1), not -autotelism(V1, V3)."],"d":["- gland(V1, V3, V3) :- not darkness(V1, V3), sac(V1, V3).","admiral(V0, V3, V0) :- blue(V0, V3), not kiss(V0, V3)."],"e":["- glue(V0) :- claymore(V0, V4), not -dig(V0, V4).","countries(V2) :- aunt(V2)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_54_8_8_6_8_0.5_1.0_5_1_2","seed":54,"num_facts":9,"num_rules":9,"num_related_predicates":18,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"acephalia(\"Fernando\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- tote_bag(\"Brandon\").","vegetable(\"Fernando\").","- norfolk_jacket.","elephant(\"Fernando\").","- pippin(\"Fernando\").","- having_permanent_residence(\"Fernando\").","squab(\"Fernando\").","mute_swan(\"Fernando\").","world_series_games(\"Fernando\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["acephalia(V0) :- biped(V0), not -bong(V0).","biped(V0) :- - court_game(V0), not -vegetable(V0), not -mute_swan(V0), not -world_series_games(V0).","own_property(V1) :- - tote_bag(V1).","- prescription(V1) :- - tote_bag(V1).","- chop(V0) :- vegetable(V0).","- season_food(V1) :- own_property(V1).","negative(V0) :- - chop(V0), not norfolk_jacket.","bong(V0) :- - chop(V0), not -elephant(V0), not pippin(V0), not having_permanent_residence(V0), not -squab(V0).","- court_game(V1) :- - prescription(V1), not season_food(V1), not -negative(V1)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_32_9_8_8_9_0.5_1.0_3_1_2","seed":32,"num_facts":11,"num_rules":9,"num_related_predicates":20,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.375,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" female(\"Isabel\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["paw(\"Hannah\").","egg(\"Isabel\").","doll(\"Isabel\").","hen(\"Isabel\").","rooster(\"Isabel\").","- brother.","- face.","- man(\"Isabel\").","men(\"Isabel\").","- daughter(\"Isabel\").","- baby(\"Isabel\")."],"noisy_facts":["- apple(\"Isabel\").","perform_work_humans_cannot_perform.","he(\"Isabel\").","loquat(\"Isabel\").","- chess_board(\"Hannah\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- female(V0) :- - woman(V0), not -chicken(V0), not -chick(V0).","- woman(V0) :- - person(V0).","- son(V1) :- paw(V1).","chicken(V0) :- egg(V0), not -hen(V0), not -rooster(V0).","- person(V0) :- gender(V0), not baby(V0).","chick(V0) :- girl(V0).","gender(V0) :- boy(V0), not man(V0), not -men(V0).","girl(V0) :- doll(V0), not daughter(V0), not baby(V0).","boy(V1) :- - son(V1), not brother, not face."],"noisy_rules":{"a":["female(V0) :- - chick(V0), not girl(V0).","female(V0) :- not -woman(V0), - chicken(V0), not girl(V0)."],"b":["- gender(V0) :- female(V0).","- chick(V0) :- not chicken(V0), female(V0)."],"c":["- gender(V0) :- son(V1), not chicken(V0), - girl(V0).","woman(V0) :- son(V1), not chicken(V0), - girl(V0)."],"d":["son(V0) :- - chick(V0), perform_work_humans_cannot_perform.","- gender(V0) :- woman(V0), - girl(V0), not -he(V0)."],"e":["edible_fruit(V0) :- loquat(V0), - apple(V0).","- cutting_cheese(V1) :- - chess_board(V1)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_6_6_9_8_11_0.5_1.0_5_3_4","seed":6,"num_facts":11,"num_rules":10,"num_related_predicates":21,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" hearer(\"Elizabeth\", \"Rachel\", \"Daniel\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- cup_water.","- typically(\"Elizabeth\", \"Jessica\", \"Mark\").","field_day(\"Jessica\", \"Rachel\").","- road(\"Rachel\", \"Daniel\", \"Mark\").","shelter(\"Jessica\", \"Rachel\").","- store_leftover_food(\"Jessica\", \"Rachel\").","- olla_podrida(\"Rachel\", \"Daniel\").","one_type_of_insect(\"Rachel\", \"Daniel\").","bocce_ball(\"Jessica\", \"Rachel\").","- eggcup(\"Jessica\", \"Rachel\").","- metopion(\"Jessica\", \"Rachel\")."],"noisy_facts":["school(\"Elizabeth\", \"Mark\").","- aquatic(\"Elizabeth\", \"Jessica\").","play(\"Jessica\", \"Rachel\").","- double_crosser(\"Elizabeth\", \"Mark\").","- partridge(\"Elizabeth\", \"Mark\").","- long_eared_owl(\"Elizabeth\", \"Rachel\", \"Daniel\").","- bugaboo(\"Elizabeth\", \"Jessica\", \"Mark\").","- limb(\"Rachel\", \"Mark\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- hearer(V0, V2, V3) :- commander(V0, V4), medallion(V0, V4), double_date(V2, V3), not tragedy(V3, V4), not road(V2, V3, V4).","- farm_animal(V0, V0) :- medallion(V0, V4), not cup_water.","milk_goat(V0, V4) :- medallion(V0, V4), not cup_water.","commander(V3, V2) :- - farm_animal(V2, V3), not -punnet(V2, V3), not commercial(V2, V3), not olla_podrida(V2, V3), not -one_type_of_insect(V2, V3).","medallion(V0, V4) :- - typically(V0, V1, V4).","double_date(V2, V3) :- milk_goat(V1, V2), ethos(V1, V2), - road(V2, V3, V4), not -shelter(V1, V2), not store_leftover_food(V1, V2).","punnet(V2, V3) :- milk_goat(V1, V2), ethos(V1, V2), - road(V2, V3, V4), not -shelter(V1, V2), not store_leftover_food(V1, V2).","- tragedy(V1, V2) :- milk_goat(V1, V2), not -field_day(V1, V2), not -bocce_ball(V1, V2), not eggcup(V1, V2), not metopion(V1, V2).","- commercial(V2, V2) :- milk_goat(V1, V2), not -field_day(V1, V2), not -bocce_ball(V1, V2), not eggcup(V1, V2), not metopion(V1, V2).","ethos(V1, V2) :- milk_goat(V1, V2), not -field_day(V1, V2), not -bocce_ball(V1, V2), not eggcup(V1, V2), not metopion(V1, V2)."],"noisy_rules":{"a":["hearer(V0, V2, V3) :- farm_animal(V2, V3), - milk_goat(V1, V2), - commander(V0, V4), tragedy(V3, V4), not -commercial(V2, V3).","hearer(V0, V2, V3) :- - medallion(V0, V4), - punnet(V2, V3), commercial(V2, V3)."],"b":["- commander(V0, V4) :- farm_animal(V2, V3), - commander(V0, V4), - punnet(V2, V3), not -tragedy(V3, V4), hearer(V0, V2, V3).","- milk_goat(V0, V2) :- hearer(V0, V2, V3)."],"c":["tragedy(V3, V4) :- farm_animal(V2, V3), - milk_goat(V1, V2), - commander(V0, V4), not punnet(V2, V3).","- one_type_of_insect(V2, V3) :- - milk_goat(V1, V2), - commander(V0, V4), not medallion(V0, V4), - double_date(V2, V3), - punnet(V2, V3)."],"d":["- punnet(V2, V3) :- not -farm_animal(V2, V3), not medallion(V0, V4), - double_date(V2, V3), not -tragedy(V3, V4), school(V0, V4).","- commander(V3, V1) :- - punnet(V2, V3), commercial(V2, V3), - ethos(V1, V2), not -play(V1, V2)."],"e":["- push(V0, V1, V2) :- - bugaboo(V0, V1, V4), - long_eared_owl(V0, V2, V3).","grow_on_tree(V0, V4) :- - aquatic(V0, V1), - double_crosser(V0, V4), - partridge(V0, V4), - limb(V2, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_44_10_14_1_4_0.5_1.0_5_3_4","seed":44,"num_facts":5,"num_rules":15,"num_related_predicates":20,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.4444444444444446,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"another_word_for_feces(\"Alexa\", \"Pamela\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["thank_god(\"Crystal\", \"Alexa\").","baby_rooster(\"Kimberly\", \"Alexa\", \"Chad\").","guan(\"Kimberly\", \"Alexa\", \"Pamela\").","atmosphere(\"Kimberly\", \"Alexa\", \"Pamela\").","- rotisserie(\"Kimberly\", \"Alexa\", \"Pamela\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["another_word_for_feces(V2, V4) :- sleep_in_beds(V0, V4), caribou(V0, V4), bus(V2, V4), arson(V0, V1, V2), not dry(V0, V1, V4).","sleep_in_beds(V0, V4) :- stream(V0, V1, V2), - having_beer(V1, V2, V4).","stream(V0, V1, V2) :- thank_god(V1, V2), - rotisserie(V0, V2, V4).","- diversion(V1, V2, V4) :- thank_god(V1, V2), - rotisserie(V0, V2, V4).","caribou(V0, V4) :- - opera(V3), - comedian(V0, V1, V2), - sport(V1, V2, V4), not beef_neck(V2, V3, V4).","- having_beer(V1, V2, V4) :- - opera(V3), - comedian(V0, V1, V2), - sport(V1, V2, V4), not beef_neck(V2, V3, V4).","next(V2, V3) :- baby_rooster(V0, V2, V3).","bus(V2, V4) :- guan(V0, V2, V4), not rotisserie(V0, V2, V4).","arson(V0, V1, V2) :- - comedian(V0, V1, V2), not -europe(V0, V1, V2).","- dry(V0, V0, V4) :- atmosphere(V0, V2, V4), not rotisserie(V0, V2, V4).","- opera(V4) :- atmosphere(V0, V2, V4), not rotisserie(V0, V2, V4).","- comedian(V0, V0, V2) :- atmosphere(V0, V2, V4), not rotisserie(V0, V2, V4).","- sport(V1, V2, V4) :- - diversion(V1, V2, V4).","- beef_neck(V2, V3, V2) :- next(V2, V3).","europe(V2, V3, V2) :- next(V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_3_6_9_7_8_0.5_1.0_3_3_4","seed":3,"num_facts":8,"num_rules":10,"num_related_predicates":18,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"P9(\"Anthony\", \"Teresa\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P10(\"Thomas\", \"Teresa\", \"Jose\").","P11(\"Samantha\", \"Thomas\", \"Jose\").","P12(\"Samantha\", \"Thomas\", \"Jose\").","P13(\"Samantha\", \"Jose\").","P14(\"Samantha\", \"Jose\").","P15(\"Thomas\", \"Teresa\", \"Jose\").","- P16(\"Anthony\", \"Teresa\", \"Jose\").","P17(\"Thomas\", \"Teresa\", \"Jose\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["P9(V0, V3) :- P0(V3), P5(V0, V1, V2), - P16(V0, V3, V4).","P0(V3) :- P1(V4), P6(V0, V1, V4), P15(V2, V3, V4).","P1(V4) :- P10(V2, V3, V4), not -P15(V2, V3, V4), not -P17(V2, V3, V4).","P2(V2, V3, V4) :- P10(V2, V3, V4), not -P15(V2, V3, V4), not -P17(V2, V3, V4).","- P3(V4, V4) :- P10(V2, V3, V4), not -P15(V2, V3, V4), not -P17(V2, V3, V4).","- P4(V2, V2, V4) :- P10(V2, V3, V4), not -P15(V2, V3, V4), not -P17(V2, V3, V4).","P5(V1, V1, V1) :- P2(V1, V3, V4), not -P7(V1, V3, V4), not -P8(V1, V3, V4).","P6(V4, V1, V4) :- - P3(V1, V4), not -P13(V1, V4), not -P14(V1, V4).","P7(V1, V4, V4) :- - P3(V1, V4), not -P13(V1, V4), not -P14(V1, V4).","P8(V1, V1, V4) :- - P4(V1, V2, V4), not -P11(V1, V2, V4), not -P12(V1, V2, V4)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_64_7_11_8_11_0.5_1.0_5_3_4","seed":64,"num_facts":10,"num_rules":12,"num_related_predicates":22,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" P11(\"Ashley\", \"Sergio\", \"Jeffery\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P12(\"Jeffery\", \"Amanda\").","- P13(\"Ashley\", \"Amanda\").","P14(\"Ashley\", \"Amanda\").","- P15(\"Ashley\", \"Sergio\", \"Tiffany\").","P16(\"Sergio\", \"Amanda\", \"Tiffany\").","P17(\"Sergio\", \"Amanda\", \"Tiffany\").","P18(\"Sergio\", \"Amanda\", \"Tiffany\").","P19(\"Sergio\", \"Amanda\", \"Tiffany\").","P20(\"Ashley\", \"Amanda\").","- P21(\"Ashley\", \"Amanda\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- P11(V0, V1, V2) :- P0(V0), - P3(V4), - P4(V1, V2), P7(V2, V3), not P15(V0, V1, V4).","P0(V3) :- P7(V2, V3), not -P12(V2, V3).","P1(V3, V3) :- P7(V2, V3), not -P12(V2, V3).","P2(V2, V2) :- P7(V2, V3), not -P12(V2, V3).","- P3(V3) :- P1(V0, V3), not -P8(V0, V3), not -P9(V0, V3), not -P10(V0, V3), not -P14(V0, V3).","- P4(V3, V0) :- - P13(V0, V3), not -P14(V0, V3), not -P20(V0, V3), not P21(V0, V3).","- P5(V3) :- - P13(V0, V3), not -P14(V0, V3), not -P20(V0, V3), not P21(V0, V3).","P6(V0, V3, V3) :- - P13(V0, V3), not -P14(V0, V3), not -P20(V0, V3), not P21(V0, V3).","P7(V3, V3) :- - P5(V4), P6(V1, V3, V4).","P8(V3, V3) :- - P5(V4), P6(V1, V3, V4).","P9(V4, V3) :- P6(V1, V3, V4), not -P16(V1, V3, V4), not -P17(V1, V3, V4), not -P18(V1, V3, V4), not -P19(V1, V3, V4).","P10(V2, V2) :- P2(V1, V2)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_47_9_11_5_7_0.5_1.0_5_1_2","seed":47,"num_facts":8,"num_rules":12,"num_related_predicates":20,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" illness(\"Amber\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- basket_oak.","time_unit(\"Amber\").","- song(\"Robert\").","cone.","- cupule.","beak(\"Amber\").","- fruit.","residence(\"Amber\")."],"noisy_facts":["- skull(\"Robert\").","- hyoid(\"Robert\").","- bare_bone(\"Robert\").","- lundehund.","screen.","- gladiolus(\"Robert\").","- mogul_empire(\"James\").","- cere."],"min_fact_dicts_for_query":["- basket_oak.","cone.","- cupule.","beak(\"Amber\")."],"noiseless_rules":["- illness(V1) :- - air_sac(V1), not -condition(V1), not -oak(V1), not -residence(V1).","- air_sac(V1) :- reproductive_structure(V1), not -chestnut_oak(V1), not -beak(V1).","- safety(V2) :- acorn(V2), not -live_oak(V2).","reproductive_structure(V1) :- - basket_oak, cone, - cupule, beak(V1), not fruit.","acorn(V1) :- - basket_oak, cone, - cupule, beak(V1), not fruit.","dwarf_chinkapin_oak(V1) :- - basket_oak, cone, - cupule, beak(V1), not fruit.","- spanish_oak(V1) :- time_unit(V1).","live_oak(V2) :- - song(V2).","- roots(V2) :- - song(V2).","chestnut_oak(V2) :- dwarf_chinkapin_oak(V2), not basket_oak.","condition(V2) :- - safety(V2), not roots(V2).","oak(V1) :- - spanish_oak(V1)."],"noisy_rules":{"a":["illness(V1) :- safety(V2), - live_oak(V2), - chestnut_oak(V1).","illness(V1) :- air_sac(V1), - live_oak(V2), not condition(V1), not oak(V1)."],"b":["- residence(V1) :- not acorn(V2), - live_oak(V2), illness(V1).","fruit(V1) :- illness(V1)."],"c":["- oak(V1) :- - acorn(V2), spanish_oak(V1), - live_oak(V2), not chestnut_oak(V1), not condition(V1).","fruit(V1) :- safety(V2), not acorn(V2), not dwarf_chinkapin_oak(V2), spanish_oak(V1), - condition(V1)."],"d":["- beak(V2) :- not -safety(V2), not acorn(V2), - dwarf_chinkapin_oak(V2), not cere, not lundehund.","song(V1) :- spanish_oak(V1), screen."],"e":["empire(V0) :- - mogul_empire(V0).","bone(V2) :- not bare_bone(V2), - gladiolus(V2), - skull(V2), - hyoid(V2)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_56_8_9_4_7_0.5_1.0_5_1_2","seed":56,"num_facts":8,"num_rules":10,"num_related_predicates":18,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.4285714285714286,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"cut(\"Amanda\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- pork_loin.","- beefsteak(\"Amanda\").","round(\"Amanda\").","good_exercise.","bacon_strip.","- gammon(\"Amanda\").","flitch.","- bacon_rind."],"noisy_facts":["sofabed(\"Amanda\").","- pillow(\"Amanda\").","payment(\"Amanda\").","bed(\"Amanda\").","replacement_cost(\"Amanda\").","skinnerian.","mattress(\"Amanda\").","- bed_sheet(\"Amanda\").","beef_neck(\"Amanda\").","- beef_loin(\"Amanda\")."],"min_fact_dicts_for_query":["- pork_loin.","bacon_strip.","- gammon(\"Amanda\")."],"noiseless_rules":["cut(V2) :- cut_of_pork(V2), not -shin(V2), not -cut_of_beef(V2), not -saddle(V2).","- bacon(V2) :- - pork_loin, bacon_strip, - gammon(V2), not -flitch, not bacon_rind.","canadian_bacon(V2) :- - pork_loin, bacon_strip, - gammon(V2), not -flitch, not bacon_rind.","- prosciutto(V2) :- - pork_loin, bacon_strip, - gammon(V2), not -flitch, not bacon_rind.","cut_of_pork(V1) :- - bacon(V1), not ham(V1).","shin(V2) :- canadian_bacon(V2), not steak(V2).","- steak(V2) :- - beefsteak(V2).","cut_of_beef(V2) :- round(V2).","saddle(V2) :- - prosciutto(V2), not steak(V2), not gammon(V2).","- ham(V2) :- - prosciutto(V2), not -good_exercise."],"noisy_rules":{"a":["- cut(V2) :- bacon(V1), prosciutto(V2), not shin(V2), not -steak(V2), not saddle(V2).","- cut(V2) :- bacon(V1), - cut_of_pork(V2), not cut_of_beef(V2)."],"b":["- shin(V2) :- - cut(V2).","- cut_of_pork(V2) :- - cut_of_pork(V2), not cut(V2)."],"c":["- shin(V2) :- - canadian_bacon(V2), steak(V2), - saddle(V2), ham(V1).","bacon(V2) :- - canadian_bacon(V2), - cut_of_pork(V2), steak(V2)."],"d":["- cut_of_beef(V2) :- prosciutto(V2), - cut_of_pork(V2), - beef_loin(V2), beef_neck(V2).","pork_loin(V1) :- bacon(V1), - canadian_bacon(V2), ham(V1), not -skinnerian."],"e":["- sleep_on(V2) :- bed(V2), - bed_sheet(V2), not -mattress(V2), - pillow(V2), sofabed(V2).","cost(V2) :- payment(V2), not -replacement_cost(V2)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_61_6_8_7_8_0.5_1.0_3_3_4","seed":61,"num_facts":8,"num_rules":9,"num_related_predicates":17,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"P8(\"Cassandra\", \"Christopher\", \"Dale\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P9(\"Cassandra\", \"Rebecca\").","P10(\"Christopher\", \"Dale\").","P11(\"Cassandra\", \"Christopher\", \"Kevin\").","- P12(\"Christopher\", \"Dale\", \"Kevin\").","- P13(\"Christopher\", \"Kevin\").","- P14(\"Christopher\", \"Kevin\").","P15(\"Kevin\", \"Rebecca\").","P16(\"Cassandra\", \"Christopher\", \"Kevin\")."],"noisy_facts":["- P17(\"Cassandra\", \"Christopher\", \"Rebecca\").","- P20(\"Cassandra\", \"Dale\", \"Kevin\").","P24(\"Dale\", \"Kevin\", \"Rebecca\").","- P19(\"Cassandra\", \"Kevin\").","P23(\"Christopher\", \"Dale\")."],"min_fact_dicts_for_query":["- P9(\"Cassandra\", \"Rebecca\").","P10(\"Christopher\", \"Dale\").","P15(\"Kevin\", \"Rebecca\").","P16(\"Cassandra\", \"Christopher\", \"Kevin\")."],"noiseless_rules":["P8(V0, V1, V2) :- - P1(V0, V1), P3(V1, V2, V3), not P7(V1, V2, V3).","P0(V0, V1, V4) :- P4(V0, V2), P5(V0, V1, V4), - P12(V1, V2, V3).","- P1(V0, V1) :- - P9(V0, V4), P15(V3, V4), P16(V0, V1, V3).","P2(V1, V3) :- - P9(V0, V4), P15(V3, V4), P16(V0, V1, V3).","P3(V1, V2, V3) :- - P6(V0, V3), P10(V1, V2), not -P11(V0, V1, V3).","P4(V0, V2) :- - P6(V0, V3), P10(V1, V2), not -P11(V0, V1, V3).","P5(V1, V1, V3) :- P2(V1, V3), not P13(V1, V3), not P14(V1, V3).","- P6(V3, V3) :- P2(V1, V3), not P13(V1, V3), not P14(V1, V3).","- P7(V1, V3, V3) :- P0(V0, V1, V4), P11(V0, V1, V3)."],"noisy_rules":{"a":["- P8(V1, V1, V2) :- P7(V1, V2, V3).","- P8(V0, V1, V2) :- - P3(V1, V2, V3), - P5(V0, V1, V4), not -P7(V1, V2, V3)."],"b":["P12(V1, V2, V3) :- - P3(V1, V2, V3), - P8(V0, V1, V2).","P14(V1, V3) :- - P2(V1, V3), - P8(V0, V1, V2)."],"c":["- P10(V1, V4) :- - P5(V0, V1, V4), P6(V0, V3).","P6(V0, V3) :- - P2(V1, V3), - P5(V0, V1, V4)."],"d":["P14(V1, V3) :- - P0(V0, V1, V4), P6(V0, V3), - P17(V0, V1, V4).","- P18(V0, V1) :- P6(V0, V3), P7(V1, V2, V3), - P19(V0, V3)."],"e":["P21(V0, V2) :- - P20(V0, V2, V3).","- P22(V1, V2) :- P23(V1, V2), P24(V2, V3, V4)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_19_8_10_10_13_0.5_1.0_5_3_4","seed":19,"num_facts":12,"num_rules":11,"num_related_predicates":23,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.7142857142857144,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" bovid(\"Carrie\", \"Jennifer\", \"Donald\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- trotter(\"Carrie\", \"Jennifer\", \"Donald\").","- beef_loin(\"Carrie\", \"Jennifer\", \"Donald\").","ruminant(\"Carrie\", \"Jennifer\", \"Donald\").","ewe(\"Carrie\", \"Jennifer\", \"Donald\").","- ground_beef(\"Carrie\", \"Jennifer\", \"Donald\").","antelope(\"Carrie\", \"Jennifer\", \"Donald\").","tank(\"Derrick\", \"Carrie\", \"Donald\").","- bucket(\"Derrick\", \"Carrie\", \"Donald\").","- mouthful(\"Derrick\", \"Carrie\", \"Donald\").","- vagina(\"Nicholas\").","property(\"Derrick\", \"Donald\", \"Nicholas\").","extent(\"Carrie\", \"Jennifer\", \"Donald\")."],"noisy_facts":["council(\"Derrick\", \"Carrie\", \"Nicholas\").","- capital(\"Derrick\", \"Jennifer\", \"Donald\").","- withers(\"Derrick\", \"Carrie\", \"Donald\").","county_town(\"Derrick\", \"Jennifer\", \"Nicholas\").","- finches(\"Derrick\", \"Carrie\", \"Donald\")."],"min_fact_dicts_for_query":["- trotter(\"Carrie\", \"Jennifer\", \"Donald\").","antelope(\"Carrie\", \"Jennifer\", \"Donald\")."],"noiseless_rules":["- bovid(V1, V2, V3) :- goat(V3), antelope(V1, V2, V3).","sheep(V3, V1, V3) :- - trotter(V1, V2, V3), not -ruminant(V1, V2, V3), not -ewe(V1, V2, V3), not ground_beef(V1, V2, V3), not -antelope(V1, V2, V3).","- ox(V3) :- - trotter(V1, V2, V3), not -ruminant(V1, V2, V3), not -ewe(V1, V2, V3), not ground_beef(V1, V2, V3), not -antelope(V1, V2, V3).","goat(V3) :- sheep(V0, V1, V3), not containerful(V0, V1, V3).","teacup(V0, V1, V3) :- indefinite_quantity(V3), bovine(V4), - vagina(V4), property(V0, V3, V4), extent(V1, V2, V3).","- containerful(V0, V1, V3) :- teacup(V0, V1, V3), not can(V0, V1, V3), not -tank(V0, V1, V3), not bucket(V0, V1, V3), not mouthful(V0, V1, V3).","- beef(V2) :- - beef_loin(V1, V2, V3), not ground_beef(V1, V2, V3).","indefinite_quantity(V3) :- - beef_loin(V1, V2, V3), not ground_beef(V1, V2, V3).","- can(V0, V0, V0) :- - beef(V0).","cattle(V0, V0, V0) :- - beef(V0).","bovine(V4) :- - ox(V3), indefinite_quantity(V3), cattle(V0, V3, V4)."],"noisy_rules":{"a":["bovid(V1, V1, V3) :- - goat(V3), - teacup(V0, V1, V3), - indefinite_quantity(V3).","bovid(V1, V4, V3) :- - sheep(V0, V1, V3), not teacup(V0, V1, V3), - indefinite_quantity(V3), not cattle(V0, V3, V4), - bovine(V4)."],"b":["can(V0, V1, V3) :- - sheep(V0, V1, V3), containerful(V0, V1, V3), - indefinite_quantity(V3), bovid(V1, V2, V3).","- ruminant(V1, V2, V3) :- bovid(V1, V2, V3)."],"c":["trotter(V1, V1, V3) :- - teacup(V0, V1, V3).","- indefinite_quantity(V3) :- - sheep(V0, V1, V3), ox(V3), not goat(V3), not teacup(V0, V1, V3), containerful(V0, V1, V3)."],"d":["beef_loin(V1, V1, V3) :- not goat(V3), not -containerful(V0, V1, V3), can(V0, V1, V3), - finches(V0, V1, V3).","ox(V3) :- can(V0, V1, V3), not withers(V0, V1, V3)."],"e":["government(V3) :- council(V0, V1, V4), - capital(V0, V2, V3).","seat(V0, V2) :- county_town(V0, V2, V4)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_87_8_10_5_7_0.5_1.0_3_2_3","seed":87,"num_facts":8,"num_rules":11,"num_related_predicates":19,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.7142857142857142,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" P10(\"Jennifer\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P11(\"Sandra\", \"Amy\").","- P12(\"Sandra\", \"Melissa\").","- P13(\"Melissa\").","- P14(\"Melissa\", \"Jennifer\").","- P15(\"Jennifer\", \"Amy\").","P16(\"Sandra\", \"Amy\").","- P17(\"Jennifer\", \"Amy\").","- P18(\"Sandra\", \"Melissa\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P11(\"Sandra\", \"Amy\").","- P12(\"Sandra\", \"Melissa\").","- P14(\"Melissa\", \"Jennifer\").","- P15(\"Jennifer\", \"Amy\").","P16(\"Sandra\", \"Amy\").","- P17(\"Jennifer\", \"Amy\")."],"noiseless_rules":["- P10(V2) :- P0(V2), - P4(V0, V1), not -P5(V1, V2).","P0(V2) :- P11(V0, V3), P16(V0, V3), - P17(V2, V3).","- P1(V1) :- - P12(V0, V1), - P14(V1, V2), - P15(V2, V3).","P2(V0, V1) :- - P12(V0, V1), - P14(V1, V2), - P15(V2, V3).","- P3(V0, V2) :- - P12(V0, V1), - P14(V1, V2), - P15(V2, V3).","- P4(V1, V1) :- - P1(V1), not P6(V1), not -P9(V1).","P5(V1, V2) :- - P7(V1, V2), not -P8(V1, V2).","- P6(V1) :- P9(V1), not P13(V1).","- P7(V1, V1) :- P9(V1), not P13(V1).","P8(V1, V1) :- P2(V0, V1), not P18(V0, V1).","P9(V1) :- - P3(V0, V2), - P18(V0, V1)."],"noisy_rules":{}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_54_8_9_3_4_0.5_1.0_3_1_2","seed":54,"num_facts":6,"num_rules":10,"num_related_predicates":16,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"bovid(\"Mark\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["fire(\"Susan\").","cattle(\"Susan\").","bomb(\"Susan\").","ox.","- brahman.","chick(\"Susan\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["bovid(V0) :- - sheep(V0), not -bovine(V0), not -goat(V0).","- sheep(V0) :- withers(V0).","- hot(V1) :- fire(V1), not -cattle(V1), not -chick(V1).","hurt_people(V1) :- fire(V1), not -cattle(V1), not -chick(V1).","bovine(V1) :- cattle(V1), not -ox, not brahman.","horn(V1) :- cattle(V1), not -ox, not brahman.","temporal_bone(V1) :- - hot(V1).","- destroy_city(V1) :- bomb(V1).","goat(V0) :- horn(V0).","withers(V1) :- hurt_people(V1), not -temporal_bone(V1), not destroy_city(V1)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_54_10_15_14_15_0.5_1.0_5_2_3","seed":54,"num_facts":18,"num_rules":16,"num_related_predicates":34,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.888888888888889,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"hemisphere(\"Madison\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- forehead(\"Johnny\", \"Michael\").","bridge(\"Michael\", \"Madison\").","proposition(\"Michael\").","smoke_bomb(\"Johnny\", \"Charles\").","- executive_branch(\"Johnny\", \"Madison\").","kenosis(\"Johnny\", \"Madison\").","- indian_ocean(\"Michael\", \"Charles\").","tendon(\"Madison\", \"Charles\").","- design(\"Michael\", \"Madison\").","soda_can(\"Michael\", \"Madison\").","- godchild(\"Michael\", \"Madison\").","crash_on_aircraft_roadway(\"Johnny\", \"Charles\").","- inherence(\"Michael\", \"Madison\").","engine(\"Michael\", \"Madison\").","sparkle(\"Michael\", \"Madison\").","- hangar_queen(\"Michael\", \"Madison\").","- market(\"Michael\", \"Charles\").","- stroke(\"Madison\", \"Charles\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- forehead(\"Johnny\", \"Michael\").","- inherence(\"Michael\", \"Madison\")."],"noiseless_rules":["hemisphere(V2) :- fishbowl(V0, V2), not social_activity(V0, V2), not big_church(V0, V2).","- chopped_steak(V1, V3) :- - transposition(V0, V1), birthday_treat(V1, V3).","- friction(V0, V1) :- - transposition(V0, V1), birthday_treat(V1, V3).","fishbowl(V0, V2) :- - forehead(V0, V1), - inherence(V1, V2).","- impressing_guests(V1, V2) :- - forehead(V0, V1), - inherence(V1, V2).","- sleeping(V2) :- bridge(V1, V2), not inherence(V1, V2), not -engine(V1, V2), not -sparkle(V1, V2), not hangar_queen(V1, V2).","- smelling_bottle(V1, V2) :- bridge(V1, V2), not inherence(V1, V2), not -engine(V1, V2), not -sparkle(V1, V2), not hangar_queen(V1, V2).","- transposition(V0, V1) :- proposition(V1), - executive_branch(V0, V2), kenosis(V0, V2), - indian_ocean(V1, V3), not -tendon(V2, V3).","front_bench(V2, V3) :- proposition(V1), - executive_branch(V0, V2), kenosis(V0, V2), - indian_ocean(V1, V3), not -tendon(V2, V3).","- pubic_hair(V0, V3) :- proposition(V1), - executive_branch(V0, V2), kenosis(V0, V2), - indian_ocean(V1, V3), not -tendon(V2, V3).","birthday_treat(V2, V3) :- - sleeping(V3), front_bench(V2, V3).","- social_activity(V0, V2) :- - chopped_steak(V1, V3), - impressing_guests(V1, V2), - pubic_hair(V0, V3), not garment_cutter(V0, V3), not -crash_on_aircraft_roadway(V0, V3).","- garment_cutter(V0, V1) :- - friction(V0, V1), not -pipe(V0, V1).","- big_church(V2, V2) :- - smelling_bottle(V1, V2), not -ethos(V1, V2), not design(V1, V2), not -soda_can(V1, V2), not godchild(V1, V2).","pipe(V0, V1) :- smoke_bomb(V0, V3), - market(V1, V3), - stroke(V2, V3).","ethos(V1, V2) :- smoke_bomb(V0, V3), - market(V1, V3), - stroke(V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_87_6_8_8_8_0.5_1.0_3_2_3","seed":87,"num_facts":10,"num_rules":9,"num_related_predicates":19,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"P8(\"Albert\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P9(\"Stacey\", \"Melissa\").","- P10(\"Albert\", \"Madeline\").","P11(\"Albert\", \"Madeline\").","- P12(\"Albert\", \"Madeline\").","- P13(\"Melissa\", \"Madeline\").","- P14(\"Albert\", \"Madeline\").","- P15(\"Melissa\", \"Madeline\").","P16(\"Stacey\", \"Melissa\").","- P17(\"Stacey\", \"Melissa\").","- P18(\"Melissa\", \"Albert\")."],"noisy_facts":["- P21(\"Melissa\", \"Madeline\").","P22(\"Albert\", \"Madeline\").","- P24(\"Stacey\", \"Melissa\").","P25(\"Stacey\", \"Albert\").","- P19(\"Melissa\")."],"min_fact_dicts_for_query":["P9(\"Stacey\", \"Melissa\").","- P10(\"Albert\", \"Madeline\").","- P13(\"Melissa\", \"Madeline\").","- P14(\"Albert\", \"Madeline\")."],"noiseless_rules":["P8(V2) :- - P3(V2), P5(V0, V1), not P18(V1, V2).","P0(V1, V3) :- P9(V0, V1), - P13(V1, V3), - P14(V2, V3).","- P1(V1) :- P9(V0, V1), - P13(V1, V3), - P14(V2, V3).","P2(V0, V1) :- P9(V0, V1), - P13(V1, V3), - P14(V2, V3).","- P3(V2) :- - P10(V2, V3), not -P11(V2, V3), not P12(V2, V3).","- P4(V1, V3) :- P0(V1, V3), not P6(V1, V3), not P15(V1, V3).","P5(V1, V1) :- - P1(V1), - P4(V1, V3), not P7(V1).","- P6(V1, V1) :- P2(V0, V1), not -P16(V0, V1), not P17(V0, V1).","- P7(V1) :- P2(V0, V1), not -P16(V0, V1), not P17(V0, V1)."],"noisy_rules":{"a":["- P8(V2) :- P3(V2).","- P8(V0) :- - P5(V0, V1), not -P7(V1)."],"b":["P13(V1, V2) :- P1(V1), - P8(V2).","- P5(V1, V1) :- P1(V1), - P8(V2)."],"c":["P14(V0, V1) :- - P5(V0, V1), P7(V1).","- P16(V1, V1) :- P4(V1, V3)."],"d":["- P9(V3, V1) :- - P0(V1, V3).","P14(V1, V3) :- P4(V1, V3), P7(V1), not P19(V1)."],"e":["- P20(V3) :- - P21(V1, V3), P22(V2, V3).","P23(V1) :- - P24(V0, V1), P25(V0, V2)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_19_6_8_7_10_0.5_1.0_5_2_3","seed":19,"num_facts":8,"num_rules":9,"num_related_predicates":17,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"P8(\"Isaac\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P9(\"Isaac\", \"Melissa\").","P10(\"Isaac\", \"Melissa\").","- P11(\"Isaac\", \"Melissa\").","P12(\"Isaac\", \"Patricia\").","- P13(\"Melissa\", \"Sarah\").","- P14(\"Isaac\", \"Sarah\").","- P15(\"Isaac\", \"Sarah\").","- P16(\"Isaac\", \"Sarah\")."],"noisy_facts":["P28(\"Patricia\", \"Sarah\").","P23(\"Sarah\").","- P20(\"Isaac\", \"Sarah\").","- P25(\"Patricia\", \"Sarah\").","P18(\"Isaac\", \"Sarah\").","- P26(\"Sarah\").","- P24(\"Melissa\", \"Sarah\").","P17(\"Isaac\", \"Sarah\").","- P27(\"Isaac\", \"Sarah\").","- P22(\"Melissa\")."],"min_fact_dicts_for_query":["P9(\"Isaac\", \"Melissa\").","P10(\"Isaac\", \"Melissa\").","- P11(\"Isaac\", \"Melissa\").","P12(\"Isaac\", \"Patricia\").","- P13(\"Melissa\", \"Sarah\")."],"noiseless_rules":["P8(V0) :- - P0(V0, V3), not -P2(V0, V3).","- P0(V0, V3) :- P9(V0, V1), P10(V0, V1), - P11(V0, V1), P12(V0, V2), - P13(V1, V3).","- P1(V1) :- P9(V0, V1), P10(V0, V1), - P11(V0, V1), P12(V0, V2), - P13(V1, V3).","P2(V0, V3) :- - P0(V0, V3), not -P3(V0, V3), not -P5(V0, V3), not -P6(V0, V3).","P3(V0, V3) :- - P0(V0, V3), P7(V0, V1), not -P9(V0, V1).","P4(V0, V3) :- - P0(V0, V3), P7(V0, V1), not -P9(V0, V1).","P5(V0, V3) :- P4(V0, V3), not P14(V0, V3), not P15(V0, V3), not P16(V0, V3).","P6(V1, V1) :- - P1(V1).","P7(V1, V1) :- - P1(V1)."],"noisy_rules":{"a":["- P8(V0) :- P1(V1), - P3(V0, V3), not P7(V0, V1).","- P8(V0) :- - P3(V0, V3), - P4(V0, V3), not P6(V0, V3)."],"b":["- P7(V0, V0) :- - P5(V0, V3), not P6(V0, V3), not P8(V0).","P11(V0, V1) :- - P7(V0, V1), not P8(V0)."],"c":["- P3(V0, V3) :- P1(V1), - P6(V0, V3).","- P3(V0, V3) :- P0(V0, V3), P1(V1), not P4(V0, V3), - P5(V0, V3), - P7(V0, V1)."],"d":["- P19(V0) :- P0(V0, V3), - P2(V0, V3), - P3(V0, V3), not -P17(V0, V3), P18(V0, V3).","P1(V3) :- P0(V0, V3), not P4(V0, V3), - P5(V0, V3), - P6(V0, V3), - P20(V0, V3)."],"e":["P21(V1, V3) :- not P22(V1), P23(V3), - P24(V1, V3), - P25(V2, V3).","P29(V0, V3) :- - P26(V3), - P27(V0, V3), P28(V2, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_13_7_10_8_8_0.5_1.0_3_2_3","seed":13,"num_facts":10,"num_rules":11,"num_related_predicates":21,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P10(\"Monica\", \"Jessica\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P11(\"Monica\", \"Gregory\").","- P12(\"Monica\", \"Jessica\").","P13(\"Monica\", \"Gregory\").","P14(\"Monica\", \"Gregory\").","- P15(\"Monica\", \"Latoya\").","P16(\"Latoya\").","P17(\"Latoya\").","- P18(\"Jessica\").","- P19(\"Jessica\").","- P20(\"Monica\", \"Latoya\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- P11(\"Monica\", \"Gregory\").","- P12(\"Monica\", \"Jessica\").","P14(\"Monica\", \"Gregory\").","- P15(\"Monica\", \"Latoya\").","- P20(\"Monica\", \"Latoya\")."],"noiseless_rules":["- P10(V0, V1) :- P0(V2), P3(V0, V1), not P5(V1, V2).","P0(V2) :- - P1(V2), P8(V0, V1), not -P13(V0, V2).","- P1(V2) :- - P11(V0, V2), - P20(V0, V3).","P2(V3) :- - P11(V0, V2), - P20(V0, V3).","P3(V0, V1) :- - P12(V0, V1), P14(V0, V2), - P15(V0, V3).","- P4(V3) :- - P12(V0, V1), P14(V0, V2), - P15(V0, V3).","- P5(V3, V3) :- - P4(V3), not -P6(V3), not -P9(V3).","P6(V3) :- P2(V3), not -P16(V3), not -P17(V3).","- P7(V3) :- P2(V3), not -P16(V3), not -P17(V3).","P8(V1, V1) :- - P7(V1), not P18(V1), not P19(V1).","P9(V1) :- - P7(V1), not P18(V1), not P19(V1)."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_39_10_11_5_8_0.5_1.0_3_2_3","seed":39,"num_facts":10,"num_rules":12,"num_related_predicates":22,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.2222222222222223,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P11(\"John\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P12(\"Julie\", \"Carlos\").","P13(\"Julie\").","- P14(\"Julie\", \"John\").","- P15(\"Julie\", \"Carlos\").","P16(\"Julie\").","P17(\"Julie\", \"John\").","- P18(\"Julie\", \"John\").","- P19(\"John\").","- P20(\"Carlos\", \"John\").","- P21(\"Carlos\", \"John\")."],"noisy_facts":["P30(\"John\").","- P29(\"John\").","- P25(\"John\").","P24(\"Julie\").","- P22(\"Julie\", \"John\").","P31(\"Julie\", \"John\").","- P26(\"Julie\", \"John\").","- P23(\"John\")."],"min_fact_dicts_for_query":["- P12(\"Julie\", \"Carlos\").","- P14(\"Julie\", \"John\")."],"noiseless_rules":["- P11(V3) :- P1(V3), P2(V0, V2), not -P4(V0, V3).","- P0(V0, V3) :- - P3(V0), P6(V0, V3).","P1(V3) :- - P3(V0), P6(V0, V3).","P2(V0, V2) :- - P12(V0, V2).","- P3(V0) :- - P12(V0, V2).","P4(V0, V3) :- - P0(V0, V3), not P7(V0, V3), not -P9(V0, V3).","P5(V0, V3) :- P13(V0), - P18(V0, V3).","P6(V0, V3) :- - P14(V0, V3), not -P17(V0, V3), not P18(V0, V3).","- P7(V0, V3) :- P5(V0, V3), not P8(V0, V3).","- P8(V3, V3) :- P1(V3), not -P10(V3), not P19(V3).","P9(V0, V3) :- - P15(V0, V2), - P20(V2, V3), not P21(V2, V3).","P10(V0) :- - P3(V0), not -P16(V0)."],"noisy_rules":{"a":["P11(V3) :- - P2(V0, V2), - P6(V0, V3), not P10(V3).","P11(V3) :- P8(V0, V3), not P9(V0, V3)."],"b":["- P6(V0, V3) :- - P6(V0, V3), P11(V3).","P0(V0, V3) :- - P6(V0, V3), P11(V3)."],"c":["- P1(V3) :- not -P0(V0, V3), P8(V0, V3), not P9(V0, V3).","P12(V0, V3) :- - P9(V0, V3), not P10(V3)."],"d":["P0(V0, V3) :- - P4(V0, V3), - P5(V0, V3), - P22(V0, V3).","- P1(V3) :- - P10(V3), - P23(V3)."],"e":["P27(V0, V3) :- not -P24(V0), not P25(V3), - P26(V0, V3).","- P28(V3) :- - P29(V3), P30(V3), P31(V0, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_41_4_5_3_6_0.5_1.0_3_2_3","seed":41,"num_facts":4,"num_rules":6,"num_related_predicates":10,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.3333333333333333,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" P5(\"Evan\", \"Nicole\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P6(\"Evan\", \"Evelyn\").","P7(\"April\", \"Nicole\").","- P8(\"Evelyn\", \"Nicole\").","- P9(\"April\", \"Nicole\")."],"noisy_facts":["- P15(\"Evelyn\", \"Nicole\").","P18(\"Evan\", \"Evelyn\").","- P19(\"Evan\", \"Nicole\").","- P17(\"Evan\", \"Evelyn\").","P11(\"Evan\", \"Nicole\").","P13(\"Evan\", \"Evelyn\").","- P10(\"Evan\", \"Nicole\").","- P12(\"Evelyn\")."],"min_fact_dicts_for_query":["- P6(\"Evan\", \"Evelyn\").","P7(\"April\", \"Nicole\")."],"noiseless_rules":["- P5(V0, V3) :- P0(V3), P1(V0, V3), - P4(V1, V3).","P0(V3) :- - P2(V1, V3), not P4(V1, V3), not P9(V1, V3).","P1(V0, V3) :- - P6(V0, V2), P7(V1, V3), not P8(V2, V3).","- P2(V1, V3) :- - P6(V0, V2), P7(V1, V3), not P8(V2, V3).","- P3(V2) :- - P6(V0, V2), P7(V1, V3), not P8(V2, V3).","- P4(V1, V3) :- - P3(V2), P7(V1, V3), not P8(V2, V3)."],"noisy_rules":{"a":["P5(V3, V3) :- not P0(V3), P2(V1, V3), P3(V2).","P5(V2, V2) :- P3(V2)."],"b":["P2(V3, V3) :- P5(V0, V3).","P3(V3) :- P2(V1, V3), P5(V0, V3)."],"c":["P6(V1, V1) :- - P0(V3), P2(V1, V3), not -P4(V1, V3).","- P0(V3) :- P2(V1, V3)."],"d":["P3(V3) :- - P1(V0, V3), P4(V1, V3), - P10(V0, V3).","P2(V0, V3) :- - P0(V3), - P1(V0, V3), not -P11(V0, V3)."],"e":["P14(V3) :- - P12(V2), P13(V0, V2), - P15(V2, V3).","- P16(V0, V3) :- - P17(V0, V2), P18(V0, V2), - P19(V0, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_58_5_4_3_4_0.5_1.0_5_1_2","seed":58,"num_facts":5,"num_rules":5,"num_related_predicates":10,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":3,"target_query":" P4(\"Russell\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["P5(\"Daniel\").","P6(\"Daniel\").","P7(\"Daniel\").","- P8(\"Daniel\").","- P9(\"Daniel\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- P4(V2) :- - P2(V2), not -P3(V2).","P0(V0) :- P5(V0).","P1(V0) :- P6(V0), not -P7(V0), not P8(V0), not P9(V0).","- P2(V0) :- P0(V0).","P3(V0) :- P1(V0), not -P5(V0)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_36_10_10_10_13_0.5_1.0_3_2_3","seed":36,"num_facts":15,"num_rules":11,"num_related_predicates":26,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"parameter(\"Alex\", \"Valerie\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- view(\"Alex\", \"Kayla\").","sulfur(\"Valerie\").","nybble(\"Alex\").","very_independant_animals(\"Alex\", \"Kayla\").","gurgle(\"Alex\").","noble(\"Alex\", \"Kayla\").","moving_to_music_on_ice(\"Alex\", \"Aaron\").","bridle(\"Kayla\", \"Aaron\").","- banana_quit(\"Alex\").","- one_head(\"Valerie\", \"Aaron\").","bass_guitar(\"Valerie\", \"Aaron\").","- charm(\"Alex\", \"Kayla\").","- ununpentium(\"Kayla\", \"Valerie\").","impeller(\"Alex\").","catch_bird(\"Alex\")."],"noisy_facts":["experimental_procedure(\"Alex\", \"Kayla\").","marmot(\"Alex\", \"Kayla\").","oak(\"Alex\", \"Kayla\").","homogenized_milk(\"Kayla\").","shampoo(\"Alex\")."],"min_fact_dicts_for_query":["- view(\"Alex\", \"Kayla\").","- charm(\"Alex\", \"Kayla\").","- ununpentium(\"Kayla\", \"Valerie\")."],"noiseless_rules":["parameter(V0, V2) :- - teaching(V0), - charm(V0, V1), - ununpentium(V1, V2).","feeling(V0) :- - view(V0, V1).","- crooning(V0, V1) :- - view(V0, V1).","- teaching(V0) :- feeling(V0), not -mit(V0), not banana_quit(V0).","eating_food(V1, V0) :- - crooning(V0, V1), not -late_afternoon(V0, V1), not -noble(V0, V1).","mit(V0) :- adversary(V2), - skiing(V0, V2), - continental_breakfast(V0, V3).","adversary(V2) :- sulfur(V2), - one_head(V2, V3), not -bass_guitar(V2, V3).","- natural_fiber(V0, V0) :- nybble(V0), not banana_quit(V0), not -catch_bird(V0).","- skiing(V0, V1) :- eating_food(V1, V3), - natural_fiber(V0, V3), not banana_quit(V0).","late_afternoon(V0, V1) :- very_independant_animals(V0, V1), moving_to_music_on_ice(V0, V3), not -bridle(V1, V3).","- continental_breakfast(V0, V0) :- gurgle(V0), not -impeller(V0), not -catch_bird(V0)."],"noisy_rules":{"a":["- parameter(V0, V1) :- - late_afternoon(V0, V1).","- parameter(V0, V2) :- teaching(V0), - adversary(V2)."],"b":["natural_fiber(V0, V2) :- - feeling(V0), skiing(V0, V2), - parameter(V0, V2).","- impeller(V0) :- - parameter(V0, V2)."],"c":["- gurgle(V0) :- - feeling(V0), natural_fiber(V0, V3), - late_afternoon(V0, V1).","- catch_bird(V0) :- teaching(V0), - adversary(V2), not -skiing(V0, V2)."],"d":["snare_drum(V0, V0) :- not mit(V0), shampoo(V0).","- very_independant_animals(V0, V1) :- - eating_food(V1, V3), - late_afternoon(V0, V1), not -oak(V0, V1)."],"e":["- vending_stand(V0, V1) :- homogenized_milk(V1), marmot(V0, V1).","not_good_food_for_dogs(V0) :- experimental_procedure(V0, V1)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_26_9_13_12_15_0.5_1.0_5_3_4","seed":26,"num_facts":15,"num_rules":14,"num_related_predicates":29,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":"P13(\"Samantha\", \"Anthony\", \"Michelle\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P14(\"Kevin\").","P15(\"Samantha\", \"Anthony\").","- P16(\"Kevin\", \"Michelle\").","- P17(\"Samantha\", \"Michelle\").","P18(\"Mark\", \"Anthony\", \"Michelle\").","P19(\"Samantha\", \"Kevin\", \"Michelle\").","- P20(\"Samantha\", \"Kevin\", \"Michelle\").","- P21(\"Kevin\").","- P22(\"Mark\", \"Kevin\", \"Anthony\").","- P23(\"Samantha\", \"Kevin\", \"Michelle\").","P24(\"Samantha\", \"Kevin\", \"Michelle\").","- P25(\"Samantha\").","- P26(\"Mark\", \"Anthony\", \"Michelle\").","- P27(\"Mark\", \"Anthony\", \"Michelle\").","- P28(\"Mark\", \"Anthony\", \"Michelle\")."],"noisy_facts":["P31(\"Samantha\", \"Michelle\").","- P36(\"Mark\", \"Kevin\", \"Michelle\").","- P29(\"Mark\", \"Kevin\", \"Michelle\").","P34(\"Mark\", \"Kevin\", \"Anthony\").","- P33(\"Mark\", \"Samantha\", \"Michelle\").","- P32(\"Samantha\", \"Michelle\")."],"min_fact_dicts_for_query":["- P14(\"Kevin\").","- P17(\"Samantha\", \"Michelle\").","P18(\"Mark\", \"Anthony\", \"Michelle\")."],"noiseless_rules":["P13(V1, V3, V4) :- P5(V1, V3), P10(V2, V4), not -P11(V3, V4).","- P0(V2, V4) :- P12(V2), - P21(V2), - P22(V0, V2, V3), - P23(V1, V2, V4), not -P24(V1, V2, V4).","- P1(V1, V3) :- - P14(V2), - P17(V1, V4), P18(V0, V3, V4), not -P19(V1, V2, V4), not P20(V1, V2, V4).","P2(V0, V2, V4) :- - P14(V2), - P17(V1, V4), P18(V0, V3, V4), not -P19(V1, V2, V4), not P20(V1, V2, V4).","- P3(V1) :- - P14(V2), - P17(V1, V4), P18(V0, V3, V4), not -P19(V1, V2, V4), not P20(V1, V2, V4).","- P4(V0, V3, V4) :- - P14(V2), - P17(V1, V4), P18(V0, V3, V4), not -P19(V1, V2, V4), not P20(V1, V2, V4).","P5(V1, V3) :- - P1(V1, V3), not P6(V1, V3), not P8(V1, V3).","- P6(V1, V3) :- - P1(V1, V3), not -P15(V1, V3).","- P7(V4, V4) :- - P0(V2, V4), not P16(V2, V4).","- P8(V4, V2) :- P2(V0, V2, V4).","- P9(V2, V2, V4) :- P2(V0, V2, V4).","P10(V2, V4) :- P2(V0, V2, V4).","P11(V4, V4) :- - P0(V2, V4), - P3(V1), not P7(V1, V4), not P9(V1, V2, V4), not P25(V1).","P12(V2) :- - P4(V0, V3, V4), P10(V2, V4), not P26(V0, V3, V4), not P27(V0, V3, V4), not P28(V0, V3, V4)."],"noisy_rules":{"a":["- P13(V2, V2, V2) :- - P12(V2).","- P13(V1, V3, V4) :- P4(V0, V3, V4), - P5(V1, V3), P8(V1, V3), P9(V1, V2, V4)."],"b":["P8(V1, V3) :- not -P1(V1, V3), - P5(V1, V3), - P13(V1, V3, V4).","P3(V1) :- P8(V1, V3), - P13(V1, V3, V4)."],"c":["P14(V2) :- P0(V2, V4).","- P15(V1, V3) :- P4(V0, V3, V4), P8(V1, V3), not -P9(V1, V2, V4), - P10(V2, V4)."],"d":["P0(V2, V4) :- not P2(V0, V2, V4), P8(V1, V3), not P11(V3, V4), - P29(V0, V2, V4).","- P15(V4, V3) :- - P11(V3, V4)."],"e":["- P30(V0, V2) :- P31(V1, V4), - P32(V1, V4), not P33(V0, V1, V4), P34(V0, V2, V3).","- P35(V0, V2) :- - P36(V0, V2, V4)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_59_5_8_4_7_0.5_1.0_5_3_4","seed":59,"num_facts":5,"num_rules":9,"num_related_predicates":14,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" insemination(\"Tyler\", \"Pamela\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- cpu(\"Tyler\").","quarter_section(\"Pamela\").","- december(\"Tyler\", \"Pamela\", \"Carmen\").","winter_in_tree(\"Donna\", \"Judy\", \"Pamela\").","- cypriniform_fish(\"Donna\", \"Judy\", \"Pamela\")."],"noisy_facts":["- emirate(\"Tyler\", \"Judy\", \"Carmen\").","itching(\"Tyler\", \"Judy\", \"Carmen\").","- pastry(\"Judy\", \"Pamela\", \"Carmen\").","- carbon_atom(\"Tyler\", \"Carmen\").","alternative_birth(\"Tyler\", \"Donna\", \"Judy\").","tithe_barn(\"Tyler\", \"Donna\", \"Carmen\").","getting_food_to_feed_to_others(\"Judy\")."],"min_fact_dicts_for_query":["- cpu(\"Tyler\").","quarter_section(\"Pamela\").","- december(\"Tyler\", \"Pamela\", \"Carmen\").","winter_in_tree(\"Donna\", \"Judy\", \"Pamela\")."],"noiseless_rules":["- insemination(V0, V3) :- dinner_bell(V0), - build(V1, V4), - broken(V0, V1, V4), broth(V0, V3, V4), not gown(V1, V3, V4).","dinner_bell(V0) :- - cpu(V0), quarter_section(V3), - december(V0, V3, V4), winter_in_tree(V1, V2, V3), not cypriniform_fish(V1, V2, V3).","sniffer(V0, V3, V4) :- - cpu(V0), quarter_section(V3), - december(V0, V3, V4), winter_in_tree(V1, V2, V3), not cypriniform_fish(V1, V2, V3).","- build(V1, V4) :- - cpu(V0), quarter_section(V3), - december(V0, V3, V4), winter_in_tree(V1, V2, V3), not cypriniform_fish(V1, V2, V3).","dumb_bomb(V3, V4) :- - cpu(V0), quarter_section(V3), - december(V0, V3, V4), winter_in_tree(V1, V2, V3), not cypriniform_fish(V1, V2, V3).","- broken(V0, V1, V4) :- sniffer(V0, V3, V4), - build(V1, V4).","- erectile_tissue(V4) :- sniffer(V0, V3, V4), - build(V1, V4).","broth(V0, V3, V4) :- sniffer(V0, V3, V4), - build(V1, V4).","- gown(V4, V3, V4) :- dumb_bomb(V3, V4), not erectile_tissue(V4)."],"noisy_rules":{"a":["insemination(V0, V3) :- - dinner_bell(V0), build(V1, V4), erectile_tissue(V4), - broth(V0, V3, V4), not -gown(V1, V3, V4).","insemination(V0, V3) :- build(V1, V4), broken(V0, V1, V4), erectile_tissue(V4), gown(V1, V3, V4)."],"b":["cpu(V0) :- - sniffer(V0, V3, V4), not -build(V1, V4), broken(V0, V1, V4), not -insemination(V0, V3).","december(V0, V3, V4) :- - sniffer(V0, V3, V4), build(V1, V4), - dumb_bomb(V3, V4), - broth(V0, V3, V4), insemination(V0, V3)."],"c":["gown(V1, V3, V4) :- - dinner_bell(V0), broken(V0, V1, V4), - broth(V0, V3, V4).","gown(V1, V3, V4) :- - sniffer(V0, V3, V4), build(V1, V4)."],"d":["- quarter_section(V3) :- - sniffer(V0, V3, V4), broken(V0, V1, V4), tithe_barn(V0, V1, V4).","erectile_tissue(V4) :- build(V1, V4)."],"e":["- fly_faster_than_propeller_driven_planes(V2) :- - carbon_atom(V0, V4), alternative_birth(V0, V1, V2), - emirate(V0, V2, V4), itching(V0, V2, V4).","music(V3, V4) :- getting_food_to_feed_to_others(V2), - pastry(V2, V3, V4)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_9_9_13_10_10_0.5_1.0_3_3_4","seed":9,"num_facts":13,"num_rules":14,"num_related_predicates":27,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P13(\"Jason\", \"Joshua\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P14(\"Danielle\", \"Joshua\").","- P15(\"Danielle\", \"Charles\").","P16(\"Charles\").","P17(\"Danielle\", \"Lisa\", \"Charles\").","P18(\"Danielle\", \"Charles\", \"Jason\").","- P19(\"Danielle\", \"Charles\").","P20(\"Danielle\", \"Charles\", \"Jason\").","P21(\"Danielle\", \"Charles\", \"Jason\").","P22(\"Lisa\", \"Charles\", \"Joshua\").","- P23(\"Joshua\").","- P24(\"Joshua\").","- P25.","- P26(\"Danielle\", \"Lisa\", \"Jason\")."],"noisy_facts":["- P34(\"Lisa\", \"Joshua\").","P30(\"Danielle\", \"Charles\").","- P27(\"Danielle\", \"Charles\").","- P32(\"Lisa\", \"Jason\", \"Joshua\").","- P28(\"Danielle\", \"Charles\").","P31(\"Charles\", \"Jason\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- P13(V3, V4) :- - P2(V0, V2), - P6(V0, V4), - P12(V0, V2, V3).","- P0(V4) :- P14(V0, V4), P21(V0, V2, V3), P22(V1, V2, V4).","- P1(V0, V2) :- P14(V0, V4), P21(V0, V2, V3), P22(V1, V2, V4).","- P2(V0, V2) :- - P7(V0, V3), - P10(V0, V2, V3), not -P20(V0, V2, V3).","- P3(V4, V4, V4) :- - P0(V4), not P23(V4), not P24(V4).","- P4(V4) :- - P0(V4), not P23(V4), not P24(V4).","P5(V4, V4, V4) :- - P0(V4), not P23(V4), not P24(V4).","- P6(V0, V3) :- - P3(V0, V2, V3), not -P8(V0, V2, V3), not -P11(V0, V2, V3).","- P7(V0, V3) :- - P3(V0, V2, V3), not -P8(V0, V2, V3), not -P11(V0, V2, V3).","P8(V0, V2, V3) :- - P15(V0, V2), - P26(V0, V1, V3).","- P9(V1) :- - P15(V0, V2), - P26(V0, V1, V3).","- P10(V1, V1, V1) :- - P4(V1), not P9(V1), not P25.","P11(V0, V2, V3) :- - P1(V0, V2), P5(V2, V3, V4), not P19(V0, V2).","- P12(V0, V2, V3) :- P16(V2), P17(V0, V1, V2), P18(V0, V2, V3)."],"noisy_rules":{"a":["P13(V3, V4) :- P1(V0, V2), - P5(V2, V3, V4), not P8(V0, V2, V3).","P13(V3, V4) :- P2(V0, V2), P6(V0, V4), - P11(V0, V2, V3)."],"b":["P19(V0, V2) :- P1(V0, V2), - P11(V0, V2, V3), P13(V3, V4).","P7(V0, V3) :- P6(V0, V4), - P11(V0, V2, V3), not -P13(V3, V4)."],"c":["P10(V0, V2, V3) :- P0(V4), P3(V0, V2, V3).","- P16(V2) :- P0(V4), P2(V0, V2)."],"d":["P6(V0, V4) :- P1(V0, V2), - P5(V2, V3, V4), - P27(V0, V2).","P19(V0, V2) :- P2(V0, V2), P10(V0, V2, V3), - P28(V0, V2)."],"e":["- P29(V1, V4) :- P30(V0, V2), P31(V2, V3), - P32(V1, V3, V4).","P33(V4) :- - P34(V1, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_68_9_9_9_12_0.5_1.0_5_3_4","seed":68,"num_facts":14,"num_rules":10,"num_related_predicates":24,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" mental_health(\"Jeffrey\", \"Rachael\", \"Bryce\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- showing_care(\"Jason\", \"Sarah\", \"Bryce\").","third_rater(\"Jason\", \"Sarah\").","detection(\"Rachael\").","- sit_down(\"Rachael\", \"Bryce\").","- sticktight(\"Jason\", \"Sarah\", \"Bryce\").","beechnut(\"Jeffrey\", \"Rachael\").","having_clothes_clean(\"Sarah\", \"Bryce\").","- floor_cover(\"Jeffrey\", \"Rachael\", \"Bryce\").","- english_bar(\"Jason\", \"Sarah\").","overactivity(\"Jason\", \"Sarah\").","- copy(\"Jason\", \"Sarah\").","- antiquity(\"Rachael\", \"Bryce\").","life(\"Jason\", \"Jeffrey\", \"Sarah\").","- hall(\"Jason\", \"Jeffrey\", \"Bryce\")."],"noisy_facts":["role(\"Jason\", \"Jeffrey\").","playing_basketball(\"Jason\", \"Sarah\").","- sign(\"Jason\", \"Sarah\").","- poop(\"Jeffrey\").","main(\"Sarah\", \"Bryce\").","toe(\"Rachael\", \"Bryce\").","collar(\"Jeffrey\", \"Sarah\", \"Rachael\").","- beer_bottle(\"Jeffrey\", \"Rachael\").","- habit(\"Jason\", \"Sarah\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- mental_health(V1, V3, V4) :- employee(V2), same(V0, V1), beechnut(V1, V3), having_clothes_clean(V2, V4), not floor_cover(V1, V3, V4).","- tortoiseshell(V0, V2) :- - showing_care(V0, V2, V4).","employee(V2) :- - tortoiseshell(V0, V2), not elastic_tissue(V0, V2), not -learning_about_clothes(V0, V2), not -transit_ticket(V0, V2), not structure(V0, V2).","same(V0, V0) :- - tortoiseshell(V0, V2), not -pudding(V0, V2), not english_bar(V0, V2), not -overactivity(V0, V2), not copy(V0, V2).","- elastic_tissue(V0, V2) :- - tortoiseshell(V0, V2), not -pudding(V0, V2), not english_bar(V0, V2), not -overactivity(V0, V2), not copy(V0, V2).","learning_about_clothes(V0, V2) :- painter(V0, V2).","pudding(V0, V2) :- third_rater(V0, V2), not copy(V0, V2).","transit_ticket(V0, V2) :- detection(V3), - antiquity(V3, V4), life(V0, V1, V2), not hall(V0, V1, V4).","painter(V3, V3) :- - sit_down(V3, V4), not antiquity(V3, V4).","- structure(V0, V2) :- - sticktight(V0, V2, V4)."],"noisy_rules":{"a":["mental_health(V0, V0, V0) :- - pudding(V0, V2).","mental_health(V0, V0, V0) :- not learning_about_clothes(V0, V2), - pudding(V0, V2), not painter(V0, V2)."],"b":["english_bar(V0, V2) :- not employee(V2), not -elastic_tissue(V0, V2), - painter(V0, V2), mental_health(V1, V3, V4).","tortoiseshell(V0, V2) :- tortoiseshell(V0, V2), - learning_about_clothes(V0, V2), - painter(V0, V2), mental_health(V1, V3, V4)."],"c":["sticktight(V2, V2, V2) :- - employee(V2).","- life(V0, V1, V2) :- - employee(V2), - same(V0, V1), - learning_about_clothes(V0, V2), - transit_ticket(V0, V2), not painter(V0, V2)."],"d":["- third_rater(V0, V2) :- not same(V0, V1), - pudding(V0, V2), role(V0, V1).","- third_rater(V0, V2) :- tortoiseshell(V0, V2), not -structure(V0, V2), not habit(V0, V2), not sign(V0, V2)."],"e":["- bar_bit(V0, V1, V4) :- - poop(V1), playing_basketball(V0, V2), - beer_bottle(V1, V3), main(V2, V4), not -toe(V3, V4).","- daughter(V1) :- collar(V1, V2, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_81_9_11_11_14_0.5_1.0_5_1_2","seed":81,"num_facts":13,"num_rules":12,"num_related_predicates":25,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.125,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"P11(\"Kathy\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P12.","P13(\"Kathy\").","- P14(\"Kathy\").","- P15.","P16.","- P17.","- P18.","P19.","P20.","- P21.","P22(\"Kathy\").","P23(\"Kathy\").","- P24(\"Kathy\")."],"noisy_facts":["- P28(\"Kathy\").","P29(\"Maria\").","P30(\"Maria\").","P25.","P26."],"min_fact_dicts_for_query":["P12.","- P14(\"Kathy\")."],"noiseless_rules":["P11(V2) :- - P0(V2), not P4(V2), not -P7(V2).","- P0(V2) :- - P1(V2), not -P6(V2), not P9(V2), not P14(V2).","- P1(V2) :- P5(V2), not -P6(V2).","- P2(V2) :- P12, - P14(V2), not P15, not -P16, not P17.","P3(V2) :- P12, - P14(V2), not P15, not -P16, not P17.","- P4(V2) :- - P0(V2), not -P13(V2), not -P22(V2), not -P23(V2), not P24(V2).","P5(V2) :- - P10(V2).","P6(V1) :- - P2(V1).","P7(V0) :- P3(V0), not P18, not -P19, not -P20, not P21.","P8(V0) :- P3(V0), not P18, not -P19, not -P20, not P21.","- P9(V1) :- P8(V1).","- P10(V1) :- P8(V1)."],"noisy_rules":{"a":["- P11(V2) :- P1(V2), - P3(V0), not -P9(V2).","- P11(V2) :- not -P0(V2), P1(V2), - P3(V0), P10(V2)."],"b":["P18(V2) :- P0(V2), P2(V1), not -P4(V2), not P11(V2).","- P20(V2) :- P0(V2), - P3(V0), not -P9(V2), not P11(V2)."],"c":["- P7(V2) :- P1(V2), P10(V2).","P10(V2) :- P2(V1), - P3(V0), - P6(V2), not P7(V2)."],"d":["- P12(V1) :- P0(V2), - P3(V0), - P8(V1), not -P9(V2), P25.","- P22(V2) :- P2(V1), not P6(V2), - P8(V1), P10(V2), P26."],"e":["P27(V2) :- - P28(V2).","- P31(V1) :- P29(V1), not -P30(V1)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_77_10_13_12_15_0.5_1.0_5_3_4","seed":77,"num_facts":16,"num_rules":14,"num_related_predicates":30,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"loriot(\"Matthew\", \"Robert\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["thinking(\"Briana\").","output(\"Briana\", \"Teresa\").","- gaur(\"Matthew\", \"Teresa\").","- origin(\"Matthew\", \"Briana\", \"Teresa\").","ammunition(\"Matthew\", \"Tiffany\", \"Briana\").","benthos(\"Matthew\", \"Tiffany\", \"Briana\").","- rhinorrhea(\"Matthew\", \"Tiffany\", \"Briana\").","restaurant_dining_area(\"Matthew\", \"Tiffany\", \"Briana\").","- ovum(\"Teresa\").","- acting(\"Matthew\", \"Teresa\").","- barber_chair(\"Briana\", \"Teresa\").","- bioscope(\"Teresa\", \"Robert\").","- vermin(\"Matthew\", \"Briana\").","hub(\"Teresa\", \"Robert\").","- markup(\"Matthew\", \"Tiffany\", \"Teresa\").","- flies(\"Tiffany\", \"Briana\")."],"noisy_facts":["draft(\"Matthew\").","calgary(\"Tiffany\", \"Briana\", \"Teresa\").","- drug(\"Tiffany\", \"Briana\").","puzzle(\"Matthew\", \"Briana\").","caregiver(\"Tiffany\").","- forge(\"Matthew\", \"Tiffany\", \"Teresa\").","dentine(\"Teresa\").","- getting_worm(\"Matthew\", \"Tiffany\", \"Briana\").","- test(\"Briana\", \"Teresa\", \"Robert\")."],"min_fact_dicts_for_query":["thinking(\"Briana\").","output(\"Briana\", \"Teresa\").","- origin(\"Matthew\", \"Briana\", \"Teresa\").","ammunition(\"Matthew\", \"Tiffany\", \"Briana\").","- ovum(\"Teresa\").","- acting(\"Matthew\", \"Teresa\").","- barber_chair(\"Briana\", \"Teresa\").","- bioscope(\"Teresa\", \"Robert\").","- vermin(\"Matthew\", \"Briana\").","hub(\"Teresa\", \"Robert\").","- flies(\"Tiffany\", \"Briana\")."],"noiseless_rules":["loriot(V0, V4) :- - piston(V4), - waiting_tables(V0, V1, V2), preposition(V0, V1, V3), not angel(V0, V2, V4).","- piston(V4) :- thinking(V2), - ovum(V3), - acting(V0, V3), - barber_chair(V2, V3), - bioscope(V3, V4).","action(V0, V3) :- - northeast(V1), muskellunge(V0, V2), - vermin(V0, V2), hub(V3, V4), not markup(V0, V1, V3).","opera_star(V0, V2) :- - northeast(V1), muskellunge(V0, V2), - vermin(V0, V2), hub(V3, V4), not markup(V0, V1, V3).","- waiting_tables(V0, V1, V2) :- asterisk(V0, V2), - jejunity(V0, V3), - flies(V1, V2).","preposition(V0, V1, V3) :- action(V0, V3), - waiting_tables(V0, V1, V2), not -teaching_other_people(V0, V1, V2), not -benthos(V0, V1, V2).","- northeast(V2) :- output(V2, V3), not barber_chair(V2, V3).","images_embossed_on_both_sides(V2, V3) :- output(V2, V3), not barber_chair(V2, V3).","acanthion(V0) :- - gaur(V0, V3).","- angel(V0, V2, V3) :- images_embossed_on_both_sides(V2, V3), ammunition(V0, V1, V2), not -benthos(V0, V1, V2), not rhinorrhea(V0, V1, V2), not -restaurant_dining_area(V0, V1, V2).","asterisk(V0, V2) :- images_embossed_on_both_sides(V2, V3), ammunition(V0, V1, V2), not -benthos(V0, V1, V2), not rhinorrhea(V0, V1, V2), not -restaurant_dining_area(V0, V1, V2).","muskellunge(V0, V2) :- - origin(V0, V2, V3).","- jejunity(V0, V3) :- - origin(V0, V2, V3).","teaching_other_people(V0, V2, V2) :- opera_star(V0, V2), not -acanthion(V0)."],"noisy_rules":{"a":["- loriot(V0, V4) :- northeast(V1), - images_embossed_on_both_sides(V2, V3), angel(V0, V2, V4), not -jejunity(V0, V3).","- loriot(V0, V4) :- piston(V4), - asterisk(V0, V2)."],"b":["- benthos(V0, V0, V2) :- not -piston(V4), - opera_star(V0, V2), not acanthion(V0), not asterisk(V0, V2), - loriot(V0, V4).","angel(V0, V0, V4) :- - preposition(V0, V1, V3), - loriot(V0, V4)."],"c":["barber_chair(V4, V4) :- piston(V4).","jejunity(V0, V4) :- piston(V4), - asterisk(V0, V2), - teaching_other_people(V0, V1, V2)."],"d":["- thinking(V2) :- piston(V4), - action(V0, V3), waiting_tables(V0, V1, V2), - getting_worm(V0, V1, V2).","markup(V0, V1, V3) :- - opera_star(V0, V2), waiting_tables(V0, V1, V2), - acanthion(V0), jejunity(V0, V3), not -draft(V0)."],"e":["throng(V0, V2) :- puzzle(V0, V2), calgary(V1, V2, V3).","cheeks(V0, V2) :- caregiver(V1), dentine(V3), - drug(V1, V2), - forge(V0, V1, V3), - test(V2, V3, V4)."]}},"num_min_facts_for_query":11,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_35_5_5_4_7_0.5_1.0_5_2_3","seed":35,"num_facts":6,"num_rules":6,"num_related_predicates":12,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"dark(\"Jennifer\", \"Isabel\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- ink(\"Jennifer\", \"John\").","- nut_and_bolt(\"John\").","- shower_curtain(\"John\").","- cob(\"John\").","sickness(\"John\").","seafood_newburg(\"John\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["dark(V1, V3) :- - curtain(V1, V2), - night(V1, V3).","- eyelet(V2) :- - ink(V1, V2).","- curtain(V2, V2) :- - eyelet(V2), not festoon(V2), not shower_curtain(V2).","stratus(V2) :- - eyelet(V2), not festoon(V2), not shower_curtain(V2).","- festoon(V2) :- - nut_and_bolt(V2), not shower_curtain(V2), not cob(V2), not -sickness(V2), not -seafood_newburg(V2).","- night(V2, V2) :- stratus(V2), not shower_curtain(V2), not -sickness(V2)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_69_10_10_9_10_0.5_1.0_3_2_3","seed":69,"num_facts":13,"num_rules":11,"num_related_predicates":24,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.7777777777777777,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"edible_fruit(\"Michael\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- traveling_faster(\"Gabriel\").","- product(\"Ashley\").","update(\"Benjamin\", \"Ashley\").","- neuroblast(\"Michael\", \"Ashley\").","- sarcophagus.","equines.","number_of_songs_on(\"Benjamin\", \"Ashley\").","makeing_music(\"Benjamin\", \"Ashley\").","binomial(\"Gabriel\", \"Ashley\").","- proportional(\"Gabriel\", \"Ashley\").","- pear(\"Michael\", \"Gabriel\").","- apple(\"Michael\", \"Gabriel\").","cool(\"Gabriel\", \"Ashley\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["edible_fruit(V0) :- - berry(V0), - pear(V0, V2), not apple(V0, V2).","- bier(V2) :- - traveling_faster(V2).","quantity(V2, V3) :- - product(V3), binomial(V2, V3), not proportional(V2, V3).","burden(V2, V2) :- - bier(V2), not sarcophagus, not -equines.","- coffin(V2, V2) :- - bier(V2), not sarcophagus, not -equines.","cell(V3, V3) :- embryonic_cell(V3), not product(V3).","- berry(V0) :- burden(V0, V2), cell(V0, V3), not -grave(V0, V2).","grave(V3, V3) :- - coffin(V1, V3), not -gravestone(V1, V3), not -mastaba(V1, V3).","gravestone(V1, V3) :- update(V1, V3).","embryonic_cell(V3) :- - neuroblast(V0, V3), number_of_songs_on(V1, V3), not -makeing_music(V1, V3).","mastaba(V2, V3) :- quantity(V2, V3), not -cool(V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_2_8_9_5_6_0.5_1.0_3_2_3","seed":2,"num_facts":8,"num_rules":10,"num_related_predicates":18,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"sclerite(\"Nathan\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["hang_from_noose(\"Nathan\", \"Bryan\").","dogs_as_pets(\"Nathan\", \"Daniel\").","tea(\"Sean\", \"Daniel\").","phones(\"Sean\").","product(\"Nathan\", \"Bryan\").","machine_translation(\"Nathan\", \"Bryan\").","nut_collector(\"Nathan\", \"Daniel\").","red_fruit(\"Nathan\", \"Daniel\")."],"noisy_facts":[],"min_fact_dicts_for_query":["hang_from_noose(\"Nathan\", \"Bryan\").","dogs_as_pets(\"Nathan\", \"Daniel\").","tea(\"Sean\", \"Daniel\").","phones(\"Sean\").","product(\"Nathan\", \"Bryan\").","machine_translation(\"Nathan\", \"Bryan\").","nut_collector(\"Nathan\", \"Daniel\").","red_fruit(\"Nathan\", \"Daniel\")."],"noiseless_rules":["sclerite(V0) :- pull_carts(V0), jacket(V0, V2).","pull_carts(V0) :- hang_from_noose(V0, V1), product(V0, V1), machine_translation(V0, V1).","jax(V1) :- hang_from_noose(V0, V1), product(V0, V1), machine_translation(V0, V1).","dragee(V2) :- discovery(V1, V2).","jacket(V0, V2) :- opsonization(V2), dint(V0, V2), dogs_as_pets(V0, V3).","opsonization(V2) :- dragee(V2), bull(V2), phones(V2).","discovery(V1, V1) :- jax(V1), jonah_crab(V1).","dint(V0, V3) :- dogs_as_pets(V0, V3), nut_collector(V0, V3), red_fruit(V0, V3).","jonah_crab(V3) :- dogs_as_pets(V0, V3), nut_collector(V0, V3), red_fruit(V0, V3).","bull(V2) :- tea(V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_84_8_9_6_9_0.5_1.0_5_3_4","seed":84,"num_facts":8,"num_rules":10,"num_related_predicates":18,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"diner(\"David\", \"Melvin\", \"Keith\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["knife(\"Cathy\", \"David\", \"Lindsay\").","holding_soda(\"Cathy\", \"David\", \"Melvin\").","- garment_cutter(\"Cathy\", \"David\", \"Lindsay\").","gem_cutter(\"David\", \"Lindsay\", \"Keith\").","drill(\"Lindsay\", \"Melvin\", \"Keith\").","glass_cutter(\"Cathy\", \"David\", \"Lindsay\").","- customer(\"Cathy\", \"David\", \"Lindsay\").","eater(\"Cathy\", \"David\", \"Lindsay\")."],"noisy_facts":["- neck(\"Cathy\", \"Keith\").","leg(\"David\", \"Lindsay\", \"Keith\").","- completing_coursework(\"David\").","- sky(\"Cathy\", \"Lindsay\").","- ambulance(\"Cathy\").","- protection(\"Cathy\").","eye(\"Cathy\", \"David\", \"Melvin\").","head(\"Cathy\").","butcher(\"David\", \"Lindsay\").","- vestibule_of_ear(\"Cathy\", \"David\", \"Lindsay\").","- merit_badge(\"Cathy\", \"Lindsay\").","handiness(\"Cathy\")."],"min_fact_dicts_for_query":["knife(\"Cathy\", \"David\", \"Lindsay\").","- garment_cutter(\"Cathy\", \"David\", \"Lindsay\").","gem_cutter(\"David\", \"Lindsay\", \"Keith\").","drill(\"Lindsay\", \"Melvin\", \"Keith\")."],"noiseless_rules":["diner(V1, V3, V4) :- - cutter(V1, V2), - consumer(V3, V4), not -gem_cutter(V1, V2, V4).","- laser(V2, V3, V4) :- cut(V4), drill(V2, V3, V4).","chewer(V0, V1, V2) :- - skilled_worker(V0), knife(V0, V1, V2).","- cutter(V1, V2) :- knife(V0, V1, V2), - garment_cutter(V0, V1, V2), gem_cutter(V1, V2, V4), drill(V2, V3, V4), not -glass_cutter(V0, V1, V2).","cut(V4) :- knife(V0, V1, V2), - garment_cutter(V0, V1, V2), gem_cutter(V1, V2, V4), drill(V2, V3, V4), not -glass_cutter(V0, V1, V2).","- tool(V0, V1, V3) :- knife(V0, V1, V2), - garment_cutter(V0, V1, V2), gem_cutter(V1, V2, V4), drill(V2, V3, V4), not -glass_cutter(V0, V1, V2).","- tablemate(V0, V3) :- - tool(V0, V1, V3), not -arpeggio(V0, V1, V3).","- skilled_worker(V0) :- - tablemate(V0, V2).","arpeggio(V0, V1, V3) :- holding_soda(V0, V1, V3).","- consumer(V3, V4) :- - laser(V2, V3, V4), chewer(V0, V1, V2), not customer(V0, V1, V2), not -eater(V0, V1, V2)."],"noisy_rules":{"a":["- diner(V1, V3, V4) :- laser(V2, V3, V4), - arpeggio(V0, V1, V3), consumer(V3, V4).","- diner(V1, V3, V4) :- cutter(V1, V2), tool(V0, V1, V3), not -tablemate(V0, V2), - arpeggio(V0, V1, V3), consumer(V3, V4)."],"b":["- eater(V4, V1, V3) :- - diner(V1, V3, V4).","customer(V1, V1, V3) :- - diner(V1, V3, V4)."],"c":["- arpeggio(V4, V4, V4) :- - cut(V4).","- cut(V4) :- laser(V2, V3, V4), tablemate(V0, V2), not -skilled_worker(V0)."],"d":["skilled_worker(V2) :- cutter(V1, V2), butcher(V1, V2).","laser(V2, V2, V1) :- cutter(V1, V2), tablemate(V0, V2), skilled_worker(V0), - protection(V0), not -handiness(V0)."],"e":["- above(V2, V3, V4) :- head(V0), not sky(V0, V2), not neck(V0, V4), eye(V0, V1, V3), leg(V1, V2, V4).","- hospital(V0, V1, V2) :- - ambulance(V0), - completing_coursework(V1), - merit_badge(V0, V2), - vestibule_of_ear(V0, V1, V2)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_75_7_9_5_7_0.5_1.0_3_1_2","seed":75,"num_facts":7,"num_rules":10,"num_related_predicates":17,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.6666666666666667,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" draft(\"Bonnie\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- wool.","dry_dock(\"Bonnie\").","drama.","ox.","- shepherd(\"Bonnie\").","- ferrets.","farm."],"noisy_facts":[],"min_fact_dicts_for_query":["- wool.","- shepherd(\"Bonnie\")."],"noiseless_rules":["- draft(V1) :- check(V1), not trade_acceptance(V1), not -overdraft(V1).","- product(V1) :- - wool, - shepherd(V1).","- white(V1) :- - wool, - shepherd(V1).","- sheep(V1) :- - wool, - shepherd(V1).","check(V1) :- kite(V1), not -animals(V1).","- trade_acceptance(V1) :- - product(V1), not -animal(V1), not shepherd(V1).","kite(V1) :- - product(V1), not -dry_dock(V1).","overdraft(V0) :- - white(V0), not -drama, not -ox.","animals(V2) :- - sheep(V2), not ferrets, not -farm.","animal(V2) :- - sheep(V2), not ferrets, not -farm."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_24_4_3_3_6_0.5_1.0_3_3_4","seed":24,"num_facts":6,"num_rules":4,"num_related_predicates":10,"max_depth_of_rule_graph":1,"average_depth_of_rule_graph":1.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"P3(\"Samuel\", \"Ivan\", \"Chad\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P4(\"Samuel\", \"Ivan\", \"Chad\").","- P5(\"Samuel\", \"Ivan\", \"Chad\").","P6(\"Samuel\", \"Ivan\", \"Chad\").","- P7(\"Samuel\", \"Ivan\", \"Chad\").","P8(\"Samuel\", \"Ivan\", \"Chad\").","P9(\"Samuel\", \"Ivan\", \"Chad\")."],"noisy_facts":["- P10(\"Samuel\", \"Ivan\", \"Chad\").","P13(\"David\", \"Ivan\").","P14(\"Samuel\", \"Ivan\").","- P16(\"David\", \"Samuel\").","P11(\"Samuel\", \"Ivan\", \"Chad\").","- P17(\"Samuel\", \"Ivan\", \"Zachary\")."],"min_fact_dicts_for_query":["- P5(\"Samuel\", \"Ivan\", \"Chad\").","P6(\"Samuel\", \"Ivan\", \"Chad\")."],"noiseless_rules":["P3(V1, V2, V4) :- P0(V1, V4), - P1(V1, V2, V4), not -P2(V1, V2, V4).","P0(V1, V4) :- P2(V1, V2, V4), not P4(V1, V2, V4), not P5(V1, V2, V4).","- P1(V1, V2, V4) :- - P5(V1, V2, V4), not -P8(V1, V2, V4), not -P9(V1, V2, V4).","P2(V1, V2, V4) :- P6(V1, V2, V4), not P7(V1, V2, V4), not -P8(V1, V2, V4)."],"noisy_rules":{"a":["- P3(V1, V2, V4) :- not P0(V1, V4), P1(V1, V2, V4), - P2(V1, V2, V4).","- P3(V1, V2, V4) :- P1(V1, V2, V4)."],"b":["P7(V1, V2, V4) :- - P3(V1, V2, V4).","P1(V1, V2, V4) :- not -P1(V1, V2, V4), - P3(V1, V2, V4)."],"c":["P5(V1, V1, V4) :- - P0(V1, V4).","- P8(V1, V2, V4) :- - P0(V1, V4), P1(V1, V2, V4), - P2(V1, V2, V4)."],"d":["- P2(V1, V2, V4) :- not -P1(V1, V2, V4), - P10(V1, V2, V4).","P1(V1, V2, V4) :- - P2(V1, V2, V4), not -P11(V1, V2, V4)."],"e":["P12(V0, V1) :- P13(V0, V2), P14(V1, V2).","- P15(V0, V1) :- - P16(V0, V1), - P17(V1, V2, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_62_8_11_8_8_0.5_1.0_3_3_4","seed":62,"num_facts":10,"num_rules":12,"num_related_predicates":22,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":" bovid(\"Stacy\", \"Melinda\", \"Melissa\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["kitten(\"Stacy\", \"Donna\").","winery(\"Stacy\", \"Dennis\", \"Melinda\").","mouton(\"Stacy\", \"Dennis\").","perfumery(\"Stacy\", \"Melissa\", \"Donna\").","academy(\"Dennis\", \"Melinda\", \"Donna\").","wild_goat(\"Stacy\", \"Dennis\").","billy(\"Stacy\", \"Dennis\").","bunya_bunya(\"Dennis\", \"Melinda\", \"Melissa\").","cow(\"Dennis\", \"Melinda\", \"Melissa\").","chopped_steak(\"Melinda\", \"Melissa\", \"Donna\")."],"noisy_facts":[],"min_fact_dicts_for_query":["kitten(\"Stacy\", \"Donna\").","winery(\"Stacy\", \"Dennis\", \"Melinda\").","mouton(\"Stacy\", \"Dennis\").","perfumery(\"Stacy\", \"Melissa\", \"Donna\").","academy(\"Dennis\", \"Melinda\", \"Donna\").","wild_goat(\"Stacy\", \"Dennis\").","billy(\"Stacy\", \"Dennis\").","bunya_bunya(\"Dennis\", \"Melinda\", \"Melissa\").","cow(\"Dennis\", \"Melinda\", \"Melissa\").","chopped_steak(\"Melinda\", \"Melissa\", \"Donna\")."],"noiseless_rules":["bovid(V0, V2, V3) :- bovine(V0, V2), sheep(V0, V3), goat(V0, V2, V3).","trotter(V2) :- kitten(V0, V4), chopped_steak(V2, V3, V4).","bovine(V0, V2) :- cattle(V0, V2, V4).","sheep(V2, V2) :- trotter(V2), withers(V2), domestic_sheep(V2).","establishment(V1, V2, V3) :- winery(V0, V1, V2), perfumery(V0, V3, V4), academy(V1, V2, V4).","cotswold(V1, V4) :- winery(V0, V1, V2), perfumery(V0, V3, V4), academy(V1, V2, V4).","horn(V0, V1) :- winery(V0, V1, V2), perfumery(V0, V3, V4), academy(V1, V2, V4).","cattle(V1, V2, V2) :- establishment(V1, V2, V3), bunya_bunya(V1, V2, V3), cow(V1, V2, V3).","withers(V2) :- establishment(V1, V2, V3), bunya_bunya(V1, V2, V3), cow(V1, V2, V3).","lamb(V2, V1) :- establishment(V1, V2, V3), bunya_bunya(V1, V2, V3), cow(V1, V2, V3).","domestic_sheep(V4) :- cotswold(V1, V4), lamb(V0, V1), mouton(V0, V1).","goat(V0, V0, V1) :- horn(V0, V1), wild_goat(V0, V1), billy(V0, V1)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_32_10_15_11_13_0.5_1.0_5_3_4","seed":32,"num_facts":16,"num_rules":16,"num_related_predicates":32,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"P15(\"Shelby\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P16(\"Janet\").","P17(\"Christian\", \"Janet\").","- P18(\"Christian\", \"Shelby\", \"John\").","- P19(\"Shelby\", \"John\").","- P20(\"Michael\", \"Janet\").","P21(\"Michael\").","P22(\"Michael\").","P23(\"John\", \"Janet\").","P24(\"John\", \"Janet\").","P25(\"Christian\", \"Shelby\", \"John\").","P26(\"Michael\", \"Shelby\", \"Janet\").","- P27(\"Shelby\", \"Janet\").","P28(\"Christian\", \"Michael\", \"Janet\").","P29(\"Michael\", \"John\", \"Janet\").","P30(\"Michael\", \"John\", \"Janet\").","- P31(\"Michael\", \"Janet\")."],"noisy_facts":["P32(\"Michael\", \"Janet\").","- P34(\"Christian\", \"Shelby\", \"Janet\").","- P41(\"Christian\", \"John\", \"Janet\").","- P40(\"Christian\", \"Shelby\", \"John\").","P36(\"Christian\", \"Michael\").","- P38(\"Michael\", \"Shelby\", \"Janet\").","- P33(\"Michael\", \"Janet\").","- P35(\"Michael\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["P15(V2) :- P0(V3), P8(V1, V4), - P10(V0, V2, V4), not P12(V2, V3, V4).","P0(V3) :- P16(V4), P23(V3, V4), P24(V3, V4), P25(V0, V2, V3), P26(V1, V2, V4).","P1(V3) :- P16(V4), P23(V3, V4), P24(V3, V4), P25(V0, V2, V3), P26(V1, V2, V4).","P2(V1, V3, V4) :- P16(V4), P23(V3, V4), P24(V3, V4), P25(V0, V2, V3), P26(V1, V2, V4).","P3(V3, V4) :- P17(V0, V4), - P27(V2, V4), P28(V0, V1, V4), P29(V1, V3, V4), not -P30(V1, V3, V4).","- P4(V0, V1, V4) :- P17(V0, V4), - P27(V2, V4), P28(V0, V1, V4), P29(V1, V3, V4), not -P30(V1, V3, V4).","- P5(V1, V4) :- P17(V0, V4), - P27(V2, V4), P28(V0, V1, V4), P29(V1, V3, V4), not -P30(V1, V3, V4).","P6(V2, V3) :- - P18(V0, V2, V3).","- P7(V0, V2) :- - P18(V0, V2, V3).","P8(V3, V2) :- P6(V2, V3), not P19(V2, V3).","- P9(V2) :- P6(V2, V3), not P19(V2, V3).","- P10(V3, V2, V3) :- P6(V2, V3), not -P11(V2, V3), not -P13(V2, V3).","P11(V3, V3) :- P1(V3), P3(V3, V4).","- P12(V2, V2, V4) :- - P4(V0, V1, V4), - P7(V0, V2), not -P14(V0, V1, V4).","P13(V1, V1) :- - P5(V1, V4), not P20(V1, V4), not P31(V1, V4).","P14(V4, V1, V4) :- P2(V1, V3, V4), not P5(V1, V4), not P9(V1), not -P21(V1), not -P22(V1)."],"noisy_rules":{"a":["- P15(V1) :- not P2(V1, V3, V4), - P3(V3, V4), P4(V0, V1, V4).","- P15(V2) :- - P2(V1, V3, V4), not P3(V3, V4), not P8(V1, V4), - P13(V2, V3)."],"b":["P19(V2, V3) :- P4(V0, V1, V4), - P11(V2, V3), not P15(V2).","- P14(V0, V1, V4) :- - P2(V1, V3, V4), - P3(V3, V4), P4(V0, V1, V4), - P15(V2)."],"c":["- P17(V0, V4) :- P7(V0, V2), - P8(V1, V4), not -P10(V0, V2, V4).","- P30(V3, V3, V4) :- - P3(V3, V4), not -P7(V0, V2), P10(V0, V2, V4), not P13(V2, V3)."],"d":["- P16(V4) :- - P1(V3), - P3(V3, V4), P5(V1, V4), not -P32(V1, V4), not P33(V1, V4).","P9(V3) :- P10(V0, V2, V4), - P13(V2, V3), not P34(V0, V2, V4)."],"e":["- P37(V0, V2, V4) :- - P35(V1), P36(V0, V1), - P38(V1, V2, V4).","- P39(V2, V3) :- - P40(V0, V2, V3), - P41(V0, V3, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_41_10_14_13_15_0.5_1.0_5_2_3","seed":41,"num_facts":18,"num_rules":15,"num_related_predicates":33,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"P14(\"George\", \"Steven\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P15(\"George\", \"Manuel\").","- P16(\"Manuel\").","P17(\"Manuel\", \"Steven\").","P18(\"Manuel\", \"Steven\").","- P19(\"Manuel\", \"Steven\").","P20(\"George\", \"Manuel\").","- P21(\"George\", \"Steven\").","P22(\"Brandon\", \"Steven\").","- P23(\"Brandon\", \"Steven\").","P24(\"Manuel\", \"Steven\").","P25(\"Steven\").","- P26(\"Steven\").","P27(\"George\", \"Steven\").","- P28(\"Manuel\", \"Steven\").","- P29(\"George\", \"Brandon\").","P30(\"Manuel\", \"Steven\").","P31(\"Manuel\", \"Steven\").","- P32(\"Brandon\", \"Steven\")."],"noisy_facts":["P42(\"Brandon\", \"Steven\").","P39(\"Brandon\", \"Steven\").","- P33(\"George\", \"Steven\").","- P35(\"George\").","P41(\"George\", \"Brandon\").","P36(\"George\", \"Steven\").","P37(\"Manuel\", \"Steven\").","- P38(\"Manuel\", \"Steven\")."],"min_fact_dicts_for_query":["- P15(\"George\", \"Manuel\").","- P16(\"Manuel\").","P17(\"Manuel\", \"Steven\").","P20(\"George\", \"Manuel\").","- P21(\"George\", \"Steven\").","P22(\"Brandon\", \"Steven\").","P24(\"Manuel\", \"Steven\").","- P29(\"George\", \"Brandon\").","P30(\"Manuel\", \"Steven\")."],"noiseless_rules":["P14(V0, V3) :- - P0(V1), P2(V0, V1), P8(V0, V3), P12(V1, V2), not -P24(V1, V3).","- P0(V1) :- - P1(V0), P4(V0, V3), - P10(V1, V3), not -P13(V1, V3), not P28(V1, V3).","- P1(V0) :- - P5(V0), P11(V3), not -P25(V3), not P26(V3), not -P27(V0, V3).","P2(V0, V1) :- - P15(V0, V1), - P29(V0, V2), P30(V1, V3), not -P31(V1, V3), not P32(V2, V3).","P3(V0, V3) :- - P15(V0, V1), - P29(V0, V2), P30(V1, V3), not -P31(V1, V3), not P32(V2, V3).","P4(V0, V3) :- - P16(V1), P20(V0, V1), - P21(V0, V3), P22(V2, V3), not P23(V2, V3).","- P5(V0) :- - P16(V1), P20(V0, V1), - P21(V0, V3), P22(V2, V3), not P23(V2, V3).","- P6(V0, V1) :- - P16(V1), P20(V0, V1), - P21(V0, V3), P22(V2, V3), not P23(V2, V3).","- P7(V1, V3) :- - P16(V1), P20(V0, V1), - P21(V0, V3), P22(V2, V3), not P23(V2, V3).","P8(V0, V3) :- - P6(V0, V1), P9(V0, V1), P24(V1, V3).","P9(V0, V1) :- P3(V0, V3), - P7(V1, V3).","- P10(V1, V3) :- P17(V1, V3).","P11(V3) :- P17(V1, V3).","P12(V1, V3) :- - P7(V1, V3), not -P18(V1, V3).","P13(V1, V3) :- - P19(V1, V3)."],"noisy_rules":{"a":["- P14(V0, V2) :- P0(V1), - P9(V0, V1), - P12(V1, V2).","- P14(V0, V1) :- P5(V0), - P9(V0, V1)."],"b":["- P9(V0, V1) :- - P2(V0, V1), - P4(V0, V3), not -P5(V0), - P8(V0, V3), - P14(V0, V3).","P1(V0) :- - P2(V0, V1), not -P5(V0), - P8(V0, V3), - P11(V3), not P14(V0, V3)."],"c":["- P30(V1, V1) :- - P9(V0, V1).","- P17(V1, V3) :- P0(V1), - P2(V0, V1), - P4(V0, V3)."],"d":["- P3(V0, V3) :- - P8(V0, V3).","P26(V3) :- not P4(V0, V3), not P8(V0, V3), - P33(V0, V3)."],"e":["P34(V0, V2) :- - P35(V0), not -P36(V0, V3), not -P37(V1, V3), - P38(V1, V3), P39(V2, V3).","P40(V2) :- P41(V0, V2), P42(V2, V3)."]}},"num_min_facts_for_query":9,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_28_9_13_8_9_0.5_1.0_3_2_3","seed":28,"num_facts":11,"num_rules":14,"num_related_predicates":25,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.125,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":"P13(\"Earl\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P14(\"Stephanie\", \"Laurie\").","P15(\"Stephanie\", \"Laurie\").","P16(\"Earl\").","P17(\"Earl\", \"Laurie\").","- P18(\"Laurie\", \"David\").","- P19(\"David\").","- P20(\"David\").","P21(\"Laurie\").","P22(\"Laurie\").","P23(\"Laurie\", \"David\").","P24(\"Laurie\", \"David\")."],"noisy_facts":["- P28(\"Stephanie\", \"Earl\").","P29(\"Stephanie\", \"David\").","- P25(\"Stephanie\", \"Earl\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["P13(V1) :- P0(V1), - P4(V0, V1), - P5(V0, V2).","P0(V1) :- P6(V0, V3), P8(V0, V3), P11(V1, V3).","P1(V2, V0) :- - P5(V0, V2), not -P14(V0, V2).","P2(V2) :- - P5(V0, V2), not -P14(V0, V2).","P3(V2) :- P1(V2, V3), not P9(V2, V3).","- P4(V2, V2) :- P3(V2), not P7(V2), not P12(V2).","- P5(V0, V2) :- P15(V0, V2), P23(V2, V3), not -P24(V2, V3).","P6(V0, V3) :- P15(V0, V2), P23(V2, V3), not -P24(V2, V3).","- P7(V2) :- P15(V0, V2), P23(V2, V3), not -P24(V2, V3).","P8(V2, V2) :- P2(V2), not -P21(V2), not -P22(V2).","- P9(V2, V2) :- P2(V2), not -P21(V2), not -P22(V2).","- P10(V2) :- P2(V2), not -P21(V2), not -P22(V2).","P11(V1, V3) :- P16(V1), P17(V1, V2), - P18(V2, V3).","- P12(V3) :- - P10(V3), not P19(V3), not P20(V3)."],"noisy_rules":{"a":["- P13(V1) :- P5(V0, V2), not -P7(V2), - P11(V1, V3).","- P13(V1) :- - P3(V2), P4(V0, V1), P12(V2)."],"b":["- P1(V1, V1) :- - P13(V1).","- P0(V1) :- - P6(V0, V3), - P13(V1)."],"c":["P5(V0, V0) :- - P8(V0, V3).","P18(V1, V3) :- - P11(V1, V3)."],"d":["P9(V2, V3) :- - P1(V2, V3).","- P8(V0, V0) :- P4(V0, V1)."],"e":["- P26(V1) :- - P25(V0, V1).","- P27(V1, V3) :- - P28(V0, V1), P29(V0, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_26_5_5_3_5_0.5_1.0_5_2_3","seed":26,"num_facts":6,"num_rules":6,"num_related_predicates":12,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"P5(\"Michelle\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["P6(\"Jesse\").","P7(\"Jesse\", \"Michelle\").","- P8(\"Jesse\", \"Michelle\").","P9(\"Jesse\", \"Michelle\").","- P10(\"Jesse\", \"Michelle\").","P11(\"Jesse\", \"Michelle\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P7(\"Jesse\", \"Michelle\").","- P8(\"Jesse\", \"Michelle\").","P11(\"Jesse\", \"Michelle\")."],"noiseless_rules":["P5(V3) :- - P0(V2), - P2(V2), P4(V2), P11(V2, V3).","- P0(V2) :- P4(V2), not -P6(V2).","- P1(V2, V3) :- P7(V2, V3).","- P2(V2) :- - P8(V2, V3), not -P9(V2, V3), not P10(V2, V3), not -P11(V2, V3).","P3(V2) :- - P8(V2, V3), not -P9(V2, V3), not P10(V2, V3), not -P11(V2, V3).","P4(V2) :- - P1(V2, V3), not -P3(V2)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_14_9_11_3_6_0.5_1.0_5_2_3","seed":14,"num_facts":8,"num_rules":12,"num_related_predicates":20,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.375,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"living(\"Willie\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["- state_capital(\"Willie\", \"Sheila\").","nest(\"Michael\", \"Willie\").","squirrel(\"Willie\", \"James\").","- planes(\"Willie\", \"James\").","- bird(\"Willie\", \"James\").","- animals(\"Willie\", \"James\").","sheep(\"Willie\", \"James\").","- bear(\"Willie\", \"James\")."],"noisy_facts":["- fish(\"Sheila\").","- yellow(\"Willie\", \"James\").","- lake(\"Sheila\").","girl(\"Willie\", \"James\").","boat(\"Sheila\", \"James\").","- early(\"Sheila\").","- blue(\"Willie\").","salt(\"Sheila\")."],"min_fact_dicts_for_query":["- state_capital(\"Willie\", \"Sheila\").","sheep(\"Willie\", \"James\")."],"noiseless_rules":["living(V1) :- dog(V1, V2), butter_bread(V1, V3), not -fur(V2, V3).","dog(V1, V2) :- - state_capital(V1, V2), sheep(V1, V3).","- person(V1, V3) :- - state_capital(V1, V2), sheep(V1, V3).","baby(V0, V1) :- nest(V0, V1).","butter_bread(V1, V3) :- - person(V1, V3), not -butter_knife(V1, V3), not child(V1, V3).","butter_knife(V1, V3) :- sense_danger(V1, V2), - tails(V1, V2), animal(V1, V3).","fur(V3, V3) :- squirrel(V1, V3), not animals(V1, V3), not -sheep(V1, V3), not bear(V1, V3).","sense_danger(V1, V3) :- squirrel(V1, V3), not animals(V1, V3), not -sheep(V1, V3), not bear(V1, V3).","sense_fear(V1) :- squirrel(V1, V3), not animals(V1, V3), not -sheep(V1, V3), not bear(V1, V3).","- tails(V1, V3) :- - planes(V1, V3), not animals(V1, V3).","- child(V1, V0) :- baby(V0, V1), not -sense_fear(V1).","animal(V1, V3) :- - bird(V1, V3), not bear(V1, V3)."],"noisy_rules":{"a":["- living(V1) :- - butter_bread(V1, V3), - sense_danger(V1, V2).","- living(V1) :- - butter_bread(V1, V3), - sense_danger(V1, V2), not animal(V1, V3)."],"b":["state_capital(V1, V1) :- - living(V1).","- sense_danger(V1, V2) :- - dog(V1, V2), person(V1, V3), not living(V1)."],"c":["- fur(V2, V3) :- - dog(V1, V2), - baby(V0, V1), - butter_bread(V1, V3), not sense_fear(V1).","bear(V1, V2) :- tails(V1, V2)."],"d":["bird(V1, V3) :- - butter_knife(V1, V3).","child(V1, V3) :- - butter_knife(V1, V3), - fur(V2, V3), not -girl(V1, V3)."],"e":["- sea(V2, V3) :- - fish(V2), - lake(V2), - early(V2), salt(V2), boat(V2, V3).","chromatic_color(V1, V3) :- not blue(V1), - yellow(V1, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_39_10_10_5_8_0.5_1.0_5_2_3","seed":39,"num_facts":10,"num_rules":11,"num_related_predicates":21,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" roller(\"Karen\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["back(\"Melissa\", \"Karen\").","amount(\"Melissa\", \"Karen\").","what_stand_on(\"Melissa\", \"Karen\").","- pig(\"Melissa\", \"Karen\").","- brisket(\"Melissa\", \"Desiree\").","- canary(\"Melissa\", \"Karen\").","- time_runner(\"Desiree\", \"Amanda\").","accomplishment(\"Desiree\", \"Amanda\").","plane_ticket(\"Desiree\", \"Karen\").","- duckweed(\"Melissa\", \"Karen\")."],"noisy_facts":[],"min_fact_dicts_for_query":["back(\"Melissa\", \"Karen\").","what_stand_on(\"Melissa\", \"Karen\")."],"noiseless_rules":["- roller(V3) :- shelter(V3), repair(V0, V2), not duckweed(V0, V3).","coffee_can(V0, V3) :- - rum(V0), obtuseness(V0, V3).","shelter(V3) :- back(V0, V3).","- rum(V0) :- back(V0, V3).","repair(V0, V0) :- coffee_can(V0, V3), not -marrow(V0, V3), not peanut_worm(V0, V3).","rejection(V0, V3) :- amount(V0, V3).","obtuseness(V0, V3) :- what_stand_on(V0, V3), not duckweed(V0, V3).","marrow(V0, V3) :- rejection(V0, V3), not -entering_building(V0, V3).","entering_building(V0, V3) :- shelter(V3), - novel(V0, V3), not -back(V0, V3).","- peanut_worm(V0, V3) :- - pig(V0, V3).","- novel(V0, V3) :- - brisket(V0, V1), - canary(V0, V3), - time_runner(V1, V2), not -accomplishment(V1, V2), not -plane_ticket(V1, V3)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_21_10_10_9_10_0.5_1.0_5_2_3","seed":21,"num_facts":14,"num_rules":11,"num_related_predicates":25,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.6666666666666667,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" P10(\"David\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P11(\"Russell\", \"David\").","P12(\"Nancy\", \"David\").","P13(\"David\", \"Chad\").","- P14(\"Russell\", \"Nancy\").","- P15(\"Nancy\", \"Chad\").","- P16(\"Russell\", \"David\").","- P17(\"Russell\", \"David\").","- P18(\"Nancy\", \"David\").","P19(\"Nancy\", \"Chad\").","- P20(\"Russell\", \"David\").","P21(\"Russell\", \"David\").","P22(\"David\", \"Chad\").","- P23(\"Nancy\", \"Chad\").","- P24(\"David\", \"Chad\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P11(\"Russell\", \"David\").","P12(\"Nancy\", \"David\").","P13(\"David\", \"Chad\").","- P14(\"Russell\", \"Nancy\").","- P16(\"Russell\", \"David\").","- P17(\"Russell\", \"David\").","- P18(\"Nancy\", \"David\").","- P20(\"Russell\", \"David\").","- P23(\"Nancy\", \"Chad\")."],"noiseless_rules":["- P10(V2) :- P0(V1), - P1(V0, V3), P5(V1, V2), not -P8(V1, V3), not P9(V1, V3).","P0(V1) :- - P3(V3), - P7(V0, V1), - P20(V0, V2), not -P21(V0, V2), not -P22(V2, V3).","- P1(V1, V3) :- P2(V1, V3), not P9(V1, V3).","P2(V1, V3) :- P11(V0, V2), - P23(V1, V3), not P24(V2, V3).","- P3(V3) :- P6(V3), - P16(V0, V2), - P17(V0, V2), - P18(V1, V2), not -P19(V1, V3).","P4(V0, V1) :- P6(V3), - P16(V0, V2), - P17(V0, V2), - P18(V1, V2), not -P19(V1, V3).","P5(V1, V2) :- P12(V1, V2).","P6(V3) :- P13(V2, V3).","- P7(V0, V1) :- - P14(V0, V1).","P8(V1, V0) :- P4(V0, V1).","- P9(V1, V3) :- - P15(V1, V3)."],"noisy_rules":{}},"num_min_facts_for_query":9,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_14_8_8_3_3_0.5_1.0_3_1_2","seed":14,"num_facts":6,"num_rules":9,"num_related_predicates":15,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"gun(\"Matthew\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- much(\"Bryan\").","- having(\"Bryan\").","juju(\"Bryan\").","fig_leaf(\"Bryan\").","handsomeness(\"Bryan\").","- rag_doll."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["gun(V0) :- lepton(V0), not conglomerate(V0).","gunpowder(V1) :- - much(V1).","- imposture(V1) :- - having(V1).","lepton(V0) :- - eton_college(V0), not -fetch(V0).","- eton_college(V1) :- stay_open(V1).","in_texas(V1) :- stay_open(V1).","stay_open(V1) :- juju(V1), not -fig_leaf(V1), not -handsomeness(V1).","fetch(V1) :- gunpowder(V1), not rag_doll.","- conglomerate(V1) :- - imposture(V1), not -in_texas(V1)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_67_8_11_5_8_0.5_1.0_3_2_3","seed":67,"num_facts":8,"num_rules":12,"num_related_predicates":20,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" iraq(\"Christopher\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- lending_library(\"Joel\", \"Christopher\").","guard_hair(\"Trevor\", \"Rickey\").","pocketcomb(\"Trevor\", \"Rickey\").","seat(\"Christopher\", \"Rickey\").","- phoronid(\"Joel\", \"Rickey\").","- cayman_islands_dollar(\"Trevor\", \"Rickey\").","- elementary_school(\"Trevor\", \"Rickey\").","- concert(\"Christopher\", \"Rickey\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- lending_library(\"Joel\", \"Christopher\").","guard_hair(\"Trevor\", \"Rickey\").","- concert(\"Christopher\", \"Rickey\")."],"noiseless_rules":["- iraq(V1) :- die(V1), - dorking(V3), not -seat(V1, V3).","die(V1) :- - lending_library(V0, V1), - concert(V1, V3).","- service_stripe(V0, V3) :- - lending_library(V0, V1), - concert(V1, V3).","- flooring(V0, V3) :- - service_stripe(V0, V3), not blind(V0, V3), not store_tuna(V0, V3).","asserter(V2, V3) :- making_babies(V0, V1), - drop_on_ground(V0, V3), guard_hair(V2, V3).","- blind(V2, V3) :- guard_hair(V2, V3), not cayman_islands_dollar(V2, V3), not elementary_school(V2, V3).","making_babies(V3, V2) :- guard_hair(V2, V3), not cayman_islands_dollar(V2, V3), not elementary_school(V2, V3).","- store_tuna(V2, V3) :- guard_hair(V2, V3), not -pocketcomb(V2, V3).","- drop_on_ground(V3, V3) :- guard_hair(V2, V3), not -pocketcomb(V2, V3).","- hyaloplasm(V2, V3) :- guard_hair(V2, V3), not -pocketcomb(V2, V3).","- dorking(V3) :- - flooring(V0, V3), asserter(V2, V3), not fortune_hunter(V0, V3).","- fortune_hunter(V0, V3) :- - service_stripe(V0, V3), - hyaloplasm(V2, V3), not phoronid(V0, V3)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_1_10_14_8_10_0.5_1.0_5_3_4","seed":1,"num_facts":11,"num_rules":15,"num_related_predicates":26,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"P14(\"Cynthia\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P15(\"Michaela\", \"Karen\", \"Cynthia\").","P16(\"Charlene\").","P17(\"Charlene\", \"Michaela\", \"Cynthia\").","- P18(\"Michaela\", \"Cynthia\").","- P19(\"Karen\", \"Renee\").","- P20(\"Charlene\", \"Karen\", \"Cynthia\").","P21(\"Charlene\", \"Karen\", \"Cynthia\").","- P22(\"Michaela\", \"Renee\").","- P23(\"Michaela\", \"Renee\").","- P24(\"Michaela\", \"Renee\").","P25(\"Michaela\", \"Renee\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["P14(V4) :- P2(V1), - P6(V0, V2), - P9(V0, V1, V4), P10(V1, V2, V3), not P11(V1, V2, V4).","P0(V1, V2) :- P15(V1, V2, V4).","- P1(V1) :- P15(V1, V2, V4).","P2(V1) :- P16(V0), - P18(V1, V4), - P19(V2, V3), not P20(V0, V2, V4), not -P21(V0, V2, V4).","- P3(V0, V1, V2) :- P16(V0), - P18(V1, V4), - P19(V2, V3), not P20(V0, V2, V4), not -P21(V0, V2, V4).","P4(V1) :- P16(V0), - P18(V1, V4), - P19(V2, V3), not P20(V0, V2, V4), not -P21(V0, V2, V4).","- P5(V0, V2, V2) :- - P3(V0, V1, V2), not P6(V0, V2).","- P6(V1, V2) :- P0(V1, V2), not -P4(V1).","P7(V1, V2, V1) :- P0(V1, V2), not -P4(V1).","P8(V1, V2) :- P0(V1, V2), not -P4(V1).","- P9(V0, V1, V4) :- P17(V0, V1, V4).","P10(V1, V1, V4) :- - P1(V1), P12(V1), P13(V1), - P18(V1, V4).","- P11(V1, V2, V4) :- P7(V1, V2, V4).","P12(V2) :- - P5(V0, V2, V4).","P13(V1) :- P8(V1, V3), not P22(V1, V3), not P23(V1, V3), not P24(V1, V3), not -P25(V1, V3)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_25_9_10_10_13_0.5_1.0_3_3_4","seed":25,"num_facts":13,"num_rules":11,"num_related_predicates":24,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.125,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"manta(\"Ricardo\", \"Marilyn\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["birth(\"Lisa\", \"Marilyn\", \"Joanne\").","see_at_night(\"Ricardo\", \"Marilyn\", \"Joanne\").","reading_magazine(\"Lisa\", \"Brittany\").","- parent(\"Brittany\", \"Ricardo\", \"Marilyn\").","corner(\"Brittany\", \"Ricardo\", \"Marilyn\").","- colony(\"Lisa\", \"Ricardo\").","- eyelet(\"Lisa\", \"Ricardo\").","persona(\"Brittany\").","openside_plane(\"Brittany\").","- petite_marmite(\"Lisa\", \"Ricardo\").","- slam(\"Brittany\", \"Ricardo\", \"Marilyn\").","- snow_bunting(\"Ricardo\", \"Marilyn\", \"Joanne\").","- lips_help_form_spoken_word(\"Ricardo\", \"Marilyn\", \"Joanne\")."],"noisy_facts":[],"min_fact_dicts_for_query":["birth(\"Lisa\", \"Marilyn\", \"Joanne\").","see_at_night(\"Ricardo\", \"Marilyn\", \"Joanne\").","reading_magazine(\"Lisa\", \"Brittany\").","- parent(\"Brittany\", \"Ricardo\", \"Marilyn\").","- petite_marmite(\"Lisa\", \"Ricardo\").","- slam(\"Brittany\", \"Ricardo\", \"Marilyn\")."],"noiseless_rules":["manta(V2, V3) :- american_crow(V0), - pink(V3, V4), - getting_worm(V0, V2, V3).","- leader(V0, V2) :- - juniper_berry(V0, V2), - tiglon(V3, V4), not snow_bunting(V2, V3, V4).","- juniper_berry(V0, V2) :- birth(V0, V3, V4), - parent(V1, V2, V3).","bird_of_paradise(V0, V3, V4) :- birth(V0, V3, V4), - parent(V1, V2, V3).","- medallion(V3) :- see_at_night(V2, V3, V4), not snow_bunting(V2, V3, V4), not lips_help_form_spoken_word(V2, V3, V4).","- life_saver(V2, V3, V4) :- see_at_night(V2, V3, V4), not snow_bunting(V2, V3, V4), not lips_help_form_spoken_word(V2, V3, V4).","american_crow(V0) :- - leader(V0, V2), not colony(V0, V2), not eyelet(V0, V2).","- blowing_things_up(V1, V1) :- - medallion(V1), not -persona(V1), not -openside_plane(V1).","- pink(V3, V4) :- bird_of_paradise(V0, V3, V4), - blowing_things_up(V1, V2), not parent(V1, V2, V3).","- tiglon(V3, V4) :- - life_saver(V2, V3, V4), - parent(V1, V2, V3), not -corner(V1, V2, V3).","- getting_worm(V0, V2, V3) :- reading_magazine(V0, V1), - petite_marmite(V0, V2), - slam(V1, V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_94_10_14_12_12_0.5_1.0_5_2_3","seed":94,"num_facts":16,"num_rules":15,"num_related_predicates":31,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" coptic_church(\"Alexis\", \"Charlene\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- pretty(\"Brian\", \"Alexis\").","library(\"Alexis\", \"Savannah\").","excavation(\"Alexis\", \"Savannah\").","getting_food_to_feed_to_others(\"Brian\", \"Charlene\").","- shoreline(\"Brian\", \"Alexis\").","- crappie(\"Brian\", \"Alexis\").","- stab(\"Brian\", \"Alexis\").","sea_weed(\"Brian\", \"Alexis\").","- pill_bottle(\"Brian\", \"Charlene\").","goldfield(\"Brian\", \"Charlene\").","- food_court(\"Brian\", \"Charlene\").","- onion_dome(\"Brian\", \"Alexis\").","- delta_wing(\"Brian\", \"Alexis\").","gift(\"Brian\", \"Alexis\").","play_in_back_yard(\"Brian\", \"Alexis\").","- square_meal(\"Savannah\", \"Charlene\")."],"noisy_facts":["- expression(\"Savannah\", \"Charlene\").","arpent(\"Alexis\", \"Charlene\").","- grape(\"Brian\", \"Savannah\").","cross_country_riding(\"Brian\", \"Alexis\").","- headpiece(\"Savannah\", \"Charlene\").","- orioles(\"Alexis\").","- unit_of_income(\"Alexis\", \"Savannah\").","- hassock(\"Brian\", \"Savannah\").","- murphy_bed(\"Brian\", \"Alexis\").","heliport(\"Brian\", \"Alexis\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- coptic_church(V1, V3) :- - infatuation(V1), - arm(V3), tents(V0, V1), not work_place(V1, V3).","- lie_to_irs(V1) :- - pretty(V0, V1).","carry_on_plane(V0, V1) :- - pretty(V0, V1).","arena(V0, V1) :- - pretty(V0, V1).","- good_parent(V1) :- - lie_to_irs(V1), not -suspense_account(V1), not abdominal_aorta(V1).","- infatuation(V1) :- library(V1, V2).","suspense_account(V1) :- carry_on_plane(V0, V1), not shoreline(V0, V1), not crappie(V0, V1), not stab(V0, V1), not -sea_weed(V0, V1).","grotto(V0, V1) :- carry_on_plane(V0, V1), not shoreline(V0, V1), not crappie(V0, V1), not stab(V0, V1), not -sea_weed(V0, V1).","ammunition(V0, V1) :- carry_on_plane(V0, V1), not shoreline(V0, V1), not crappie(V0, V1), not stab(V0, V1), not -sea_weed(V0, V1).","- arm(V1) :- arena(V0, V1), not good_parent(V0), not -grotto(V0, V1).","place_to_eat(V0, V3) :- ammunition(V0, V3), not -circle_airport(V0, V3), not pill_bottle(V0, V3), not -goldfield(V0, V3), not food_court(V0, V3).","tents(V0, V1) :- place_to_eat(V0, V1), not onion_dome(V0, V1), not delta_wing(V0, V1), not -gift(V0, V1), not -play_in_back_yard(V0, V1).","- abdominal_aorta(V1) :- place_to_eat(V0, V1), not onion_dome(V0, V1), not delta_wing(V0, V1), not -gift(V0, V1), not -play_in_back_yard(V0, V1).","- work_place(V1, V3) :- excavation(V1, V2), - square_meal(V2, V3).","circle_airport(V0, V3) :- getting_food_to_feed_to_others(V0, V3)."],"noisy_rules":{"a":["coptic_church(V1, V1) :- - carry_on_plane(V0, V1), not arena(V0, V1), infatuation(V1), not grotto(V0, V1), abdominal_aorta(V1).","coptic_church(V1, V3) :- lie_to_irs(V1), - suspense_account(V1), - grotto(V0, V1), work_place(V1, V3), not circle_airport(V0, V3)."],"b":["arm(V3) :- - arena(V0, V1), coptic_church(V1, V3).","- gift(V0, V1) :- - carry_on_plane(V0, V1), not -work_place(V1, V3), coptic_church(V1, V3)."],"c":["food_court(V0, V3) :- lie_to_irs(V1), not -good_parent(V0), infatuation(V1), - tents(V0, V1), - circle_airport(V0, V3).","- sea_weed(V3, V1) :- not -abdominal_aorta(V1), work_place(V1, V3)."],"d":["good_parent(V0) :- heliport(V0, V1).","shade(V1) :- - suspense_account(V1), - grotto(V0, V1), not tents(V0, V1), abdominal_aorta(V1), - murphy_bed(V0, V1)."],"e":["seed_money(V0, V1) :- - orioles(V1), cross_country_riding(V0, V1), - hassock(V0, V2), - expression(V2, V3).","- answer_questions(V0, V3) :- - grape(V0, V2), - unit_of_income(V1, V2), not -arpent(V1, V3), - headpiece(V2, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_17_7_11_5_7_0.5_1.0_5_3_4","seed":17,"num_facts":7,"num_rules":12,"num_related_predicates":19,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"P11(\"Michael\", \"Andrew\", \"Lauren\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P12(\"Michael\", \"Lauren\").","- P13(\"Andrew\", \"Robert\", \"Lauren\").","- P14(\"Michael\", \"Kathleen\").","- P15(\"Michael\", \"Lauren\", \"Kathleen\").","P16(\"Andrew\", \"Robert\", \"Lauren\").","P17(\"Andrew\", \"Robert\", \"Lauren\").","P18."],"noisy_facts":["P20(\"Andrew\", \"Kathleen\").","P19(\"Michael\", \"Lauren\").","P24(\"Michael\", \"Lauren\", \"Kathleen\").","- P21(\"Michael\", \"Robert\", \"Lauren\").","- P25(\"Andrew\", \"Lauren\", \"Kathleen\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["P11(V0, V1, V3) :- - P0(V2, V3), P1(V0, V1, V4), not P4(V0, V2, V4).","- P0(V2, V3) :- - P5(V0, V3), P7(V1, V3), - P10(V1, V2, V3).","P1(V0, V1, V4) :- - P12(V0, V3), - P14(V0, V4), - P15(V0, V3, V4), P16(V1, V2, V3), not -P17(V1, V2, V3).","- P2(V1, V4) :- - P12(V0, V3), - P14(V0, V4), - P15(V0, V3, V4), P16(V1, V2, V3), not -P17(V1, V2, V3).","P3(V1, V2) :- - P12(V0, V3), - P14(V0, V4), - P15(V0, V3, V4), P16(V1, V2, V3), not -P17(V1, V2, V3).","- P4(V1, V4, V4) :- - P2(V1, V4), not -P6(V1, V4), not -P8(V1, V4).","- P5(V2, V3) :- - P13(V1, V2, V3), not -P16(V1, V2, V3).","P6(V1, V3) :- - P13(V1, V2, V3), not -P16(V1, V2, V3).","P7(V1, V2) :- P3(V1, V2), not -P18.","P8(V1, V2) :- P3(V1, V2), not -P18.","P9(V2, V1, V1) :- P3(V1, V2), not -P18.","- P10(V1, V2, V3) :- P9(V0, V1, V3), P17(V1, V2, V3)."],"noisy_rules":{"a":["- P11(V0, V1, V3) :- - P1(V0, V1, V4), P4(V0, V2, V4), P5(V0, V3), not P6(V1, V4), not P9(V0, V1, V3).","- P11(V0, V1, V3) :- P5(V0, V3), - P6(V1, V4), - P8(V1, V4)."],"b":["- P18(V0, V1, V3) :- - P8(V1, V4), - P11(V0, V1, V3).","- P9(V0, V1, V3) :- - P11(V0, V1, V3)."],"c":["- P16(V1, V2, V3) :- P2(V1, V4), not P6(V1, V4), not P7(V1, V3), - P9(V0, V1, V3), P10(V1, V2, V3).","- P16(V0, V0, V3) :- P5(V0, V3)."],"d":["- P17(V3, V0, V3) :- P5(V0, V3), not -P19(V0, V3).","P10(V1, V1, V1) :- P2(V1, V4), P20(V1, V4)."],"e":["- P22(V2) :- - P21(V0, V2, V3).","- P23(V1) :- P24(V0, V3, V4), - P25(V1, V3, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_35_10_13_9_11_0.5_1.0_3_2_3","seed":35,"num_facts":13,"num_rules":14,"num_related_predicates":27,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.7777777777777777,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":"pogonion(\"Holly\", \"Tina\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- cause_overeating(\"Holly\").","racing_animal(\"Christina\", \"Holly\").","- gammon.","thenar(\"Holly\", \"Timothy\").","- allowing_extra_time(\"Christina\", \"Tina\").","helmet(\"Christina\", \"Tina\").","harness_horse(\"Christina\", \"Holly\").","pets_sometimes_when_with_people(\"Christina\", \"Timothy\").","grenada_dollar(\"Christina\", \"Tina\").","- born_date(\"Holly\", \"Tina\").","place_to_buy_sandwich(\"Christina\", \"Timothy\").","smoothie(\"Holly\", \"Timothy\").","- vichyssoise(\"Timothy\", \"Tina\")."],"noisy_facts":["cashmere_goat(\"Christina\", \"Timothy\").","people_to_eat(\"Christina\", \"Holly\").","junco(\"Holly\").","hotness(\"Christina\", \"Holly\").","peanut(\"Holly\", \"Tina\").","adana(\"Timothy\").","roman_empire(\"Timothy\").","- canarys(\"Christina\", \"Timothy\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["pogonion(V1, V3) :- headpiece(V3), - bottom(V1, V3), not crush(V1, V3).","headpiece(V3) :- industrial(V1, V2), smoothie(V1, V2), - vichyssoise(V2, V3).","barber_comb(V2) :- industrial(V1, V2), smoothie(V1, V2), - vichyssoise(V2, V3).","- putting_food_on_table(V0, V2) :- - cause_overeating(V1), harness_horse(V0, V1), pets_sometimes_when_with_people(V0, V2).","baby_plant(V0, V1) :- racing_animal(V0, V1), grenada_dollar(V0, V3), not born_date(V1, V3).","- channel(V0, V3) :- racing_animal(V0, V1), grenada_dollar(V0, V3), not born_date(V1, V3).","guard_house(V0, V0) :- baby_plant(V0, V1), not -book_bag(V0, V1), not cell(V0, V1).","- bottom(V2, V3) :- barber_comb(V2), guard_house(V2, V3), not recombinant(V2).","industrial(V3, V3) :- - channel(V0, V3), not allowing_extra_time(V0, V3), not -helmet(V0, V3).","book_bag(V2, V2) :- - recombinant(V2), not gammon.","coral_reefs(V2, V2) :- - recombinant(V2), not gammon.","- cell(V0, V0) :- - putting_food_on_table(V0, V2), coral_reefs(V2, V3), not -place_to_buy_sandwich(V0, V2).","- crush(V1, V1) :- thenar(V1, V2), not -smoothie(V1, V2).","- recombinant(V2) :- thenar(V1, V2), not -smoothie(V1, V2)."],"noisy_rules":{"a":["- pogonion(V1, V0) :- not book_bag(V0, V1), cell(V0, V1), recombinant(V2).","- pogonion(V1, V3) :- - headpiece(V3), crush(V1, V3)."],"b":["gammon(V1, V3) :- - pogonion(V1, V3).","- coral_reefs(V2, V3) :- not guard_house(V2, V3), - industrial(V1, V2), - pogonion(V1, V3)."],"c":["- headpiece(V2) :- - barber_comb(V2), putting_food_on_table(V0, V2).","- grenada_dollar(V3, V3) :- bottom(V1, V3)."],"d":["- smoothie(V0, V2) :- putting_food_on_table(V0, V2), - canarys(V0, V2).","- thenar(V2, V2) :- recombinant(V2), not -adana(V2), roman_empire(V2)."],"e":["- ab_crunches(V0, V2) :- not -junco(V1), hotness(V0, V1), cashmere_goat(V0, V2).","in_north_america(V0, V1) :- people_to_eat(V0, V1), peanut(V1, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_24_6_5_2_5_0.5_1.0_3_2_3","seed":24,"num_facts":5,"num_rules":6,"num_related_predicates":11,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" capsule(\"Ann\", \"Mary\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["protective_covering(\"Ann\", \"Mary\").","- comedian(\"Joshua\", \"Mary\").","- scapular(\"Ann\", \"Mary\").","- slow_rivers(\"Joshua\", \"Patrick\").","kite(\"Joshua\", \"Mary\")."],"noisy_facts":["- two_tires(\"Patrick\", \"Mary\").","herb(\"Ann\", \"Mary\").","- modification(\"Ann\", \"Mary\").","- proclamation(\"Ann\", \"Patrick\").","range(\"Patrick\", \"Mary\")."],"min_fact_dicts_for_query":["protective_covering(\"Ann\", \"Mary\").","- comedian(\"Joshua\", \"Mary\")."],"noiseless_rules":["- capsule(V0, V3) :- play_chess(V0, V3), screamer(V2, V3), not -window_blind(V2, V3).","- knock(V2, V3) :- front(V2), - slow_rivers(V1, V2), kite(V1, V3).","play_chess(V0, V3) :- protective_covering(V0, V3).","screamer(V1, V3) :- - comedian(V1, V3), not -kite(V1, V3).","front(V0) :- play_chess(V0, V3), not scapular(V0, V3).","window_blind(V2, V3) :- - knock(V2, V3), not -front(V2)."],"noisy_rules":{"a":["capsule(V0, V3) :- knock(V2, V3), - play_chess(V0, V3), - front(V2).","capsule(V0, V3) :- - play_chess(V0, V3), - screamer(V2, V3), not front(V2)."],"b":["- kite(V3, V3) :- - window_blind(V2, V3), capsule(V0, V3).","- front(V0) :- capsule(V0, V3)."],"c":["scapular(V2, V2) :- - front(V2).","slow_rivers(V2, V2) :- not -knock(V2, V3), - screamer(V2, V3)."],"d":["- front(V2) :- - screamer(V2, V3), - two_tires(V2, V3).","- play_chess(V3, V3) :- - window_blind(V2, V3), not -range(V2, V3)."],"e":["- round_trip_ticket(V2, V3) :- - proclamation(V0, V2), - modification(V0, V3).","- hyperfocal_distance(V3) :- herb(V0, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_33_8_10_8_9_0.5_1.0_3_2_3","seed":33,"num_facts":11,"num_rules":11,"num_related_predicates":22,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.7142857142857144,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" P10(\"Mercedes\", \"William\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P11.","- P12(\"Audrey\", \"Mercedes\").","- P13(\"Audrey\", \"William\").","P14(\"Courtney\", \"William\").","P15(\"Courtney\", \"William\").","- P16(\"Courtney\", \"William\").","P17(\"Courtney\", \"Mercedes\").","P18(\"Audrey\", \"William\").","P19(\"Audrey\", \"William\").","P20(\"Courtney\", \"Mercedes\").","P21(\"Mercedes\", \"William\")."],"noisy_facts":["P30(\"Courtney\", \"Mercedes\").","- P31(\"Mercedes\", \"William\").","- P24(\"Audrey\", \"Courtney\").","P29(\"Audrey\", \"Courtney\").","- P22(\"Courtney\", \"Mercedes\").","- P25(\"Audrey\", \"Mercedes\").","P26(\"Courtney\", \"Mercedes\").","- P23(\"Courtney\", \"Mercedes\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- P10(V2, V3) :- - P4(V0, V2), - P7(V0, V3).","- P0(V3) :- P9(V3), P18(V0, V3), not -P19(V0, V3).","- P1(V3, V0) :- P11, P18(V0, V3).","- P2(V3, V3) :- P11, P18(V0, V3).","- P3(V1, V2) :- - P1(V1, V2), not P5(V1, V2), not -P17(V1, V2).","- P4(V3, V3) :- - P0(V3), - P2(V1, V3), not P3(V1, V3).","- P5(V1, V2) :- - P12(V0, V2), P20(V1, V2), P21(V2, V3).","- P6(V2, V3) :- - P12(V0, V2), P20(V1, V2), P21(V2, V3).","- P7(V0, V3) :- - P13(V0, V3), P14(V1, V3), not -P15(V1, V3).","P8(V1, V3) :- - P13(V0, V3), P14(V1, V3), not -P15(V1, V3).","P9(V3) :- - P6(V2, V3), P8(V1, V3), not P16(V1, V3)."],"noisy_rules":{"a":["P10(V3, V3) :- P2(V1, V3), not P8(V1, V3).","P10(V3, V3) :- P0(V3), P7(V0, V3)."],"b":["- P15(V1, V3) :- P5(V1, V2), P10(V2, V3).","P2(V1, V3) :- P2(V1, V3), not -P5(V1, V2), P10(V2, V3)."],"c":["P13(V0, V3) :- P4(V0, V2), P5(V1, V2), - P9(V3).","- P20(V1, V2) :- P4(V0, V2), not -P6(V2, V3), - P8(V1, V3)."],"d":["- P15(V1, V2) :- P1(V1, V2), not -P5(V1, V2), not P22(V1, V2).","P3(V1, V3) :- P5(V1, V2), - P9(V3), not P23(V1, V2)."],"e":["- P27(V0, V1) :- - P24(V0, V1), - P25(V0, V2), not -P26(V1, V2).","- P28(V1, V3) :- P29(V0, V1), not -P30(V1, V2), - P31(V2, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_63_8_12_12_13_0.5_1.0_5_2_3","seed":63,"num_facts":16,"num_rules":13,"num_related_predicates":29,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":13,"target_query":" activity(\"Stephen\", \"William\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- carpenters_level(\"Emily\", \"Stephen\").","artificial_respiration(\"William\").","- quagga(\"Emily\").","- motivation(\"Emily\", \"Stephen\").","object(\"Emily\", \"Stephen\").","ram(\"Emily\", \"William\").","- store_shelf(\"William\", \"Michael\").","- felony(\"William\", \"Michael\").","- heimlich_maneuver(\"Emily\", \"Stephen\").","- cardiopulmonary_resuscitation(\"Emily\", \"Michael\").","cardiac_massage(\"Emily\", \"Michael\").","air_terminal(\"William\", \"Michael\").","levant_cotton(\"William\").","act(\"Emily\", \"William\").","barn(\"Stephen\", \"William\").","thirteen(\"Stephen\", \"William\")."],"noisy_facts":["- appendage(\"Stephen\").","indigo_bunting(\"Emily\", \"Stephen\").","- produce_eggs(\"Emily\", \"William\").","sight_organ(\"Emily\", \"Stephen\").","- war_crime(\"Stephen\", \"William\").","- capital_offense(\"Emily\", \"Michael\").","- sewing(\"Stephen\", \"William\").","- perpetration(\"William\").","- everywhere(\"Emily\", \"Stephen\").","- victimless_crime(\"William\", \"Michael\")."],"min_fact_dicts_for_query":["- carpenters_level(\"Emily\", \"Stephen\").","artificial_respiration(\"William\").","- quagga(\"Emily\").","object(\"Emily\", \"Stephen\").","ram(\"Emily\", \"William\").","- store_shelf(\"William\", \"Michael\").","- heimlich_maneuver(\"Emily\", \"Stephen\").","- cardiopulmonary_resuscitation(\"Emily\", \"Michael\").","levant_cotton(\"William\").","act(\"Emily\", \"William\").","barn(\"Stephen\", \"William\")."],"noiseless_rules":["- activity(V1, V2) :- - examination(V2), - lamentation(V0, V1), not negotiation(V0, V1), not turn(V0, V1), not -creation(V1, V2).","- examination(V2) :- audit(V0, V2), not follow_up(V0, V2).","- lamentation(V0, V1) :- variation(V0, V1), - emergency_procedure(V0, V2), not stiffening(V1, V2).","procedure(V0, V1) :- variation(V0, V1), - emergency_procedure(V0, V2), not stiffening(V1, V2).","- negotiation(V0, V1) :- - carpenters_level(V0, V1), object(V0, V1), ram(V0, V2), - store_shelf(V2, V3), not felony(V2, V3).","variation(V0, V1) :- - carpenters_level(V0, V1), object(V0, V1), ram(V0, V2), - store_shelf(V2, V3), not felony(V2, V3).","- emergency_procedure(V0, V2) :- artificial_respiration(V2), - heimlich_maneuver(V0, V1), - cardiopulmonary_resuscitation(V0, V3), not -cardiac_massage(V0, V3), not -air_terminal(V2, V3).","dismantling(V1) :- artificial_respiration(V2), - heimlich_maneuver(V0, V1), - cardiopulmonary_resuscitation(V0, V3), not -cardiac_massage(V0, V3), not -air_terminal(V2, V3).","audit(V0, V2) :- - quagga(V0), levant_cotton(V2), act(V0, V2), barn(V1, V2), not -thirteen(V1, V2).","- stiffening(V1, V2) :- - quagga(V0), levant_cotton(V2), act(V0, V2), barn(V1, V2), not -thirteen(V1, V2).","- turn(V0, V1) :- - lamentation(V0, V1), not motivation(V0, V1).","- follow_up(V0, V0) :- - lamentation(V0, V1), not motivation(V0, V1).","creation(V1, V1) :- procedure(V0, V1), not -dismantling(V1)."],"noisy_rules":{"a":["activity(V1, V0) :- - procedure(V0, V1), not variation(V0, V1), - dismantling(V1), turn(V0, V1).","activity(V1, V2) :- examination(V2), - audit(V0, V2), not -follow_up(V0, V2), - creation(V1, V2)."],"b":["- act(V1, V2) :- not dismantling(V1), - creation(V1, V2), not -activity(V1, V2).","- artificial_respiration(V2) :- examination(V2), - creation(V1, V2), not -activity(V1, V2)."],"c":["- dismantling(V1) :- not -negotiation(V0, V1), emergency_procedure(V0, V2), stiffening(V1, V2).","- dismantling(V1) :- - procedure(V0, V1), - variation(V0, V1), not -emergency_procedure(V0, V2), - audit(V0, V2), not creation(V1, V2)."],"d":["motivation(V0, V1) :- turn(V0, V1), follow_up(V0, V2), not -indigo_bunting(V0, V1).","- audit(V1, V2) :- stiffening(V1, V2)."],"e":["ebb(V1, V2) :- not appendage(V1), not everywhere(V0, V1), not -sight_organ(V0, V1), - produce_eggs(V0, V2), - sewing(V1, V2).","crime(V0, V1) :- - perpetration(V2), - capital_offense(V0, V3), - war_crime(V1, V2), - victimless_crime(V2, V3)."]}},"num_min_facts_for_query":11,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_19_7_11_10_13_0.5_1.0_5_3_4","seed":19,"num_facts":11,"num_rules":12,"num_related_predicates":23,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" suzerainty(\"Carla\", \"Holly\", \"Amy\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["water_hole(\"Sharon\", \"Amy\").","- gymnastics(\"Sharon\", \"Amy\").","midland(\"Sharon\", \"Amy\").","feelings(\"Sharon\", \"Amy\").","headdress(\"Carla\", \"Amy\").","detonator(\"Carla\", \"Amy\").","snail(\"Holly\", \"Amy\", \"Kaitlyn\").","camshaft(\"Holly\", \"Amy\", \"Kaitlyn\").","gal(\"Holly\", \"Amy\", \"Kaitlyn\").","filaria(\"Holly\", \"Amy\", \"Kaitlyn\").","two_dollar_bill(\"Sharon\", \"Amy\")."],"noisy_facts":["- glad(\"Sharon\", \"Carla\", \"Kaitlyn\").","- gapped_scale(\"Sharon\", \"Holly\", \"Kaitlyn\").","african_country(\"Sharon\", \"Holly\").","horse_rider(\"Sharon\", \"Holly\").","- ocean_current(\"Sharon\", \"Holly\", \"Amy\").","- government(\"Sharon\", \"Holly\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- suzerainty(V1, V2, V3) :- raising_metabolism(V0, V2), great_bowerbird(V2, V3), - calcium(V1, V2, V3), gal(V2, V3, V4).","raising_metabolism(V4, V2) :- - event(V2, V3, V4), not -snail(V2, V3, V4), not -camshaft(V2, V3, V4), not -gal(V2, V3, V4), not -filaria(V2, V3, V4).","knacker(V4, V3) :- - event(V2, V3, V4), not -snail(V2, V3, V4), not -camshaft(V2, V3, V4), not -gal(V2, V3, V4), not -filaria(V2, V3, V4).","bone(V4, V3) :- - event(V2, V3, V4), not -snail(V2, V3, V4), not -camshaft(V2, V3, V4), not -gal(V2, V3, V4), not -filaria(V2, V3, V4).","great_bowerbird(V1, V3) :- knacker(V1, V3), not -think_critically(V1, V3), not -restaurant_chain(V1, V3), not -headdress(V1, V3), not -detonator(V1, V3).","- knight(V2, V3) :- - place_to_live_in(V0, V2, V3).","- calcium(V4, V2, V3) :- - knight(V2, V3), camshaft(V2, V3, V4).","think_critically(V3, V3) :- - knight(V2, V3), camshaft(V2, V3, V4).","- place_to_live_in(V0, V3, V3) :- bone(V0, V3), not float(V0, V3), not gymnastics(V0, V3), not -midland(V0, V3), not -feelings(V0, V3).","- event(V0, V3, V3) :- water_hole(V0, V3), not gymnastics(V0, V3), not -two_dollar_bill(V0, V3).","restaurant_chain(V3, V3) :- water_hole(V0, V3), not gymnastics(V0, V3), not -two_dollar_bill(V0, V3).","- float(V0, V3) :- water_hole(V0, V3), not gymnastics(V0, V3), not -two_dollar_bill(V0, V3)."],"noisy_rules":{"a":["suzerainty(V1, V2, V3) :- - knacker(V1, V3), knight(V2, V3), calcium(V1, V2, V3), event(V2, V3, V4), float(V0, V3).","suzerainty(V1, V2, V3) :- not knacker(V1, V3), - great_bowerbird(V2, V3), calcium(V1, V2, V3), float(V0, V3)."],"b":["place_to_live_in(V2, V2, V3) :- - think_critically(V1, V3), suzerainty(V1, V2, V3).","event(V2, V3, V4) :- - great_bowerbird(V2, V3), event(V2, V3, V4), suzerainty(V1, V2, V3)."],"c":["- camshaft(V2, V3, V0) :- - think_critically(V1, V3), place_to_live_in(V0, V2, V3), float(V0, V3).","float(V3, V3) :- - knacker(V1, V3), event(V2, V3, V4)."],"d":["- two_dollar_bill(V0, V3) :- - raising_metabolism(V0, V2), - great_bowerbird(V2, V3), not government(V0, V2), not -horse_rider(V0, V2).","- knacker(V1, V3) :- - raising_metabolism(V0, V2), calcium(V1, V2, V3), not -african_country(V0, V2)."],"e":["check_mark(V3) :- - glad(V0, V1, V4), - ocean_current(V0, V2, V3).","european_hare(V0, V2) :- - gapped_scale(V0, V2, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_70_10_12_1_4_0.5_1.0_5_2_3","seed":70,"num_facts":5,"num_rules":13,"num_related_predicates":18,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.4444444444444446,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"bus_seats(\"Colleen\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- flowers(\"Colleen\", \"Suzanne\").","- hitting(\"Colleen\", \"Suzanne\").","- marang(\"Suzanne\", \"Alyssa\").","cone.","metropolis(\"Colleen\", \"Alyssa\")."],"noisy_facts":["- consumption(\"Suzanne\").","- louis_d_or(\"Richard\", \"Suzanne\").","emulsion(\"Colleen\", \"Suzanne\").","piece_of_furniture(\"Suzanne\", \"Alyssa\").","- undercoat(\"Richard\", \"Alyssa\").","small_mountain(\"Colleen\", \"Suzanne\").","- smelling_organ(\"Suzanne\", \"Alyssa\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["bus_seats(V1) :- assertion(V0, V1), barnyard(V0, V3).","assertion(V0, V1) :- democracy(V0, V2), pikestaff(V1, V2).","swimming_hole(V1, V2) :- - flowers(V1, V2).","barnyard(V0, V3) :- - part_of_body(V0, V2), american_pastime(V2, V3).","democracy(V2, V2) :- butter(V2, V3), not -buntal(V2, V3), not -american_pastime(V2, V3).","pikestaff(V1, V2) :- - shot(V1), - hitting(V1, V2), metropolis(V1, V3).","butter(V2, V3) :- - marang(V2, V3).","buntal(V2, V3) :- - marang(V2, V3), not -cone.","rubber_stamp(V3, V3) :- - marang(V2, V3), not -cone.","- shot(V2) :- - marang(V2, V3), not -cone.","- part_of_body(V0, V3) :- rubber_stamp(V0, V3), not -domestic(V0, V3).","american_pastime(V2, V2) :- swimming_hole(V1, V2), not shot(V1).","domestic(V2, V2) :- swimming_hole(V1, V2), not shot(V1)."],"noisy_rules":{"a":["- bus_seats(V1) :- - butter(V2, V3), - buntal(V2, V3), - rubber_stamp(V0, V3), shot(V1).","- bus_seats(V0) :- - rubber_stamp(V0, V3)."],"b":["- rubber_stamp(V0, V1) :- - assertion(V0, V1), not bus_seats(V1).","- rubber_stamp(V1, V1) :- - bus_seats(V1)."],"c":["- barnyard(V0, V3) :- - domestic(V0, V3).","- pikestaff(V1, V1) :- shot(V1), - domestic(V0, V3)."],"d":["- barnyard(V0, V3) :- - democracy(V0, V2), - buntal(V2, V3), - louis_d_or(V0, V2).","part_of_body(V2, V2) :- - buntal(V2, V3), not -piece_of_furniture(V2, V3)."],"e":["- season_stew(V1, V2) :- - consumption(V2), - undercoat(V0, V3), emulsion(V1, V2), not smelling_organ(V2, V3).","coexistence(V2) :- small_mountain(V1, V2)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_72_3_2_2_3_0.5_1.0_5_1_2","seed":72,"num_facts":3,"num_rules":3,"num_related_predicates":6,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":2,"target_query":" belief(\"Karen\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- persian_deity(\"Olivia\").","- fairy.","- celtic_deity(\"Olivia\")."],"noisy_facts":["titania.","- unit_character(\"Timothy\").","informing_others(\"Timothy\").","- dispose_of_trash(\"Timothy\").","chopping_block(\"Olivia\").","south_dakotan."],"min_fact_dicts_for_query":[],"noiseless_rules":["- belief(V0) :- - spiritual_being(V0).","deity(V1) :- - persian_deity(V1), not celtic_deity(V1).","- spiritual_being(V1) :- deity(V1), not fairy, not celtic_deity(V1)."],"noisy_rules":{"a":["belief(V1) :- - deity(V1).","belief(V0) :- - deity(V1), spiritual_being(V0)."],"b":["spiritual_being(V0) :- belief(V0).","- deity(V1) :- - deity(V1), spiritual_being(V0), belief(V0)."],"c":["persian_deity(V1) :- - deity(V1), spiritual_being(V0).","celtic_deity(V1) :- - deity(V1), spiritual_being(V0)."],"d":["fairy(V1) :- - deity(V1), not -titania.","celtic_deity(V1) :- - deity(V1), spiritual_being(V0), south_dakotan."],"e":["- character(V2) :- not -informing_others(V2), - unit_character(V2), not dispose_of_trash(V2).","- block(V1) :- chopping_block(V1)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_51_10_11_5_6_0.5_1.0_3_2_3","seed":51,"num_facts":10,"num_rules":12,"num_related_predicates":22,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2222222222222223,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"separate_two_slices_of_cheese(\"Angela\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- tongue(\"Ashley\", \"Sara\").","- equal_opportunity_lovers(\"Ashley\", \"Sara\").","personal_letter(\"Tamara\", \"Angela\").","- eyas.","- angel(\"Ashley\", \"Angela\").","boat(\"Ashley\", \"Angela\").","- horseless_carriage(\"Ashley\", \"Angela\").","- george_bush(\"Tamara\", \"Angela\").","- basement(\"Tamara\", \"Angela\").","- asian_country(\"Ashley\", \"Angela\")."],"noisy_facts":["- ground(\"Tamara\", \"Angela\").","- thames(\"Ashley\", \"Sara\").","- puffing(\"Sara\", \"Angela\").","stick_to_paper(\"Tamara\", \"Angela\").","- round_toy(\"Ashley\", \"Angela\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["separate_two_slices_of_cheese(V3) :- - sports_car(V0, V2), driving_machine(V1, V3), not -use_butterfly_machine(V2, V3).","- sports_car(V0, V2) :- - condominium(V0, V1), settlement(V1, V3), - tiger(V2, V3).","driving_machine(V1, V3) :- - tongue(V0, V1), - asian_country(V0, V3).","- condominium(V0, V1) :- - equal_opportunity_lovers(V0, V1), boat(V0, V3), not horseless_carriage(V0, V3).","- biological_cells(V3) :- - equal_opportunity_lovers(V0, V1), boat(V0, V3), not horseless_carriage(V0, V3).","use_butterfly_machine(V2, V3) :- personal_letter(V2, V3), not george_bush(V2, V3), not basement(V2, V3).","plutonium(V3, V3) :- use_butterfly_machine(V2, V3), not eyas.","- cockateel(V3, V3) :- use_butterfly_machine(V2, V3), not eyas.","settlement(V3, V3) :- - biological_cells(V3).","- traditionalist(V0, V3) :- - angel(V0, V3).","walk_on(V1, V3) :- plutonium(V1, V3).","- tiger(V1, V3) :- - cockateel(V0, V1), - traditionalist(V0, V3), not -walk_on(V1, V3)."],"noisy_rules":{"a":["- separate_two_slices_of_cheese(V3) :- sports_car(V0, V2), - plutonium(V1, V3), not walk_on(V1, V3).","- separate_two_slices_of_cheese(V1) :- cockateel(V0, V1)."],"b":["george_bush(V3, V3) :- - separate_two_slices_of_cheese(V3).","tongue(V1, V1) :- - walk_on(V1, V3), - separate_two_slices_of_cheese(V3)."],"c":["tongue(V2, V3) :- - use_butterfly_machine(V2, V3).","george_bush(V2, V3) :- tiger(V2, V3)."],"d":["- negation(V0) :- not -cockateel(V0, V1), - thames(V0, V1).","biological_cells(V3) :- not use_butterfly_machine(V2, V3), tiger(V2, V3), stick_to_paper(V2, V3)."],"e":["implementation(V3) :- - puffing(V1, V3).","- picnic_ham(V0, V3) :- - round_toy(V0, V3), - ground(V2, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_34_10_11_7_10_0.5_1.0_3_2_3","seed":34,"num_facts":11,"num_rules":12,"num_related_predicates":23,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.4444444444444446,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P11(\"Martin\", \"Brittany\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P12(\"April\").","- P13.","- P14(\"Brittany\").","- P15(\"Caitlin\", \"Brittany\").","P16(\"Caitlin\", \"Brittany\").","- P17(\"Caitlin\", \"Brittany\").","- P18(\"April\", \"Caitlin\").","P19(\"Caitlin\", \"Brittany\").","P20(\"Martin\", \"Brittany\").","- P21(\"Caitlin\", \"Brittany\").","P22(\"Caitlin\", \"Brittany\")."],"noisy_facts":["P24(\"April\").","- P23(\"Brittany\").","- P29(\"Brittany\").","P25(\"April\", \"Caitlin\").","- P27(\"Caitlin\", \"Brittany\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- P11(V1, V3) :- P1(V3), - P3(V1, V3), - P5(V2, V3).","- P0(V2, V3) :- - P10(V2), - P15(V2, V3).","P1(V3) :- - P6(V3), - P8(V3), P20(V1, V3).","- P2(V3) :- P1(V3), not -P7(V3).","- P3(V0, V0) :- - P2(V0), not -P4(V0), not -P9(V0).","P4(V0) :- - P12(V0).","- P5(V0, V0) :- - P12(V0), not P13.","- P6(V0) :- - P12(V0), not P13.","P7(V3) :- - P0(V2, V3), not P21(V2, V3), not -P22(V2, V3).","- P8(V3) :- - P14(V3), - P18(V0, V2), not -P19(V2, V3).","P9(V0) :- - P14(V3), - P18(V0, V2), not -P19(V2, V3).","- P10(V2) :- - P15(V2, V3), not -P16(V2, V3), not P17(V2, V3)."],"noisy_rules":{"a":["P11(V3, V3) :- not P1(V3), P6(V3), P10(V2).","P11(V0, V0) :- - P9(V0)."],"b":["P8(V3) :- P5(V2, V3), P11(V1, V3).","- P20(V1, V3) :- P11(V1, V3)."],"c":["P14(V3) :- P8(V3).","P12(V0) :- P8(V3), - P9(V0)."],"d":["P13(V0, V0) :- P2(V0).","P5(V3, V3) :- P6(V3), not P23(V3)."],"e":["- P26(V2, V3) :- not -P24(V0), P25(V0, V2), - P27(V2, V3).","P28(V3) :- - P29(V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_65_9_8_4_6_0.5_1.0_3_2_3","seed":65,"num_facts":8,"num_rules":9,"num_related_predicates":17,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.125,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" many(\"Brett\", \"Michele\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- cannikin(\"Stephanie\", \"Michele\").","lips(\"Stephanie\", \"James\").","- daughter_cell(\"Stephanie\", \"Michele\").","marmot.","- seafood(\"Stephanie\", \"Michele\").","process_cheese(\"Stephanie\", \"Michele\").","- arts_and_crafts(\"Brett\", \"Michele\").","good_way_to_learn(\"James\", \"Michele\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- many(V0, V3) :- few(V3), tigris(V0, V2), not arts_and_crafts(V0, V3).","few(V2) :- - water_speedwell(V0, V2), not cavy(V0, V2), not -tigris(V0, V2).","- aperea(V1, V3) :- - cannikin(V1, V3).","- flapping(V1, V2) :- lips(V1, V2), good_way_to_learn(V2, V3).","guinea_pig(V1, V3) :- - daughter_cell(V1, V3).","- water_speedwell(V1, V2) :- - flapping(V1, V2).","- cavy(V1, V3) :- - aperea(V1, V3), not -guinea_pig(V1, V3).","- rodent(V2, V0) :- - cavy(V0, V2), not -marmot.","tigris(V3, V1) :- - rodent(V1, V3), not seafood(V1, V3), not -process_cheese(V1, V3)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_57_10_12_11_14_0.5_1.0_5_3_4","seed":57,"num_facts":13,"num_rules":13,"num_related_predicates":26,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P12(\"Diana\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P13(\"Tammy\").","P14(\"Tammy\", \"Diana\", \"Alexis\").","- P15(\"Tammy\", \"Diana\", \"Timothy\").","P16(\"Tammy\", \"Diana\", \"Timothy\").","P17(\"Tammy\", \"Diana\", \"Timothy\").","- P18(\"Tammy\", \"Diana\", \"Timothy\").","- P19(\"Tammy\", \"Diana\").","- P20(\"Timothy\", \"Alexis\").","P21(\"Timothy\", \"Anthony\").","- P22(\"Tammy\", \"Timothy\", \"Anthony\").","P23(\"Diana\", \"Alexis\", \"Anthony\").","- P24(\"Timothy\", \"Alexis\", \"Anthony\").","- P25(\"Timothy\", \"Alexis\", \"Anthony\")."],"noisy_facts":["P27(\"Tammy\", \"Timothy\", \"Anthony\").","- P36(\"Tammy\", \"Diana\", \"Anthony\").","- P26(\"Tammy\", \"Timothy\", \"Anthony\").","P29(\"Tammy\", \"Timothy\", \"Alexis\").","- P35(\"Diana\").","P34(\"Tammy\").","- P28(\"Tammy\", \"Timothy\", \"Alexis\").","P37(\"Tammy\", \"Timothy\", \"Alexis\").","P30(\"Tammy\", \"Timothy\", \"Alexis\").","P31(\"Timothy\", \"Alexis\", \"Anthony\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- P12(V1) :- - P10(V1, V4), P11(V0, V2, V4).","P0(V0, V2, V3) :- - P13(V0), - P19(V0, V1), - P20(V2, V3), P21(V2, V4), not P22(V0, V2, V4).","- P1(V0, V2, V4) :- - P13(V0), - P19(V0, V1), - P20(V2, V3), P21(V2, V4), not P22(V0, V2, V4).","- P2(V0) :- - P13(V0), - P19(V0, V1), - P20(V2, V3), P21(V2, V4), not P22(V0, V2, V4).","- P3(V0, V1, V2) :- P7(V0, V2, V4), P23(V1, V3, V4), not P24(V2, V3, V4), not P25(V2, V3, V4).","- P4(V0, V1) :- P14(V0, V1, V3).","- P5(V0, V2, V2) :- - P3(V0, V1, V2), not P15(V0, V1, V2), not -P16(V0, V1, V2), not -P17(V0, V1, V2), not P18(V0, V1, V2).","- P6(V1, V2) :- - P3(V0, V1, V2), not P15(V0, V1, V2), not -P16(V0, V1, V2), not -P17(V0, V1, V2), not P18(V0, V1, V2).","P7(V0, V2, V0) :- P0(V0, V2, V3), not P2(V0).","- P8(V2, V0, V4) :- - P1(V0, V2, V4).","- P9(V0, V3) :- - P2(V0), - P8(V1, V3, V4), P16(V0, V1, V2).","- P10(V1, V4) :- - P4(V0, V1), - P5(V0, V2, V4).","P11(V0, V2, V0) :- P0(V0, V2, V3), - P6(V1, V2), not P9(V0, V3)."],"noisy_rules":{"a":["P12(V0) :- P2(V0).","P12(V1) :- - P0(V0, V2, V3), not -P2(V0), P3(V0, V1, V2), P10(V1, V4)."],"b":["- P16(V0, V1, V2) :- P1(V0, V2, V4), not -P5(V0, V2, V4), P12(V1).","P18(V0, V1, V2) :- P2(V0), P8(V1, V3, V4), P10(V1, V4), - P11(V0, V2, V4), P12(V1)."],"c":["- P17(V0, V1, V2) :- P3(V0, V1, V2), P5(V0, V2, V4).","P2(V0) :- - P0(V0, V2, V3), not -P9(V0, V3)."],"d":["P25(V2, V4, V4) :- P6(V1, V2), - P7(V0, V2, V4), not P11(V0, V2, V4), - P26(V0, V2, V4), P27(V0, V2, V4).","P3(V0, V3, V2) :- - P0(V0, V2, V3), - P28(V0, V2, V3), P29(V0, V2, V3), P30(V0, V2, V3)."],"e":["- P32(V2, V3) :- P31(V2, V3, V4).","P33(V0, V2, V3) :- P34(V0), - P35(V1), - P36(V0, V1, V4), P37(V0, V2, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_98_7_6_1_4_0.5_1.0_5_2_3","seed":98,"num_facts":5,"num_rules":7,"num_related_predicates":12,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6666666666666667,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" P6(\"Cassandra\", \"Joseph\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P7(\"Cassandra\", \"Joseph\").","P8(\"Cassandra\").","P9(\"Cassandra\", \"Joseph\").","- P10(\"Cassandra\", \"Joseph\").","P11(\"Cassandra\", \"Joseph\")."],"noisy_facts":["- P12(\"Cassandra\").","P16(\"Cassandra\", \"Joseph\").","- P23(\"Cassandra\", \"Andrew\").","- P15(\"Cassandra\", \"Joseph\").","- P21(\"Cassandra\", \"Joseph\").","P18(\"Joseph\").","P19(\"Cassandra\", \"Joseph\").","- P20(\"Cassandra\", \"Joseph\").","P14(\"Cassandra\", \"Joseph\")."],"min_fact_dicts_for_query":["P8(\"Cassandra\").","P9(\"Cassandra\", \"Joseph\")."],"noiseless_rules":["- P6(V0, V2) :- P0(V0, V2), not P3(V0, V2), not -P11(V0, V2).","P0(V0, V2) :- P2(V0), P9(V0, V2).","P1(V0, V2) :- - P7(V0, V2), not -P9(V0, V2).","P2(V0) :- P8(V0).","- P3(V0, V2) :- P1(V0, V2), not -P4(V0, V2), not -P5(V0, V2).","P4(V0, V2) :- P9(V0, V2).","P5(V0, V2) :- P4(V0, V2), not P10(V0, V2)."],"noisy_rules":{"a":["P6(V0, V2) :- - P0(V0, V2), - P2(V0), not P4(V0, V2).","P6(V0, V2) :- - P0(V0, V2), - P1(V0, V2), P3(V0, V2), not P4(V0, V2), not P5(V0, V2)."],"b":["- P11(V0, V2) :- P6(V0, V2).","- P2(V0) :- - P1(V0, V2), not -P3(V0, V2), not P4(V0, V2), - P5(V0, V2), not -P6(V0, V2)."],"c":["- P2(V0) :- not P0(V0, V2), - P1(V0, V2), not -P3(V0, V2), not P4(V0, V2).","- P5(V0, V2) :- not P0(V0, V2), - P1(V0, V2), not P2(V0), not -P3(V0, V2), - P4(V0, V2)."],"d":["- P8(V0) :- not P0(V0, V2), not P2(V0), not -P3(V0, V2), - P4(V0, V2), not P12(V0).","- P13(V2, V2) :- not P1(V0, V2), not P4(V0, V2), P14(V0, V2), not P15(V0, V2), P16(V0, V2)."],"e":["- P17(V0, V2) :- not -P18(V2), P19(V0, V2), not P20(V0, V2), not P21(V0, V2).","- P22(V0) :- - P23(V0, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_95_8_11_11_14_0.5_1.0_5_1_2","seed":95,"num_facts":13,"num_rules":12,"num_related_predicates":25,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":" bunting(\"Wayne\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- chloride.","punt(\"Wayne\").","- bus.","facial.","book_jacket.","- role.","broth(\"Wayne\").","- colony(\"Wayne\").","club(\"Wayne\").","- bodily(\"Wayne\").","woods.","- contest.","- master_race."],"noisy_facts":["soul_patch(\"Beth\").","glory(\"Hannah\").","- scatophagy.","beef_broth(\"Wayne\").","- pulchritude(\"Hannah\")."],"min_fact_dicts_for_query":["- chloride.","club(\"Wayne\")."],"noiseless_rules":["- bunting(V2) :- - reed_bunting(V2), not indigo_bunting(V2), not snow_bunting(V2), not -yellow_breasted_bunting(V2), not -geographical_area(V2).","- reed_bunting(V2) :- barley_water(V2).","- indigo_bunting(V2) :- ortolan(V2), not -place(V2).","- snow_bunting(V2) :- yellowhammer(V2), not -yellow_breasted_bunting(V2).","yellowhammer(V2) :- - chloride, club(V2), not -woods, not contest, not master_race.","halide(V2) :- - chloride, club(V2), not -woods, not contest, not master_race.","barley_water(V0) :- halide(V0), not bus, not -facial, not -book_jacket, not role.","- chicken_broth(V0) :- halide(V0), not bus, not -facial, not -book_jacket, not role.","yellow_breasted_bunting(V2) :- - reed_bunting(V2), not -punt(V2).","ortolan(V2) :- - reed_bunting(V2), not -punt(V2).","geographical_area(V2) :- - chicken_broth(V2), not -broth(V2), not colony(V2), not -club(V2), not bodily(V2).","place(V2) :- - chicken_broth(V2), not -broth(V2), not colony(V2), not -club(V2), not bodily(V2)."],"noisy_rules":{"a":["bunting(V2) :- not -reed_bunting(V2), not -snow_bunting(V2), not yellow_breasted_bunting(V2), - ortolan(V2), - place(V2).","bunting(V2) :- indigo_bunting(V2), snow_bunting(V2), - yellowhammer(V2), - ortolan(V2), - geographical_area(V2)."],"b":["- place(V2) :- not -snow_bunting(V2), chicken_broth(V2), - geographical_area(V2), not -bunting(V2).","- geographical_area(V2) :- reed_bunting(V2), not barley_water(V2), not place(V2), not -bunting(V2)."],"c":["- punt(V2) :- reed_bunting(V2), not -indigo_bunting(V2), snow_bunting(V2), - yellow_breasted_bunting(V2), not place(V2).","- halide(V2) :- indigo_bunting(V2), not yellow_breasted_bunting(V2), - ortolan(V2), not place(V2)."],"d":["- yellow_breasted_bunting(V2) :- reed_bunting(V2), not -indigo_bunting(V2), - halide(V0), - geographical_area(V2), not scatophagy.","- broth(V2) :- snow_bunting(V2), not barley_water(V2), chicken_broth(V2), not yellow_breasted_bunting(V2), not -beef_broth(V2)."],"e":["intensity(V1) :- soul_patch(V1).","- beauty(V0) :- glory(V0), - pulchritude(V0)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_11_7_7_7_9_0.5_1.0_5_2_3","seed":11,"num_facts":11,"num_rules":8,"num_related_predicates":19,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" biceps_brachii(\"Kathy\", \"Jordan\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- worm(\"Jonathan\").","- uncheerfulness(\"Jordan\", \"Luis\").","dimness(\"Jordan\", \"Luis\").","- ethmoid(\"Jordan\", \"Luis\").","bowl(\"Kathy\", \"Jordan\").","scanner(\"Kathy\", \"Jordan\").","cap_screw(\"Jonathan\", \"Kathy\").","- head(\"Jonathan\", \"Jordan\").","bolt(\"Kathy\", \"Luis\").","microphone(\"Jordan\", \"Luis\").","- occipital_bone(\"Jordan\", \"Luis\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- worm(\"Jonathan\").","dimness(\"Jordan\", \"Luis\").","- ethmoid(\"Jordan\", \"Luis\").","cap_screw(\"Jonathan\", \"Kathy\").","- head(\"Jonathan\", \"Jordan\").","bolt(\"Kathy\", \"Luis\")."],"noiseless_rules":["- biceps_brachii(V1, V2) :- dish(V1, V3), paste(V2, V3).","casserole(V1, V2) :- - screw(V1, V2), cranium(V2, V3).","- screw(V1, V2) :- - worm(V0), cap_screw(V0, V1), - head(V0, V2), bolt(V1, V3), not -microphone(V2, V3).","- sugar_bowl(V1, V3) :- - worm(V0), cap_screw(V0, V1), - head(V0, V2), bolt(V1, V3), not -microphone(V2, V3).","dish(V1, V3) :- casserole(V1, V2), - sugar_bowl(V1, V3), not petri_dish(V1, V2), not -bowl(V1, V2), not -scanner(V1, V2).","- petri_dish(V3, V2) :- cranium(V2, V3), not uncheerfulness(V2, V3).","paste(V2, V3) :- dimness(V2, V3).","cranium(V2, V3) :- - ethmoid(V2, V3), not -microphone(V2, V3), not occipital_bone(V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_36_10_15_15_15_0.5_1.0_5_3_4","seed":36,"num_facts":19,"num_rules":16,"num_related_predicates":35,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"bastinado(\"Jessica\", \"Julia\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["cash_crop(\"Tiffany\", \"Jessica\", \"Abigail\").","louis_d_or(\"Tiffany\", \"Cassie\").","grease(\"Jessica\", \"Abigail\", \"Cassie\").","- animals_crops(\"Jessica\", \"Julia\", \"Cassie\").","- pepper(\"Tiffany\").","magma(\"Tiffany\").","- fall_out_of_love(\"Abigail\").","- jesus(\"Abigail\").","beat(\"Abigail\").","message(\"Jessica\", \"Abigail\").","expensive(\"Jessica\", \"Abigail\").","- slab(\"Tiffany\", \"Abigail\", \"Cassie\").","- satisfying_hunger_mid_day_hunger(\"Jessica\", \"Julia\", \"Cassie\").","sense_environment(\"Jessica\", \"Julia\", \"Cassie\").","- nut(\"Abigail\", \"Julia\", \"Cassie\").","- use(\"Jessica\", \"Abigail\").","- maraco(\"Jessica\", \"Abigail\").","long_seat_with_no_backrest(\"Jessica\", \"Abigail\").","- sea_island_cotton(\"Tiffany\", \"Jessica\", \"Julia\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["bastinado(V1, V3) :- ballet(V3), - sea_island_cotton(V0, V1, V3).","rye(V0) :- cash_crop(V0, V1, V2).","- socialising(V1, V2) :- cash_crop(V0, V1, V2).","- paw(V2) :- cash_crop(V0, V1, V2).","ballet(V0) :- rye(V0), not monopsony(V0), not -hexapod(V0), not pepper(V0), not -magma(V0).","jackdaw(V2) :- - socialising(V1, V2), not hear_very_well(V1, V2), not -wishbone(V1, V2), not -message(V1, V2), not -expensive(V1, V2).","trinitarian(V1, V2) :- - socialising(V1, V2), not hear_very_well(V1, V2), not -wishbone(V1, V2), not -message(V1, V2), not -expensive(V1, V2).","- monopsony(V4) :- jackdaw(V4), not -go_bankrupt(V4), not -nourishment(V4), not -fast_walking(V4).","- hear_very_well(V1, V2) :- louis_d_or(V0, V4), - slab(V0, V2, V4), - satisfying_hunger_mid_day_hunger(V1, V3, V4), not -sense_environment(V1, V3, V4), not nut(V2, V3, V4).","go_bankrupt(V4) :- louis_d_or(V0, V4), - slab(V0, V2, V4), - satisfying_hunger_mid_day_hunger(V1, V3, V4), not -sense_environment(V1, V3, V4), not nut(V2, V3, V4).","- new_world_mouse(V2, V3, V4) :- louis_d_or(V0, V4), - slab(V0, V2, V4), - satisfying_hunger_mid_day_hunger(V1, V3, V4), not -sense_environment(V1, V3, V4), not nut(V2, V3, V4).","hexapod(V2) :- - paw(V2), - new_world_mouse(V2, V3, V4), not fall_out_of_love(V2), not jesus(V2), not -beat(V2).","- causal_agent(V3, V3, V4) :- - paw(V2), - new_world_mouse(V2, V3, V4), not fall_out_of_love(V2), not jesus(V2), not -beat(V2).","nourishment(V4) :- trinitarian(V1, V2), - causal_agent(V1, V3, V4), not use(V1, V2), not maraco(V1, V2), not -long_seat_with_no_backrest(V1, V2).","wishbone(V1, V2) :- grease(V1, V2, V4).","fast_walking(V4) :- - animals_crops(V1, V3, V4)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_52_6_5_5_6_0.5_1.0_3_2_3","seed":52,"num_facts":7,"num_rules":6,"num_related_predicates":13,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"bell(\"Kelly\", \"Jake\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- gill(\"Kelly\", \"Melanie\").","cereal_bowl(\"Kelly\", \"Jake\").","landscaping(\"Kelly\", \"Melanie\").","paintball(\"Jake\", \"Melanie\").","- miner(\"Kelly\", \"Molly\").","- breastplate(\"Kelly\", \"Molly\").","- muenster."],"noisy_facts":[],"min_fact_dicts_for_query":["- gill(\"Kelly\", \"Melanie\").","cereal_bowl(\"Kelly\", \"Jake\").","landscaping(\"Kelly\", \"Melanie\")."],"noiseless_rules":["bell(V0, V1) :- - knell(V0), - bowl(V0, V1).","- edam(V1, V3) :- - cup(V0, V1), landscaping(V0, V3), not -paintball(V1, V3).","- cheese(V1, V3) :- - edam(V1, V3), not muenster.","- cup(V0, V0) :- - gill(V0, V3), not -landscaping(V0, V3).","- knell(V0) :- - cheese(V0, V2), not miner(V0, V2), not breastplate(V0, V2).","- bowl(V0, V1) :- cereal_bowl(V0, V1)."],"noisy_rules":{}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_49_7_9_7_9_0.5_1.0_5_3_4","seed":49,"num_facts":10,"num_rules":10,"num_related_predicates":20,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"paper(\"Michael\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- rest(\"Bryan\").","chicken(\"Michael\", \"Chris\").","- quilt(\"Anthony\", \"Chris\", \"Bryan\").","- ducks(\"Michael\", \"Bryan\").","dollar(\"Michael\", \"Bryan\").","relaxing(\"Michael\", \"Bryan\").","- camp(\"Michael\", \"Chris\").","dream(\"Michael\", \"Chris\").","master_bedroom(\"Michael\", \"Chris\").","- come_in_matching_sets(\"Chris\", \"Bryan\")."],"noisy_facts":["pillow(\"Anthony\", \"Chris\", \"Bryan\").","power(\"Tyler\", \"Anthony\", \"Chris\").","- thoroughbred(\"Tyler\", \"Michael\", \"Chris\").","find_underground(\"Bryan\").","disability_benefit(\"Anthony\", \"Bryan\").","- mutism(\"Anthony\", \"Michael\", \"Bryan\").","- plates(\"Michael\", \"Chris\").","bear_cub(\"Chris\", \"Bryan\").","- nightmare(\"Chris\", \"Bryan\").","- guilder(\"Tyler\", \"Anthony\", \"Michael\")."],"min_fact_dicts_for_query":["- rest(\"Bryan\").","chicken(\"Michael\", \"Chris\").","- camp(\"Michael\", \"Chris\")."],"noiseless_rules":["paper(V2) :- - bill(V2, V3), - mattress(V2, V4).","sleeping(V2, V4) :- - rest(V4), - camp(V2, V3), not -dream(V2, V3), not -master_bedroom(V2, V3), not come_in_matching_sets(V3, V4).","sheets(V3) :- - rest(V4), - camp(V2, V3), not -dream(V2, V3), not -master_bedroom(V2, V3), not come_in_matching_sets(V3, V4).","- bill(V2, V4) :- sleeping(V2, V4), not -duck(V2, V4), not ducks(V2, V4), not -dollar(V2, V4), not -relaxing(V2, V4).","duck(V2, V2) :- chicken(V2, V3), not camp(V2, V3).","cot(V2, V3, V2) :- chicken(V2, V3), not camp(V2, V3).","- bed(V3, V3, V3) :- chicken(V2, V3), not camp(V2, V3).","- nest(V2) :- sheets(V3), cot(V2, V3, V4).","- mattress(V2, V4) :- - bed(V1, V3, V4), - nest(V2), not -blanket(V1, V3, V4), not camp(V2, V3).","blanket(V1, V3, V4) :- - quilt(V1, V3, V4)."],"noisy_rules":{"a":["- paper(V2) :- - sheets(V3), bill(V2, V3), - duck(V2, V4), bed(V1, V3, V4), not -mattress(V2, V4).","- paper(V2) :- not -bill(V2, V3), not duck(V2, V4), - cot(V2, V3, V4), nest(V2)."],"b":["- sheets(V3) :- bed(V1, V3, V4), not -mattress(V2, V4), - blanket(V1, V3, V4), - paper(V2).","bed(V2, V2, V2) :- nest(V2), not paper(V2)."],"c":["- relaxing(V2, V4) :- - sleeping(V2, V4), bill(V2, V3), - cot(V2, V3, V4).","nest(V2) :- - sleeping(V2, V4), bill(V2, V3), not cot(V2, V3, V4)."],"d":["- sleeping(V2, V4) :- - cot(V2, V3, V4), bed(V1, V3, V4), not -mattress(V2, V4), not -pillow(V1, V3, V4).","come_in_matching_sets(V3, V4) :- not sheets(V3), not -bill(V2, V3), - cot(V2, V3, V4), mattress(V2, V4), not plates(V2, V3)."],"e":["- foot(V2, V4) :- disability_benefit(V1, V4), bear_cub(V3, V4), - guilder(V0, V1, V2).","- storm_sewer(V2, V3, V4) :- find_underground(V4), - nightmare(V3, V4), power(V0, V1, V3), not thoroughbred(V0, V2, V3), - mutism(V1, V2, V4)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_3_10_12_5_6_0.5_1.0_5_0_1","seed":3,"num_facts":8,"num_rules":13,"num_related_predicates":21,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"forge.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- head_cold.","- catch_crop.","- putting_chess_pieces_on.","chokecherry.","time_unit.","- great_dane.","yo_yo.","- exercise."],"noisy_facts":[],"min_fact_dicts_for_query":["- head_cold."],"noiseless_rules":["forge :- baby_rooster.","baseball_equipment :- - festering.","baby_rooster :- baseball_equipment, not parliamentary_democracy.","- layby :- - head_cold, not -chokecherry, not -time_unit, not great_dane, not -yo_yo.","water_speedwell :- - head_cold, not -chokecherry, not -time_unit, not great_dane, not -yo_yo.","buttock :- - catch_crop.","- baseball :- - catch_crop.","- hisser :- - catch_crop.","- sofabed :- - parliamentary_democracy, not mother_chicks.","- parliamentary_democracy :- - layby, not -buttock, not wapiti.","- wapiti :- - baseball.","- mother_chicks :- - putting_chess_pieces_on, not exercise.","- festering :- water_speedwell, not hisser, not sofabed."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_82_10_11_7_7_0.5_1.0_3_1_2","seed":82,"num_facts":11,"num_rules":12,"num_related_predicates":23,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"P11(\"Kelsey\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P12(\"Kelsey\").","- P13(\"Kelsey\").","P14(\"Kelsey\").","- P15(\"Kelsey\").","P16(\"Kelsey\").","- P17(\"Kelsey\").","P18(\"Kelsey\").","P19(\"Kelsey\").","P20(\"Kelsey\").","- P21(\"Kelsey\").","P22(\"Kelsey\")."],"noisy_facts":["- P28(\"John\").","P30(\"Kelsey\").","P26(\"John\").","- P24(\"Kelsey\").","P27(\"John\").","- P23(\"Kelsey\")."],"min_fact_dicts_for_query":["- P15(\"Kelsey\")."],"noiseless_rules":["P11(V0) :- P0(V0), not P4(V0), not -P9(V0).","P0(V0) :- - P5(V0), not -P6(V0), not -P16(V0).","- P1(V0) :- - P12(V0).","- P2(V0) :- - P12(V0).","- P3(V0) :- - P13(V0).","- P4(V0) :- P14(V0), not -P18(V0), not -P19(V0).","- P5(V0) :- P8(V0), not -P22(V0).","P6(V0) :- P7(V0), not -P10(V0), not P17(V0).","P7(V0) :- - P1(V0).","P8(V0) :- - P15(V0), not -P20(V0), not P21(V0).","P9(V0) :- - P2(V0), not P3(V0).","P10(V0) :- - P2(V0), not P3(V0)."],"noisy_rules":{"a":["- P11(V0) :- P3(V0).","- P11(V0) :- - P8(V0), not P10(V0)."],"b":["- P8(V0) :- - P11(V0).","P17(V0) :- - P9(V0), not P11(V0)."],"c":["- P18(V0) :- P1(V0).","- P8(V0) :- not -P5(V0), - P6(V0), not P10(V0)."],"d":["- P19(V0) :- not -P4(V0), - P10(V0), - P23(V0).","P4(V0) :- not P7(V0), - P24(V0)."],"e":["- P25(V2) :- not -P26(V2), P27(V2), not P28(V2).","- P29(V0) :- P30(V0)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_32_9_12_9_11_0.5_1.0_5_1_2","seed":32,"num_facts":12,"num_rules":13,"num_related_predicates":25,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" murdering(\"Brandon\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- bare_bone(\"Daniel\").","- white(\"Brandon\").","enter_hangar(\"Brandon\").","answering_questions(\"Brandon\").","- blanket(\"Brandon\").","chicken_noodle(\"Brandon\").","- occurrence.","- mammoth_cave_national_park.","alienation.","paradiddle.","warbler(\"Brandon\").","- dollhouse(\"Brandon\")."],"noisy_facts":["bhutan.","- beard(\"Daniel\").","- bun.","meeting_people(\"Brandon\").","- roll_under_table(\"Brandon\").","cane(\"Brandon\").","- patter(\"Daniel\")."],"min_fact_dicts_for_query":["enter_hangar(\"Brandon\")."],"noiseless_rules":["- murdering(V0) :- place_to_stay(V0), not lunar_crater(V0), not -morula(V0).","place_to_stay(V0) :- vegetation(V0), not atlantic(V0), not -warbler(V0).","- bony_necks_with_very_little_meat(V1) :- - bare_bone(V1).","- lunar_crater(V0) :- - white(V0), not occurrence, not mammoth_cave_national_park, not -alienation, not -paradiddle.","hotel_bill(V0) :- - white(V0), not occurrence, not mammoth_cave_national_park, not -alienation, not -paradiddle.","vegetation(V0) :- willow_oak(V0), not -disavowal(V0), not -answering_questions(V0), not blanket(V0), not -chicken_noodle(V0).","morula(V0) :- - epicranium(V0), not -expense(V0), not white(V0), not -warbler(V0), not dollhouse(V0).","- atlantic(V0) :- - epicranium(V0), not -expense(V0), not white(V0), not -warbler(V0), not dollhouse(V0).","willow_oak(V0) :- - epicranium(V0), not -expense(V0), not white(V0), not -warbler(V0), not dollhouse(V0).","disavowal(V1) :- hotel_bill(V1), not elbow(V1).","- epicranium(V0) :- enter_hangar(V0).","expense(V1) :- - bony_necks_with_very_little_meat(V1).","- elbow(V1) :- - bony_necks_with_very_little_meat(V1)."],"noisy_rules":{"a":["murdering(V0) :- lunar_crater(V0).","murdering(V0) :- bony_necks_with_very_little_meat(V1), not hotel_bill(V1), not -atlantic(V0), - disavowal(V0), epicranium(V0)."],"b":["elbow(V1) :- - hotel_bill(V1), epicranium(V0), - expense(V0), not -murdering(V0).","- vegetation(V0) :- not -lunar_crater(V0), - hotel_bill(V1), murdering(V0)."],"c":["atlantic(V0) :- - morula(V0), not willow_oak(V0).","bony_necks_with_very_little_meat(V1) :- - morula(V0), not -atlantic(V0), not expense(V0), elbow(V1)."],"d":["- morula(V1) :- not hotel_bill(V1), elbow(V1), not -bhutan.","bony_necks_with_very_little_meat(V0) :- - morula(V0), not -epicranium(V0), - bun."],"e":["- sacrum(V0) :- - roll_under_table(V0), not -meeting_people(V0), not -cane(V0).","ostrich(V1) :- not beard(V1), - patter(V1)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_37_9_12_8_9_0.5_1.0_5_0_1","seed":37,"num_facts":12,"num_rules":13,"num_related_predicates":25,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"P12.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P13.","P14.","P15.","- P16.","- P17.","P18.","P19.","P20.","P21.","P22.","P23.","- P24."],"noisy_facts":["- P29.","- P31.","- P25.","P26.","P28."],"min_fact_dicts_for_query":["- P13."],"noiseless_rules":["P12 :- - P4, not P7, not -P10.","P0 :- - P13.","P1 :- P14, not -P23, not P24.","- P2 :- P14, not -P23, not P24.","P3 :- - P8.","- P4 :- P0, not -P3, not P5, not P11.","- P5 :- P15.","P6 :- P15.","- P7 :- - P16, not P17, not -P18, not -P19, not -P20.","- P8 :- - P16, not P17, not -P18, not -P19, not -P20.","- P9 :- P1, not P13.","P10 :- - P2, not -P6, not P9, not -P21, not -P22.","- P11 :- - P2, not -P6, not P9, not -P21, not -P22."],"noisy_rules":{"a":["- P12 :- - P0, P4, not -P5, - P10.","- P12 :- - P0, P5."],"b":["P13 :- - P12.","P11 :- not P3, P8, - P12."],"c":["P17 :- - P6.","- P10 :- - P1."],"d":["P17 :- not P1, not -P7, P8, - P25.","- P6 :- not -P2, - P3, P4, P8, P26."],"e":["P27 :- not -P28, - P29.","P30 :- - P31."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_58_9_12_8_9_0.5_1.0_5_0_1","seed":58,"num_facts":12,"num_rules":13,"num_related_predicates":25,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.125,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" antelope.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- silo.","- tufted_puffin.","bottom.","exmoor.","trotter.","ram.","ewe.","- bovid.","- domestic_goat.","beard.","mailboat.","- antler."],"noisy_facts":["- pudding.","- baked_alaska.","procedure.","- showing_movies.","kid.","blancmange."],"min_fact_dicts_for_query":["- silo."],"noiseless_rules":["- antelope :- - wild_goat.","- military_installation :- - silo.","- mouton :- - silo.","horn :- - tufted_puffin, not antler.","bovine :- - tufted_puffin, not antler.","- wild_goat :- - military_installation, not lamb, not -sheep, not -goat, not domestic_goat.","- billy :- bottom.","- lamb :- - mouton, not -horn, not billy, not -deer.","domestic_sheep :- exmoor.","sheep :- domestic_sheep, not -withers, not -trotter, not -ram, not -ewe.","deer :- domestic_sheep, not -withers, not -trotter, not -ram, not -ewe.","goat :- bovine, not bovid, not domestic_goat, not -beard, not -mailboat.","withers :- bovine, not bovid, not domestic_goat, not -beard, not -mailboat."],"noisy_rules":{"a":["antelope :- military_installation.","antelope :- mouton, - horn."],"b":["- horn :- antelope.","bovid :- not -military_installation, not bovine, not sheep, - goat, not -antelope."],"c":["- goat :- - horn, not bovine, not -wild_goat, billy.","bovid :- not -military_installation, wild_goat, not domestic_sheep."],"d":["- domestic_sheep :- mouton, not -billy, lamb, - deer, not showing_movies.","- goat :- not -mouton, not bovine, lamb, - withers, kid."],"e":["- dessert :- blancmange, - baked_alaska, - pudding.","- activity :- procedure."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_44_10_12_9_9_0.5_1.0_5_1_2","seed":44,"num_facts":13,"num_rules":13,"num_related_predicates":26,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" P12(\"Elizabeth\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P13(\"Elizabeth\").","P14(\"John\").","P15(\"Elizabeth\").","P16(\"Elizabeth\").","- P17(\"Elizabeth\").","P18(\"Elizabeth\").","- P19(\"Elizabeth\").","- P20(\"Elizabeth\").","- P21(\"Elizabeth\").","- P22(\"Elizabeth\").","P23(\"Elizabeth\").","- P24(\"Elizabeth\").","P25."],"noisy_facts":["P29(\"John\").","P28(\"John\").","- P30(\"John\").","P32(\"John\").","P26(\"Elizabeth\")."],"min_fact_dicts_for_query":["P13(\"Elizabeth\")."],"noiseless_rules":["- P12(V1) :- P0(V1), not -P2(V1), not P5(V1), not -P6(V1), not P7(V1).","P0(V1) :- P3(V1).","- P1(V1) :- P13(V1), not P17(V1), not -P18(V1), not P19(V1), not P20(V1).","P2(V1) :- - P9(V1), not -P10(V1).","P3(V1) :- - P9(V1), not -P10(V1).","P4(V0) :- P14(V0).","- P5(V1) :- P15(V1).","P6(V1) :- P8(V1), not P11(V1).","- P7(V1) :- P16(V1), not P21(V1), not P22(V1), not -P23(V1), not P24(V1).","P8(V1) :- P16(V1), not P21(V1), not P22(V1), not -P23(V1), not P24(V1).","- P9(V1) :- - P1(V1).","P10(V0) :- P4(V0), not -P25.","- P11(V0) :- P4(V0), not -P25."],"noisy_rules":{"a":["P12(V1) :- P1(V1), - P2(V1), - P8(V1), not -P11(V1).","P12(V1) :- P9(V1)."],"b":["- P25(V1) :- not P8(V1), P12(V1).","P11(V1) :- P1(V1), not -P5(V1), not -P12(V1)."],"c":["- P3(V1) :- not P0(V1), not -P1(V1), P5(V1), not P6(V1), not -P11(V1).","- P4(V1) :- - P3(V1), P5(V1)."],"d":["- P4(V1) :- - P8(V1).","- P18(V1) :- not -P5(V1), not P8(V1), P26(V1)."],"e":["- P27(V0) :- P28(V0), not -P29(V0), not P30(V0).","- P31(V0) :- P32(V0)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_26_8_12_12_15_0.5_1.0_5_3_4","seed":26,"num_facts":14,"num_rules":13,"num_related_predicates":27,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P12(\"Bryan\", \"Anthony\", \"Amanda\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P13(\"Bryan\", \"Pamela\", \"Anthony\").","- P14(\"Noah\").","P15(\"Pamela\").","P16(\"Pamela\", \"Amanda\").","P17(\"Noah\", \"Bryan\", \"Pamela\").","- P18(\"Noah\", \"Bryan\", \"Pamela\").","- P19(\"Bryan\", \"Anthony\", \"Amanda\").","- P20(\"Bryan\", \"Anthony\", \"Amanda\").","- P21(\"Bryan\", \"Anthony\", \"Amanda\").","P22(\"Bryan\", \"Anthony\", \"Amanda\").","P23(\"Bryan\").","P24(\"Bryan\").","P25(\"Bryan\").","- P26(\"Bryan\", \"Pamela\", \"Anthony\")."],"noisy_facts":["P28(\"Bryan\").","P30(\"Bryan\", \"Pamela\", \"Anthony\").","P31(\"Pamela\", \"Anthony\", \"Amanda\").","- P33(\"Bryan\", \"Anthony\", \"Amanda\").","P27(\"Bryan\")."],"min_fact_dicts_for_query":["P13(\"Bryan\", \"Pamela\", \"Anthony\").","- P14(\"Noah\").","P15(\"Pamela\").","P16(\"Pamela\", \"Amanda\").","P17(\"Noah\", \"Bryan\", \"Pamela\").","P22(\"Bryan\", \"Anthony\", \"Amanda\")."],"noiseless_rules":["- P12(V1, V3, V4) :- P0(V0, V3), P4(V1, V4), not P6(V0, V1, V3).","P0(V0, V3) :- P2(V2, V3), - P5(V0, V1, V4), not -P10(V1, V3, V4).","P1(V1, V2, V3) :- P2(V2, V3), - P5(V0, V1, V4), not -P10(V1, V3, V4).","P2(V2, V3) :- P13(V1, V2, V3), P22(V1, V3, V4).","P3(V1) :- P13(V1, V2, V3), P22(V1, V3, V4).","P4(V1, V4) :- - P14(V0), P15(V2), P16(V2, V4), P17(V0, V1, V2), not P18(V0, V1, V2).","- P5(V1, V1, V1) :- P3(V1), not P7(V1), not P11(V1).","- P6(V3, V1, V3) :- P1(V1, V2, V3), not -P8(V1, V2, V3), not P26(V1, V2, V3).","- P7(V1) :- P3(V1), P23(V1), P24(V1), P25(V1), - P26(V1, V2, V3).","P8(V1, V2, V3) :- P3(V1), P23(V1), P24(V1), P25(V1), - P26(V1, V2, V3).","P9(V2, V3) :- P3(V1), P23(V1), P24(V1), P25(V1), - P26(V1, V2, V3).","P10(V1, V3, V4) :- P9(V2, V4), - P19(V1, V3, V4), not P20(V1, V3, V4), not P21(V1, V3, V4), not -P22(V1, V3, V4).","- P11(V1) :- P9(V2, V4), - P19(V1, V3, V4), not P20(V1, V3, V4), not P21(V1, V3, V4), not -P22(V1, V3, V4)."],"noisy_rules":{"a":["P12(V1, V3, V2) :- - P1(V1, V2, V3), - P2(V2, V3), P6(V0, V1, V3), not -P7(V1).","P12(V1, V3, V0) :- - P0(V0, V3), - P1(V1, V2, V3), not -P6(V0, V1, V3)."],"b":["P26(V1, V4, V3) :- - P3(V1), P7(V1), - P10(V1, V3, V4), not -P12(V1, V3, V4).","- P13(V1, V2, V3) :- - P2(V2, V3), not P9(V2, V4), P12(V1, V3, V4)."],"c":["P7(V1) :- - P2(V2, V3), P6(V0, V1, V3), - P9(V2, V4), P11(V1).","P20(V1, V3, V4) :- - P0(V0, V3), - P1(V1, V2, V3), P7(V1), - P10(V1, V3, V4)."],"d":["P5(V3, V1, V1) :- - P8(V1, V2, V3).","P14(V1) :- P7(V1), P11(V1), not -P27(V1), not -P28(V1)."],"e":["- P29(V2, V4) :- P30(V1, V2, V3), P31(V2, V3, V4).","- P32(V1, V3, V4) :- - P33(V1, V3, V4)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_47_9_11_2_3_0.5_1.0_5_1_2","seed":47,"num_facts":5,"num_rules":12,"num_related_predicates":17,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"garden(\"Vincent\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- ox.","- bird(\"Vincent\").","- social_event(\"Katherine\").","flower(\"Vincent\").","beauty."],"noisy_facts":["- relation(\"Katherine\").","miracle(\"Jennifer\").","- fluff(\"Jennifer\").","before(\"Katherine\").","turkey_red(\"Jennifer\").","automobiles(\"Katherine\").","germanium(\"Katherine\").","- nest.","chicken."],"min_fact_dicts_for_query":["- ox.","flower(\"Vincent\")."],"noiseless_rules":["garden(V1) :- animal(V1), not branches(V1), not oeuvre(V1).","animal(V1) :- - beast(V1), not chick(V1).","tree(V2) :- pretty(V2), not -chess_board(V2).","- beast(V1) :- - ox, flower(V1), not -beauty.","pretty(V1) :- - ox, flower(V1), not -beauty.","looks(V1) :- - ox, flower(V1), not -beauty.","has(V1) :- - bird(V1), not -flower(V1).","chess_board(V2) :- - social_event(V2).","- hot_girl(V2) :- - social_event(V2).","- chick(V2) :- looks(V2).","- branches(V2) :- tree(V2), not hot_girl(V2).","- oeuvre(V1) :- has(V1)."],"noisy_rules":{"a":["- garden(V1) :- oeuvre(V1).","- garden(V1) :- - has(V1), hot_girl(V2)."],"b":["- flower(V1) :- - garden(V1).","beast(V1) :- beast(V1), not looks(V2), - chess_board(V2), hot_girl(V2), - garden(V1)."],"c":["hot_girl(V2) :- - animal(V1), - pretty(V2), - looks(V2), chick(V1), not -branches(V1).","- beauty(V1) :- - tree(V2), - looks(V2), - chess_board(V2), hot_girl(V2), branches(V1)."],"d":["- animal(V1) :- - pretty(V2), - looks(V2), chick(V1), chicken.","- tree(V2) :- beast(V1), - pretty(V2), not nest."],"e":["tin(V0) :- not fluff(V0), turkey_red(V0), miracle(V0).","- smother(V2) :- germanium(V2), not -automobiles(V2), not -before(V2), - relation(V2)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_32_10_11_10_13_0.5_1.0_3_0_1","seed":32,"num_facts":15,"num_rules":12,"num_related_predicates":27,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":12,"target_query":"fruit.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- almond.","- bus.","moose_and_turtles_both.","delicious.","- elevator.","empire.","baldwin.","- cembra_nut.","peanut.","- pecan.","- berry.","acorn.","mob.","- ping.","- bag."],"noisy_facts":[],"min_fact_dicts_for_query":["- almond."],"noiseless_rules":["fruit :- - seed, not -edible_fruit, not -acorn.","edible_nut :- - almond, not -peanut, not pecan.","cooking_apple :- - almond, not -peanut, not pecan.","- transport :- - bus, not elevator, not bag.","crab_apple :- - bus, not elevator, not bag.","litchi :- moose_and_turtles_both, not cembra_nut.","- eating_apple :- delicious, not -empire, not -baldwin.","- seed :- cooking_apple, not nut, not -safflower_seed.","- nut :- edible_nut, not transport, not cembra_nut.","edible_fruit :- litchi, not apple, not berry.","safflower_seed :- - elevator, not -mob, not ping.","- apple :- cooking_apple, not -crab_apple, not eating_apple."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_39_9_13_5_5_0.5_1.0_3_0_1","seed":39,"num_facts":9,"num_rules":14,"num_related_predicates":23,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.375,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"reproduction.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- arpeggio.","- monitor.","- transmit_bubonic_plague.","- blanket.","sierra_leonean.","enjoying_food.","- mattress_cover.","sforzando.","- common_chord."],"noisy_facts":[],"min_fact_dicts_for_query":["- transmit_bubonic_plague."],"noiseless_rules":["reproduction :- - parturition, not layer.","african :- ewe, not -namibian, not -sierra_leonean.","oval :- ewe, not -namibian, not -sierra_leonean.","- schlepper :- african, not -chord, not -potawatomi.","chord :- - arpeggio, not -sforzando, not common_chord.","ewe :- - monitor.","namibian :- - transmit_bubonic_plague.","potawatomi :- - transmit_bubonic_plague.","farrow :- - transmit_bubonic_plague.","- hatch :- oval, not schlepper, not -bedclothes.","- parturition :- farrow, not hatch, not -laying.","- layer :- - blanket, not -enjoying_food, not mattress_cover.","bedclothes :- - blanket, not -enjoying_food, not mattress_cover.","laying :- - blanket, not -enjoying_food, not mattress_cover."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_39_10_12_9_12_0.5_1.0_5_3_4","seed":39,"num_facts":13,"num_rules":13,"num_related_predicates":26,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.2222222222222223,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"seat(\"Megan\", \"Matthew\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["english_saddle(\"Joanna\", \"Rachel\").","- pipes(\"Joanna\", \"Rachel\").","- skin(\"Matthew\", \"John\", \"Rachel\").","- sliding_seat(\"Matthew\", \"John\", \"Rachel\").","- milk(\"Matthew\", \"John\", \"Rachel\").","- cream(\"Matthew\", \"John\", \"Rachel\").","muenster(\"Megan\", \"Matthew\", \"Rachel\").","- triple_cream(\"Megan\", \"Matthew\", \"Rachel\").","brie(\"Megan\", \"Matthew\", \"Rachel\").","grated_cheese(\"Megan\", \"Matthew\", \"Rachel\").","- stock_saddle(\"Megan\", \"Joanna\", \"Rachel\").","- pommel(\"Joanna\", \"Matthew\", \"John\").","stirrup(\"Joanna\", \"John\", \"Rachel\")."],"noisy_facts":[],"min_fact_dicts_for_query":["english_saddle(\"Joanna\", \"Rachel\").","- skin(\"Matthew\", \"John\", \"Rachel\").","- stock_saddle(\"Megan\", \"Joanna\", \"Rachel\").","- pommel(\"Joanna\", \"Matthew\", \"John\")."],"noiseless_rules":["seat(V0, V2) :- - ghee(V2, V4), saddle(V0, V1, V3), not -dairy_product(V0, V1, V3), not sliding_seat(V2, V3, V4).","whey(V2, V3, V4) :- - marker(V2, V4), protecting_body(V2, V3, V4).","- ghee(V2, V4) :- - marker(V2, V4), protecting_body(V2, V3, V4).","saddle(V0, V1, V3) :- english_saddle(V1, V4), - stock_saddle(V0, V1, V4), - pommel(V1, V2, V3), not -stirrup(V1, V3, V4).","- marker(V2, V4) :- english_saddle(V1, V4), - stock_saddle(V0, V1, V4), - pommel(V1, V2, V3), not -stirrup(V1, V3, V4).","dairy_product(V2, V3, V3) :- whey(V2, V3, V4), not -butter(V2, V3, V4), not cheese(V2, V3, V4), not milk(V2, V3, V4), not cream(V2, V3, V4).","stick(V1, V2, V4) :- - pipes(V1, V4), muenster(V0, V2, V4).","protecting_body(V2, V3, V4) :- - skin(V2, V3, V4).","- gouda(V2) :- - skin(V2, V3, V4).","butter(V2, V1, V4) :- stick(V1, V2, V4), not clarified_butter(V1, V2, V4).","- clarified_butter(V4, V2, V4) :- - ghee(V2, V4), not -shell(V2, V4).","- cheese(V2, V2, V4) :- - gouda(V2), muenster(V0, V2, V4), not triple_cream(V0, V2, V4), not -brie(V0, V2, V4), not -grated_cheese(V0, V2, V4).","shell(V2, V4) :- - sliding_seat(V2, V3, V4)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_94_8_8_7_7_0.5_1.0_3_0_1","seed":94,"num_facts":11,"num_rules":9,"num_related_predicates":20,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.857142857142857,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" stenograph.","target_query_in_answerset":false,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["second_joint.","serve_humanity.","not_all_mammals.","P12.","adhesive_material.","survival.","wishbone.","wildfowl.","mantle.","item.","shelter."],"noisy_facts":[],"min_fact_dicts_for_query":["second_joint.","serve_humanity.","not_all_mammals.","P12.","adhesive_material.","survival.","wishbone.","wildfowl.","mantle.","item.","shelter."],"noiseless_rules":["stenograph :- meat, shelter.","helping :- second_joint, wishbone, wildfowl.","bird :- second_joint, wishbone, wildfowl.","muck :- serve_humanity.","dogs_and_rabbits :- not_all_mammals.","dark_meat :- small_indefinite_quantity, mantle, item.","veal :- P12, adhesive_material, survival.","small_indefinite_quantity :- helping, muck, dogs_and_rabbits.","meat :- bird, dark_meat, veal."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_57_10_13_13_15_0.5_1.0_3_0_1","seed":57,"num_facts":15,"num_rules":14,"num_related_predicates":29,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":14,"target_query":"belief.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- experience.","- flow.","- protons.","store_photographs.","dirtiness.","object.","idea.","- scissors.","area.","dumb_bomb.","asthenosphere.","- cognition.","spiritual_being.","wash.","fahrenheit."],"noisy_facts":["- ring.","- teach.","- adult_education.","- ammunition.","- milk_cows.","golden_retrievers."],"min_fact_dicts_for_query":["- flow."],"noiseless_rules":["belief :- pacifism, not -opinion, not -spiritual_being.","education :- - experience, not -object, not -idea.","content :- - experience, not -object, not -idea.","- microwave_bomb :- - experience, not -object, not -idea.","- layer :- - suffragism, not -asthenosphere, not cognition.","- crust :- - suffragism, not -asthenosphere, not cognition.","- chinese_food :- - flow, not protons, not -store_photographs.","- region :- - layer, not scissors, not -area.","- fortune :- - layer, not scissors, not -area.","- suffragism :- education, not -wash, not -fahrenheit.","- spiritualism :- content, not microwave_bomb, not layer.","- bomb :- - microwave_bomb, not spiritualism, not -dumb_bomb.","pacifism :- - chinese_food, not region, not -dirtiness.","opinion :- - crust, not fortune, not bomb."],"noisy_rules":{"a":["- belief :- suffragism, - pacifism, - opinion.","- belief :- spiritualism."],"b":["- content :- - belief.","suffragism :- not pacifism, - belief."],"c":["chinese_food :- fortune.","- opinion :- crust, not -suffragism, not -spiritualism."],"d":["cognition :- - content, - adult_education, - teach.","spiritualism :- not -fortune, bomb, not ammunition."],"e":["sound :- - ring, - milk_cows.","morris_chair :- golden_retrievers."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_14_9_10_9_11_0.5_1.0_3_2_3","seed":14,"num_facts":14,"num_rules":11,"num_related_predicates":25,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.375,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" angels(\"Aaron\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["creation(\"Richard\", \"Aaron\").","- mist(\"Richard\", \"Kimberly\").","- summer(\"Richard\", \"Daniel\").","heat(\"Daniel\").","steam(\"Daniel\").","- chick(\"Aaron\", \"Kimberly\").","soup(\"Aaron\", \"Daniel\").","garment_cutter(\"Richard\", \"Aaron\").","- playing_harp(\"Kimberly\", \"Daniel\").","drop(\"Aaron\", \"Kimberly\").","- room(\"Kimberly\", \"Daniel\").","- protection(\"Aaron\", \"Kimberly\").","procedure(\"Kimberly\", \"Daniel\").","cold(\"Daniel\")."],"noisy_facts":["- riding_boot(\"Kimberly\", \"Daniel\").","bakery(\"Richard\", \"Aaron\").","- exodus(\"Richard\", \"Aaron\")."],"min_fact_dicts_for_query":["creation(\"Richard\", \"Aaron\").","- protection(\"Aaron\", \"Kimberly\").","procedure(\"Kimberly\", \"Daniel\")."],"noiseless_rules":["- angels(V1) :- thunder(V1, V2), zebu(V1, V3), not playing_harp(V2, V3).","thunder(V1, V2) :- creation(V0, V1), - protection(V1, V2), procedure(V2, V3).","activity(V1, V3) :- creation(V0, V1), - protection(V1, V2), procedure(V2, V3).","- dew(V0, V1) :- - mist(V0, V2), drop(V1, V2), - room(V2, V3).","zebu(V1, V3) :- activity(V1, V3), not -fire(V1, V3), not -morning(V1, V3).","fire(V1, V3) :- - hot(V3), - temperature(V0, V3), smoke(V1, V3).","- hot(V3) :- - summer(V0, V3), - chick(V1, V2), not -soup(V1, V3).","- after(V1) :- - summer(V0, V3), - chick(V1, V2), not -soup(V1, V3).","- temperature(V3, V3) :- - hot(V3), not -heat(V3), not -cold(V3).","morning(V1, V1) :- - dew(V0, V1), not after(V1), not -garment_cutter(V0, V1).","smoke(V3, V3) :- - hot(V3), not -steam(V3)."],"noisy_rules":{"a":["angels(V3) :- hot(V3).","angels(V1) :- - fire(V1, V3), not -hot(V3), temperature(V0, V3)."],"b":["- drop(V1, V3) :- hot(V3), after(V1), not -angels(V1).","- drop(V1, V0) :- dew(V0, V1), - smoke(V1, V3), angels(V1)."],"c":["hot(V3) :- - fire(V1, V3), after(V1), temperature(V0, V3).","after(V1) :- - thunder(V1, V2), temperature(V0, V3), - morning(V1, V3)."],"d":["- thunder(V3, V3) :- hot(V3).","- morning(V1, V1) :- dew(V0, V1), not -bakery(V0, V1)."],"e":["boot(V2, V3) :- - riding_boot(V2, V3).","escape(V0, V1) :- - exodus(V0, V1)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_57_9_13_8_9_0.5_1.0_5_0_1","seed":57,"num_facts":10,"num_rules":14,"num_related_predicates":24,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.125,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":"eating.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- napkin.","- find_outside.","- celebrating_birthday.","servant.","breakfast_lunch_and_dinner.","egg.","desk.","- eat.","leg.","bird."],"noisy_facts":["eagles.","cake.","- plate.","- holy_day_of_obligation.","- whirligig_beetle."],"min_fact_dicts_for_query":["- napkin."],"noiseless_rules":["eating :- - table, not party, not -animal.","meals :- - napkin, not celebrating_birthday, not -servant, not -breakfast_lunch_and_dinner, not -egg.","nest :- - napkin, not celebrating_birthday, not -servant, not -breakfast_lunch_and_dinner, not -egg.","- food :- - napkin, not celebrating_birthday, not -servant, not -breakfast_lunch_and_dinner, not -egg.","- chicken :- - napkin, not celebrating_birthday, not -servant, not -breakfast_lunch_and_dinner, not -egg.","- table :- - chair, not meat, not -desk, not eat, not -leg.","- baking_cake :- - chair, not meat, not -desk, not eat, not -leg.","- chair :- meals.","- soup :- meals.","- meat :- nest, not soup.","- squirrel :- - find_outside, not -bird.","- party :- - food.","animal :- - chicken, not table, not -throwing_birthday_party.","throwing_birthday_party :- - baking_cake, not squirrel."],"noisy_rules":{"a":["- eating :- not -chicken, baking_cake, not animal.","- eating :- food, not -chicken, meat, not -squirrel, - throwing_birthday_party."],"b":["- throwing_birthday_party :- not nest, food, not -baking_cake, - animal, - eating.","food :- - eating."],"c":["- bird :- - nest, chicken, not -baking_cake, not -meat, not animal.","eat :- - nest, baking_cake, meat, - throwing_birthday_party."],"d":["celebrating_birthday :- not -baking_cake, party, not throwing_birthday_party, not -cake.","- meals :- not -soup, meat, - animal, - plate."],"e":["- beetle :- - whirligig_beetle.","- name_after_bird_of_prey :- eagles, not holy_day_of_obligation."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_54_8_10_9_10_0.5_1.0_5_0_1","seed":54,"num_facts":12,"num_rules":11,"num_related_predicates":23,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.857142857142857,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" seed.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["stairhead.","- kerb_crawler.","atom.","parvis.","paid.","place_name.","from_cow.","- banana.","- plating.","- lips_for_kissing.","herr.","cappuccino."],"noisy_facts":["rule.","- third_dimension.","- yukon.","sleep_standing.","- cave.","herring_salad.","angiologist.","- broth_of_boy.","- inland_bill.","- making_babies."],"min_fact_dicts_for_query":["stairhead."],"noiseless_rules":["- seed :- tape, not -entertaining_friends, not giving_gifts_make_people_happy, not banana, not plating.","tape :- - man, not lips_for_kissing, not -herr, not -cappuccino.","stogie :- stairhead.","gallinaceous_bird :- stairhead.","entertaining_friends :- - kerb_crawler, not -parvis, not -paid, not -place_name, not -from_cow.","- ice_bear :- - kerb_crawler, not -parvis, not -paid, not -place_name, not -from_cow.","- tire :- stogie, not -stairhead.","restaurant :- atom.","- giving_gifts_make_people_happy :- - ice_bear.","proturan :- - ice_bear.","- man :- gallinaceous_bird, not tire, not -restaurant, not -proturan."],"noisy_rules":{"a":["seed :- - tape, not -ice_bear, not -man.","seed :- - tape, - stogie, tire, giving_gifts_make_people_happy."],"b":["- atom :- seed.","kerb_crawler :- - stogie, not -man, seed."],"c":["- atom :- - stogie, - entertaining_friends.","man :- - gallinaceous_bird, not entertaining_friends, not restaurant."],"d":["- place_name :- - tape, not stogie, not restaurant, not cave, not -herring_salad.","- paid :- not tape, not proturan, angiologist."],"e":["barn :- sleep_standing, not making_babies, rule, - yukon.","fuel_air_explosive :- not third_dimension, - inland_bill, - broth_of_boy."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_16_9_11_3_4_0.5_1.0_3_1_2","seed":16,"num_facts":5,"num_rules":12,"num_related_predicates":17,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P11(\"Norman\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P12(\"Norman\").","P13(\"Norman\").","P14(\"Norman\").","P15.","P16(\"Norman\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P12(\"Norman\").","P13(\"Norman\").","P14(\"Norman\").","P15.","P16(\"Norman\")."],"noiseless_rules":["P11(V1) :- P5(V1), P6(V1).","P0(V1) :- P2(V1), P4(V1), P8(V1).","P1(V1) :- P10(V1), P16(V1).","P2(V1) :- P12(V1), P14(V1).","P3(V1) :- P12(V1), P14(V1).","P4(V1) :- P13(V1).","P5(V1) :- P0(V1), P1(V1).","P6(V1) :- P3(V1), P14(V1), P15.","P7(V1) :- P3(V1), P14(V1), P15.","P8(V2) :- P7(V2).","P9(V2) :- P7(V2).","P10(V2) :- P9(V2)."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_49_5_6_2_4_0.5_1.0_5_2_3","seed":49,"num_facts":4,"num_rules":7,"num_related_predicates":11,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" government_officials(\"John\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["pentagon(\"Lisa\", \"Daniel\").","doctor.","budgerigar(\"John\", \"Daniel\").","mane(\"John\", \"Daniel\")."],"noisy_facts":[],"min_fact_dicts_for_query":["pentagon(\"Lisa\", \"Daniel\").","doctor.","budgerigar(\"John\", \"Daniel\").","mane(\"John\", \"Daniel\")."],"noiseless_rules":["government_officials(V1) :- bureaucracy(V3), polity(V3), budgerigar(V1, V3), mane(V1, V3).","bureaucracy(V3) :- pentagon(V0, V3).","court(V0, V3) :- pentagon(V0, V3).","puppet_government(V0, V0) :- court(V0, V3), doctor.","medical(V0, V3) :- court(V0, V3), doctor.","government(V3, V3) :- bureaucracy(V3), court(V0, V3), puppet_government(V0, V2).","polity(V3) :- medical(V1, V3), government(V1, V3)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_19_7_9_6_6_0.5_1.0_3_0_1","seed":19,"num_facts":7,"num_rules":10,"num_related_predicates":17,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"for_sleeping.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["clinch.","- worm.","head.","- quack.","- purr.","- meow.","- baa."],"noisy_facts":[],"min_fact_dicts_for_query":["clinch."],"noiseless_rules":["for_sleeping :- - screw, not -propeller.","- screw :- bolt, not worm, not -head.","- P1 :- bolt, not worm, not -head.","cock_doodle_doo :- bolt, not worm, not -head.","propeller :- - P1, not -sound, not -hub.","cry :- crow, not meow, not baa.","sound :- cry, not quack, not purr.","crow :- cock_doodle_doo.","bolt :- clinch.","hub :- clinch."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_54_10_9_8_10_0.5_1.0_3_2_3","seed":54,"num_facts":13,"num_rules":10,"num_related_predicates":23,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"concept(\"Sandra\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- gladiolus(\"Christine\", \"Sandra\").","- snow_leopard(\"Christine\", \"Peter\").","- common_canary(\"Debra\", \"Sandra\").","- quarter(\"Peter\").","- material(\"Christine\", \"Peter\").","- barn(\"Christine\", \"Sandra\").","- chukka(\"Sandra\", \"Peter\").","- fall_out_of_love(\"Debra\", \"Peter\").","- idea(\"Debra\", \"Peter\").","- bell(\"Christine\", \"Peter\").","- factorial(\"Christine\", \"Peter\").","- shoe_bomb(\"Debra\", \"Sandra\").","opinion(\"Sandra\", \"Peter\")."],"noisy_facts":["- blower(\"Christine\", \"Sandra\").","- fox(\"Christine\", \"Sandra\").","- jackal(\"Christine\", \"Peter\").","sausage(\"Christine\", \"Sandra\").","- experimental_procedure(\"Christine\", \"Sandra\").","- bird(\"Debra\", \"Sandra\").","- ethanol(\"Christine\", \"Sandra\")."],"min_fact_dicts_for_query":["- gladiolus(\"Christine\", \"Sandra\").","- common_canary(\"Debra\", \"Sandra\").","- quarter(\"Peter\").","- barn(\"Christine\", \"Sandra\").","- shoe_bomb(\"Debra\", \"Sandra\").","opinion(\"Sandra\", \"Peter\")."],"noiseless_rules":["concept(V2) :- - quantity(V1, V2), not -rule(V1, V2).","product(V1, V3) :- multiple(V3), - part(V1, V2), not factorial(V1, V3).","- binomial(V1, V2) :- - gladiolus(V1, V2).","- big_cat(V3, V3) :- - snow_leopard(V1, V3), not factorial(V1, V3).","multiple(V3) :- - common_canary(V0, V2), - shoe_bomb(V0, V2), opinion(V2, V3).","- part(V1, V2) :- - quarter(V3), - barn(V1, V2), not chukka(V2, V3).","- quantity(V1, V2) :- product(V1, V3), - binomial(V1, V2), not -proportional(V1, V2).","proportional(V1, V3) :- category(V1, V3), not bell(V1, V3), not factorial(V1, V3).","rule(V0, V3) :- - big_cat(V0, V3), not fall_out_of_love(V0, V3), not idea(V0, V3).","category(V1, V3) :- - material(V1, V3)."],"noisy_rules":{"a":["- concept(V2) :- part(V1, V2), quantity(V1, V2).","- concept(V1) :- - category(V1, V3)."],"b":["idea(V0, V3) :- binomial(V1, V2), big_cat(V0, V3), not concept(V2).","- proportional(V2, V2) :- - concept(V2)."],"c":["factorial(V1, V3) :- - product(V1, V3), binomial(V1, V2), not proportional(V1, V2).","- category(V1, V1) :- quantity(V1, V2), - proportional(V1, V2)."],"d":["starnose_mole(V2) :- binomial(V1, V2), - experimental_procedure(V1, V2).","material(V1, V2) :- - rule(V1, V2), - blower(V1, V2), - ethanol(V1, V2)."],"e":["- meat(V0, V1) :- - bird(V0, V2), sausage(V1, V2).","canine(V1, V2) :- - fox(V1, V2), - jackal(V1, V3)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_45_9_12_11_13_0.5_1.0_5_2_3","seed":45,"num_facts":15,"num_rules":13,"num_related_predicates":28,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P12(\"Donald\", \"William\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P13(\"William\", \"Natalie\").","- P14(\"William\", \"Tommy\").","P15(\"William\", \"Natalie\").","- P16(\"William\").","- P17(\"William\").","- P18(\"William\").","- P19(\"William\").","- P20(\"William\").","P21(\"William\", \"Natalie\").","P22(\"William\", \"Natalie\").","- P23(\"William\").","P24(\"Donald\", \"Natalie\").","P25(\"William\", \"Natalie\").","P26(\"William\", \"Natalie\").","- P27(\"William\", \"Natalie\")."],"noisy_facts":["- P35(\"Donald\", \"Tommy\").","P34(\"Donald\", \"William\").","P29(\"William\", \"Natalie\").","- P32(\"William\", \"Natalie\").","- P31(\"Donald\", \"Natalie\")."],"min_fact_dicts_for_query":["P15(\"William\", \"Natalie\").","- P16(\"William\").","- P23(\"William\").","P24(\"Donald\", \"Natalie\")."],"noiseless_rules":["- P12(V0, V1) :- P0(V2), P3(V2), - P8(V0, V1), not -P9(V0, V1), not -P11(V0, V2).","P0(V2) :- P6(V1, V2).","P1(V1, V2) :- P6(V1, V2).","P2(V1) :- P1(V1, V2), not P7(V1, V2), not P10(V1, V2), not -P21(V1, V2), not -P22(V1, V2).","P3(V2) :- P1(V1, V2), not -P13(V1, V2), not P27(V1, V2).","P4(V1) :- P1(V1, V2), not -P13(V1, V2), not P27(V1, V2).","P5(V1, V3) :- - P14(V1, V3).","P6(V1, V2) :- P15(V1, V2).","- P7(V1, V2) :- P15(V1, V2).","- P8(V0, V1) :- - P16(V1), - P23(V1), P24(V0, V2), not -P25(V1, V2), not -P26(V1, V2).","P9(V1, V1) :- P4(V1), not P17(V1), not P18(V1), not P19(V1), not P20(V1).","- P10(V1, V1) :- P4(V1), not P17(V1), not P18(V1), not P19(V1), not P20(V1).","P11(V3, V3) :- P2(V1), P5(V1, V3), not P23(V1)."],"noisy_rules":{"a":["P12(V1, V1) :- - P0(V2), - P4(V1), - P5(V1, V3), not P6(V1, V2), not -P10(V1, V2).","P12(V0, V1) :- - P2(V1), not P4(V1), P8(V0, V1), - P11(V0, V2)."],"b":["P23(V1) :- not P3(V2), P7(V1, V2), P8(V0, V1), P12(V0, V1).","- P3(V0) :- P12(V0, V1)."],"c":["- P6(V1, V2) :- P8(V0, V1), - P9(V0, V1), - P11(V0, V2).","P8(V2, V1) :- - P2(V1), - P5(V1, V3), P7(V1, V2), not -P10(V1, V2)."],"d":["P28(V0, V1) :- - P9(V0, V1).","- P0(V2) :- P10(V1, V2), P29(V1, V2)."],"e":["P30(V1, V2) :- - P31(V0, V2), - P32(V1, V2).","- P33(V1) :- P34(V0, V1), - P35(V0, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_53_6_7_6_7_0.5_1.0_5_1_2","seed":53,"num_facts":9,"num_rules":8,"num_related_predicates":17,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"P7(\"Kyle\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P8(\"Kyle\").","P9(\"Kyle\").","- P10(\"Kyle\").","P11(\"Kyle\").","P12(\"Kyle\").","- P13(\"Kyle\").","P14(\"Kyle\").","P15(\"Kyle\").","- P16(\"Kyle\")."],"noisy_facts":["P18(\"Kyle\").","- P21(\"Kyle\").","- P22(\"Kyle\").","P25(\"Kyle\").","P17(\"Kyle\").","- P20(\"Kyle\").","- P23(\"Kyle\")."],"min_fact_dicts_for_query":["P8(\"Kyle\")."],"noiseless_rules":["P7(V2) :- - P0(V2), not -P1(V2), not P4(V2), not -P6(V2).","- P0(V2) :- - P2(V2), not P3(V2), not -P15(V2), not P16(V2).","P1(V2) :- P8(V2), not -P14(V2).","- P2(V2) :- P8(V2), not -P14(V2).","- P3(V2) :- P5(V2).","- P4(V2) :- P9(V2).","P5(V2) :- P9(V2).","P6(V2) :- - P10(V2), not -P11(V2), not -P12(V2), not P13(V2), not -P14(V2)."],"noisy_rules":{"a":["- P7(V2) :- not -P4(V2), - P6(V2).","- P7(V2) :- P2(V2), P3(V2), P4(V2), not P5(V2), - P6(V2)."],"b":["P0(V2) :- - P7(V2).","- P5(V2) :- P2(V2), not -P4(V2), - P6(V2), not P7(V2)."],"c":["P16(V2) :- not -P0(V2), - P6(V2).","- P15(V2) :- not -P0(V2), P3(V2), not -P4(V2), not P5(V2), not P6(V2)."],"d":["P0(V2) :- not P1(V2), P4(V2), - P5(V2), P17(V2).","- P14(V2) :- not P1(V2), P3(V2), P4(V2), not P5(V2), not -P18(V2)."],"e":["P19(V2) :- - P20(V2), - P21(V2).","P24(V2) :- not P22(V2), not P23(V2), P25(V2)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_53_9_12_1_4_0.5_1.0_5_0_1","seed":53,"num_facts":5,"num_rules":13,"num_related_predicates":18,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"P12.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P13.","- P14.","- P15.","P16.","P17."],"noisy_facts":["P26.","P20.","- P30.","P23.","P24.","P25.","P28.","- P18.","- P22.","P29.","P32.","P31."],"min_fact_dicts_for_query":["- P15."],"noiseless_rules":["P12 :- P0, not -P1, not -P3, not -P6, not -P7.","P0 :- P4, not P8, not -P10, not -P17.","P1 :- P2, not -P5.","P2 :- - P13.","P3 :- - P14.","P4 :- - P15, not -P17.","P5 :- - P15, not -P17.","P6 :- P11, not -P16.","P7 :- P16.","- P8 :- P16.","- P9 :- P16.","P10 :- P1, not P9.","P11 :- P1, not P9."],"noisy_rules":{"a":["- P12 :- P9.","- P12 :- - P0, not P2, - P3."],"b":["P15 :- - P12.","- P0 :- - P2, not P12."],"c":["P13 :- P9.","- P17 :- - P4, not P5, not -P9."],"d":["- P19 :- not P0, not P6, - P7, not -P8, not P18.","- P11 :- - P0, - P4, not P6, not -P20."],"e":["P21 :- not P22, not -P23, P24, P25, P26.","- P27 :- not -P28, P29, not P30, P31, P32."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_0_10_15_12_14_0.5_1.0_5_0_1","seed":0,"num_facts":16,"num_rules":16,"num_related_predicates":32,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":13,"target_query":"P15.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P16.","- P17.","- P18.","- P19.","P20.","- P21.","P22.","P23.","P24.","- P25.","P26.","- P27.","P28.","- P29.","- P30.","- P31."],"noisy_facts":["- P38.","- P34.","P37.","P40.","- P41.","- P39.","- P35.","P32.","P43."],"min_fact_dicts_for_query":["- P18."],"noiseless_rules":["P15 :- - P0, not -P4, not -P6, not -P12.","- P0 :- - P11, not -P26, not P31.","P1 :- - P11, not -P26, not P31.","- P2 :- - P5, not P8, not -P13, not -P20, not P21.","- P3 :- - P5, not P8, not -P13, not -P20, not P21.","P4 :- P1, not P14.","- P5 :- P1, not P14.","P6 :- P16, not -P23, not -P24, not P25, not -P26.","- P7 :- P16, not -P23, not -P24, not P25, not -P26.","- P8 :- - P17.","- P9 :- - P17.","P10 :- - P2, not -P24.","- P11 :- - P18.","P12 :- - P3, not P7, not P9, not -P10, not -P22.","P13 :- - P19, not P27, not -P28, not P29, not P30.","- P14 :- - P19, not P27, not -P28, not P29, not P30."],"noisy_rules":{"a":["- P15 :- P9, - P13.","- P15 :- not -P7, - P10, not P12, - P13."],"b":["- P13 :- P9, - P12, - P13, not P15.","P0 :- P0, P14, - P15."],"c":["P17 :- P3.","P7 :- not -P3, P5, not -P8, not -P11, not P13."],"d":["P33 :- P32.","- P24 :- not P1, not P4, not P13, - P34, not P35."],"e":["- P36 :- P37.","- P42 :- - P38, - P39, P40, - P41, P43."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_11_4_3_2_5_0.5_1.0_5_3_4","seed":11,"num_facts":5,"num_rules":4,"num_related_predicates":9,"max_depth_of_rule_graph":1,"average_depth_of_rule_graph":1.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":3,"target_query":"P3(\"Michelle\", \"Sheryl\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["- P4(\"Zachary\", \"April\", \"Sheryl\").","P5(\"April\", \"Michelle\", \"Sheryl\").","P6(\"Zachary\", \"April\", \"Michelle\").","- P7(\"Zachary\", \"April\", \"Sheryl\").","- P8(\"Zachary\", \"April\", \"Sheryl\")."],"noisy_facts":["P10(\"April\", \"Sheryl\").","P15(\"April\", \"Sheryl\").","P20(\"April\", \"Michelle\").","P16(\"Fred\", \"Zachary\", \"Sheryl\").","- P24(\"April\", \"Michelle\", \"Sheryl\").","P17(\"Fred\", \"Michelle\", \"Sheryl\").","- P18(\"Zachary\", \"April\", \"Michelle\").","P12(\"Zachary\", \"April\", \"Sheryl\").","- P22(\"Zachary\", \"April\", \"Sheryl\").","P21(\"Zachary\", \"April\", \"Michelle\").","P11(\"April\", \"Sheryl\").","P23(\"Zachary\", \"Michelle\", \"Sheryl\").","- P14(\"Michelle\")."],"min_fact_dicts_for_query":["- P4(\"Zachary\", \"April\", \"Sheryl\").","P5(\"April\", \"Michelle\", \"Sheryl\")."],"noiseless_rules":["P3(V3, V4) :- P0(V2, V4), - P1(V1, V2, V3), not P2(V1, V2, V4).","P0(V2, V4) :- - P4(V1, V2, V4), P5(V2, V3, V4).","- P1(V1, V2, V3) :- - P4(V1, V2, V4), P5(V2, V3, V4), not P7(V1, V2, V4), not P8(V1, V2, V4).","- P2(V1, V2, V3) :- - P1(V1, V2, V3), not -P6(V1, V2, V3)."],"noisy_rules":{"a":["- P3(V3, V4) :- - P0(V2, V4), P1(V1, V2, V3), P2(V1, V2, V4).","- P3(V1, V4) :- P2(V1, V2, V4)."],"b":["- P6(V1, V2, V3) :- - P0(V2, V4), P1(V1, V2, V3), not -P2(V1, V2, V4), not P3(V3, V4).","P1(V1, V2, V3) :- - P0(V2, V4), P1(V1, V2, V3), not -P2(V1, V2, V4), - P3(V3, V4)."],"c":["P7(V1, V2, V4) :- - P0(V2, V4), P1(V1, V2, V3), not -P2(V1, V2, V4).","- P6(V1, V2, V3) :- - P0(V2, V4), P1(V1, V2, V3), P2(V1, V2, V4)."],"d":["P9(V2, V4) :- - P0(V2, V4), P10(V2, V4), not -P11(V2, V4).","P1(V1, V2, V1) :- not P0(V2, V4), not -P2(V1, V2, V4), P12(V1, V2, V4)."],"e":["- P13(V3, V4) :- - P14(V3), P15(V2, V4), P16(V0, V1, V4), not -P17(V0, V3, V4), - P18(V1, V2, V3).","- P19(V1, V2, V4) :- P20(V2, V3), P21(V1, V2, V3), not P22(V1, V2, V4), P23(V1, V3, V4), - P24(V2, V3, V4)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_14_10_12_12_13_0.5_1.0_3_3_4","seed":14,"num_facts":16,"num_rules":13,"num_related_predicates":29,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" organism(\"Jeffrey\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["divine_messenger(\"Jeffrey\", \"Brooke\").","- football(\"Daniel\", \"Jeffrey\").","- cot(\"Daniel\", \"Jennifer\").","wool(\"Daniel\", \"Jennifer\").","fur(\"George\", \"Brooke\").","black_footed_albatross(\"Jennifer\", \"Jeffrey\", \"Brooke\").","- large_group(\"George\", \"Jennifer\").","- living_thing(\"George\", \"Brooke\").","- hands(\"Daniel\", \"Jeffrey\", \"Brooke\").","fairy(\"Daniel\", \"George\", \"Jeffrey\").","- broken_computer(\"Daniel\", \"Brooke\").","service(\"Daniel\", \"Brooke\").","- wing(\"Daniel\", \"George\", \"Jeffrey\").","- seraph(\"George\", \"Jennifer\", \"Jeffrey\").","- couch(\"Jeffrey\", \"Brooke\").","mattress(\"Daniel\", \"George\", \"Jeffrey\")."],"noisy_facts":["- meow(\"Daniel\", \"Jennifer\").","baking_cake(\"Daniel\", \"George\", \"Brooke\").","- cake(\"Daniel\", \"Brooke\").","crow(\"George\", \"Jeffrey\").","- baa(\"Daniel\", \"Jennifer\", \"Jeffrey\").","- buying_for_loved_one(\"George\", \"Jennifer\", \"Jeffrey\").","cherub(\"George\", \"Jennifer\").","- back(\"George\", \"Jennifer\", \"Brooke\").","- archangel(\"George\", \"Jennifer\")."],"min_fact_dicts_for_query":["divine_messenger(\"Jeffrey\", \"Brooke\").","- football(\"Daniel\", \"Jeffrey\").","- living_thing(\"George\", \"Brooke\").","- wing(\"Daniel\", \"George\", \"Jeffrey\").","- seraph(\"George\", \"Jennifer\", \"Jeffrey\")."],"noiseless_rules":["- organism(V3) :- spiritual_being(V1, V3, V4), not body_part(V1, V3, V4).","- angel(V1, V2, V4) :- divine_messenger(V3, V4), - wing(V0, V1, V3), - seraph(V1, V2, V3).","organ(V2, V3, V4) :- divine_messenger(V3, V4), - wing(V0, V1, V3), - seraph(V1, V2, V3).","spirit(V0, V1, V3) :- - football(V0, V3), - living_thing(V1, V4), not hands(V0, V3, V4).","- bed(V0, V4) :- - cot(V0, V2), - couch(V3, V4), mattress(V0, V1, V3).","- person(V1, V3, V4) :- - cot(V0, V2), - couch(V3, V4), mattress(V0, V1, V3).","withers(V4, V4) :- - bed(V0, V4), not broken_computer(V0, V4), not -service(V0, V4).","deer(V2) :- - person(V1, V3, V4), withers(V1, V2), not animal(V1, V2).","spiritual_being(V1, V3, V4) :- - angel(V1, V2, V4), spirit(V0, V1, V3), not -fairy(V0, V1, V3).","- animal(V1, V2) :- - angel(V1, V2, V4), spirit(V0, V1, V3), not -fairy(V0, V1, V3).","coat(V1, V2) :- wool(V0, V2), fur(V1, V4), black_footed_albatross(V2, V3, V4).","small(V1, V1, V1) :- deer(V2), coat(V1, V2), not large_group(V1, V2).","- body_part(V1, V3, V4) :- organ(V2, V3, V4), withers(V1, V2), small(V0, V1, V3)."],"noisy_rules":{"a":["organism(V3) :- - spirit(V0, V1, V3), animal(V1, V2), body_part(V1, V3, V4).","organism(V3) :- angel(V1, V2, V4), person(V1, V3, V4), not -animal(V1, V2)."],"b":["living_thing(V1, V4) :- angel(V1, V2, V4), not spiritual_being(V1, V3, V4), organism(V3).","couch(V3, V3) :- - spirit(V0, V1, V3), animal(V1, V2), organism(V3)."],"c":["- withers(V1, V4) :- body_part(V1, V3, V4).","- wool(V2, V2) :- angel(V1, V2, V4)."],"d":["angel(V1, V2, V2) :- not withers(V1, V2), - archangel(V1, V2), not -cherub(V1, V2).","body_part(V1, V1, V4) :- angel(V1, V2, V4), not back(V1, V2, V4)."],"e":["- cry(V0, V3) :- - meow(V0, V2), crow(V1, V3), not baa(V0, V2, V3).","celebrating_birthday(V1, V3, V4) :- - cake(V0, V4), baking_cake(V0, V1, V4), - buying_for_loved_one(V1, V2, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_16_9_12_6_6_0.5_1.0_3_1_2","seed":16,"num_facts":8,"num_rules":13,"num_related_predicates":21,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"photosynthesis(\"Marc\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["students_to_eat_in(\"Marc\").","chub(\"Marc\").","- fluffy_tail.","hectare.","- elephant(\"Marc\").","- polar(\"Marc\").","storage_devices.","helmet."],"noisy_facts":["black_swan(\"Marc\").","- rough_legged_hawk.","ninian(\"Marc\").","restraint(\"Marc\").","feathers(\"Michael\").","tapestry(\"Michael\")."],"min_fact_dicts_for_query":["students_to_eat_in(\"Marc\")."],"noiseless_rules":["photosynthesis(V1) :- crooning(V1), not religious(V1), not farmers(V1).","duckling(V1) :- take_people_places(V1), not -news_article(V1), not potato_tuberworm(V1).","autograph_album(V1) :- - court(V1), not elephant(V1), not polar(V1).","crooning(V1) :- students_to_eat_in(V1).","take_people_places(V1) :- students_to_eat_in(V1).","sunset(V1) :- students_to_eat_in(V1).","news_article(V1) :- chub(V1).","- religious(V1) :- duckling(V1), not -autograph_album(V1).","- farmers(V1) :- sunset(V1), not fluffy_tail, not -hectare.","marsupials(V1) :- sunset(V1), not fluffy_tail, not -hectare.","- potato_tuberworm(V2) :- marsupials(V2), not -storage_devices, not -helmet.","milk_can(V2) :- marsupials(V2), not -storage_devices, not -helmet.","- court(V2) :- milk_can(V2)."],"noisy_rules":{"a":["- photosynthesis(V1) :- farmers(V1), not -court(V1).","- photosynthesis(V1) :- - duckling(V1), not -religious(V1)."],"b":["potato_tuberworm(V1) :- - photosynthesis(V1).","- sunset(V1) :- potato_tuberworm(V1), not -court(V1), not photosynthesis(V1)."],"c":["- sunset(V2) :- - milk_can(V2).","- helmet(V1) :- - sunset(V1), - milk_can(V2)."],"d":["- storage_devices(V1) :- - sunset(V1), not -restraint(V1).","- duckling(V1) :- - autograph_album(V1), - marsupials(V2), - rough_legged_hawk."],"e":["plaster(V1) :- ninian(V1), black_swan(V1).","ruin(V0) :- feathers(V0), not -tapestry(V0)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_98_7_11_4_7_0.5_1.0_5_1_2","seed":98,"num_facts":7,"num_rules":12,"num_related_predicates":19,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8333333333333333,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"parts_of_plant(\"Brian\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["home.","chicken(\"Brian\").","branch(\"Brian\").","neuroblast(\"Brian\").","winesap.","wildfowl.","blancmange."],"noisy_facts":[],"min_fact_dicts_for_query":["home.","chicken(\"Brian\").","branch(\"Brian\").","neuroblast(\"Brian\").","winesap.","wildfowl.","blancmange."],"noiseless_rules":["parts_of_plant(V1) :- branches(V1), place(V1), bird(V1), storing_money(V1), neuroblast(V1).","branches(V1) :- nest(V1), tree(V1), bank(V1).","place(V1) :- bank(V1), home.","nest(V1) :- bank(V1), home.","money(V1) :- bank(V1), home.","building(V1) :- bank(V1), home.","bird(V1) :- nest(V1), chicken(V1).","tree(V1) :- nest(V1), chicken(V1).","storing_money(V1) :- money(V1), weather_storm(V1), bank(V1), in_tree(V1).","weather_storm(V0) :- building(V0), winesap, wildfowl, blancmange.","bank(V1) :- branch(V1).","in_tree(V1) :- branch(V1)."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_28_9_10_9_12_0.5_1.0_5_1_2","seed":28,"num_facts":12,"num_rules":11,"num_related_predicates":23,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.125,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" blastocoel(\"Ernest\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- aleving_hunger(\"Ernest\").","durian(\"Ernest\").","lettuce(\"Ernest\").","- hold_grapes(\"Ernest\").","morgue(\"Ernest\").","- antler(\"Ernest\").","china(\"Ernest\").","inland_bill(\"Ernest\").","powhatan(\"Ernest\").","- playing_violin(\"Ernest\").","washing.","- rely_on."],"noisy_facts":["- plating(\"Ernest\").","insects_live_and_die(\"Tommy\").","blue(\"Tommy\").","make_life_easier_for_humans(\"Ernest\").","follow_up(\"Ernest\").","- vivarium(\"Tommy\")."],"min_fact_dicts_for_query":["durian(\"Ernest\")."],"noiseless_rules":["- blastocoel(V0) :- sound(V0), not -protective_covering(V0), not -inland_bill(V0), not -powhatan(V0), not playing_violin(V0).","sound(V0) :- capitalist(V0), not -effusion(V0), not -canine(V0).","- realise_goals(V0) :- - aleving_hunger(V0), not hold_grapes(V0), not -morgue(V0), not antler(V0), not -china(V0).","bark_beetle(V0) :- - aleving_hunger(V0), not hold_grapes(V0), not -morgue(V0), not antler(V0), not -china(V0).","soda_can(V0) :- - realise_goals(V0), not -capitalist(V0), not -washing, not rely_on.","protective_covering(V1) :- soda_can(V1), not -pontoon(V1).","capitalist(V0) :- durian(V0).","effusion(V0) :- bark_beetle(V0).","rasta(V0) :- bark_beetle(V0).","canine(V0) :- protective_covering(V0), not -lettuce(V0), not antler(V0).","pontoon(V0) :- rasta(V0)."],"noisy_rules":{"a":["blastocoel(V0) :- - bark_beetle(V0).","blastocoel(V0) :- - effusion(V0), - rasta(V0)."],"b":["- capitalist(V0) :- not bark_beetle(V0), - soda_can(V1), - canine(V0), not -blastocoel(V0).","aleving_hunger(V0) :- not bark_beetle(V0), - protective_covering(V0), - pontoon(V1), not -blastocoel(V0)."],"c":["- washing(V0) :- realise_goals(V0), - protective_covering(V0), - pontoon(V1).","- bark_beetle(V0) :- - sound(V0), not rasta(V0), not canine(V0)."],"d":["- sound(V0) :- realise_goals(V0), - protective_covering(V0), follow_up(V0).","hold_grapes(V0) :- - bark_beetle(V0), - protective_covering(V0), not canine(V0), not -make_life_easier_for_humans(V0)."],"e":["- ships_boss(V0) :- - plating(V0).","chock(V2) :- - vivarium(V2), not -insects_live_and_die(V2), not -blue(V2)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_13_7_10_7_9_0.5_1.0_3_2_3","seed":13,"num_facts":9,"num_rules":11,"num_related_predicates":20,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" coptic_church(\"Savannah\", \"Matthew\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- squash_ball(\"Savannah\", \"David\").","- wall(\"Savannah\", \"Matthew\").","send_rocket_into_space(\"Savannah\", \"Scott\").","slope(\"Savannah\", \"Scott\").","- changing(\"Matthew\", \"David\").","attacker(\"Matthew\", \"Scott\").","salt_food(\"Matthew\", \"David\").","- pomegranate(\"Scott\").","- asset(\"Scott\")."],"noisy_facts":["dividend_warrant(\"Scott\").","- cow_juice(\"Matthew\", \"Scott\").","dolphin(\"Savannah\", \"Matthew\").","- cell(\"Matthew\", \"Scott\").","snoop(\"Savannah\", \"Scott\").","feeling_good(\"Scott\", \"David\").","larid(\"Savannah\", \"Scott\")."],"min_fact_dicts_for_query":["- squash_ball(\"Savannah\", \"David\").","- wall(\"Savannah\", \"Matthew\").","slope(\"Savannah\", \"Scott\").","- changing(\"Matthew\", \"David\").","attacker(\"Matthew\", \"Scott\")."],"noiseless_rules":["- coptic_church(V0, V1) :- deadwood(V2), arsenic(V0, V1), not stagehand(V1, V2).","deadwood(V2) :- - launching(V2), rocks(V0, V1), not -send_rocket_into_space(V0, V2).","- launching(V2) :- - squash_ball(V0, V3), attacker(V1, V2), not -salt_food(V1, V3).","restaurant_dining_area(V3) :- - squash_ball(V0, V3), attacker(V1, V2), not -salt_food(V1, V3).","arsenic(V0, V1) :- - wall(V0, V1), slope(V0, V2), - changing(V1, V3).","- alarm(V2) :- - wall(V0, V1), slope(V0, V2), - changing(V1, V3).","- stagehand(V2, V2) :- - alarm(V2), not -print_on(V2), not -adult_body(V2).","print_on(V3) :- restaurant_dining_area(V3), arsenic(V0, V1), not changing(V1, V3).","- preamble(V1) :- restaurant_dining_area(V3), arsenic(V0, V1), not changing(V1, V3).","rocks(V2, V2) :- - preamble(V2), not pomegranate(V2), not asset(V2).","adult_body(V2) :- - preamble(V2), not pomegranate(V2), not asset(V2)."],"noisy_rules":{"a":["coptic_church(V2, V3) :- - restaurant_dining_area(V3), alarm(V2).","coptic_church(V2, V3) :- launching(V2), - restaurant_dining_area(V3), not adult_body(V2)."],"b":["- deadwood(V0) :- coptic_church(V0, V1).","- rocks(V0, V1) :- coptic_church(V0, V1)."],"c":["- rocks(V1, V1) :- stagehand(V1, V2).","asset(V2) :- stagehand(V1, V2), not print_on(V2), - adult_body(V2)."],"d":["- rocks(V2, V1) :- alarm(V2), stagehand(V1, V2), not cell(V1, V2).","- slope(V2, V2) :- - deadwood(V2), not -preamble(V2), not -dividend_warrant(V2)."],"e":["spearhead(V2) :- dolphin(V0, V1), - cow_juice(V1, V2).","ruining_appetite(V0, V2) :- larid(V0, V2), not -snoop(V0, V2), feeling_good(V2, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_80_8_10_7_7_0.5_1.0_5_1_2","seed":80,"num_facts":10,"num_rules":11,"num_related_predicates":21,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.5714285714285716,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"nitrogen(\"Lisa\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- principal(\"Lisa\").","veterinarian(\"Lisa\").","fight(\"Lisa\").","getting_rid_of_stress.","silo.","- catsup_bottle.","- winesap.","surgeon(\"Lisa\").","- room(\"Lisa\").","nest(\"Lisa\")."],"noisy_facts":[],"min_fact_dicts_for_query":["veterinarian(\"Lisa\")."],"noiseless_rules":["nitrogen(V1) :- sleeping(V1), not farmyard(V1), not -doctor(V1), not -dormouse(V1).","sleeping(V1) :- bed(V1), not cot(V1), not pillow(V1).","- farmyard(V1) :- - principal(V1).","doctor(V1) :- veterinarian(V1), not -surgeon(V1), not room(V1), not -nest(V1).","bed(V1) :- veterinarian(V1), not -surgeon(V1), not room(V1), not -nest(V1).","- space(V1) :- veterinarian(V1), not -surgeon(V1), not room(V1), not -nest(V1).","- moon(V1) :- - space(V1).","dormouse(V1) :- fight(V1).","- cot(V1) :- fight(V1).","lunar(V1) :- - moon(V1), not -getting_rid_of_stress, not -silo, not catsup_bottle, not winesap.","- pillow(V2) :- lunar(V2)."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_91_6_8_6_7_0.5_1.0_3_0_1","seed":91,"num_facts":8,"num_rules":9,"num_related_predicates":17,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" P8.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P9.","- P10.","P11.","- P12.","- P13.","- P14.","- P15.","P16."],"noisy_facts":["P17.","- P19.","- P21."],"min_fact_dicts_for_query":["P9."],"noiseless_rules":["- P8 :- P2, not P6, not P13.","- P0 :- P9, not P14, not P15.","P1 :- P9, not P14, not P15.","P2 :- - P0, not P14.","P3 :- - P0, not P14.","P4 :- - P0, not P14.","- P5 :- - P10, not -P11, not P12.","- P6 :- P1, not -P3, not P7.","- P7 :- P4, not P5, not -P16."],"noisy_rules":{"a":["P8 :- P5.","P8 :- not P2, - P3, not -P5."],"b":["P12 :- not P3, P6, not -P8.","- P4 :- not P2, - P3, P8."],"c":["P7 :- not P1, - P2.","P0 :- - P4, P6."],"d":["P0 :- P5.","- P9 :- - P2, not -P17."],"e":["P18 :- - P19.","P20 :- - P21."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_3_4_3_1_3_0.5_1.0_5_2_3","seed":3,"num_facts":2,"num_rules":4,"num_related_predicates":6,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":3,"target_query":"P3(\"James\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":2,"asp_program_dlv2":{"noiseless_facts":["P4(\"Susan\", \"James\").","- P5(\"Susan\", \"James\")."],"noisy_facts":["- P13(\"Jeremy\", \"Susan\").","P6(\"Susan\", \"James\").","- P10(\"Susan\", \"James\").","- P9(\"Susan\", \"James\").","- P11(\"Susan\", \"James\").","P8(\"Susan\", \"James\").","- P15(\"David\", \"Susan\").","- P7(\"Susan\", \"James\")."],"min_fact_dicts_for_query":["P4(\"Susan\", \"James\")."],"noiseless_rules":["P3(V3) :- P0(V2, V3), not -P1(V2, V3).","P0(V2, V3) :- P4(V2, V3), not P5(V2, V3).","P1(V2, V3) :- - P2(V2, V3).","- P2(V2, V3) :- P0(V2, V3), not P5(V2, V3)."],"noisy_rules":{"a":["- P3(V3) :- - P0(V2, V3), not -P2(V2, V3).","- P3(V3) :- - P0(V2, V3), not P1(V2, V3), P2(V2, V3)."],"b":["- P1(V2, V3) :- - P0(V2, V3), - P1(V2, V3), not -P2(V2, V3), not P3(V3).","P2(V3, V3) :- - P3(V3)."],"c":["- P4(V2, V3) :- - P0(V2, V3), - P1(V2, V3), not -P2(V2, V3).","- P1(V2, V3) :- not P0(V2, V3), P2(V2, V3)."],"d":["P5(V2, V3) :- - P1(V2, V3), P2(V2, V3), P6(V2, V3), - P7(V2, V3), not -P8(V2, V3).","- P0(V2, V3) :- not -P2(V2, V3), not P9(V2, V3), - P10(V2, V3), - P11(V2, V3)."],"e":["P12(V0) :- - P13(V0, V2).","P14(V1, V2) :- - P15(V1, V2)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_82_10_11_6_9_0.5_1.0_3_1_2","seed":82,"num_facts":10,"num_rules":12,"num_related_predicates":22,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"playing_tennis(\"John\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["dishes(\"John\").","armet(\"John\").","variety_meat(\"John\").","series(\"John\").","- mountain_climbing(\"John\").","kingdom_come(\"John\").","- coast(\"John\").","- bedroll(\"John\").","credit(\"John\").","judicial_branch(\"John\")."],"noisy_facts":["- banquet(\"John\").","- fowl(\"John\").","actinium(\"John\").","hag(\"Suzanne\").","- school_cafeteria(\"John\").","- disapeared_in_bermuda_triangle(\"John\").","- tooth(\"Suzanne\").","- indian_club(\"Suzanne\")."],"min_fact_dicts_for_query":["series(\"John\")."],"noiseless_rules":["playing_tennis(V0) :- - square_meter(V0), not -look_grey_during_storm(V0), not serve(V0).","- square_meter(V0) :- - negative_stimulus(V0), not -satisfying_hunger(V0), not mountain_climbing(V0).","- center(V0) :- dishes(V0), not -series(V0), not -judicial_branch(V0).","- litter(V0) :- dishes(V0), not -series(V0), not -judicial_branch(V0).","filaria(V0) :- - pair_o_fpants(V0), not -armet(V0).","look_grey_during_storm(V0) :- variety_meat(V0), not coast(V0), not bedroll(V0).","- negative_stimulus(V0) :- - pair_o_fpants(V0).","satisfying_hunger(V0) :- - bread_bin(V0), not -more_than_4_toes(V0), not -kingdom_come(V0).","- bread_bin(V0) :- - center(V0).","- pair_o_fpants(V0) :- series(V0), not -credit(V0), not -judicial_branch(V0).","- serve(V0) :- - litter(V0), not -filaria(V0).","more_than_4_toes(V0) :- - litter(V0), not -filaria(V0)."],"noisy_rules":{"a":["- playing_tennis(V0) :- - satisfying_hunger(V0), serve(V0).","- playing_tennis(V0) :- not -center(V0), negative_stimulus(V0), not more_than_4_toes(V0)."],"b":["- dishes(V0) :- serve(V0), not playing_tennis(V0).","- armet(V0) :- - playing_tennis(V0)."],"c":["- satisfying_hunger(V0) :- litter(V0).","negative_stimulus(V0) :- square_meter(V0), not look_grey_during_storm(V0), not -pair_o_fpants(V0)."],"d":["- filaria(V0) :- negative_stimulus(V0), not disapeared_in_bermuda_triangle(V0).","serve(V0) :- not -negative_stimulus(V0), - school_cafeteria(V0)."],"e":["- centrist(V2) :- hag(V2), not indian_club(V2), not tooth(V2).","typical_chair(V0) :- - fowl(V0), not banquet(V0), not -actinium(V0)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_6_6_7_6_6_0.5_1.0_3_0_1","seed":6,"num_facts":9,"num_rules":8,"num_related_predicates":17,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" baking_cake.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["thorax.","- picturesqueness.","- thing.","- door.","anteroom.","- playing_period.","adversary.","- owned.","- rain_on."],"noisy_facts":["- personal_satisfaction.","- apparel_chain.","covering_bed.","- arson.","- commercial_credit.","red_silk_cotton."],"min_fact_dicts_for_query":["thorax."],"noiseless_rules":["- baking_cake :- place_for_learning_basic_things, not -headpiece, not -evening.","- panama :- thorax.","kea :- thorax.","place_for_learning_basic_things :- - panama, not -making_people_like, not most_guinea_pigs.","headpiece :- - picturesqueness, not owned, not rain_on.","evening :- kea, not door, not -anteroom.","making_people_like :- kea, not door, not -anteroom.","- most_guinea_pigs :- - thing, not playing_period, not -adversary."],"noisy_rules":{"a":["baking_cake :- not -panama, - headpiece, not -most_guinea_pigs.","baking_cake :- - place_for_learning_basic_things, not headpiece, not evening."],"b":["- adversary :- baking_cake.","picturesqueness :- - evening, not making_people_like, not -baking_cake."],"c":["- adversary :- - place_for_learning_basic_things, not -most_guinea_pigs.","thing :- not -panama, not evening, most_guinea_pigs."],"d":["- adversary :- - place_for_learning_basic_things, - making_people_like, not -covering_bed.","- mug :- panama, - arson, not personal_satisfaction."],"e":["- cloud :- - apparel_chain, not commercial_credit.","many :- red_silk_cotton."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_14_9_14_12_14_0.5_1.0_5_2_3","seed":14,"num_facts":16,"num_rules":15,"num_related_predicates":31,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":" P14(\"James\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P15(\"James\", \"Larry\").","- P16(\"James\", \"Brianna\").","- P17(\"Larry\").","- P18(\"James\", \"Brianna\").","P19(\"Larry\").","- P20(\"John\", \"Brianna\").","P21(\"James\", \"Brianna\").","P22(\"Larry\", \"Brianna\").","- P23(\"James\", \"Brianna\").","- P24(\"James\", \"Brianna\").","P25(\"John\", \"James\").","- P26(\"John\", \"James\").","- P27(\"John\", \"James\").","P28(\"Larry\", \"Brianna\").","- P29(\"James\", \"Brianna\").","P30(\"James\", \"Brianna\")."],"noisy_facts":["P37(\"James\", \"Brianna\").","P42(\"James\", \"Larry\").","P35(\"Brianna\").","- P36(\"Brianna\").","- P38(\"John\", \"James\").","P32(\"John\", \"Brianna\").","P31(\"John\", \"Brianna\").","P40(\"James\", \"Larry\").","P39(\"James\", \"Larry\").","- P43(\"Larry\", \"Brianna\").","- P33(\"James\", \"Brianna\")."],"min_fact_dicts_for_query":["- P15(\"James\", \"Larry\").","- P17(\"Larry\").","P19(\"Larry\").","- P20(\"John\", \"Brianna\").","P21(\"James\", \"Brianna\").","- P29(\"James\", \"Brianna\")."],"noiseless_rules":["- P14(V1) :- P0(V2), - P3(V0, V3), P4(V0, V3), P6(V1, V2), not -P28(V2, V3).","P0(V2) :- - P15(V1, V2), - P29(V1, V3).","- P1(V1, V3) :- - P15(V1, V2), - P29(V1, V3).","P2(V1, V1) :- P13(V1, V3), not P16(V1, V3), not P29(V1, V3), not -P30(V1, V3).","- P3(V3, V3) :- - P1(V1, V3), not -P5(V1, V3), not -P11(V1, V3), not P23(V1, V3), not P24(V1, V3).","P4(V3, V3) :- - P7(V1, V3), not P10(V1, V3), not -P12(V1, V3), not -P13(V1, V3).","P5(V1, V3) :- - P7(V1, V3), not P10(V1, V3), not -P12(V1, V3), not -P13(V1, V3).","P6(V1, V2) :- - P17(V2), P19(V2), - P20(V0, V3), P21(V1, V3), not -P22(V2, V3).","- P7(V1, V3) :- - P17(V2), P19(V2), - P20(V0, V3), P21(V1, V3), not -P22(V2, V3).","P8(V1) :- - P17(V2), P19(V2), - P20(V0, V3), P21(V1, V3), not -P22(V2, V3).","- P9(V1, V2) :- - P17(V2), P19(V2), - P20(V0, V3), P21(V1, V3), not -P22(V2, V3).","- P10(V1, V3) :- - P18(V1, V3).","P11(V1, V1) :- P2(V0, V1), not -P8(V1), not -P25(V0, V1), not P26(V0, V1), not P27(V0, V1).","P12(V1, V1) :- P2(V0, V1), not -P8(V1), not -P25(V0, V1), not P26(V0, V1), not P27(V0, V1).","P13(V1, V1) :- - P9(V1, V2)."],"noisy_rules":{"a":["P14(V1) :- - P0(V2), P3(V0, V3), - P4(V0, V3), - P12(V1, V3).","P14(V1) :- P1(V1, V3), - P6(V1, V2), P9(V1, V2), not P11(V1, V3), - P12(V1, V3)."],"b":["P20(V1, V1) :- P14(V1).","- P6(V1, V0) :- - P2(V0, V1), P10(V1, V3), P14(V1)."],"c":["- P2(V0, V1) :- - P0(V2), P3(V0, V3), P9(V1, V2), not P11(V1, V3), not P13(V1, V3).","P20(V3, V3) :- P7(V1, V3), not P8(V1), not -P10(V1, V3), - P11(V1, V3)."],"d":["- P5(V1, V3) :- P3(V0, V3), - P12(V1, V3), not -P31(V0, V3), not -P32(V0, V3).","- P30(V1, V3) :- P7(V1, V3), not P33(V1, V3)."],"e":["P34(V1, V3) :- not -P35(V3), - P36(V3), P37(V1, V3).","P41(V0, V1) :- - P38(V0, V1), not -P39(V1, V2), not -P40(V1, V2), P42(V1, V2), - P43(V2, V3)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_59_9_11_7_9_0.5_1.0_3_0_1","seed":59,"num_facts":10,"num_rules":12,"num_related_predicates":22,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P11.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P12.","P13.","P14.","P15.","P16.","P17.","P18.","- P19.","- P20.","P21."],"noisy_facts":[],"min_fact_dicts_for_query":["P12."],"noiseless_rules":["- P11 :- P0, not P2, not -P3.","P0 :- P12.","- P1 :- P12.","- P2 :- P4, not P6, not -P15.","P3 :- - P1, not -P13, not -P21.","P4 :- P13.","P5 :- P13.","- P6 :- - P9, not -P10, not -P12.","- P7 :- P14, not -P18, not P19.","P8 :- P14, not -P18, not P19.","- P9 :- - P7, not -P16, not -P17.","P10 :- P5, not -P8, not P20."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_65_10_13_12_15_0.5_1.0_3_2_3","seed":65,"num_facts":14,"num_rules":14,"num_related_predicates":28,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":2.888888888888889,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":" wolf(\"Sylvia\", \"Brandon\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["swamp_chestnut_oak(\"Sylvia\", \"Brandon\").","north_america(\"Sylvia\", \"Mercedes\").","mantis(\"Sylvia\", \"David\").","gametocyte(\"David\", \"Brandon\").","width(\"Mercedes\", \"Brandon\").","electrode(\"David\", \"Brandon\").","couch(\"Mercedes\", \"Brandon\").","pothead(\"Sylvia\", \"David\").","messuage(\"Mercedes\", \"Brandon\").","raw_beauty(\"David\", \"Brandon\").","form_of_transportation(\"Sylvia\", \"Brandon\").","sail_ocean(\"Mercedes\", \"David\").","spindlelegs(\"David\", \"Brandon\").","release(\"Sylvia\", \"Brandon\")."],"noisy_facts":[],"min_fact_dicts_for_query":["swamp_chestnut_oak(\"Sylvia\", \"Brandon\").","north_america(\"Sylvia\", \"Mercedes\").","mantis(\"Sylvia\", \"David\").","gametocyte(\"David\", \"Brandon\").","width(\"Mercedes\", \"Brandon\").","electrode(\"David\", \"Brandon\").","couch(\"Mercedes\", \"Brandon\").","pothead(\"Sylvia\", \"David\").","messuage(\"Mercedes\", \"Brandon\").","raw_beauty(\"David\", \"Brandon\").","form_of_transportation(\"Sylvia\", \"Brandon\").","sail_ocean(\"Mercedes\", \"David\").","spindlelegs(\"David\", \"Brandon\").","release(\"Sylvia\", \"Brandon\")."],"noiseless_rules":["wolf(V0, V3) :- reporter(V3), chinese_food(V0, V2), large_stream(V0, V3).","reporter(V3) :- serving_customers(V3), dining_table(V0, V3), couch(V1, V3).","serving_customers(V3) :- find_hidden_things(V2), width(V1, V3), electrode(V2, V3).","humans(V1, V3) :- find_hidden_things(V2), width(V1, V3), electrode(V2, V3).","find_hidden_things(V2) :- brown_bread(V0, V2), all_prisons(V0, V2), pothead(V0, V2).","chinese_food(V0, V2) :- high_walls(V0, V1), mantis(V0, V2), gametocyte(V2, V3).","brown_bread(V0, V2) :- swamp_chestnut_oak(V0, V3), sail_ocean(V1, V2), spindlelegs(V2, V3).","always(V1, V3) :- swamp_chestnut_oak(V0, V3), sail_ocean(V1, V2), spindlelegs(V2, V3).","large_stream(V0, V3) :- north_america(V0, V1), messuage(V1, V3), raw_beauty(V2, V3).","all_prisons(V0, V0) :- always(V1, V3), large_stream(V0, V3), release(V0, V3).","aberdeen_angus(V0, V3) :- always(V1, V3), large_stream(V0, V3), release(V0, V3).","high_walls(V0, V2) :- aberdeen_angus(V0, V2), electrode(V2, V3), release(V0, V3).","pinocytosis(V0, V3) :- aberdeen_angus(V0, V2), electrode(V2, V3), release(V0, V3).","dining_table(V0, V3) :- humans(V1, V3), pinocytosis(V0, V3), form_of_transportation(V0, V3)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_25_10_11_10_12_0.5_1.0_3_2_3","seed":25,"num_facts":15,"num_rules":12,"num_related_predicates":27,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8888888888888888,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P11(\"Ronald\", \"Shannon\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P12(\"Cameron\").","- P13(\"Elizabeth\", \"Shannon\").","P14(\"Ronald\").","- P15(\"Shannon\").","P16.","- P17(\"Ronald\", \"Cameron\").","P18(\"Cameron\", \"Shannon\").","- P19(\"Ronald\", \"Cameron\").","P20(\"Elizabeth\", \"Cameron\").","P21(\"Ronald\", \"Elizabeth\").","- P22(\"Ronald\").","P23(\"Ronald\").","- P24(\"Cameron\").","- P25(\"Ronald\", \"Cameron\").","- P26(\"Elizabeth\", \"Shannon\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["P11(V0, V3) :- - P6(V0, V3), - P9(V1, V2), not P10(V1, V3).","P0(V0) :- - P12(V2), - P24(V2), - P25(V0, V2).","P1(V0, V1) :- P2(V0, V1), - P13(V1, V3), not P26(V1, V3).","P2(V0, V1) :- P14(V0), - P19(V0, V2), P20(V1, V2).","- P3(V1, V2) :- P14(V0), - P19(V0, V2), P20(V1, V2).","P4(V0, V1) :- P0(V0), P2(V0, V1).","- P5(V0) :- - P15(V3), - P17(V0, V2), not -P18(V2, V3).","- P6(V0, V0) :- - P5(V0), not P22(V0), not -P23(V0).","- P7(V1) :- P2(V0, V1), not -P16.","P8(V1, V0) :- P2(V0, V1), not -P16.","- P9(V1, V1) :- P1(V0, V1), not P7(V1), not -P21(V0, V1).","- P10(V1, V3) :- - P3(V1, V2), P4(V0, V1), P8(V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_62_9_9_9_10_0.5_1.0_5_1_2","seed":62,"num_facts":13,"num_rules":10,"num_related_predicates":23,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":1.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" plant(\"Nancy\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["stock_cube(\"Taylor\").","- pie(\"Nancy\").","eider.","cot(\"Nancy\").","vaquita(\"Taylor\").","pacifism(\"Taylor\").","liveliness(\"Taylor\").","- slave_making_ant(\"Taylor\").","- people_to_eat.","- bait.","- output.","- department.","mattress(\"Nancy\")."],"noisy_facts":["paper.","hat(\"Nancy\").","day_camp(\"Taylor\").","cocoa_powder(\"Matthew\").","conveyer_belt.","prison_camp(\"Taylor\").","concentration_camp(\"Taylor\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- plant(V2) :- - embryo(V2), not neophyte(V2), not aquatic(V2), not bed(V2), not crop(V2).","- embryo(V1) :- - ornamental(V1), not people_to_eat, not bait, not output, not department.","phytoplankton(V1) :- - ornamental(V1), not people_to_eat, not bait, not output, not department.","cover_crop(V0) :- phytoplankton(V0).","- ornamental(V1) :- stock_cube(V1), not -vaquita(V1), not -pacifism(V1), not -liveliness(V1), not slave_making_ant(V1).","- holophyte(V2) :- - pie(V2).","- neophyte(V1) :- stock_cube(V1), not -eider.","- aquatic(V2) :- - holophyte(V2).","- bed(V2) :- cot(V2), not -mattress(V2).","- crop(V0) :- cover_crop(V0)."],"noisy_rules":{"a":["plant(V2) :- embryo(V2), - phytoplankton(V0), ornamental(V1), holophyte(V2), neophyte(V2).","plant(V2) :- not -embryo(V2), not -neophyte(V2), aquatic(V2)."],"b":["output(V2) :- - phytoplankton(V0), ornamental(V1), neophyte(V2), crop(V2), plant(V2).","crop(V2) :- embryo(V2), not -holophyte(V2), not -crop(V2), not -plant(V2)."],"c":["- phytoplankton(V2) :- aquatic(V2).","- cover_crop(V0) :- - phytoplankton(V0), holophyte(V2), crop(V2)."],"d":["output(V2) :- - phytoplankton(V0), holophyte(V2), paper, conveyer_belt.","neophyte(V2) :- embryo(V2), holophyte(V2), not -hat(V2)."],"e":["yankee_doodle(V0) :- cocoa_powder(V0).","camp(V1) :- concentration_camp(V1), not -prison_camp(V1), not -day_camp(V1)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_54_9_14_14_14_0.5_1.0_5_3_4","seed":54,"num_facts":18,"num_rules":15,"num_related_predicates":33,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"P14(\"Katherine\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P15(\"Henry\", \"Adam\", \"Katherine\").","- P16(\"Ryan\", \"Katherine\").","P17(\"John\").","- P18(\"Henry\", \"Ryan\", \"Adam\").","- P19(\"Henry\", \"Ryan\").","P20(\"Henry\", \"Ryan\", \"Adam\").","P21(\"John\", \"Ryan\", \"Adam\").","P22(\"John\", \"Ryan\", \"Katherine\").","P23(\"Henry\", \"Adam\", \"Katherine\").","- P24(\"Henry\", \"Adam\", \"Katherine\").","P25(\"Henry\", \"Adam\", \"Katherine\").","- P26(\"Henry\", \"Adam\", \"Katherine\").","P27(\"John\", \"Adam\", \"Katherine\").","- P28(\"John\", \"Adam\", \"Katherine\").","P29(\"John\", \"Adam\", \"Katherine\").","P30(\"Henry\", \"John\", \"Ryan\").","P31(\"Henry\", \"Adam\", \"Katherine\").","P32(\"John\", \"Ryan\", \"Katherine\")."],"noisy_facts":["- P36(\"Henry\", \"Ryan\", \"Adam\").","P40(\"Henry\", \"Ryan\").","P34(\"Henry\", \"Ryan\", \"Adam\").","P33(\"Henry\", \"Ryan\", \"Adam\").","P42(\"Adam\", \"Katherine\").","- P38(\"John\", \"Ryan\", \"Katherine\").","P41(\"John\", \"Ryan\").","P43(\"Henry\", \"Ryan\", \"Adam\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["P14(V4) :- - P0(V1), P3(V1, V4), P6(V0, V2, V3), not P9(V2, V3, V4).","- P0(V1) :- - P1(V0), - P5(V0, V4), - P8(V0, V2, V3), P10(V0, V3, V4), P13(V1, V2, V3).","- P1(V0) :- P15(V0, V3, V4).","- P2(V0, V3, V4) :- P15(V0, V3, V4).","P3(V1, V4) :- - P16(V2, V4), P30(V0, V1, V2), P31(V0, V3, V4), not -P32(V1, V2, V4).","P4(V1, V3, V4) :- - P16(V2, V4), P30(V0, V1, V2), P31(V0, V3, V4), not -P32(V1, V2, V4).","- P5(V0, V4) :- P17(V1), - P19(V0, V2), P20(V0, V2, V3), P21(V1, V2, V3), P22(V1, V2, V4).","P6(V0, V2, V3) :- - P18(V0, V2, V3).","- P7(V0, V2, V3) :- - P18(V0, V2, V3).","- P8(V1, V4, V3) :- P4(V1, V3, V4), not -P11(V1, V3, V4), not -P27(V1, V3, V4), not P28(V1, V3, V4), not -P29(V1, V3, V4).","- P9(V3, V3, V4) :- - P2(V0, V3, V4), not -P23(V0, V3, V4), not P24(V0, V3, V4), not -P25(V0, V3, V4), not P26(V0, V3, V4).","P10(V0, V3, V4) :- - P2(V0, V3, V4), not -P23(V0, V3, V4), not P24(V0, V3, V4), not -P25(V0, V3, V4), not P26(V0, V3, V4).","P11(V4, V3, V4) :- - P2(V0, V3, V4), not -P23(V0, V3, V4), not P24(V0, V3, V4), not -P25(V0, V3, V4), not P26(V0, V3, V4).","P12(V0, V3) :- - P2(V0, V3, V4), not -P23(V0, V3, V4), not P24(V0, V3, V4), not -P25(V0, V3, V4), not P26(V0, V3, V4).","P13(V3, V2, V3) :- - P7(V0, V2, V3), not -P12(V2, V3)."],"noisy_rules":{"a":["- P14(V0) :- P7(V0, V2, V3), P8(V0, V2, V3).","- P14(V4) :- - P3(V1, V4), P5(V0, V4), P7(V0, V2, V3), not -P9(V2, V3, V4)."],"b":["- P29(V2, V3, V4) :- P1(V0), P5(V0, V4), P8(V0, V2, V3), not -P9(V2, V3, V4), not P14(V4).","- P29(V1, V3, V4) :- P0(V1), P9(V2, V3, V4), not P14(V4)."],"c":["- P15(V1, V3, V4) :- - P11(V1, V3, V4).","- P25(V4, V4, V4) :- P0(V1), - P3(V1, V4)."],"d":["- P32(V0, V2, V4) :- P5(V0, V4), not P6(V0, V2, V3), P8(V0, V2, V3), P33(V0, V2, V3), not -P34(V0, V2, V3).","- P35(V3, V2) :- P7(V0, V2, V3), P8(V0, V2, V3), - P13(V1, V2, V3), not P36(V0, V2, V3)."],"e":["P37(V1, V2) :- - P38(V1, V2, V4).","- P39(V0, V1, V2) :- P40(V0, V2), P41(V1, V2), P42(V3, V4), P43(V0, V2, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_23_5_4_2_5_0.5_1.0_5_2_3","seed":23,"num_facts":5,"num_rules":5,"num_related_predicates":10,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":3,"target_query":" paste(\"Timothy\", \"Brandi\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["rooster(\"Timothy\", \"Brandi\").","cut(\"Timothy\", \"Pamela\").","- white(\"Timothy\", \"Pamela\").","nest(\"Timothy\").","- bird(\"Timothy\")."],"noisy_facts":["chick(\"Timothy\").","swindler(\"Timothy\").","past(\"Timothy\", \"Brandi\").","eye(\"Timothy\").","flounder(\"Timothy\", \"Pamela\").","farm(\"Pamela\").","bidder(\"Timothy\", \"Pamela\").","- heteroploid(\"Timothy\", \"Teresa\").","- circle(\"Timothy\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- paste(V0, V1) :- egg(V1), - laceration(V0, V1).","- chicken(V0) :- - laceration(V0, V1), not -rooster(V0, V1).","egg(V1) :- - chicken(V0), - sheep(V0), - laceration(V0, V1), not -nest(V0), not bird(V0).","- sheep(V0) :- cut(V0, V3).","- laceration(V0, V3) :- cut(V0, V3), not white(V0, V3)."],"noisy_rules":{"a":["paste(V0, V1) :- chicken(V0), not egg(V1), not -sheep(V0), laceration(V0, V1).","paste(V0, V0) :- sheep(V0)."],"b":["- cut(V0, V0) :- not -laceration(V0, V1), paste(V0, V1).","white(V0, V1) :- chicken(V0), - egg(V1), not -sheep(V0), not -paste(V0, V1)."],"c":["laceration(V0, V1) :- chicken(V0), - egg(V1), not -sheep(V0).","bird(V0) :- chicken(V0), - egg(V1), laceration(V0, V1)."],"d":["- oval(V0, V1) :- - egg(V1), not -sheep(V0), laceration(V0, V1), not -eye(V0), - circle(V0).","hen(V0) :- not -chicken(V0), swindler(V0), chick(V0)."],"e":["ugandan(V0, V1) :- past(V0, V1).","rural(V0, V3) :- farm(V3), - heteroploid(V0, V2), not -flounder(V0, V3), bidder(V0, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_17_6_5_4_7_0.5_1.0_3_1_2","seed":17,"num_facts":7,"num_rules":6,"num_related_predicates":13,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" ratite(\"Elizabeth\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["thin_paint(\"Elizabeth\").","wing(\"Sarah\").","dirty_pool(\"Elizabeth\").","garment(\"Sarah\").","blue(\"Sarah\").","fig_leaf.","hood(\"Sarah\")."],"noisy_facts":[],"min_fact_dicts_for_query":["thin_paint(\"Elizabeth\").","wing(\"Sarah\").","dirty_pool(\"Elizabeth\").","garment(\"Sarah\").","blue(\"Sarah\").","fig_leaf.","hood(\"Sarah\")."],"noiseless_rules":["ratite(V2) :- ostrich(V2), covering(V2), elephant_bird(V2).","ostrich(V2) :- elephant_bird(V2), thin_paint(V2).","clothing(V1) :- airplane(V1), garment(V1), blue(V1).","covering(V1) :- clothing(V1), fig_leaf, hood(V1).","airplane(V1) :- wing(V1), hood(V1).","elephant_bird(V2) :- covering(V2), dirty_pool(V2)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_9_8_10_1_3_0.5_1.0_5_2_3","seed":9,"num_facts":4,"num_rules":11,"num_related_predicates":15,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5714285714285716,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" P10(\"Joe\", \"Amy\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["P11(\"Michael\", \"Joe\").","P12.","- P13(\"Michael\", \"Joe\").","P14."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- P10(V1, V2) :- P1(V1, V2), not P6(V1, V2).","P0(V0, V1) :- P5(V0, V1), not -P11(V0, V1).","P1(V1, V1) :- P5(V0, V1), not P9(V0, V1).","P2(V0) :- P5(V0, V1), not -P12.","- P3(V0, V0) :- P5(V0, V1), not -P12.","- P4(V1, V1) :- P5(V0, V1), not -P12.","P5(V0, V1) :- - P13(V0, V1).","- P6(V0, V0) :- P2(V0), not -P14.","- P7(V0, V0) :- P2(V0), not -P14.","P8(V0) :- - P3(V0, V2).","- P9(V0, V1) :- P0(V0, V1), - P4(V1, V3), - P7(V2, V3), not -P8(V1)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_16_8_11_5_7_0.5_1.0_3_2_3","seed":16,"num_facts":7,"num_rules":12,"num_related_predicates":19,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P11(\"Jasmine\", \"Kelsey\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P12(\"Jasmine\", \"Holly\").","P13(\"Holly\", \"Kelsey\").","P14(\"Holly\", \"Kelsey\").","- P15(\"Holly\", \"Kelsey\").","P16(\"Holly\", \"Cassidy\").","- P17(\"Jasmine\", \"Cassidy\").","- P18(\"Jasmine\", \"Cassidy\")."],"noisy_facts":["P24(\"Jasmine\", \"Holly\").","P25(\"Holly\", \"Kelsey\").","P23(\"Jasmine\", \"Holly\").","- P19(\"Kelsey\").","- P28(\"Holly\", \"Cassidy\").","- P20(\"Kelsey\").","P27(\"Holly\", \"Kelsey\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- P11(V0, V2) :- P0(V0, V1), P2(V0, V3), P8(V1, V2).","P0(V0, V1) :- P1(V0, V1), P3(V0, V2), not P9(V1, V2).","P1(V0, V1) :- P5(V2), P10(V0, V1), not -P14(V1, V2).","P2(V0, V3) :- P12(V0, V1), - P15(V1, V2), P16(V1, V3).","P3(V0, V2) :- P12(V0, V1), - P15(V1, V2), P16(V1, V3).","P4(V0, V3) :- P12(V0, V1), - P15(V1, V2), P16(V1, V3).","P5(V2) :- P13(V1, V2), not P15(V1, V2).","- P6(V1, V2) :- P13(V1, V2), not P15(V1, V2).","- P7(V1) :- P13(V1, V2), not P15(V1, V2).","P8(V0, V0) :- P4(V0, V3), not P17(V0, V3), not P18(V0, V3).","- P9(V1, V2) :- - P6(V1, V2).","P10(V0, V3) :- P2(V0, V3), not P7(V0)."],"noisy_rules":{"a":["P11(V0, V2) :- - P0(V0, V1), P9(V1, V2).","P11(V0, V2) :- - P0(V0, V1), - P3(V0, V2)."],"b":["- P12(V0, V1) :- - P8(V1, V2), P11(V0, V2).","P6(V0, V2) :- - P3(V0, V2), not -P11(V0, V2)."],"c":["- P10(V0, V0) :- - P4(V0, V3), P7(V0).","- P8(V1, V2) :- P9(V1, V2)."],"d":["- P8(V2, V2) :- not P5(V2), - P19(V2).","P21(V2, V2) :- - P5(V2), not P20(V2)."],"e":["- P22(V0, V1) :- not -P23(V0, V1), P24(V0, V1), P25(V1, V2).","P26(V3) :- P27(V1, V2), - P28(V1, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_5_7_10_8_10_0.5_1.0_5_1_2","seed":5,"num_facts":11,"num_rules":11,"num_related_predicates":22,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8333333333333333,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" steam_coal(\"Stephanie\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- challenge.","- shade_grass(\"Stephanie\").","singapore_dollar(\"Stephanie\").","living_room.","- big_ears.","have_sex.","- baby_bird.","carp(\"Stephanie\").","- setter(\"Stephanie\").","- sliding_seat(\"Stephanie\").","extremity(\"Stephanie\")."],"noisy_facts":["- fly_away(\"Jacqueline\").","abrasion(\"Jacqueline\").","- picnic(\"Stephanie\").","morgantown(\"Jacqueline\").","- exodus(\"Jacqueline\").","- sad(\"Stephanie\").","- beroe(\"Stephanie\")."],"min_fact_dicts_for_query":["- challenge.","extremity(\"Stephanie\")."],"noiseless_rules":["- steam_coal(V2) :- - bid(V2), not refusal(V2), not val_kilmer(V2), not -communicating_artery(V2), not -nard(V2).","- bid(V2) :- hunger(V2), not charlotte(V2).","- refusal(V2) :- - charlotte(V2), not apodeme(V2), not -relaxing_with_friends(V2), not -carp(V2), not setter(V2).","- val_kilmer(V2) :- - challenge, extremity(V2).","hunger(V2) :- - challenge, extremity(V2).","- ninepins(V2) :- - challenge, extremity(V2).","- charlotte(V2) :- - shade_grass(V2), not sliding_seat(V2), not -extremity(V2).","communicating_artery(V2) :- singapore_dollar(V2).","- apodeme(V2) :- singapore_dollar(V2).","nard(V1) :- - ninepins(V1), not -living_room, not big_ears, not -have_sex, not baby_bird.","relaxing_with_friends(V1) :- - ninepins(V1), not -living_room, not big_ears, not -have_sex, not baby_bird."],"noisy_rules":{"a":["steam_coal(V2) :- val_kilmer(V2), ninepins(V1), charlotte(V2), not relaxing_with_friends(V2).","steam_coal(V2) :- val_kilmer(V2), - hunger(V2), ninepins(V1), not -apodeme(V2), - relaxing_with_friends(V2)."],"b":["- living_room(V2) :- bid(V2), not communicating_artery(V2), not -steam_coal(V2).","- have_sex(V2) :- not -bid(V2), apodeme(V2), - nard(V2), not -steam_coal(V2)."],"c":["big_ears(V2) :- bid(V2), charlotte(V2), apodeme(V2).","- communicating_artery(V2) :- ninepins(V1), - relaxing_with_friends(V2)."],"d":["setter(V2) :- - hunger(V2).","sliding_seat(V2) :- charlotte(V2), not nard(V2), - picnic(V2)."],"e":["mountains(V2) :- - beroe(V2), not sad(V2).","- currycomb(V1) :- abrasion(V1), not exodus(V1), morgantown(V1), - fly_away(V1)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_99_9_13_13_16_0.5_1.0_5_3_4","seed":99,"num_facts":17,"num_rules":14,"num_related_predicates":31,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.375,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"crockery(\"John\", \"Justin\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["bowl(\"John\").","- petting(\"Christopher\").","reactionary(\"Ryan\", \"Christopher\").","- crab(\"John\", \"Justin\", \"Lisa\").","sit_down(\"Christopher\").","- ammunition(\"Ryan\", \"John\").","- pens_on_chains(\"Ryan\", \"Christopher\", \"Lisa\").","- grand_dragon(\"Christopher\", \"Justin\", \"Lisa\").","- check_mark(\"John\", \"Justin\", \"Lisa\").","comedy(\"John\", \"Justin\", \"Lisa\").","- cavern(\"John\", \"Justin\", \"Lisa\").","mexico(\"John\", \"Justin\", \"Lisa\").","scanner(\"Ryan\", \"Lisa\").","casserole(\"Christopher\", \"John\", \"Justin\").","tableware(\"Christopher\", \"John\", \"Lisa\").","sugar_bowl(\"Christopher\", \"Justin\", \"Lisa\").","drink(\"Ryan\", \"Christopher\")."],"noisy_facts":["food_court(\"Christopher\", \"Justin\", \"Lisa\").","- handball_court(\"John\").","- cock_doodle_doo(\"Ryan\", \"Christopher\", \"John\").","- estate(\"Ryan\", \"John\", \"Justin\").","- manitoba(\"Ryan\", \"Christopher\").","- forecourt(\"Christopher\", \"John\", \"Lisa\").","achromatic_color(\"Ryan\", \"Christopher\").","- atrium(\"Ryan\", \"Lisa\").","birthday_parties(\"Ryan\", \"Christopher\").","ankles(\"Ryan\", \"Christopher\", \"Justin\").","- basketball_court(\"Christopher\", \"John\", \"Justin\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["crockery(V2, V3) :- dish(V0, V1), stone_crab(V0, V2), - chinaware(V0, V3), - japanese_crab(V1, V4), not cup(V1, V2, V4).","alaska_king_crab(V0, V2) :- soft_shell_crab(V0, V1, V2), - ovenware(V0, V1, V2), comedy(V2, V3, V4).","dish(V0, V1) :- bowl(V2), scanner(V0, V4), casserole(V1, V2, V3), not -tableware(V1, V2, V4), not -sugar_bowl(V1, V3, V4).","- davis_cup(V0, V1) :- bowl(V2), scanner(V0, V4), casserole(V1, V2, V3), not -tableware(V1, V2, V4), not -sugar_bowl(V1, V3, V4).","stone_crab(V0, V1) :- dish(V0, V1).","- chinaware(V0, V3) :- - petting(V1), sit_down(V1), - ammunition(V0, V2), - pens_on_chains(V0, V1, V4), - grand_dragon(V1, V3, V4).","grace_cup(V0, V3) :- - petting(V1), sit_down(V1), - ammunition(V0, V2), - pens_on_chains(V0, V1, V4), - grand_dragon(V1, V3, V4).","- dixie_cup(V4) :- - petting(V1), sit_down(V1), - ammunition(V0, V2), - pens_on_chains(V0, V1, V4), - grand_dragon(V1, V3, V4).","- japanese_crab(V1, V0) :- dish(V0, V1), not -reactionary(V0, V1), not -drink(V0, V1).","kylix(V0, V1) :- dish(V0, V1), not -reactionary(V0, V1), not -drink(V0, V1).","soft_shell_crab(V0, V0, V3) :- grace_cup(V0, V3), not mark(V0, V3).","- ovenware(V3, V4, V2) :- - crab(V2, V3, V4), not check_mark(V2, V3, V4), not -comedy(V2, V3, V4), not cavern(V2, V3, V4), not -mexico(V2, V3, V4).","- mark(V2, V3) :- - crab(V2, V3, V4), not check_mark(V2, V3, V4), not -comedy(V2, V3, V4), not cavern(V2, V3, V4), not -mexico(V2, V3, V4).","- cup(V1, V2, V4) :- alaska_king_crab(V0, V2), - davis_cup(V0, V1), - dixie_cup(V4), not -kylix(V0, V4)."],"noisy_rules":{"a":["- crockery(V2, V0) :- not -davis_cup(V0, V1), - stone_crab(V0, V2), dixie_cup(V4), - soft_shell_crab(V0, V1, V2).","- crockery(V2, V4) :- not dish(V0, V1), - kylix(V0, V4), not -ovenware(V0, V1, V2), cup(V1, V2, V4)."],"b":["- tableware(V1, V2, V1) :- not -davis_cup(V0, V1), - stone_crab(V0, V2), ovenware(V0, V1, V2), - crockery(V2, V3).","ovenware(V0, V4, V2) :- - alaska_king_crab(V0, V2), chinaware(V0, V3), dixie_cup(V4), not crockery(V2, V3)."],"c":["crab(V2, V1, V4) :- - alaska_king_crab(V0, V2), - stone_crab(V0, V2), japanese_crab(V1, V4), - soft_shell_crab(V0, V1, V2).","- drink(V0, V1) :- - alaska_king_crab(V0, V2), davis_cup(V0, V1), - kylix(V0, V4), ovenware(V0, V1, V2), not -cup(V1, V2, V4)."],"d":["cup(V1, V2, V4) :- - grace_cup(V0, V3), japanese_crab(V1, V4), - soft_shell_crab(V0, V1, V2), not cock_doodle_doo(V0, V1, V2).","- soft_shell_crab(V0, V1, V2) :- not dish(V0, V1), ovenware(V0, V1, V2), not -birthday_parties(V0, V1), - manitoba(V0, V1), not -achromatic_color(V0, V1)."],"e":["- connected_to_feet(V0, V2) :- ankles(V0, V1, V3), - estate(V0, V2, V3).","- court(V0, V1) :- not handball_court(V2), - atrium(V0, V4), not basketball_court(V1, V2, V3), - forecourt(V1, V2, V4), food_court(V1, V3, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_5_10_12_10_12_0.5_1.0_5_2_3","seed":5,"num_facts":16,"num_rules":13,"num_related_predicates":29,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.2222222222222223,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" negative(\"Joshua\", \"Michele\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- fall_from_tree(\"Michele\").","raceway(\"Denise\", \"Diane\").","- playing(\"Diane\", \"Michele\").","impact(\"Diane\", \"Michele\").","weeds(\"Denise\", \"Diane\").","- telling(\"Denise\", \"Joshua\").","- glue(\"Diane\", \"Michele\").","- smudge(\"Diane\", \"Michele\").","stop(\"Diane\", \"Michele\").","- cargo_door(\"Diane\", \"Michele\").","armenian_church(\"Diane\", \"Michele\").","- learn_alphabet(\"Diane\", \"Michele\").","- nunavut(\"Joshua\", \"Michele\").","- drink(\"Joshua\", \"Michele\").","juniper_berry(\"Denise\", \"Diane\").","- tank(\"Denise\", \"Diane\")."],"noisy_facts":["- nigerian(\"Joshua\", \"Michele\").","- fly_same_way_birds_do(\"Joshua\", \"Michele\").","heelbone(\"Joshua\", \"Michele\").","- crosshead(\"Diane\", \"Michele\").","monetary_unit(\"Denise\", \"Joshua\").","double_breasted_suit(\"Denise\", \"Joshua\").","social_occasions(\"Joshua\", \"Michele\").","marker(\"Denise\", \"Joshua\")."],"min_fact_dicts_for_query":["- fall_from_tree(\"Michele\").","impact(\"Diane\", \"Michele\").","weeds(\"Denise\", \"Diane\").","armenian_church(\"Diane\", \"Michele\").","- learn_alphabet(\"Diane\", \"Michele\").","- nunavut(\"Joshua\", \"Michele\")."],"noiseless_rules":["- negative(V2, V3) :- - day_born(V3), - galloway(V0, V2), not element(V0, V3).","dome(V0, V2) :- underworld(V0, V3), - speak(V1, V2), not -impact(V1, V3).","- day_born(V3) :- - fall_from_tree(V3).","- galloway(V0, V2) :- dome(V0, V2), not hit_balls(V0, V2), not sloth_bear(V0, V2), not foliage(V0, V2), not -quail(V0, V2).","- element(V0, V3) :- raceway(V0, V1), - smudge(V1, V3).","- sodium_chloride(V0, V1) :- raceway(V0, V1), - smudge(V1, V3).","- hit_balls(V1, V3) :- - playing(V1, V3), not glue(V1, V3), not smudge(V1, V3), not -stop(V1, V3), not cargo_door(V1, V3).","- travel_quickly(V1, V1) :- - playing(V1, V3), not glue(V1, V3), not smudge(V1, V3), not -stop(V1, V3), not cargo_door(V1, V3).","underworld(V3, V3) :- impact(V1, V3).","- sloth_bear(V0, V1) :- - sodium_chloride(V0, V1), not travel_quickly(V0, V1), not -juniper_berry(V0, V1), not tank(V0, V1).","- speak(V1, V2) :- weeds(V0, V1), armenian_church(V1, V3), - learn_alphabet(V1, V3), - nunavut(V2, V3), not drink(V2, V3).","- foliage(V0, V2) :- weeds(V0, V1), armenian_church(V1, V3), - learn_alphabet(V1, V3), - nunavut(V2, V3), not drink(V2, V3).","quail(V0, V2) :- - telling(V0, V2)."],"noisy_rules":{"a":["negative(V2, V1) :- - dome(V0, V2), sodium_chloride(V0, V1), not -travel_quickly(V0, V1), not -sloth_bear(V0, V2).","negative(V2, V2) :- - dome(V0, V2)."],"b":["tank(V0, V0) :- day_born(V3), hit_balls(V0, V2), not underworld(V0, V3), negative(V2, V3).","playing(V2, V3) :- day_born(V3), hit_balls(V0, V2), negative(V2, V3)."],"c":["cargo_door(V1, V1) :- speak(V1, V2).","- raceway(V0, V0) :- hit_balls(V0, V2), not -sloth_bear(V0, V2)."],"d":["hit_balls(V0, V2) :- not -foliage(V0, V2), not quail(V0, V2), double_breasted_suit(V0, V2).","tank(V0, V0) :- - dome(V0, V2), element(V0, V3), not underworld(V0, V3), not quail(V0, V2), monetary_unit(V0, V2)."],"e":["- passenger_terminal(V0, V2) :- marker(V0, V2), not -heelbone(V2, V3), social_occasions(V2, V3), not nigerian(V2, V3), - fly_same_way_birds_do(V2, V3).","- bowling_alley(V1, V3) :- - crosshead(V1, V3)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_0_8_10_8_11_0.5_1.0_3_2_3","seed":0,"num_facts":10,"num_rules":11,"num_related_predicates":21,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.857142857142857,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"cannon(\"William\", \"Jennifer\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- deflection(\"William\", \"Jennifer\").","ticket_office(\"William\", \"Joshua\").","peach(\"William\", \"Jennifer\").","- raper(\"William\", \"Jennifer\").","third_party(\"Kristina\", \"Jennifer\").","chromosomal_aberration(\"Joshua\", \"Jennifer\").","- acephalia(\"William\", \"Kristina\").","- acardia(\"William\", \"Jennifer\").","- stoic(\"William\", \"Joshua\").","jugale(\"William\", \"Joshua\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["cannon(V0, V3) :- - monster(V0, V3), physiological_state(V0, V3), - cannon_bone(V2, V3).","- monster(V0, V3) :- - buying_ticket(V0), - acephalia(V0, V1), - acardia(V0, V3).","amastia(V0, V3) :- - buying_ticket(V0), - acephalia(V0, V1), - acardia(V0, V3).","- aberrance(V0, V1) :- - deflection(V0, V3), third_party(V1, V3), chromosomal_aberration(V2, V3).","- party(V1, V3) :- - deflection(V0, V3), third_party(V1, V3), chromosomal_aberration(V2, V3).","abnormality(V0, V3) :- amastia(V0, V3), - aberrance(V0, V1), not acardia(V0, V3).","- buying_ticket(V0) :- - passenger_terminal(V3), ticket_office(V0, V2), not raper(V0, V3).","physiological_state(V0, V3) :- abnormality(V0, V3), not weeds(V0, V3).","- weeds(V0, V3) :- - party(V1, V3), peach(V0, V3), not raper(V0, V3).","- cannon_bone(V2, V0) :- ticket_office(V0, V2), not stoic(V0, V2), not -jugale(V0, V2).","- passenger_terminal(V0) :- ticket_office(V0, V2), not stoic(V0, V2), not -jugale(V0, V2)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_14_8_12_12_13_0.5_1.0_5_3_4","seed":14,"num_facts":13,"num_rules":13,"num_related_predicates":26,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.5714285714285716,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" slick(\"Christopher\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- christmas(\"David\").","- sofa(\"David\", \"Dominique\").","box_office(\"David\", \"Christopher\", \"Dominique\").","trousers(\"Suzanne\", \"Daniel\", \"Dominique\").","- sack_coat(\"David\", \"Daniel\").","- commit_crime(\"David\", \"Suzanne\", \"Christopher\").","- holothuroidea(\"Suzanne\", \"Christopher\", \"Dominique\").","- hands(\"Daniel\", \"Christopher\", \"Dominique\").","- tawniness(\"Daniel\", \"Dominique\").","care(\"Daniel\", \"Dominique\").","- sailing_on(\"Daniel\", \"Dominique\").","notes(\"Daniel\", \"Dominique\").","- dry(\"David\", \"Christopher\", \"Dominique\")."],"noisy_facts":["smoker(\"Daniel\", \"Dominique\").","- adam(\"David\", \"Suzanne\", \"Daniel\").","space(\"Christopher\", \"Dominique\").","- travelling_abroad(\"Daniel\", \"Dominique\").","- dancing(\"Suzanne\", \"Daniel\", \"Christopher\").","talking_to_friends(\"Daniel\", \"Dominique\").","survival(\"Suzanne\", \"Dominique\").","sandbag(\"Suzanne\", \"Christopher\", \"Dominique\").","lab_scientist_to_watch(\"David\", \"Christopher\", \"Dominique\").","- destroy_forests(\"David\", \"Suzanne\", \"Daniel\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- slick(V3) :- morning(V0, V2), - liberation(V2, V3), maximizing_use_of_sunlight(V2, V4), not dry(V0, V3, V4).","- plutonium(V2, V4) :- - christmas(V0), - sack_coat(V0, V2), - commit_crime(V0, V1, V3), - holothuroidea(V1, V3, V4), not hands(V2, V3, V4).","- bacon(V1, V2) :- - christmas(V0), - sack_coat(V0, V2), - commit_crime(V0, V1, V3), - holothuroidea(V1, V3, V4), not hands(V2, V3, V4).","- beef_jerky(V1, V4) :- - christmas(V0), - sack_coat(V0, V2), - commit_crime(V0, V1, V3), - holothuroidea(V1, V3, V4), not hands(V2, V3, V4).","- acidophil(V4, V4) :- - plutonium(V2, V4), not tawniness(V2, V4), not -care(V2, V4), not sailing_on(V2, V4), not -notes(V2, V4).","morning(V4, V2) :- - plutonium(V2, V4), not tawniness(V2, V4), not -care(V2, V4), not sailing_on(V2, V4), not -notes(V2, V4).","- liberation(V2, V3) :- - slap(V3), - asian_longhorned_beetle(V4), - sofa(V0, V4), box_office(V0, V3, V4), trousers(V1, V2, V4).","- slap(V3) :- - coronal_suture(V2, V3, V4).","allow_animal_to_fly(V2, V4) :- - coronal_suture(V2, V3, V4).","- coronal_suture(V2, V2, V4) :- - bacon(V1, V2), - acidophil(V1, V4).","- asian_longhorned_beetle(V4) :- - beef_jerky(V1, V4).","playing_baseball(V4, V4) :- - beef_jerky(V1, V4).","maximizing_use_of_sunlight(V2, V4) :- morning(V0, V2), allow_animal_to_fly(V2, V4), not -playing_baseball(V2, V4)."],"noisy_rules":{"a":["slick(V3) :- bacon(V1, V2), - morning(V0, V2), liberation(V2, V3), asian_longhorned_beetle(V4).","slick(V2) :- acidophil(V1, V4), - maximizing_use_of_sunlight(V2, V4)."],"b":["sailing_on(V3, V3) :- slick(V3).","sack_coat(V0, V2) :- plutonium(V2, V4), bacon(V1, V2), - morning(V0, V2), not -slap(V3), slick(V3)."],"c":["slap(V1) :- beef_jerky(V1, V4), - morning(V0, V2), not allow_animal_to_fly(V2, V4), asian_longhorned_beetle(V4).","- care(V2, V4) :- bacon(V1, V2), coronal_suture(V2, V3, V4), not -asian_longhorned_beetle(V4)."],"d":["- allow_animal_to_fly(V2, V4) :- not -beef_jerky(V1, V4), coronal_suture(V2, V3, V4), - playing_baseball(V2, V4), survival(V1, V4).","commercial_document(V4, V2, V4) :- not playing_baseball(V2, V4), not -talking_to_friends(V2, V4), - travelling_abroad(V2, V4), smoker(V2, V4)."],"e":["- storing_books(V1, V2) :- space(V3, V4), lab_scientist_to_watch(V0, V3, V4), - dancing(V1, V2, V3), sandbag(V1, V3, V4).","- dairy_product_from_cows(V2) :- - adam(V0, V1, V2), not destroy_forests(V0, V1, V2)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_70_5_7_6_6_0.5_1.0_3_2_3","seed":70,"num_facts":7,"num_rules":8,"num_related_predicates":15,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"lawn_bowling(\"Anthony\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["nutriment(\"Jose\").","soup(\"Anthony\").","- P10(\"Anthony\").","salad_bowl(\"Anthony\", \"Jose\").","porringer(\"John\", \"Jose\").","- ceramic(\"Erik\", \"John\").","pod(\"Anthony\", \"John\")."],"noisy_facts":["- stove_bolt(\"Anthony\", \"Jose\").","- carriage_bolt(\"Erik\", \"Jose\").","scanner(\"Anthony\", \"John\").","- sewing(\"Anthony\", \"John\").","clinch(\"Erik\", \"John\")."],"min_fact_dicts_for_query":["nutriment(\"Jose\").","salad_bowl(\"Anthony\", \"Jose\").","porringer(\"John\", \"Jose\")."],"noiseless_rules":["lawn_bowling(V1) :- - clerical_collar(V3), instrumentality(V0, V1), not -dish(V1, V3).","- clerical_collar(V3) :- nutriment(V3), salad_bowl(V1, V3), porringer(V2, V3).","bowl(V1, V2) :- nutriment(V3), salad_bowl(V1, V3), porringer(V2, V3).","- jack(V1, V2) :- nutriment(V3), salad_bowl(V1, V3), porringer(V2, V3).","- container(V2, V2) :- bowl(V1, V2), not -pod(V1, V2).","- macedoine(V1) :- bowl(V1, V2), not -pod(V1, V2).","instrumentality(V0, V1) :- - jack(V1, V2), - container(V0, V2), not ceramic(V0, V2).","dish(V1, V1) :- - macedoine(V1), not -soup(V1), not P10(V1)."],"noisy_rules":{"a":["- lawn_bowling(V1) :- jack(V1, V2).","- lawn_bowling(V1) :- - bowl(V1, V2)."],"b":["container(V0, V2) :- container(V0, V2), - lawn_bowling(V1).","ceramic(V0, V2) :- container(V0, V2), - lawn_bowling(V1)."],"c":["- instrumentality(V1, V1) :- not bowl(V1, V2), jack(V1, V2).","- nutriment(V3) :- - dish(V1, V3)."],"d":["P10(V1) :- - bowl(V1, V2), not -scanner(V1, V2).","jack(V1, V1) :- macedoine(V1)."],"e":["- bolt(V0, V1) :- clinch(V0, V2), - carriage_bolt(V0, V3), - stove_bolt(V1, V3).","- craft(V1, V2) :- - sewing(V1, V2)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_69_9_8_4_6_0.5_1.0_5_3_4","seed":69,"num_facts":8,"num_rules":9,"num_related_predicates":17,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.375,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"container(\"Ryan\", \"Brandon\", \"Jean\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["nose(\"Kathryn\", \"Ryan\", \"Jermaine\").","hiking(\"Brandon\").","- singing(\"Brandon\").","revolving_door(\"Ryan\", \"Brandon\", \"Jean\").","- bowl(\"Kathryn\", \"Ryan\", \"Jean\").","pod(\"Kathryn\", \"Ryan\", \"Jean\").","- dish(\"Kathryn\", \"Brandon\", \"Jermaine\").","lock(\"Ryan\", \"Brandon\", \"Jean\")."],"noisy_facts":[],"min_fact_dicts_for_query":["hiking(\"Brandon\").","- bowl(\"Kathryn\", \"Ryan\", \"Jean\").","pod(\"Kathryn\", \"Ryan\", \"Jean\").","- dish(\"Kathryn\", \"Brandon\", \"Jermaine\")."],"noiseless_rules":["container(V1, V2, V3) :- - can(V2), - bowl(V0, V1, V3), pod(V0, V1, V3), - dish(V0, V2, V4), not -lock(V1, V2, V3).","body(V0, V1, V4) :- nose(V0, V1, V4).","exercise(V2) :- hiking(V2).","popular_recreation(V2, V2, V2) :- hiking(V2), not singing(V2).","- cannikin(V2, V2) :- exercise(V2).","- can(V2) :- - cannikin(V2, V3), not oilcan(V2, V3), not -coffee_can(V2, V3).","- oilcan(V2, V3) :- popular_recreation(V2, V3, V4), not -door(V2, V3, V4).","door(V2, V3, V3) :- revolving_door(V1, V2, V3), not -lock(V1, V2, V3).","coffee_can(V1, V4) :- body(V0, V1, V4)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_84_8_11_7_10_0.5_1.0_3_2_3","seed":84,"num_facts":9,"num_rules":12,"num_related_predicates":21,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"P11(\"Gregory\", \"Kristin\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P12(\"Gregory\", \"Alec\").","P13(\"Gregory\", \"Alec\").","P14(\"Gregory\", \"Jasmine\").","P15(\"Kristin\", \"Alec\").","- P16.","P17(\"Gregory\", \"Jasmine\").","- P18(\"Jasmine\").","- P19(\"Jasmine\").","- P20(\"Gregory\", \"Alec\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["P11(V0, V1) :- - P2(V0, V3), - P5(V0, V3), P10(V1, V3).","- P0(V0) :- P3(V0, V2), not P8(V0, V2), not -P13(V0, V2).","P1(V0) :- - P4(V0, V3), not -P7(V0, V3).","- P2(V0, V3) :- - P12(V0, V2), P14(V0, V3), P15(V1, V2).","P3(V0, V2) :- - P12(V0, V2), P14(V0, V3), P15(V1, V2).","- P4(V0, V3) :- - P12(V0, V2), P14(V0, V3), P15(V1, V2).","- P5(V0, V3) :- - P4(V0, V3), not -P9(V0, V3), not -P17(V0, V3).","- P6(V3) :- - P4(V0, V3), not -P9(V0, V3), not -P17(V0, V3).","P7(V3, V3) :- - P6(V3), not P18(V3), not P19(V3).","- P8(V0, V2) :- P13(V0, V2), P15(V1, V2), not P20(V0, V2).","P9(V0, V2) :- P13(V0, V2), P15(V1, V2), not P20(V0, V2).","P10(V0, V0) :- - P0(V0), not -P1(V0), not P16."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_0_10_10_6_7_0.5_1.0_3_1_2","seed":0,"num_facts":10,"num_rules":11,"num_related_predicates":21,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.2222222222222223,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"fuel(\"Richard\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- anthracite(\"Richard\").","water_speedwell(\"Richard\").","town_gas(\"Amanda\").","- white(\"Richard\").","gut(\"Richard\").","steam_coal(\"Richard\").","- bituminous_coal(\"Richard\").","- chessman(\"Richard\").","- tile(\"Richard\").","electrons."],"noisy_facts":["daytime(\"Richard\").","but(\"Richard\").","song.","accelerator(\"Richard\").","procellariiform_seabird(\"Richard\").","december(\"Richard\").","- most_but_not_all_tables(\"Richard\").","- face(\"Richard\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["fuel(V1) :- - nuclear_fuel(V1), not -coal(V1), not fossil_fuel(V1).","- nuclear_fuel(V2) :- - coal_gas(V2), not -electrons.","negative_charge(V2) :- - coal_gas(V2), not -electrons.","- distribution_cost(V1) :- - forge(V1), not man(V1), not -gut(V1).","- forge(V0) :- negative_charge(V0).","coal(V1) :- - anthracite(V1), not -steam_coal(V1), not bituminous_coal(V1).","- petroleum(V1) :- water_speedwell(V1).","natural_gas(V1) :- - distribution_cost(V1).","- coal_gas(V2) :- town_gas(V2).","- fossil_fuel(V1) :- coal(V1), not petroleum(V1), not -natural_gas(V1).","- man(V1) :- - white(V1), not chessman(V1), not tile(V1)."],"noisy_rules":{"a":["- fuel(V1) :- nuclear_fuel(V1), not natural_gas(V1).","- fuel(V1) :- petroleum(V1), coal_gas(V2)."],"b":["forge(V1) :- - fuel(V1).","forge(V1) :- - negative_charge(V0), - fuel(V1)."],"c":["white(V1) :- forge(V1), petroleum(V1).","chessman(V1) :- nuclear_fuel(V1)."],"d":["anthracite(V1) :- - negative_charge(V0), forge(V1), not -song.","anthracite(V1) :- fossil_fuel(V1), not most_but_not_all_tables(V1), not -daytime(V1)."],"e":["pithead(V1) :- - face(V1), not -procellariiform_seabird(V1).","speed(V1) :- not -accelerator(V1), not -december(V1), but(V1)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_67_8_8_2_5_0.5_1.0_3_2_3","seed":67,"num_facts":5,"num_rules":9,"num_related_predicates":14,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"P8(\"Stephanie\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P9(\"Stephanie\", \"Benjamin\").","- P10(\"Melissa\", \"Benjamin\").","P11(\"Stephanie\", \"Benjamin\").","- P12(\"Stephanie\", \"Benjamin\").","- P13(\"Stephanie\", \"Benjamin\")."],"noisy_facts":["P14.","P21(\"Melissa\", \"Benjamin\").","P20(\"Melissa\", \"Jesse\").","P17(\"Stephanie\", \"Benjamin\").","P15(\"Melissa\", \"Benjamin\").","P18(\"Melissa\", \"Stephanie\")."],"min_fact_dicts_for_query":["P9(\"Stephanie\", \"Benjamin\").","- P10(\"Melissa\", \"Benjamin\").","P11(\"Stephanie\", \"Benjamin\").","- P12(\"Stephanie\", \"Benjamin\")."],"noiseless_rules":["P8(V1) :- - P0(V1), - P6(V3), not -P9(V1, V3).","- P0(V1) :- P9(V1, V3), not P13(V1, V3).","- P1(V1, V3) :- P9(V1, V3), not P13(V1, V3).","- P2(V0, V3) :- - P4(V0, V3).","- P3(V2, V3) :- - P5(V2, V3).","- P4(V0, V3) :- - P10(V0, V3), - P12(V1, V3).","- P5(V1, V3) :- P11(V1, V3), not P12(V1, V3), not P13(V1, V3).","- P6(V3) :- - P2(V0, V3), - P3(V2, V3), not P7(V0, V3).","- P7(V0, V3) :- - P1(V0, V3)."],"noisy_rules":{"a":["- P8(V2) :- P1(V0, V3), not -P2(V0, V3), P5(V2, V3).","- P8(V3) :- P2(V0, V3), P3(V2, V3), P7(V0, V3)."],"b":["P7(V2, V3) :- P0(V1), P5(V2, V3), not P8(V1).","P0(V1) :- - P8(V1)."],"c":["P1(V3, V3) :- P6(V3).","P5(V0, V3) :- P1(V0, V3), not -P4(V0, V3), P7(V0, V3)."],"d":["P3(V3, V3) :- P0(V1), P2(V0, V3), not -P14.","P10(V0, V3) :- P7(V0, V3), P15(V0, V3)."],"e":["- P16(V1) :- P17(V1, V3).","P19(V1, V2) :- P18(V0, V1), P20(V0, V2), P21(V0, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_0_9_10_9_12_0.5_1.0_5_3_4","seed":0,"num_facts":12,"num_rules":11,"num_related_predicates":23,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"deer(\"Michael\", \"Miranda\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- woodland_caribou(\"Joshua\", \"Vicki\").","barren_ground_caribou(\"Joshua\", \"Vicki\").","having_burger(\"Jeffery\", \"Vicki\").","- brocket(\"Joshua\", \"Vicki\").","bill(\"Joshua\", \"Vicki\").","dog(\"Joshua\", \"Vicki\").","- hart(\"Joshua\", \"Vicki\").","- wash_paws(\"Jeffery\", \"Miranda\", \"Vicki\").","- mountebank(\"Michael\", \"Miranda\", \"Vicki\").","bok_choy(\"Joshua\", \"Michael\").","- garment_cutter(\"Joshua\", \"Vicki\").","unit_character(\"Joshua\", \"Michael\", \"Miranda\")."],"noisy_facts":["- pooch(\"Miranda\").","puppy(\"Miranda\").","great_pyrenees(\"Michael\", \"Vicki\").","poodle(\"Miranda\").","pug(\"Michael\", \"Vicki\").","emblem(\"Joshua\", \"Miranda\").","- season(\"Michael\").","- original(\"Michael\").","thank_another_person(\"Joshua\", \"Michael\", \"Miranda\").","trichina(\"Michael\", \"Miranda\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["deer(V2, V3) :- mule_deer(V1, V2, V3), fawn(V2, V3, V4).","- flag(V2, V4) :- - japanese_deer(V3), bok_choy(V1, V2), - garment_cutter(V1, V4), not -unit_character(V1, V2, V3).","wapiti(V4) :- - tail(V0, V4), - red_deer(V0, V4), - sambar(V0, V2, V3), not wash_paws(V0, V3, V4), not mountebank(V2, V3, V4).","- caribou(V1, V4, V4) :- - woodland_caribou(V1, V4), not -barren_ground_caribou(V1, V4), not garment_cutter(V1, V4).","- japanese_deer(V3) :- - hunting_dog(V3, V4).","mule_deer(V4, V2, V3) :- wapiti(V4), - caribou(V2, V3, V4).","- tail(V4, V4) :- - flag(V2, V4).","fawn(V1, V4, V4) :- barren_ground_caribou(V1, V4), not brocket(V1, V4), not -bill(V1, V4), not -dog(V1, V4), not hart(V1, V4).","- red_deer(V1, V4) :- barren_ground_caribou(V1, V4), not brocket(V1, V4), not -bill(V1, V4), not -dog(V1, V4), not hart(V1, V4).","- sambar(V0, V4, V4) :- - red_deer(V0, V4), not -having_burger(V0, V4).","- hunting_dog(V0, V4) :- - red_deer(V0, V4), not -having_burger(V0, V4)."],"noisy_rules":{"a":["- deer(V2, V3) :- flag(V2, V4), - mule_deer(V1, V2, V3), not fawn(V2, V3, V4), red_deer(V0, V4).","- deer(V2, V3) :- - wapiti(V4), caribou(V2, V3, V4), japanese_deer(V3), red_deer(V0, V4), not -sambar(V0, V2, V3)."],"b":["- dog(V2, V4) :- - wapiti(V4), sambar(V0, V2, V3), - deer(V2, V3).","- dog(V1, V4) :- flag(V2, V4), - mule_deer(V1, V2, V3), not -red_deer(V0, V4), sambar(V0, V2, V3), not deer(V2, V3)."],"c":["woodland_caribou(V3, V4) :- - wapiti(V4), japanese_deer(V3).","- bill(V1, V4) :- not wapiti(V4), japanese_deer(V3), - mule_deer(V1, V2, V3), tail(V0, V4), not -hunting_dog(V3, V4)."],"d":["- dog(V4, V4) :- - wapiti(V4), not -japanese_deer(V3), not -poodle(V3), puppy(V3), - pooch(V3).","- dog(V2, V4) :- not -flag(V2, V4), not -japanese_deer(V3), hunting_dog(V3, V4), great_pyrenees(V2, V4), not -pug(V2, V4)."],"e":["symbol(V1, V2) :- - season(V2), not original(V2), not -emblem(V1, V3), thank_another_person(V1, V2, V3).","- nematode(V2, V3) :- trichina(V2, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_17_8_12_11_12_0.5_1.0_5_2_3","seed":17,"num_facts":12,"num_rules":13,"num_related_predicates":25,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.7142857142857144,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" play(\"Matthew\", \"James\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["leotard(\"James\").","charlotte(\"Daniel\", \"James\").","elongation(\"Daniel\", \"James\").","attached(\"Daniel\", \"James\").","human_nature(\"Daniel\", \"James\").","- modern(\"Daniel\", \"Matthew\").","hundredth(\"Daniel\", \"Joseph\").","royal(\"Daniel\", \"James\").","high_bit(\"Daniel\", \"James\").","- form_of_public_transportation(\"Matthew\", \"James\").","- pacifist(\"Joseph\", \"James\").","- major."],"noisy_facts":["checker(\"Daniel\", \"Matthew\").","appearance(\"Daniel\", \"Matthew\").","- inherence(\"Matthew\", \"James\").","vaulting_horse(\"Daniel\", \"Joseph\").","parapodium(\"Matthew\").","- fool(\"Daniel\", \"Matthew\").","- article(\"James\").","- perennials(\"Daniel\", \"Matthew\").","- creeper(\"Daniel\", \"Joseph\").","use_guns_to_commit_crimes(\"Daniel\", \"Matthew\").","- rock_star(\"Daniel\", \"Joseph\").","- opera_star(\"Daniel\", \"Joseph\").","eat_meal(\"Joseph\", \"James\").","pipe(\"Daniel\", \"Matthew\")."],"min_fact_dicts_for_query":["leotard(\"James\").","- modern(\"Daniel\", \"Matthew\").","hundredth(\"Daniel\", \"Joseph\")."],"noiseless_rules":["- play(V1, V3) :- - climb(V2), beaver(V3), - making_less_hungry(V0, V1), not form_of_public_transportation(V1, V3), not pacifist(V2, V3).","- climb(V2) :- - cliffhanger(V0, V2), not snoop(V0, V2).","beaver(V3) :- leotard(V3), - modern(V0, V1), hundredth(V0, V2), not -royal(V0, V3), not -high_bit(V0, V3).","nitramine(V0, V2) :- leotard(V3), - modern(V0, V1), hundredth(V0, V2), not -royal(V0, V3), not -high_bit(V0, V3).","- open_marriages(V0, V1) :- leotard(V3), - modern(V0, V1), hundredth(V0, V2), not -royal(V0, V3), not -high_bit(V0, V3).","- cliffhanger(V0, V2) :- - heat(V0), large_gathering(V0, V2), not pinworm(V0, V2).","- heat(V0) :- nitramine(V0, V2).","report(V0, V2) :- nitramine(V0, V2).","lamb(V2, V2) :- nitramine(V0, V2).","large_gathering(V0, V3) :- report(V0, V3), not -charlotte(V0, V3), not -elongation(V0, V3), not -attached(V0, V3), not -human_nature(V0, V3).","- making_less_hungry(V0, V1) :- - open_marriages(V0, V1), - cliffhanger(V0, V2).","- snoop(V1, V3) :- lamb(V1, V3), not major.","- pinworm(V1, V1) :- lamb(V1, V3), not major."],"noisy_rules":{"a":["play(V1, V3) :- climb(V2), open_marriages(V0, V1), cliffhanger(V0, V2), - lamb(V1, V3).","play(V1, V1) :- making_less_hungry(V0, V1)."],"b":["- royal(V0, V3) :- - nitramine(V0, V2), not -heat(V0), not large_gathering(V0, V2), pinworm(V0, V2), play(V1, V3).","form_of_public_transportation(V1, V3) :- - nitramine(V0, V2), play(V1, V3)."],"c":["- hundredth(V0, V2) :- climb(V2), - beaver(V3), not nitramine(V0, V2), - large_gathering(V0, V2).","- attached(V0, V3) :- - lamb(V1, V3), - large_gathering(V0, V2), making_less_hungry(V0, V1), not -pinworm(V0, V2)."],"d":["- nitramine(V0, V2) :- open_marriages(V0, V1), cliffhanger(V0, V2), not -checker(V0, V1), not perennials(V0, V1).","- birdhouse(V0, V3) :- not -climb(V2), not -cliffhanger(V0, V2), - report(V0, V3), not opera_star(V0, V2), vaulting_horse(V0, V2)."],"e":["sundress(V0, V2) :- parapodium(V1), - article(V3), - fool(V0, V1), - rock_star(V0, V2), not -eat_meal(V2, V3).","rudder(V2) :- appearance(V0, V1), use_guns_to_commit_crimes(V0, V1), pipe(V0, V1), - creeper(V0, V2), - inherence(V1, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_1_7_8_6_9_0.5_1.0_3_1_2","seed":1,"num_facts":9,"num_rules":9,"num_related_predicates":18,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"P8(\"Kristen\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P9.","P10(\"Kristen\").","- P11(\"Michele\").","P12(\"Michele\").","P13(\"Kristen\").","P14.","P15(\"Michele\").","P16(\"Kristen\").","P17(\"Kristen\")."],"noisy_facts":["P22(\"Jeanette\").","- P20.","P27(\"Michele\").","P21.","P23(\"Jeanette\").","- P26(\"Michele\").","P19."],"min_fact_dicts_for_query":["- P9.","P13(\"Kristen\")."],"noiseless_rules":["P8(V0) :- - P1(V0), not -P4(V0), not -P16(V0).","P0(V1) :- P2(V1), not P6(V1), not -P15(V1).","- P1(V0) :- - P9, P13(V0), not -P14.","P2(V0) :- - P9, P13(V0), not -P14.","- P3(V0) :- - P9, P13(V0), not -P14.","P4(V0) :- - P5(V0), not -P7(V0), not -P13(V0).","- P5(V0) :- P10(V0), not -P16(V0), not -P17(V0).","- P6(V1) :- - P11(V1), not -P12(V1).","P7(V1) :- P0(V1), not P3(V1), not -P12(V1)."],"noisy_rules":{"a":["- P8(V0) :- P1(V0).","- P8(V0) :- P3(V1), - P7(V0)."],"b":["- P0(V1) :- P6(V1), - P8(V0).","- P7(V0) :- not -P1(V0), - P8(V0)."],"c":["- P0(V0) :- - P4(V0).","- P0(V1) :- - P2(V1), - P4(V0), not -P5(V0)."],"d":["P18(V0) :- P1(V0), P6(V1), P19.","- P17(V1) :- P6(V1), not P20, P21."],"e":["- P24(V2) :- P22(V2), P23(V2).","P25(V1) :- - P26(V1), not -P27(V1)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_56_4_4_2_5_0.5_1.0_5_2_3","seed":56,"num_facts":4,"num_rules":5,"num_related_predicates":9,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6666666666666667,"num_noise_rules_per_type":2,"num_rules_with_default_negation":3,"target_query":"star_in_film(\"Ashley\", \"Douglas\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["- hessian_boot(\"John\", \"Kevin\").","groceries(\"Ashley\", \"Kevin\").","album(\"Kevin\", \"Douglas\").","hell(\"Ashley\", \"Kevin\")."],"noisy_facts":["- stannic_chloride(\"Ashley\", \"Kevin\").","point(\"Kevin\", \"Douglas\").","soup_bowl(\"Ashley\").","chief(\"Ashley\", \"Kevin\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["star_in_film(V1, V3) :- - aquatic_plants(V1), - meeting(V1, V3).","return(V1, V2) :- - hessian_boot(V0, V2), groceries(V1, V2), album(V2, V3).","- aquatic_plants(V1) :- return(V1, V2), somatic_cell(V1, V2), album(V2, V3), not -hell(V1, V2).","- meeting(V1, V2) :- return(V1, V2), not -groceries(V1, V2).","somatic_cell(V1, V2) :- return(V1, V2), not -groceries(V1, V2)."],"noisy_rules":{"a":["- star_in_film(V1, V3) :- - return(V1, V2), aquatic_plants(V1), meeting(V1, V3), not somatic_cell(V1, V2).","- star_in_film(V1, V3) :- - return(V1, V2), aquatic_plants(V1), meeting(V1, V3)."],"b":["- album(V1, V3) :- not -aquatic_plants(V1), - star_in_film(V1, V3).","- somatic_cell(V1, V2) :- - return(V1, V2), not -aquatic_plants(V1), not -meeting(V1, V3), - somatic_cell(V1, V2), - star_in_film(V1, V3)."],"c":["- hell(V1, V2) :- - return(V1, V2), not -aquatic_plants(V1), meeting(V1, V3), not somatic_cell(V1, V2).","- hell(V1, V2) :- - return(V1, V2), aquatic_plants(V1), meeting(V1, V3)."],"d":["- eatery(V1, V2) :- - return(V1, V2), aquatic_plants(V1), not -soup_bowl(V1).","- album(V1, V1) :- aquatic_plants(V1)."],"e":["- present_performance(V1, V2) :- - stannic_chloride(V1, V2).","slanted_rooves(V1, V3) :- chief(V1, V2), point(V2, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_85_8_11_11_14_0.5_1.0_5_3_4","seed":85,"num_facts":14,"num_rules":12,"num_related_predicates":26,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.4285714285714284,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" eating_lunch(\"Kirsten\", \"Phillip\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- making_bread(\"Phillip\").","animal(\"Kirsten\", \"Patrick\", \"Norma\").","nest(\"Patrick\").","own_property(\"Kirsten\", \"Patrick\").","- tote_bag(\"Kirsten\", \"Patrick\").","driving_belt(\"Kirsten\", \"Patrick\").","chick(\"Patrick\").","- chicken_egg(\"Patrick\").","humpty_dumpty(\"Patrick\").","- weeb(\"Patrick\").","- eating_apple(\"Daniel\", \"Norma\").","flying(\"Kirsten\", \"Phillip\", \"Norma\").","- eating_dinner(\"Phillip\", \"Patrick\", \"Norma\").","- eat_meal(\"Phillip\", \"Patrick\", \"Norma\")."],"noisy_facts":["- quack(\"Kirsten\", \"Daniel\", \"Norma\").","- bong(\"Kirsten\", \"Phillip\").","- mute_swan(\"Daniel\", \"Phillip\", \"Patrick\").","canary(\"Kirsten\", \"Patrick\").","- duck(\"Kirsten\", \"Patrick\").","- pippin(\"Phillip\", \"Patrick\").","- countries(\"Phillip\", \"Norma\").","season_food(\"Kirsten\", \"Patrick\").","- cry(\"Patrick\", \"Norma\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- eating_lunch(V0, V2) :- school_cafeteria(V0, V1, V2), - wings(V0, V3, V4), not eating(V1, V2, V3).","nutrition(V3) :- - making_bread(V2), - eating_apple(V1, V4), flying(V0, V2, V4), - eating_dinner(V2, V3, V4), not eat_meal(V2, V3, V4).","school_cafeteria(V0, V1, V2) :- - making_bread(V2), - eating_apple(V1, V4), flying(V0, V2, V4), - eating_dinner(V2, V3, V4), not eat_meal(V2, V3, V4).","bird(V1, V3) :- - making_bread(V2), - eating_apple(V1, V4), flying(V0, V2, V4), - eating_dinner(V2, V3, V4), not eat_meal(V2, V3, V4).","- deli(V0, V3) :- animal(V0, V3, V4).","- wings(V3, V3, V3) :- nutrition(V3), not -serve_lunch(V3), not meeting_friend(V3), not chicken_egg(V3).","- eating(V1, V2, V3) :- school_cafeteria(V0, V1, V2), - chicken(V0, V1, V2), animal(V0, V3, V4).","serve_lunch(V3) :- school_cafeteria(V0, V1, V2), - chicken(V0, V1, V2), animal(V0, V3, V4).","- chicken(V0, V1, V2) :- egg(V0, V2), - hen(V1, V2, V3).","egg(V3, V3) :- nest(V3), not -chick(V3), not chicken_egg(V3), not -humpty_dumpty(V3), not weeb(V3).","- meeting_friend(V3) :- bird(V1, V3), - deli(V0, V3), not -own_property(V0, V3), not tote_bag(V0, V3), not -driving_belt(V0, V3).","- hen(V1, V3, V3) :- bird(V1, V3), - deli(V0, V3), not -own_property(V0, V3), not tote_bag(V0, V3), not -driving_belt(V0, V3)."],"noisy_rules":{"a":["eating_lunch(V0, V2) :- - school_cafeteria(V0, V1, V2), meeting_friend(V3).","eating_lunch(V0, V2) :- deli(V0, V3), eating(V1, V2, V3), - serve_lunch(V3), meeting_friend(V3)."],"b":["- bird(V1, V3) :- - serve_lunch(V3), chicken(V0, V1, V2), not egg(V0, V2), not -meeting_friend(V3), eating_lunch(V0, V2).","- nutrition(V3) :- - serve_lunch(V3), eating_lunch(V0, V2)."],"c":["- flying(V0, V2, V4) :- - nutrition(V3), - bird(V1, V3), wings(V0, V3, V4), eating(V1, V2, V3).","- chick(V3) :- - bird(V1, V3), deli(V0, V3), eating(V1, V2, V3), meeting_friend(V3)."],"d":["- serve_lunch(V3) :- - pippin(V2, V3).","- bird(V1, V3) :- deli(V0, V3), meeting_friend(V3), hen(V1, V2, V3), not duck(V0, V3), canary(V0, V3)."],"e":["norfolk_jacket(V1, V3) :- season_food(V0, V3), - mute_swan(V1, V2, V3).","sound(V0, V3) :- - bong(V0, V2), - countries(V2, V4), - cry(V3, V4), - quack(V0, V1, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_69_9_10_3_6_0.5_1.0_5_2_3","seed":69,"num_facts":7,"num_rules":11,"num_related_predicates":18,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.375,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"bird(\"Joy\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- duckling(\"Robert\").","- block(\"Robert\").","pigeon(\"Joy\", \"Robert\").","- chicken(\"Joy\", \"Russell\").","- board(\"Joy\", \"Robert\").","goose(\"Robert\").","P17(\"Robert\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["bird(V0) :- - second_joint(V0), poultry(V0, V3).","- duck(V2) :- - duckling(V2), not block(V2).","area(V2, V2) :- - block(V2), - board(V0, V2).","dark_meat(V0, V2) :- - block(V2), - board(V0, V2).","- columbiform_bird(V0, V2) :- pigeon(V0, V2).","fragment(V3, V2) :- area(V2, V3).","- second_joint(V0) :- dark_meat(V0, V2), fragment(V1, V2), not -gallinaceous_bird(V0, V2), not -P9(V0, V2), not board(V0, V2).","gallinaceous_bird(V0, V2) :- - columbiform_bird(V0, V2), not -domestic_fowl(V0, V2).","domestic_fowl(V0, V0) :- poultry(V0, V3), not chicken(V0, V3).","poultry(V2, V2) :- - duck(V2), not -goose(V2), not -P17(V2).","P9(V2, V2) :- - duck(V2), not -goose(V2), not -P17(V2)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_12_8_10_7_8_0.5_1.0_5_2_3","seed":12,"num_facts":10,"num_rules":11,"num_related_predicates":21,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5714285714285716,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"capon(\"Lisa\", \"Samantha\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- apple(\"Lisa\", \"Kim\").","road(\"Jonathan\", \"Samantha\").","- take_turns_on_equipment(\"Lisa\", \"Samantha\").","- prison_camp(\"Jonathan\", \"Lisa\").","rump_steak(\"Jonathan\", \"Lisa\").","crown(\"Lisa\", \"Samantha\").","- bin(\"Lisa\", \"Samantha\").","- blush(\"Lisa\", \"Samantha\").","boulder(\"Lisa\", \"Samantha\").","terrain(\"Lisa\", \"Samantha\")."],"noisy_facts":["- galley_slave(\"Kim\").","getting_bad_service(\"Lisa\", \"Kim\").","beeswax(\"Jonathan\", \"Lisa\").","- peanut.","- round_trip_ticket(\"Jonathan\", \"Kim\").","team_game(\"Kim\").","mouse(\"Lisa\", \"Kim\")."],"min_fact_dicts_for_query":["- apple(\"Lisa\", \"Kim\").","road(\"Jonathan\", \"Samantha\")."],"noiseless_rules":["capon(V1, V2) :- - ping(V1), scratch_back(V0, V2), not -broken_computer(V1, V2), not -crown(V1, V2).","in_north_america(V1, V3) :- - apple(V1, V3).","- ping(V1) :- in_north_america(V1, V3), not -sponge(V1, V3).","guyana_dollar(V1) :- in_north_america(V1, V3), not -sponge(V1, V3).","scratch_back(V0, V2) :- road(V0, V2).","- croquet_ball(V0) :- road(V0, V2).","- acquiring_knowledge(V0, V2) :- road(V0, V2).","churches(V0, V0) :- - croquet_ball(V0).","time_draft(V1, V2) :- - take_turns_on_equipment(V1, V2), not -crown(V1, V2), not bin(V1, V2), not blush(V1, V2), not -boulder(V1, V2).","sponge(V1, V1) :- time_draft(V1, V2), not -terrain(V1, V2).","broken_computer(V1, V2) :- guyana_dollar(V2), - acquiring_knowledge(V0, V2), churches(V0, V1), not prison_camp(V0, V1), not -rump_steak(V0, V1)."],"noisy_rules":{"a":["- capon(V1, V2) :- ping(V1), croquet_ball(V0), acquiring_knowledge(V0, V2), - sponge(V1, V3).","- capon(V1, V2) :- - in_north_america(V1, V3), - scratch_back(V0, V2), acquiring_knowledge(V0, V2), not broken_computer(V1, V2)."],"b":["ping(V1) :- - broken_computer(V1, V2), not capon(V1, V2).","- guyana_dollar(V2) :- - in_north_america(V1, V3), - scratch_back(V0, V2), not broken_computer(V1, V2), - capon(V1, V2)."],"c":["blush(V1, V2) :- acquiring_knowledge(V0, V2), - sponge(V1, V3).","- guyana_dollar(V2) :- croquet_ball(V0), not -acquiring_knowledge(V0, V2), - churches(V0, V1), - time_draft(V1, V2), not broken_computer(V1, V2)."],"d":["- boulder(V1, V3) :- - in_north_america(V1, V3), not sponge(V1, V3), not -getting_bad_service(V1, V3).","sip(V0, V0) :- croquet_ball(V0), not peanut."],"e":["mailer(V1, V3) :- not -team_game(V3), not galley_slave(V3), mouse(V1, V3).","- attached(V0, V1) :- beeswax(V0, V1), - round_trip_ticket(V0, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_40_8_12_12_12_0.5_1.0_5_2_3","seed":40,"num_facts":15,"num_rules":13,"num_related_predicates":28,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8571428571428572,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" muenster(\"Laura\", \"Alan\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- cabinets(\"Laura\", \"John\").","fruit_fly(\"Laura\").","water_pipe(\"Laura\", \"John\").","kettle(\"Laura\", \"John\").","- transcendence(\"Michael\", \"Laura\").","- noctuid_moth(\"Michael\", \"Laura\").","british_east_africa(\"Michael\", \"Laura\").","kite(\"Michael\", \"Laura\").","- social_event(\"John\").","down(\"John\").","pasture(\"Laura\", \"John\").","put_out_small_fire(\"Michael\", \"Alan\").","- bird_home(\"Michael\", \"John\").","bipedal(\"Laura\", \"John\").","refection(\"Alan\", \"John\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- muenster(V1, V2) :- bar(V3), - poetry(V1, V2), not -leverage(V2, V3), not textile_mill(V2, V3).","getting_from_one_place_to_another(V1, V3) :- - cabinets(V1, V3).","bar(V3) :- - determining_weight(V1), - wingspread(V1), - social_event(V3), not -down(V3), not -pasture(V1, V3).","- poetry(V1, V1) :- getting_from_one_place_to_another(V1, V3), not silk(V1, V3), not kite_tail(V1, V3), not lovebird(V1, V3), not -kettle(V1, V3).","leverage(V2, V3) :- fruit_fly(V1), put_out_small_fire(V0, V2), - bird_home(V0, V3), not -bipedal(V1, V3), not -refection(V2, V3).","- silk(V1, V3) :- fruit_fly(V1), put_out_small_fire(V0, V2), - bird_home(V0, V3), not -bipedal(V1, V3), not -refection(V2, V3).","bondwoman(V0, V1) :- fruit_fly(V1), put_out_small_fire(V0, V2), - bird_home(V0, V3), not -bipedal(V1, V3), not -refection(V2, V3).","directed_study(V2) :- fruit_fly(V1), put_out_small_fire(V0, V2), - bird_home(V0, V3), not -bipedal(V1, V3), not -refection(V2, V3).","- textile_mill(V1, V0) :- bondwoman(V0, V1), not transcendence(V0, V1), not noctuid_moth(V0, V1), not -british_east_africa(V0, V1), not -kite(V0, V1).","- kite_tail(V1, V1) :- bondwoman(V0, V1), not transcendence(V0, V1), not noctuid_moth(V0, V1), not -british_east_africa(V0, V1), not -kite(V0, V1).","- determining_weight(V1) :- water_pipe(V1, V3).","- lovebird(V1, V3) :- water_pipe(V1, V3).","- wingspread(V2) :- directed_study(V2)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_63_9_14_14_16_0.5_1.0_5_3_4","seed":63,"num_facts":17,"num_rules":15,"num_related_predicates":32,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.125,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"deer(\"Ashley\", \"Richard\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["brocket(\"Denise\").","arson(\"Kristi\", \"Ashley\", \"Richard\").","- woodland_caribou(\"Denise\", \"Kristi\", \"Richard\").","- hart(\"Kristi\", \"Ashley\").","hind(\"Denise\", \"Andrew\", \"Ashley\").","winners_circle(\"Denise\", \"Andrew\", \"Richard\").","- atmosphere(\"Andrew\", \"Ashley\", \"Richard\").","barren_ground_caribou(\"Denise\", \"Ashley\").","farm(\"Denise\", \"Kristi\", \"Richard\").","nest(\"Denise\", \"Kristi\", \"Richard\").","- plate(\"Denise\", \"Kristi\", \"Richard\").","thunder(\"Denise\").","next(\"Denise\").","- morning(\"Denise\").","summer(\"Denise\").","chicken(\"Kristi\", \"Andrew\", \"Richard\").","- duck(\"Andrew\", \"Ashley\", \"Richard\")."],"noisy_facts":["- prettiness(\"Kristi\", \"Richard\").","- bass_horn(\"Kristi\", \"Richard\").","birds(\"Denise\", \"Andrew\", \"Richard\").","- hypochondrium(\"Denise\", \"Ashley\").","flatbread(\"Kristi\", \"Andrew\", \"Richard\").","- another_word_for_feces(\"Andrew\", \"Ashley\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["deer(V3, V4) :- mule_deer(V4), fawn(V0, V3), red_deer(V1, V3), wapiti(V3, V4), - caribou(V1, V2, V4).","mule_deer(V4) :- - black_tailed_deer(V1, V4), - after(V3, V4).","fawn(V0, V3) :- - chick(V4), nest(V0, V1, V4), chicken(V1, V2, V4), - duck(V2, V3, V4).","- bird(V0, V3) :- - chick(V4), nest(V0, V1, V4), chicken(V1, V2, V4), - duck(V2, V3, V4).","red_deer(V1, V3) :- brocket(V0), - hart(V1, V3), hind(V0, V2, V3), winners_circle(V0, V2, V4), not atmosphere(V2, V3, V4).","- fuel_oil(V0, V1, V4) :- brocket(V0), - hart(V1, V3), hind(V0, V2, V3), winners_circle(V0, V2, V4), not atmosphere(V2, V3, V4).","japanese_deer(V0) :- - bird(V0, V3), not sambar(V0, V3), not beef_neck(V0, V3), not -barren_ground_caribou(V0, V3).","wapiti(V3, V4) :- arson(V1, V3, V4).","- caribou(V1, V3, V4) :- - woodland_caribou(V0, V1, V4), barren_ground_caribou(V0, V3), not -farm(V0, V1, V4), not -nest(V0, V1, V4), not plate(V0, V1, V4).","- black_tailed_deer(V1, V4) :- - woodland_caribou(V0, V1, V4), barren_ground_caribou(V0, V3), not -farm(V0, V1, V4), not -nest(V0, V1, V4), not plate(V0, V1, V4).","- chick(V4) :- - woodland_caribou(V0, V1, V4), barren_ground_caribou(V0, V3), not -farm(V0, V1, V4), not -nest(V0, V1, V4), not plate(V0, V1, V4).","- sambar(V0, V3) :- - woodland_caribou(V0, V1, V4), barren_ground_caribou(V0, V3), not -farm(V0, V1, V4), not -nest(V0, V1, V4), not plate(V0, V1, V4).","- home(V1, V4) :- - woodland_caribou(V0, V1, V4), barren_ground_caribou(V0, V3), not -farm(V0, V1, V4), not -nest(V0, V1, V4), not plate(V0, V1, V4).","- after(V0, V0) :- japanese_deer(V0), not -thunder(V0), not -next(V0), not morning(V0), not -summer(V0).","- beef_neck(V0, V1) :- - fuel_oil(V0, V1, V4), - home(V2, V4)."],"noisy_rules":{"a":["- deer(V3, V4) :- - fawn(V0, V3), - red_deer(V1, V3), not japanese_deer(V0), black_tailed_deer(V1, V4), not -sambar(V0, V3).","- deer(V3, V3) :- - fawn(V0, V3), - japanese_deer(V0)."],"b":["- next(V0) :- - japanese_deer(V0), not -sambar(V0, V3), home(V2, V4), after(V3, V4), not deer(V3, V4).","- wapiti(V3, V4) :- - deer(V3, V4)."],"c":["- brocket(V0) :- bird(V0, V3), - red_deer(V1, V3), fuel_oil(V0, V1, V4), black_tailed_deer(V1, V4), not -chick(V4).","- hind(V0, V1, V3) :- - fawn(V0, V3), fuel_oil(V0, V1, V4), not -black_tailed_deer(V1, V4), not -beef_neck(V0, V3)."],"d":["baby_rooster(V1, V4) :- not mule_deer(V4), black_tailed_deer(V1, V4), chick(V4), not prettiness(V1, V4), - bass_horn(V1, V4).","- fawn(V0, V3) :- bird(V0, V3), after(V3, V4), beef_neck(V0, V3), not hypochondrium(V0, V3)."],"e":["- comedian(V1, V2, V4) :- flatbread(V1, V2, V4).","- poop(V0, V3) :- - another_word_for_feces(V2, V3), birds(V0, V2, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_71_10_13_13_16_0.5_1.0_5_3_4","seed":71,"num_facts":17,"num_rules":14,"num_related_predicates":31,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":12,"target_query":" vascular_plant(\"Rodney\", \"Jessica\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["green(\"Troy\", \"Rodney\", \"Kathleen\").","- mail_orders(\"Jessica\", \"Kathleen\").","bit(\"Jessica\").","P17(\"Troy\", \"Rodney\", \"Kathleen\").","en(\"Troy\", \"Rodney\").","hair(\"Jessica\", \"Kathleen\").","achoo(\"Troy\", \"Sandy\", \"Jessica\").","- bird(\"Troy\", \"Sandy\", \"Kathleen\").","naiad(\"Troy\", \"Sandy\", \"Jessica\").","pondweed(\"Troy\", \"Sandy\", \"Jessica\").","area_unit(\"Troy\", \"Rodney\", \"Kathleen\").","palestine(\"Troy\", \"Sandy\", \"Kathleen\").","- object(\"Rodney\", \"Sandy\", \"Kathleen\").","- eurasian_bullfinch(\"Sandy\", \"Jessica\", \"Kathleen\").","coelenterate(\"Troy\", \"Rodney\").","devon(\"Troy\", \"Rodney\").","- sea_boat(\"Troy\", \"Rodney\")."],"noisy_facts":["numismatist(\"Rodney\", \"Jessica\").","archivist(\"Jessica\").","philatelist(\"Troy\", \"Jessica\").","promiser(\"Sandy\", \"Jessica\").","kite(\"Troy\", \"Sandy\", \"Jessica\").","- pointing(\"Troy\", \"Sandy\", \"Jessica\").","packrat(\"Rodney\", \"Sandy\").","- barn(\"Troy\", \"Sandy\", \"Jessica\").","conchologist(\"Rodney\", \"Sandy\", \"Kathleen\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- vascular_plant(V1, V3) :- unit_of_measurement(V0, V2), aquatic_plant(V0, V4), - are(V1, V2, V3), not -sky_color(V2, V3, V4).","blue(V0, V1, V4) :- green(V0, V1, V4).","eelgrass(V0, V2, V3) :- point(V0, V1), en(V0, V1), hair(V3, V4), achoo(V0, V2, V3), not bird(V0, V2, V4).","- em(V1, V3) :- point(V0, V1), en(V0, V1), hair(V3, V4), achoo(V0, V2, V3), not bird(V0, V2, V4).","duck(V4) :- - mail_orders(V3, V4).","unit_of_measurement(V0, V2) :- bit(V3), area_unit(V0, V1, V4), palestine(V0, V2, V4), not object(V1, V2, V4), not eurasian_bullfinch(V2, V3, V4).","finch(V1, V2) :- bit(V3), area_unit(V0, V1, V4), palestine(V0, V2, V4), not object(V1, V2, V4), not eurasian_bullfinch(V2, V3, V4).","aquatic_plant(V0, V0) :- eelgrass(V0, V2, V3), not -tape_grass(V0, V2, V3), not water_speedwell(V0, V2, V3), not -naiad(V0, V2, V3), not -pondweed(V0, V2, V3).","- are(V1, V2, V0) :- finch(V1, V2), en(V0, V1), not sea_boat(V0, V1).","point(V0, V1) :- finch(V1, V2), en(V0, V1), not sea_boat(V0, V1).","tape_grass(V0, V2, V2) :- finch(V1, V2), en(V0, V1), not sea_boat(V0, V1).","sky_color(V4, V0, V4) :- blue(V0, V1, V4), not -P17(V0, V1, V4).","- water_speedwell(V0, V3, V3) :- - em(V1, V3), - water(V0, V1), not -coelenterate(V0, V1), not -devon(V0, V1), not sea_boat(V0, V1).","- water(V0, V1) :- blue(V0, V1, V4), not -duck(V4)."],"noisy_rules":{"a":["vascular_plant(V1, V3) :- em(V1, V3), - sky_color(V2, V3, V4), water(V0, V1).","vascular_plant(V1, V3) :- - eelgrass(V0, V2, V3), - point(V0, V1)."],"b":["- unit_of_measurement(V0, V2) :- - blue(V0, V1, V4), - tape_grass(V0, V2, V3), not sky_color(V2, V3, V4), vascular_plant(V1, V3).","- unit_of_measurement(V0, V2) :- - unit_of_measurement(V0, V2), not finch(V1, V2), water(V0, V1), vascular_plant(V1, V3)."],"c":["bird(V0, V2, V1) :- - eelgrass(V0, V2, V3), - finch(V1, V2), not tape_grass(V0, V2, V3).","- en(V0, V1) :- em(V1, V3), - duck(V4), - unit_of_measurement(V0, V2), water(V0, V1)."],"d":["- area_unit(V0, V1, V2) :- em(V1, V3), are(V1, V2, V3), not -water_speedwell(V0, V2, V3), - barn(V0, V2, V3), - pointing(V0, V2, V3).","eurasian_bullfinch(V2, V3, V3) :- water_speedwell(V0, V2, V3), not -kite(V0, V2, V3)."],"e":["collector(V2, V3) :- archivist(V3), philatelist(V0, V3), packrat(V1, V2), numismatist(V1, V3), conchologist(V1, V2, V4).","- communicator(V2, V3) :- promiser(V2, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_63_10_9_7_10_0.5_1.0_5_2_3","seed":63,"num_facts":12,"num_rules":10,"num_related_predicates":22,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.7777777777777777,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" P9(\"Cynthia\", \"Daisy\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P10(\"Cynthia\", \"Daisy\").","P11(\"Thomas\", \"Cynthia\").","P12(\"Thomas\", \"Cynthia\").","P13(\"Daisy\").","P14(\"Cynthia\", \"Daisy\").","P15(\"Cynthia\", \"Daisy\").","P16(\"Cynthia\", \"Daisy\").","P17(\"Cynthia\", \"Daisy\").","P18(\"Cynthia\", \"Daisy\").","P19(\"Thomas\", \"Cole\").","P20(\"Cynthia\", \"Daisy\").","P21(\"Cynthia\", \"Cole\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P10(\"Cynthia\", \"Daisy\").","P11(\"Thomas\", \"Cynthia\").","P12(\"Thomas\", \"Cynthia\").","P13(\"Daisy\").","P14(\"Cynthia\", \"Daisy\").","P15(\"Cynthia\", \"Daisy\").","P16(\"Cynthia\", \"Daisy\").","P17(\"Cynthia\", \"Daisy\").","P18(\"Cynthia\", \"Daisy\").","P19(\"Thomas\", \"Cole\").","P20(\"Cynthia\", \"Daisy\").","P21(\"Cynthia\", \"Cole\")."],"noiseless_rules":["P9(V1, V2) :- P0(V2), P4(V0, V1), P5(V0, V1), P8(V0, V1), P18(V1, V2).","P0(V2) :- P10(V1, V2), P15(V1, V2), P16(V1, V2), P17(V1, V2), P18(V1, V2).","P1(V0, V1) :- P3(V0, V1).","P2(V1) :- P7(V3), P19(V0, V3), P20(V1, V2), P21(V1, V3).","P3(V0, V1) :- P11(V0, V1).","P4(V0, V1) :- P1(V0, V1), P2(V1).","P5(V0, V1) :- P6(V0, V1).","P6(V0, V1) :- P12(V0, V1).","P7(V2) :- P0(V2), P13(V2).","P8(V1, V1) :- P14(V1, V2), P18(V1, V2)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_39_5_5_5_5_0.5_1.0_3_2_3","seed":39,"num_facts":7,"num_rules":6,"num_related_predicates":13,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"bodily_process(\"Lisa\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["cell(\"Rebecca\", \"Lisa\").","depletion(\"Rebecca\").","- coprophagy(\"Adam\", \"Lisa\").","- lunching(\"Rebecca\", \"Lisa\").","- hyperpnea(\"Adam\").","hyperventilation(\"Adam\").","burnup(\"Lisa\")."],"noisy_facts":["- duck(\"Adam\", \"Rebecca\").","accounts(\"Adam\", \"Rebecca\").","- bovine(\"Adam\").","- puppy(\"Adam\", \"Kayla\").","human_cells(\"Adam\", \"Lisa\").","sheep(\"Adam\").","eggs(\"Adam\", \"Rebecca\")."],"min_fact_dicts_for_query":["cell(\"Rebecca\", \"Lisa\").","depletion(\"Rebecca\").","- coprophagy(\"Adam\", \"Lisa\")."],"noiseless_rules":["bodily_process(V3) :- small(V3), breathing(V0, V2), not -consumption(V0, V3).","small(V3) :- cell(V2, V3).","second_wind(V0) :- depletion(V2), - coprophagy(V0, V3), not lunching(V2, V3).","- eating(V3) :- depletion(V2), - coprophagy(V0, V3), not lunching(V2, V3).","breathing(V0, V0) :- second_wind(V0), not hyperpnea(V0), not -hyperventilation(V0).","consumption(V3, V3) :- - eating(V3), not -burnup(V3)."],"noisy_rules":{"a":["- bodily_process(V3) :- eating(V3).","- bodily_process(V0) :- - second_wind(V0)."],"b":["- consumption(V0, V3) :- - second_wind(V0), eating(V3), not bodily_process(V3).","- second_wind(V3) :- - bodily_process(V3)."],"c":["- second_wind(V0) :- - breathing(V0, V2), - consumption(V0, V3).","- depletion(V3) :- not -eating(V3), - consumption(V0, V3)."],"d":["settled_monthy(V0, V3) :- - small(V3), - breathing(V0, V2), not -accounts(V0, V2).","bovid(V0) :- not second_wind(V0), - bovine(V0), not -sheep(V0)."],"e":["biological_cells(V0, V3) :- eggs(V0, V2), - duck(V0, V2), human_cells(V0, V3).","young_person(V0, V1) :- - puppy(V0, V1)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_42_8_10_4_7_0.5_1.0_5_3_4","seed":42,"num_facts":8,"num_rules":11,"num_related_predicates":19,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"P10(\"Jonathan\", \"Melissa\", \"Jennifer\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P11(\"Jeffery\").","P12(\"Jonathan\", \"Jocelyn\", \"Jennifer\").","- P13(\"Jonathan\", \"Jocelyn\", \"Jennifer\").","- P14(\"Melissa\", \"Jennifer\").","- P15(\"Melissa\").","P16(\"Jeffery\", \"Jocelyn\").","- P17(\"Jocelyn\", \"Melissa\").","- P18(\"Jonathan\", \"Melissa\", \"Jennifer\")."],"noisy_facts":["- P21(\"Jonathan\", \"Melissa\").","P27(\"Jocelyn\").","P25(\"Jonathan\", \"Jocelyn\", \"Jennifer\").","- P28(\"Jeffery\", \"Jocelyn\").","- P23(\"Jeffery\", \"Jocelyn\").","P24(\"Jocelyn\", \"Melissa\").","- P31(\"Jeffery\", \"Melissa\", \"Jennifer\").","P20(\"Jonathan\", \"Melissa\", \"Jennifer\").","- P30(\"Jonathan\", \"Jocelyn\", \"Melissa\").","P29(\"Jeffery\", \"Melissa\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["P10(V0, V3, V4) :- - P0(V0, V3), P2(V2, V4), P4(V3, V4), P6(V0, V1, V2), not -P8(V1, V3, V4).","- P0(V0, V3) :- - P11(V1), - P15(V3), P16(V1, V2), - P17(V2, V3), - P18(V0, V3, V4).","P1(V0, V2, V3) :- - P11(V1), - P15(V3), P16(V1, V2), - P17(V2, V3), - P18(V0, V3, V4).","P2(V2, V4) :- P12(V0, V2, V4).","- P3(V0, V2) :- P12(V0, V2, V4).","P4(V4, V4) :- P12(V0, V2, V4), not P13(V0, V2, V4).","- P5(V0, V2, V4) :- P12(V0, V2, V4), not P13(V0, V2, V4).","P6(V0, V2, V2) :- P1(V0, V2, V3), not -P7(V0, V2, V3).","P7(V0, V2, V2) :- - P3(V0, V2), not -P9(V0, V2).","P8(V3, V3, V4) :- P4(V3, V4), not P14(V3, V4).","P9(V0, V4) :- - P5(V0, V1, V4), - P14(V3, V4)."],"noisy_rules":{"a":["- P10(V0, V3, V4) :- - P6(V0, V1, V2), - P8(V1, V3, V4).","- P10(V0, V3, V4) :- P0(V0, V3), P5(V0, V1, V4), - P9(V0, V2)."],"b":["- P7(V0, V2, V3) :- - P1(V0, V2, V3), P3(V0, V2), - P8(V1, V3, V4), not P10(V0, V3, V4).","- P6(V0, V1, V2) :- - P8(V1, V3, V4), - P9(V0, V2), not P10(V0, V3, V4)."],"c":["P5(V0, V1, V4) :- not P1(V0, V2, V3), - P4(V3, V4), - P6(V0, V1, V2).","P0(V0, V3) :- not P4(V3, V4), P5(V0, V1, V4), - P8(V1, V3, V4)."],"d":["- P19(V0, V3, V4) :- P20(V0, V3, V4).","P11(V3) :- P0(V0, V3), not P21(V0, V3)."],"e":["P22(V1, V3, V4) :- - P23(V1, V2), P24(V2, V3), P25(V0, V2, V4).","- P26(V0, V3) :- P27(V2), - P28(V1, V2), P29(V1, V3), - P30(V0, V2, V3), - P31(V1, V3, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_9_10_14_12_14_0.5_1.0_3_3_4","seed":9,"num_facts":14,"num_rules":15,"num_related_predicates":29,"max_depth_of_rule_graph":7,"average_depth_of_rule_graph":3.888888888888889,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"living(\"Dawn\", \"Phillip\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["baker(\"Christopher\", \"Victoria\", \"Phillip\").","mutism(\"Christopher\", \"Scott\").","snout(\"Phillip\").","- piece_of_cloth(\"Phillip\").","wiper(\"Christopher\", \"Victoria\").","shark_oil(\"Christopher\", \"Scott\", \"Dawn\").","- shame(\"Christopher\", \"Dawn\", \"Phillip\").","- destroy(\"Christopher\", \"Victoria\", \"Dawn\").","- persons(\"Scott\", \"Dawn\", \"Phillip\").","many_teeth(\"Christopher\", \"Victoria\", \"Scott\").","craft(\"Christopher\", \"Victoria\", \"Scott\").","asia(\"Christopher\", \"Victoria\", \"Phillip\").","move_itself_about(\"Christopher\", \"Scott\", \"Phillip\").","chef(\"Christopher\", \"Scott\", \"Phillip\")."],"noisy_facts":["grace_cup(\"Dawn\", \"Phillip\").","trial_balloon(\"Christopher\", \"Scott\", \"Dawn\").","- trousers(\"Victoria\", \"Dawn\", \"Phillip\").","- produce_cars(\"Christopher\", \"Victoria\", \"Dawn\").","- animal_glue(\"Christopher\", \"Victoria\").","need_fuel(\"Victoria\", \"Phillip\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["living(V3, V4) :- catch_buzz(V0, V1, V3), layer(V0, V1, V3), chef(V0, V2, V4).","catch_buzz(V0, V1, V3) :- paleness(V0, V2), - destroy(V0, V1, V3), - persons(V2, V3, V4).","north(V1, V4) :- paleness(V0, V2), - destroy(V0, V1, V3), - persons(V2, V3, V4).","paleness(V0, V2) :- baker(V0, V1, V4), shark_oil(V0, V2, V3), not shame(V0, V3, V4).","- hula_hoop(V4) :- baker(V0, V1, V4), shark_oil(V0, V2, V3), not shame(V0, V3, V4).","- growing_cornucopia(V0, V1) :- mutism(V0, V2), asia(V0, V1, V4), not -move_itself_about(V0, V2, V4).","layer(V0, V1, V3) :- - salmon(V0, V4), - sack_coat(V3, V4), - double_eagle(V0, V1, V3).","- meal(V1, V4) :- north(V1, V4), not -tear(V1, V4), not advancing_position_in_war(V1, V4).","- salmon(V0, V4) :- - growing_cornucopia(V0, V1), make_traveling_easier(V0, V1), - shame(V0, V3, V4).","swage_block(V0, V1, V3) :- - growing_cornucopia(V0, V1), make_traveling_easier(V0, V1), - shame(V0, V3, V4).","- sack_coat(V3, V0) :- - growing_cornucopia(V0, V1), - meal(V1, V3), not -wiper(V0, V1).","- double_eagle(V4, V4, V4) :- - hula_hoop(V4), not -snout(V4), not piece_of_cloth(V4).","tear(V4, V4) :- - hula_hoop(V4), not -snout(V4), not piece_of_cloth(V4).","make_traveling_easier(V4, V4) :- - hula_hoop(V4), not -snout(V4), not piece_of_cloth(V4).","- advancing_position_in_war(V1, V1) :- swage_block(V0, V1, V2), not -many_teeth(V0, V1, V2), not -craft(V0, V1, V2)."],"noisy_rules":{"a":["- living(V2, V2) :- - paleness(V0, V2).","- living(V1, V4) :- - north(V1, V4), - paleness(V0, V2), growing_cornucopia(V0, V1)."],"b":["- make_traveling_easier(V0, V1) :- - layer(V0, V1, V3), not tear(V1, V4), - living(V3, V4).","- snout(V4) :- - living(V3, V4)."],"c":["- north(V0, V4) :- salmon(V0, V4).","shame(V1, V3, V4) :- hula_hoop(V4), meal(V1, V3), - tear(V1, V4)."],"d":["- tear(V3, V4) :- sack_coat(V3, V4), not -grace_cup(V3, V4).","meal(V0, V0) :- - paleness(V0, V2)."],"e":["many_windows(V0, V2, V4) :- need_fuel(V1, V4), - produce_cars(V0, V1, V3), trial_balloon(V0, V2, V3).","- join_private_club(V0, V4) :- - animal_glue(V0, V1), - trousers(V1, V3, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_12_8_8_7_9_0.5_1.0_5_2_3","seed":12,"num_facts":11,"num_rules":9,"num_related_predicates":20,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.4285714285714284,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"hold(\"Melissa\", \"John\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- yellowtail_flounder(\"Melissa\", \"Catherine\").","- eat_lunch(\"Melissa\", \"Catherine\").","smoke_bomb(\"John\").","tossed_salad(\"Elizabeth\", \"Melissa\").","bone_cell(\"Elizabeth\", \"Melissa\").","- cynosure(\"Melissa\", \"Catherine\").","- anapsida(\"Melissa\", \"Catherine\").","- muscle(\"John\", \"Catherine\").","- robber_fly(\"Elizabeth\", \"Melissa\").","- land_on_runway(\"Elizabeth\", \"Melissa\").","white_fluffy(\"Elizabeth\", \"Melissa\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["hold(V1, V2) :- - glutton(V0, V2), - hood(V1, V2).","water_bottle(V1, V3) :- - yellowtail_flounder(V1, V3).","- glutton(V1, V1) :- water_bottle(V1, V3), not -boarding_train(V1, V3), not eat_lunch(V1, V3).","anger(V1) :- water_bottle(V1, V3), not -boarding_train(V1, V3), not eat_lunch(V1, V3).","- fill_bucket_with_sand(V3) :- - eat_lunch(V1, V3).","share(V0, V2) :- smoke_bomb(V2), bone_cell(V0, V1), - cynosure(V1, V3), not anapsida(V1, V3), not muscle(V2, V3).","before_night(V0, V1) :- tossed_salad(V0, V1).","boarding_train(V1, V1) :- before_night(V0, V1), not -tossed_salad(V0, V1), not robber_fly(V0, V1), not land_on_runway(V0, V1), not -white_fluffy(V0, V1).","- hood(V0, V2) :- anger(V2), - fill_bucket_with_sand(V0), not -share(V0, V2)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_89_9_10_9_12_0.5_1.0_3_3_4","seed":89,"num_facts":12,"num_rules":11,"num_related_predicates":23,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"pudge(\"Jessica\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["hairbrush(\"Mark\").","- pupose_of_laundromat(\"Jason\", \"Nathan\").","- magnetic_bottle(\"Mark\", \"Jessica\", \"Nathan\").","aquaplane(\"Jessica\", \"Nathan\").","rose_apple(\"Jessica\", \"Nathan\").","ring_girl(\"Mark\", \"Jessica\").","- acarus(\"Jason\", \"Jessica\", \"Nathan\").","- dingbat(\"Mark\", \"Jessica\", \"Nathan\").","insect(\"Mark\", \"Jessica\", \"Nathan\").","- cathedra(\"Nathan\").","- torture(\"Jason\", \"Mark\", \"Summer\").","- howl(\"Jason\", \"Mark\", \"Nathan\")."],"noisy_facts":[],"min_fact_dicts_for_query":["hairbrush(\"Mark\").","- magnetic_bottle(\"Mark\", \"Jessica\", \"Nathan\").","aquaplane(\"Jessica\", \"Nathan\").","- dingbat(\"Mark\", \"Jessica\", \"Nathan\").","- torture(\"Jason\", \"Mark\", \"Summer\").","- howl(\"Jason\", \"Mark\", \"Nathan\")."],"noiseless_rules":["pudge(V2) :- - aplasia(V1, V2, V4), not cold_cream(V1, V2, V4).","- aplasia(V1, V2, V4) :- - celsius(V0, V4), - plot(V0, V2, V4), - dingbat(V1, V2, V4).","- exercise(V4) :- hairbrush(V1), - torture(V0, V1, V3), - howl(V0, V1, V4).","- hat(V1, V4) :- hairbrush(V1), - torture(V0, V1, V3), - howl(V0, V1, V4).","- club(V4) :- - pupose_of_laundromat(V0, V4), ring_girl(V1, V2), not acarus(V0, V2, V4).","- pastel(V2, V4) :- - pupose_of_laundromat(V0, V4), ring_girl(V1, V2), not acarus(V0, V2, V4).","- celsius(V4, V4) :- - exercise(V4), not club(V4), not cathedra(V4).","water_bed(V1, V2) :- - magnetic_bottle(V1, V2, V4), not dingbat(V1, V2, V4), not -insect(V1, V2, V4).","- cold_cream(V1, V2, V4) :- - aplasia(V1, V2, V4), not hat(V1, V4), not slicing(V1, V2, V4).","- slicing(V4, V2, V4) :- - pastel(V2, V4), not -aquaplane(V2, V4), not -rose_apple(V2, V4).","- plot(V4, V2, V4) :- water_bed(V1, V2), aquaplane(V2, V4)."],"noisy_rules":{}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_19_8_12_3_3_0.5_1.0_5_3_4","seed":19,"num_facts":5,"num_rules":13,"num_related_predicates":18,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.7142857142857144,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"copy(\"Katelyn\", \"Richard\", \"Grant\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["- make_paper_airplanes(\"Richard\").","- hunt_animals(\"Christopher\", \"Richard\", \"Grant\").","- feel_good(\"Christopher\", \"Grant\").","- cutting(\"Katelyn\", \"Richard\").","launch(\"Christopher\", \"Katelyn\", \"Richard\")."],"noisy_facts":["- skank(\"Christopher\", \"Richard\").","- drawing(\"Christopher\", \"Katelyn\", \"Richard\").","- play_game_of_baseball(\"Christopher\", \"Katelyn\", \"Bruce\").","- agent(\"Katelyn\").","carry_other_aeroplanes(\"Christopher\").","expectoration(\"Katelyn\", \"Richard\", \"Bruce\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["copy(V1, V2, V3) :- leather(V1, V2, V3).","- circle_prey(V0, V1, V3) :- - make_paper_airplanes(V2), - feel_good(V0, V3), - cutting(V1, V2), not -launch(V0, V1, V2).","- flakes(V3) :- - make_paper_airplanes(V2), - feel_good(V0, V3), - cutting(V1, V2), not -launch(V0, V1, V2).","leather(V1, V1, V3) :- - circle_prey(V0, V1, V3), not -developing_farm(V0, V1, V3), not -murderers(V0, V1, V3).","payment(V0, V2) :- edge(V0, V2, V4).","developing_farm(V0, V0, V2) :- payment(V0, V2), not -emotion(V0, V2), not record_player(V0, V2).","coulterneb(V2, V3) :- - hunt_animals(V0, V2, V3).","yellow_vegetable(V0) :- - hunt_animals(V0, V2, V3).","emotion(V3, V2) :- coulterneb(V2, V3).","cost_lot_of_money(V2, V3) :- coulterneb(V2, V3).","murderers(V0, V0, V3) :- - flakes(V3), yellow_vegetable(V0), not -cost_lot_of_money(V0, V3).","edge(V0, V3, V0) :- - flakes(V3), yellow_vegetable(V0), not -cost_lot_of_money(V0, V3).","- record_player(V0, V3) :- - flakes(V3), yellow_vegetable(V0), not -cost_lot_of_money(V0, V3)."],"noisy_rules":{"a":["- copy(V0, V0, V3) :- - cost_lot_of_money(V0, V3).","- copy(V1, V2, V3) :- - leather(V1, V2, V3), not developing_farm(V0, V1, V3), not coulterneb(V2, V3), - cost_lot_of_money(V0, V3)."],"b":["- payment(V0, V2) :- - developing_farm(V0, V1, V3), - coulterneb(V2, V3), - copy(V1, V2, V3).","feel_good(V1, V3) :- - copy(V1, V2, V3)."],"c":["hunt_animals(V0, V3, V3) :- circle_prey(V0, V1, V3).","feel_good(V0, V3) :- - developing_farm(V0, V1, V3), not cost_lot_of_money(V0, V3), - murderers(V0, V1, V3), - edge(V0, V2, V4)."],"d":["circle_prey(V0, V1, V3) :- - leather(V1, V2, V3), - cost_lot_of_money(V0, V3), not -record_player(V0, V2), not skank(V0, V2).","feel_good(V0, V0) :- record_player(V0, V2)."],"e":["- crossing(V1) :- carry_other_aeroplanes(V0), not agent(V1), - play_game_of_baseball(V0, V1, V4), expectoration(V1, V2, V4).","- yellowtail_flounder(V0, V1, V2) :- - drawing(V0, V1, V2)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_39_10_11_6_9_0.5_1.0_5_3_4","seed":39,"num_facts":11,"num_rules":12,"num_related_predicates":23,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.2222222222222223,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"belle(\"Haley\", \"Bryce\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["cantle(\"Bryce\").","beldam(\"Heather\", \"Jesse\", \"Jennifer\").","- basketball_court(\"Haley\", \"Bryce\", \"Jesse\").","- run_fast_both_uphill_and_down(\"Haley\", \"Heather\", \"Jennifer\").","- brahman(\"Heather\", \"Jesse\", \"Jennifer\").","fall_down(\"Haley\", \"Heather\", \"Jennifer\").","itchy(\"Haley\", \"Bryce\", \"Jesse\").","serviette(\"Heather\", \"Bryce\", \"Jesse\").","wheeled_vehicle(\"Heather\", \"Bryce\", \"Jesse\").","- shot(\"Haley\", \"Bryce\", \"Jennifer\").","seychelles_rupee(\"Haley\", \"Jesse\", \"Jennifer\")."],"noisy_facts":["owned_land(\"Haley\", \"Heather\", \"Jennifer\").","carbon(\"Haley\", \"Heather\", \"Jennifer\").","- chain_tongs(\"Haley\", \"Jesse\", \"Jennifer\").","wind_clocks(\"Jennifer\").","- operation(\"Haley\", \"Jennifer\").","- algonkian(\"Haley\", \"Bryce\", \"Jennifer\").","exmoor(\"Haley\", \"Bryce\").","direction(\"Haley\", \"Heather\", \"Jennifer\").","and(\"Jennifer\").","- lots_people(\"Heather\", \"Jesse\", \"Jennifer\")."],"min_fact_dicts_for_query":["cantle(\"Bryce\").","beldam(\"Heather\", \"Jesse\", \"Jennifer\").","- basketball_court(\"Haley\", \"Bryce\", \"Jesse\").","- run_fast_both_uphill_and_down(\"Haley\", \"Heather\", \"Jennifer\").","fall_down(\"Haley\", \"Heather\", \"Jennifer\").","itchy(\"Haley\", \"Bryce\", \"Jesse\")."],"noiseless_rules":["belle(V0, V2) :- - thrown_ball(V0, V3), - duck(V2, V3).","beverage(V2, V3) :- - turn(V2), - imperfect(V0, V3), - ice_cream_truck(V0, V1, V4), not shot(V0, V2, V4), not -seychelles_rupee(V0, V3, V4).","ox(V0) :- - turn(V2), - imperfect(V0, V3), - ice_cream_truck(V0, V1, V4), not shot(V0, V2, V4), not -seychelles_rupee(V0, V3, V4).","- thrown_ball(V0, V3) :- cantle(V2), fall_down(V0, V1, V4), itchy(V0, V2, V3), not -serviette(V1, V2, V3), not -wheeled_vehicle(V1, V2, V3).","- turn(V2) :- cantle(V2), fall_down(V0, V1, V4), itchy(V0, V2, V3), not -serviette(V1, V2, V3), not -wheeled_vehicle(V1, V2, V3).","- duck(V2, V3) :- beverage(V2, V3), - female_body(V0, V1, V4), not ice_cream_truck(V0, V1, V4), not shot(V0, V2, V4).","- government(V1, V3, V4) :- beldam(V1, V3, V4).","- imperfect(V0, V3) :- - basketball_court(V0, V2, V3).","- female_body(V4, V1, V4) :- - government(V1, V3, V4), not chickens(V1, V3, V4).","- chickens(V0, V0, V0) :- ox(V0), not nest(V0).","- ice_cream_truck(V0, V1, V4) :- - run_fast_both_uphill_and_down(V0, V1, V4).","- nest(V1) :- beldam(V1, V3, V4), not brahman(V1, V3, V4)."],"noisy_rules":{"a":["- belle(V0, V2) :- - beverage(V2, V3), not -turn(V2), government(V1, V3, V4), chickens(V1, V3, V4), ice_cream_truck(V0, V1, V4).","- belle(V0, V1) :- ice_cream_truck(V0, V1, V4)."],"b":["- cantle(V2) :- - beverage(V2, V3), ice_cream_truck(V0, V1, V4), not belle(V0, V2).","- itchy(V0, V2, V3) :- - beverage(V2, V3), imperfect(V0, V3), not belle(V0, V2)."],"c":["imperfect(V0, V3) :- thrown_ball(V0, V3), turn(V2), chickens(V1, V3, V4).","- seychelles_rupee(V0, V0, V4) :- not ox(V0), ice_cream_truck(V0, V1, V4)."],"d":["imperfect(V0, V3) :- thrown_ball(V0, V3), female_body(V0, V1, V4), ice_cream_truck(V0, V1, V4), owned_land(V0, V1, V4).","ice_cream_truck(V4, V1, V4) :- chickens(V1, V3, V4), - lots_people(V1, V3, V4)."],"e":["dunlin(V2, V3) :- and(V4), wind_clocks(V4), exmoor(V0, V2), - chain_tongs(V0, V3, V4).","- sleep_place(V0, V1, V2) :- not operation(V0, V4), not -direction(V0, V1, V4), carbon(V0, V1, V4), - algonkian(V0, V2, V4)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_87_10_10_8_10_0.5_1.0_3_2_3","seed":87,"num_facts":12,"num_rules":11,"num_related_predicates":23,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2222222222222223,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" crooning(\"Andrew\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["gymnastic_apparatus(\"Joshua\", \"Larry\").","- play_baseball(\"Joshua\", \"Larry\").","- sell(\"Joshua\", \"Andrew\").","- golden_gram(\"Joshua\", \"Kimberly\").","- transparent_gem(\"Andrew\", \"Larry\").","sister(\"Andrew\", \"Larry\").","- pressure(\"Kimberly\", \"Larry\").","- people(\"Kimberly\").","- cot(\"Kimberly\", \"Larry\").","- body_fluid(\"Kimberly\", \"Larry\").","- humming(\"Kimberly\", \"Larry\").","- intonation(\"Andrew\", \"Larry\")."],"noisy_facts":["- business(\"Larry\").","banks(\"Larry\").","- sharing_experience(\"Kimberly\", \"Larry\").","wool_animal(\"Joshua\", \"Kimberly\").","- suzerainty(\"Andrew\")."],"min_fact_dicts_for_query":["- play_baseball(\"Joshua\", \"Larry\").","- sell(\"Joshua\", \"Andrew\").","- golden_gram(\"Joshua\", \"Kimberly\").","- transparent_gem(\"Andrew\", \"Larry\").","- humming(\"Kimberly\", \"Larry\").","- intonation(\"Andrew\", \"Larry\")."],"noiseless_rules":["- crooning(V2) :- female_sibling(V2), bean(V0, V1), not two_arms(V1, V2).","sports_equipment(V1, V3) :- gymnastic_apparatus(V0, V3), - pressure(V1, V3).","- baby(V1) :- gymnastic_apparatus(V0, V3), - pressure(V1, V3).","female_sibling(V2) :- place_money_on_counter(V3), - transparent_gem(V2, V3), not -sister(V2, V3).","- singing(V1, V3) :- - play_baseball(V0, V3), - humming(V1, V3), - intonation(V2, V3).","- customers(V0, V2) :- - sell(V0, V2).","bean(V0, V1) :- - golden_gram(V0, V1).","- two_arms(V3, V2) :- human(V2, V3), not -sister(V2, V3).","- assizes(V1, V1) :- sports_equipment(V1, V3), not cot(V1, V3), not body_fluid(V1, V3).","human(V1, V3) :- - baby(V1), - pressure(V1, V3), not people(V1).","place_money_on_counter(V3) :- - singing(V1, V3), - customers(V0, V2), not assizes(V0, V1)."],"noisy_rules":{"a":["crooning(V1) :- - bean(V0, V1).","crooning(V2) :- - sports_equipment(V1, V3), - human(V2, V3)."],"b":["assizes(V0, V1) :- - bean(V0, V1), - human(V2, V3), not -crooning(V2).","singing(V2, V2) :- crooning(V2)."],"c":["- place_money_on_counter(V3) :- - sports_equipment(V1, V3), baby(V1), - human(V2, V3).","body_fluid(V3, V3) :- - place_money_on_counter(V3)."],"d":["customers(V3, V3) :- - place_money_on_counter(V3), not -banks(V3), - business(V3).","- pay_merchants_with_money(V3) :- - female_sibling(V2), - place_money_on_counter(V3), - suzerainty(V2)."],"e":["egyptian_cotton(V0, V1) :- wool_animal(V0, V1).","- black_sheep(V1, V3) :- - sharing_experience(V1, V3)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_90_9_14_9_12_0.5_1.0_5_3_4","seed":90,"num_facts":13,"num_rules":15,"num_related_predicates":28,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"communicate(\"Jim\", \"Lynn\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["coat(\"Jim\", \"Mark\", \"Lynn\").","- worshipers(\"Jim\", \"Ryan\").","- spoon(\"Mark\", \"Lynn\", \"Shelly\").","- amulet(\"Jim\", \"Mark\", \"Ryan\").","- saddle(\"Mark\", \"Lynn\").","- refectory_table(\"Jim\", \"Mark\", \"Ryan\").","mermaid(\"Jim\", \"Mark\", \"Ryan\").","hatful(\"Jim\", \"Mark\", \"Ryan\").","heat_house(\"Jim\", \"Mark\", \"Lynn\").","- satisfying_desire(\"Jim\", \"Mark\", \"Ryan\").","- english_sparrow(\"Jim\", \"Mark\", \"Ryan\").","lobster(\"Jim\", \"Mark\", \"Ryan\").","- owner_driver(\"Jim\", \"Mark\", \"Ryan\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["communicate(V0, V2) :- - udder(V2), - oklahoma(V0, V2), - reflexive_reactions(V2, V3, V4).","fancy_goods(V0, V1, V2) :- coat(V0, V1, V2).","- travel_oceans(V0, V3, V4) :- mansion(V1, V3), - black_oak(V0, V2, V3), - bogy(V1, V2, V4).","- grab_bag(V0, V0) :- fancy_goods(V0, V1, V2), not falcon_gentle(V0, V1, V2), not salad_bowl(V0, V1, V2), not psalmody(V0, V1, V2), not -heat_house(V0, V1, V2).","mansion(V1, V3) :- - worshipers(V0, V3), - saddle(V1, V2), not -hatful(V0, V1, V3).","- falcon_gentle(V0, V1, V2) :- - worshipers(V0, V3), - saddle(V1, V2), not -hatful(V0, V1, V3).","clock(V0, V1, V3) :- - worshipers(V0, V3), - saddle(V1, V2), not -hatful(V0, V1, V3).","- black_oak(V0, V3, V3) :- clock(V0, V1, V3), not satisfying_desire(V0, V1, V3), not english_sparrow(V0, V1, V3), not -lobster(V0, V1, V3), not owner_driver(V0, V1, V3).","- salad_bowl(V0, V1, V1) :- clock(V0, V1, V3), not satisfying_desire(V0, V1, V3), not english_sparrow(V0, V1, V3), not -lobster(V0, V1, V3), not owner_driver(V0, V1, V3).","- udder(V2) :- - spoon(V1, V2, V4).","- bogy(V1, V2, V4) :- - spoon(V1, V2, V4).","- oklahoma(V0, V2) :- - travel_oceans(V0, V3, V4), - grab_bag(V3, V4), - falcon_gentle(V0, V1, V2), not -chess_set(V0, V1, V2).","- reflexive_reactions(V2, V3, V1) :- - amulet(V0, V1, V3), - saddle(V1, V2), not refectory_table(V0, V1, V3), not -mermaid(V0, V1, V3), not -hatful(V0, V1, V3).","- psalmody(V0, V1, V2) :- - amulet(V0, V1, V3), - saddle(V1, V2), not refectory_table(V0, V1, V3), not -mermaid(V0, V1, V3), not -hatful(V0, V1, V3).","chess_set(V0, V1, V2) :- - amulet(V0, V1, V3), - saddle(V1, V2), not refectory_table(V0, V1, V3), not -mermaid(V0, V1, V3), not -hatful(V0, V1, V3)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_27_7_8_5_8_0.5_1.0_5_2_3","seed":27,"num_facts":8,"num_rules":9,"num_related_predicates":17,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" soup(\"Mary\", \"Kevin\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- listening_to_music(\"Mary\", \"Kevin\").","- serve_humanity(\"Paul\", \"Kevin\").","- bull_market.","chicken_egg(\"Paul\", \"Mary\").","mountain_paca(\"Paul\", \"Mary\").","- humpty_dumpty(\"Paul\", \"Mary\").","weeb(\"Paul\", \"Mary\").","singing(\"Mary\", \"Kevin\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- soup(V1, V2) :- - eggdrop_soup(V0, V3), chicken_soup(V1, V2), not borsch(V2, V3).","- eggdrop_soup(V0, V3) :- - birds(V0, V3).","- birds(V0, V3) :- entertainment(V1), - nest(V0, V2), - egg(V0, V3), not -singing(V1, V2).","entertainment(V1) :- - listening_to_music(V1, V2), not -singing(V1, V2).","chicken_soup(V1, V2) :- chick(V0, V1), - serve_humanity(V0, V2).","- nest(V0, V2) :- chick(V0, V1), - serve_humanity(V0, V2).","- borsch(V2, V2) :- - serve_humanity(V0, V2), not bull_market.","chick(V0, V0) :- - serve_humanity(V0, V2), not bull_market.","- egg(V0, V0) :- chick(V0, V1), not -chicken_egg(V0, V1), not -mountain_paca(V0, V1), not humpty_dumpty(V0, V1), not -weeb(V0, V1)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_46_9_10_9_12_0.5_1.0_5_1_2","seed":46,"num_facts":12,"num_rules":11,"num_related_predicates":23,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"P10(\"Jeff\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P11(\"Dana\").","- P12.","P13.","- P14(\"Jeff\").","P15(\"Jeff\").","P16(\"Jeff\").","P17(\"Jeff\").","P18(\"Jeff\").","- P19(\"Jeff\").","P20(\"Jeff\").","- P21(\"Jeff\").","- P22."],"noisy_facts":[],"min_fact_dicts_for_query":["- P12.","P15(\"Jeff\")."],"noiseless_rules":["P10(V0) :- - P0(V0), not -P2(V0), not P6(V0), not P7(V0), not P8(V0).","- P0(V0) :- P4(V0), not P14(V0), not -P15(V0), not -P16(V0), not -P17(V0).","- P1(V2) :- P11(V2).","P2(V0) :- - P12, P15(V0), not -P16(V0).","- P3(V0) :- - P12, P15(V0), not -P16(V0).","P4(V2) :- - P3(V2).","P5(V2) :- - P3(V2).","- P6(V2) :- - P1(V2).","- P7(V0) :- P9(V0), not -P18(V0), not P19(V0), not -P20(V0), not P21(V0).","- P8(V2) :- P5(V2).","P9(V2) :- - P3(V2), not -P13, not P22."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_38_7_11_7_8_0.5_1.0_3_3_4","seed":38,"num_facts":8,"num_rules":12,"num_related_predicates":20,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"sweet_roll(\"Tina\", \"John\", \"Eric\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- twenty_dollar_bill(\"Eileen\", \"Eric\").","- backwater(\"Eileen\", \"Eric\").","- lemon_peel(\"Eileen\", \"Eric\").","- west_indies(\"Eileen\", \"John\", \"Eric\").","military_quarters(\"Eileen\", \"John\", \"Eric\").","spotter(\"Eileen\", \"Jane\", \"John\").","eurocurrency(\"Eileen\", \"Jane\", \"John\").","bovid(\"Eileen\", \"Jane\", \"John\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["sweet_roll(V0, V3, V4) :- great_way_to_relieve_tension(V2, V4), - ghetto(V0, V1, V4), spotter(V1, V2, V3).","- cow_liquid(V2, V4) :- - twenty_dollar_bill(V1, V4), bovid(V1, V2, V3).","locket(V2, V3, V4) :- - twenty_dollar_bill(V1, V4), bovid(V1, V2, V3).","how_big(V1, V3, V4) :- - twenty_dollar_bill(V1, V4), bovid(V1, V2, V3).","report(V3) :- - twenty_dollar_bill(V1, V4), bovid(V1, V2, V3).","great_way_to_relieve_tension(V2, V4) :- - cow_liquid(V2, V4), not -american_civil_war(V2, V4), not unreality(V2, V4).","american_civil_war(V2, V4) :- locket(V2, V3, V4), not -ruddy_duck(V2, V3, V4), not -caddo(V2, V3, V4).","- unreality(V3, V4) :- how_big(V1, V3, V4), not west_indies(V1, V3, V4), not -military_quarters(V1, V3, V4).","shatter(V1, V4) :- how_big(V1, V3, V4), not west_indies(V1, V3, V4), not -military_quarters(V1, V3, V4).","ruddy_duck(V2, V3, V2) :- report(V3), eurocurrency(V1, V2, V3), not -bovid(V1, V2, V3).","- ghetto(V4, V1, V4) :- shatter(V1, V4), not backwater(V1, V4), not lemon_peel(V1, V4).","caddo(V4, V4, V4) :- shatter(V1, V4), not backwater(V1, V4), not lemon_peel(V1, V4)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_11_8_10_10_12_0.5_1.0_5_3_4","seed":11,"num_facts":14,"num_rules":11,"num_related_predicates":25,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P10(\"Nathan\", \"Robert\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P11(\"Nathan\").","P12(\"Michael\", \"Jeffrey\", \"Robert\").","P13(\"Michael\", \"Yolanda\", \"Robert\").","P14(\"Michael\", \"Yolanda\").","- P15(\"Nathan\", \"Robert\").","- P16(\"Michael\", \"Yolanda\", \"Nathan\").","P17(\"Yolanda\", \"Nathan\", \"Robert\").","- P18(\"Michael\", \"Nathan\").","P19(\"Michael\", \"Jeffrey\", \"Nathan\").","P20(\"Michael\", \"Jeffrey\", \"Robert\").","- P21(\"Jeffrey\", \"Nathan\", \"Robert\").","P22(\"Michael\", \"Robert\").","- P23(\"Michael\", \"Jeffrey\", \"Yolanda\").","- P24(\"Michael\", \"Nathan\", \"Robert\")."],"noisy_facts":["- P33(\"Nathan\", \"Robert\").","P25(\"Jeffrey\", \"Yolanda\", \"Nathan\").","P29(\"Jeffrey\", \"Yolanda\").","P32(\"Yolanda\", \"Nathan\").","P34(\"Michael\", \"Jeffrey\", \"Nathan\").","P28(\"Jeffrey\", \"Yolanda\").","P27(\"Michael\", \"Robert\").","P30(\"Michael\", \"Jeffrey\", \"Yolanda\")."],"min_fact_dicts_for_query":["- P11(\"Nathan\").","P13(\"Michael\", \"Yolanda\", \"Robert\").","P22(\"Michael\", \"Robert\").","- P23(\"Michael\", \"Jeffrey\", \"Yolanda\")."],"noiseless_rules":["P10(V3, V4) :- - P1(V2, V4), - P3(V1, V2, V3), not -P9(V1, V2, V4).","P0(V2, V3, V4) :- P7(V2, V3, V4).","- P1(V2, V4) :- P0(V2, V3, V4), not -P2(V2, V3, V4), not -P4(V2, V3, V4), not -P7(V2, V3, V4), not P8(V2, V3, V4).","P2(V2, V3, V4) :- - P5(V0, V4), - P6(V0, V4), - P15(V3, V4), - P16(V0, V2, V3), not -P17(V2, V3, V4).","- P3(V1, V2, V3) :- - P11(V3), P22(V0, V4), - P23(V0, V1, V2), not P24(V0, V3, V4).","P4(V2, V3, V4) :- - P11(V3), P22(V0, V4), - P23(V0, V1, V2), not P24(V0, V3, V4).","- P5(V0, V4) :- - P11(V3), P22(V0, V4), - P23(V0, V1, V2), not P24(V0, V3, V4).","- P6(V0, V4) :- P12(V0, V1, V4), P13(V0, V2, V4).","P7(V2, V4, V4) :- P13(V0, V2, V4).","- P8(V2, V4, V4) :- P13(V0, V2, V4).","P9(V1, V2, V4) :- P14(V0, V2), - P18(V0, V3), P19(V0, V1, V3), P20(V0, V1, V4), not P21(V1, V3, V4)."],"noisy_rules":{"a":["- P10(V3, V4) :- not P0(V2, V3, V4), P1(V2, V4), - P4(V2, V3, V4).","- P10(V3, V4) :- - P4(V2, V3, V4), not P7(V2, V3, V4)."],"b":["P3(V3, V3, V3) :- - P10(V3, V4).","- P0(V2, V3, V4) :- P5(V0, V4), P6(V0, V4), P8(V2, V3, V4), - P10(V3, V4)."],"c":["P6(V0, V4) :- not P2(V2, V3, V4), - P4(V2, V3, V4), P5(V0, V4), P8(V2, V3, V4), - P9(V1, V2, V4).","P5(V0, V4) :- P6(V0, V4), - P9(V1, V2, V4)."],"d":["P11(V3) :- - P4(V2, V3, V4).","P16(V4, V2, V3) :- P1(V2, V4), - P2(V2, V3, V4), P3(V1, V2, V3), not P9(V1, V2, V4), not -P25(V1, V2, V3)."],"e":["- P26(V0, V1, V4) :- P27(V0, V4), P28(V1, V2), not -P29(V1, V2), not -P30(V0, V1, V2).","- P31(V3, V4) :- P32(V2, V3), - P33(V3, V4), P34(V0, V1, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_36_10_12_3_5_0.5_1.0_5_2_3","seed":36,"num_facts":7,"num_rules":13,"num_related_predicates":20,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" carrier_bag(\"John\", \"Eric\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- nautilus(\"John\", \"Franklin\").","buttock(\"John\", \"Franklin\").","auxiliary_engine(\"Franklin\").","telepathist(\"Eric\", \"Matthew\").","- farmhand(\"John\", \"Franklin\").","cell(\"John\", \"Franklin\").","carousel(\"John\", \"Franklin\")."],"noisy_facts":["sing.","menu(\"Franklin\", \"Eric\").","next(\"John\", \"Franklin\").","- writer(\"Franklin\").","state(\"John\", \"Franklin\").","relieving_stress(\"John\").","sight_draft(\"John\", \"Franklin\").","activity(\"John\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- carrier_bag(V0, V2) :- - making_noise(V0, V2).","- sapote(V0) :- - nautilus(V0, V1).","- waiting_for_airplain(V0, V1) :- - nautilus(V0, V1).","- cotton(V1) :- - nautilus(V0, V1).","- making_noise(V0, V0) :- - sapote(V0), not -picnic_ham(V0).","- hares(V0) :- - waiting_for_airplain(V0, V1), not -improvisation(V0, V1), not farmhand(V0, V1), not -cell(V0, V1), not -carousel(V0, V1).","picnic_ham(V0) :- - colorado_blue_spruce(V0, V1), action(V1, V3), - hallmark(V2, V3).","- colorado_blue_spruce(V0, V1) :- - waiting_for_airplain(V0, V1), not -buttock(V0, V1).","- settlement(V1) :- - waiting_for_airplain(V0, V1), not -buttock(V0, V1).","- tench(V1) :- - cotton(V1), not settlement(V1).","action(V3, V3) :- - hares(V3), not tench(V3).","improvisation(V1, V1) :- - settlement(V1), not -auxiliary_engine(V1).","- hallmark(V2, V3) :- telepathist(V2, V3)."],"noisy_rules":{"a":["carrier_bag(V0, V1) :- sapote(V0), hares(V3), not -colorado_blue_spruce(V0, V1), - improvisation(V0, V1).","carrier_bag(V1, V3) :- cotton(V1), settlement(V1), - action(V1, V3)."],"b":["waiting_for_airplain(V0, V2) :- carrier_bag(V0, V2).","waiting_for_airplain(V0, V1) :- waiting_for_airplain(V0, V1), carrier_bag(V0, V2)."],"c":["farmhand(V0, V1) :- not -waiting_for_airplain(V0, V1), settlement(V1), - improvisation(V0, V1).","sapote(V0) :- waiting_for_airplain(V0, V1), - picnic_ham(V0), colorado_blue_spruce(V0, V1), tench(V3)."],"d":["hallmark(V3, V3) :- settlement(V1), tench(V3), sing.","cotton(V1) :- making_noise(V0, V2), colorado_blue_spruce(V0, V1), hallmark(V2, V3), not -sight_draft(V0, V1)."],"e":["south_dakotan(V0) :- relieving_stress(V0), activity(V0), next(V0, V1), menu(V1, V2).","- species(V0, V1) :- - writer(V1), state(V0, V1)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_39_8_12_12_14_0.5_1.0_5_3_4","seed":39,"num_facts":15,"num_rules":13,"num_related_predicates":28,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5714285714285716,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"night(\"Timothy\", \"David\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["build(\"David\", \"Crystal\").","- eating(\"David\").","- tree(\"Timothy\", \"Thomas\", \"Natalie\").","junket(\"Timothy\", \"Thomas\", \"Natalie\").","singing(\"Timothy\", \"David\", \"Crystal\").","- meal(\"Thomas\", \"David\", \"Crystal\").","- broken(\"Thomas\", \"David\", \"Crystal\").","- hear_sound(\"Thomas\", \"David\", \"Natalie\").","- run(\"Timothy\", \"Thomas\", \"Natalie\").","- swimming(\"Timothy\", \"Thomas\", \"Natalie\").","stretch(\"Timothy\", \"Thomas\", \"Natalie\").","- party(\"Thomas\", \"David\").","playing_sports(\"Natalie\", \"Crystal\").","- getting_exercise(\"Timothy\", \"Thomas\", \"Crystal\").","- eating_meals_together(\"Thomas\", \"David\", \"Natalie\")."],"noisy_facts":["- female(\"Thomas\", \"Natalie\", \"Crystal\").","slave(\"Timothy\", \"Thomas\", \"Crystal\").","- nut_and_bolt(\"Timothy\", \"Natalie\").","- bigos(\"Timothy\", \"Thomas\", \"Crystal\").","goulash(\"Timothy\", \"Thomas\", \"Crystal\").","- lobster_stew(\"Timothy\", \"David\").","stooper(\"Timothy\", \"David\", \"Crystal\").","- creature(\"Thomas\").","- binomial(\"Timothy\", \"Thomas\", \"Natalie\").","- capability(\"Timothy\", \"David\").","- dinner_bell(\"Timothy\", \"Thomas\", \"Natalie\")."],"min_fact_dicts_for_query":["build(\"David\", \"Crystal\").","- eating(\"David\").","junket(\"Timothy\", \"Thomas\", \"Natalie\").","- party(\"Thomas\", \"David\").","playing_sports(\"Natalie\", \"Crystal\").","- getting_exercise(\"Timothy\", \"Thomas\", \"Crystal\")."],"noiseless_rules":["night(V0, V2) :- - owl(V0, V2), - social_activity(V1, V3), not -activity(V2, V3), not bed(V0, V1, V3), not hear_sound(V1, V2, V3).","- owl(V0, V2) :- bat(V0, V3, V4), competition(V1, V2, V3).","climbing_mountain(V3, V4) :- bat(V0, V3, V4), competition(V1, V2, V3).","sleep(V0, V1, V3) :- bat(V0, V3, V4), competition(V1, V2, V3).","bat(V0, V3, V4) :- build(V2, V4), junket(V0, V1, V3), not -singing(V0, V2, V4), not meal(V1, V2, V4), not broken(V1, V2, V4).","- social_activity(V1, V3) :- - eating(V2), - party(V1, V2), playing_sports(V3, V4), - getting_exercise(V0, V1, V4), not eating_meals_together(V1, V2, V3).","competition(V1, V2, V3) :- - eating(V2), - party(V1, V2), playing_sports(V3, V4), - getting_exercise(V0, V1, V4), not eating_meals_together(V1, V2, V3).","- satisfying_hunger(V0, V2) :- - eating(V2), - party(V1, V2), playing_sports(V3, V4), - getting_exercise(V0, V1, V4), not eating_meals_together(V1, V2, V3).","climbing(V0, V1, V3) :- - tree(V0, V1, V3).","- exercise(V0, V3, V4) :- climbing_mountain(V3, V4), climbing(V0, V1, V3), not run(V0, V1, V3), not swimming(V0, V1, V3), not -stretch(V0, V1, V3).","- challenge(V0, V3, V4) :- climbing_mountain(V3, V4), climbing(V0, V1, V3), not run(V0, V1, V3), not swimming(V0, V1, V3), not -stretch(V0, V1, V3).","activity(V2, V3) :- sleep(V0, V1, V3), competition(V1, V2, V3), - exercise(V0, V3, V4), not -singing(V0, V2, V4).","- bed(V0, V0, V2) :- - satisfying_hunger(V0, V2), - challenge(V0, V2, V4)."],"noisy_rules":{"a":["- night(V0, V2) :- owl(V0, V2), - sleep(V0, V1, V3), - bat(V0, V3, V4), not -social_activity(V1, V3), - activity(V2, V3).","- night(V0, V2) :- - climbing(V0, V1, V3), challenge(V0, V2, V4)."],"b":["exercise(V0, V2, V2) :- - night(V0, V2).","swimming(V0, V0, V3) :- owl(V0, V2), - climbing_mountain(V3, V4), not -satisfying_hunger(V0, V2), exercise(V0, V3, V4), - night(V0, V2)."],"c":["challenge(V0, V2, V4) :- - sleep(V0, V1, V3), - bat(V0, V3, V4), not -social_activity(V1, V3), - climbing(V0, V1, V3), - activity(V2, V3).","hear_sound(V1, V2, V3) :- not climbing_mountain(V3, V4), - bat(V0, V3, V4), social_activity(V1, V3), challenge(V0, V2, V4)."],"d":["getting_exercise(V0, V1, V4) :- - climbing_mountain(V3, V4), satisfying_hunger(V0, V2), not -bed(V0, V1, V3), not dinner_bell(V0, V1, V3), - binomial(V0, V1, V3).","getting_exercise(V0, V1, V4) :- not -owl(V0, V2), - bat(V0, V3, V4), - competition(V1, V2, V3), - capability(V0, V2)."],"e":["stew(V1, V4) :- - lobster_stew(V0, V2), - nut_and_bolt(V0, V3), not bigos(V0, V1, V4), goulash(V0, V1, V4).","person(V2, V3, V4) :- - creature(V1), slave(V0, V1, V4), stooper(V0, V2, V4), - female(V1, V3, V4)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_28_7_11_2_5_0.5_1.0_5_2_3","seed":28,"num_facts":5,"num_rules":12,"num_related_predicates":17,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P11(\"Cody\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["- P12(\"Daniel\", \"Amanda\").","- P13(\"Daniel\", \"Amanda\").","P14(\"Daniel\", \"Cody\").","- P15(\"Cody\", \"Christopher\").","P16(\"Christopher\", \"Amanda\")."],"noisy_facts":["P21(\"Cody\", \"Christopher\").","P19.","- P20(\"Daniel\", \"Christopher\").","- P25(\"Daniel\").","- P28(\"Cody\", \"Christopher\").","- P29(\"Cody\", \"Amanda\").","- P18(\"Daniel\", \"Cody\").","P22(\"Cody\", \"Amanda\").","- P27(\"Cody\", \"Christopher\").","- P26(\"Daniel\", \"Amanda\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- P11(V1) :- - P0(V1), P6(V1), P7(V0, V3), not -P9(V1, V3).","- P0(V1) :- P3(V0, V1), - P12(V0, V3).","P1(V1, V3) :- P3(V0, V1), - P12(V0, V3).","- P2(V3) :- - P13(V0, V3), - P15(V1, V2), not -P16(V2, V3).","P3(V0, V1) :- - P13(V0, V3), - P15(V1, V2), not -P16(V2, V3).","P4(V2) :- - P13(V0, V3), - P15(V1, V2), not -P16(V2, V3).","P5(V3, V3) :- - P2(V3), not P8(V3), not P10(V3).","P6(V1) :- P1(V1, V3), P3(V0, V1), P5(V0, V3), P16(V2, V3).","P7(V2, V2) :- P4(V2).","- P8(V2) :- P4(V2).","P9(V1, V0) :- P3(V0, V1), not -P14(V0, V1).","- P10(V0) :- P3(V0, V1), not -P14(V0, V1)."],"noisy_rules":{"a":["P11(V1) :- P0(V1), - P6(V1), - P7(V0, V3), not P9(V1, V3).","P11(V2) :- - P4(V2), not P5(V0, V3), - P7(V0, V3)."],"b":["P15(V1, V0) :- P2(V3), - P3(V0, V1), not -P10(V3), P11(V1).","P0(V1) :- P0(V1), - P4(V2), - P9(V1, V3), P11(V1)."],"c":["P2(V3) :- - P7(V0, V3).","- P3(V0, V1) :- - P5(V0, V3), not -P8(V3), - P9(V1, V3)."],"d":["P17(V1) :- - P18(V0, V1).","P13(V2, V2) :- - P4(V2), P19."],"e":["- P23(V1, V3) :- - P20(V0, V2), not -P21(V1, V2), P22(V1, V3).","P24(V2) :- - P25(V0), - P26(V0, V3), - P27(V1, V2), not P28(V1, V2), - P29(V1, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_19_10_10_7_8_0.5_1.0_3_2_3","seed":19,"num_facts":11,"num_rules":11,"num_related_predicates":22,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.4444444444444446,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" frigate_bird(\"Brenda\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["apodiform_bird(\"Brenda\", \"Monica\").","- hawk(\"Monica\", \"Brandon\").","- auklet(\"Brenda\", \"Kelly\").","gannet(\"Monica\").","- puffin(\"Kelly\", \"Monica\").","- night_bird(\"Kelly\", \"Monica\").","protoavis(\"Kelly\", \"Monica\").","- cere(\"Brandon\").","big_duck(\"Brandon\").","- pelican(\"Brenda\", \"Kelly\").","- cormorant(\"Brenda\", \"Monica\")."],"noisy_facts":["region(\"Brenda\", \"Kelly\").","- west(\"Kelly\", \"Brandon\").","- P23(\"Monica\", \"Brandon\").","boar(\"Monica\", \"Brandon\").","- wading_bird(\"Brenda\", \"Kelly\").","- citizenship_day(\"Brenda\", \"Monica\")."],"min_fact_dicts_for_query":["- auklet(\"Brenda\", \"Kelly\").","gannet(\"Monica\").","- pelican(\"Brenda\", \"Kelly\")."],"noiseless_rules":["- frigate_bird(V0) :- aquatic_bird(V0, V3), not -sheets(V0, V3).","- bird(V1) :- apodiform_bird(V0, V2), - night_bird(V1, V2), not -protoavis(V1, V2).","bird_of_prey(V3) :- - hawk(V2, V3).","- beak(V3, V3) :- bird_of_prey(V3), not cere(V3), not -big_duck(V3).","seabird(V0, V1) :- - auk(V0, V1), pelecaniform_seabird(V1, V2), not puffin(V1, V2).","- auk(V0, V1) :- - auklet(V0, V1).","- foil(V2, V1) :- - bird(V1), - beak(V0, V2), not -darmstadtium(V0, V1).","aquatic_bird(V0, V1) :- seabird(V0, V1).","pelecaniform_seabird(V1, V2) :- gannet(V2), - pelican(V0, V1), not cormorant(V0, V2).","darmstadtium(V0, V1) :- gannet(V2), - pelican(V0, V1), not cormorant(V0, V2).","sheets(V1, V3) :- - foil(V2, V3), - puffin(V1, V2)."],"noisy_rules":{"a":["frigate_bird(V0) :- beak(V0, V2), foil(V2, V3).","frigate_bird(V0) :- bird(V1), - seabird(V0, V1), - aquatic_bird(V0, V3)."],"b":["bird(V0) :- frigate_bird(V0).","- pelecaniform_seabird(V0, V0) :- frigate_bird(V0)."],"c":["bird(V2) :- beak(V0, V2), not -foil(V2, V3), - aquatic_bird(V0, V3).","- seabird(V2, V3) :- foil(V2, V3)."],"d":["- aquatic_bird(V0, V1) :- auk(V0, V1), not wading_bird(V0, V1).","bird(V2) :- - bird_of_prey(V3), foil(V2, V3), not P23(V2, V3)."],"e":["- location(V1, V3) :- region(V0, V1), - west(V1, V3).","- olive(V0, V3) :- - citizenship_day(V0, V2), boar(V2, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_61_10_13_9_12_0.5_1.0_5_1_2","seed":61,"num_facts":12,"num_rules":14,"num_related_predicates":26,"max_depth_of_rule_graph":7,"average_depth_of_rule_graph":3.7777777777777777,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"south_carolina(\"Sara\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["supply(\"Sara\").","expressway(\"Sara\").","- painter(\"Sara\").","- chaise_longue.","tree_cotton.","- pigs.","- molten_core.","- born_date(\"Sara\").","- breathe(\"Sara\").","- dell(\"Sara\").","- apartment_building(\"Sara\").","destroy_places(\"Sara\")."],"noisy_facts":[],"min_fact_dicts_for_query":["supply(\"Sara\")."],"noiseless_rules":["south_carolina(V1) :- destroying_things(V1), not green_and_smell_like_grass(V1), not cheeks(V1), not -paleness(V1).","- footprint(V2) :- - saddle_horn(V2), not wheels(V2).","- board(V1) :- subdeacon(V1), not -maya(V1), not planets(V1), not painter(V1).","subdeacon(V1) :- supply(V1).","- leg_presses(V1) :- supply(V1).","destroying_things(V2) :- - footprint(V2), not chaise_longue, not -tree_cotton, not pigs, not molten_core.","maya(V1) :- precious_metal(V1), not born_date(V1), not breathe(V1), not dell(V1), not apartment_building(V1).","- saddle_horn(V1) :- - board(V1), not planets(V1), not -paleness(V1).","- green_and_smell_like_grass(V1) :- expressway(V1).","- cheeks(V1) :- - leg_presses(V1).","- wheels(V1) :- - leg_presses(V1).","precious_metal(V1) :- - leg_presses(V1).","- planets(V1) :- - painter(V1), not -destroy_places(V1).","paleness(V1) :- - painter(V1), not -destroy_places(V1)."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_62_9_10_6_8_0.5_1.0_5_0_1","seed":62,"num_facts":9,"num_rules":11,"num_related_predicates":20,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":1.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"P10.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P11.","- P12.","P13.","- P14.","P15.","- P16.","P17.","- P18.","P19."],"noisy_facts":["- P20.","- P23.","- P21.","P25.","- P26."],"min_fact_dicts_for_query":["- P11."],"noiseless_rules":["P10 :- - P0, not -P6, not P7, not -P8, not -P9.","- P0 :- P3.","- P1 :- P3.","P2 :- - P1, not -P4.","P3 :- - P11, not P18, not -P19.","P4 :- - P11, not P18, not -P19.","- P5 :- - P12.","P6 :- P2, not -P4.","- P7 :- - P5, not P14, not -P15, not P16, not -P17.","P8 :- P13.","P9 :- P2."],"noisy_rules":{"a":["- P10 :- not P3, P5, - P8.","- P10 :- not P2, - P3, not P4, not -P5, - P9."],"b":["- P13 :- P0, not P2, not -P5, - P8, - P10.","- P2 :- - P10."],"c":["P18 :- not -P1, not P2, - P3, not -P5, not P9.","P18 :- not -P0, not -P1, P5, not P6."],"d":["P12 :- - P6, not P20.","P0 :- not -P5, not -P7, not P8, - P21."],"e":["- P22 :- - P23.","- P24 :- P25, not P26."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_31_7_6_2_5_0.5_1.0_5_1_2","seed":31,"num_facts":7,"num_rules":7,"num_related_predicates":14,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" P6(\"Lisa\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P7(\"Lisa\").","P8(\"Lisa\").","P9(\"Lisa\").","P10(\"Lisa\").","P11(\"Lisa\").","P12(\"Lisa\").","P13(\"Lisa\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P7(\"Lisa\").","P8(\"Lisa\").","P9(\"Lisa\").","P10(\"Lisa\").","P11(\"Lisa\").","P12(\"Lisa\").","P13(\"Lisa\")."],"noiseless_rules":["P6(V0) :- P1(V0), P2(V0), P4(V0).","P0(V0) :- P7(V0), P12(V0), P13(V0).","P1(V0) :- P0(V0), P3(V0), P5(V0).","P2(V0) :- P8(V0), P12(V0).","P3(V0) :- P9(V0), P12(V0).","P4(V0) :- P10(V0), P12(V0).","P5(V0) :- P11(V0)."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_69_7_8_4_6_0.5_1.0_5_0_1","seed":69,"num_facts":7,"num_rules":9,"num_related_predicates":16,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.8333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"flying.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["egg.","eggs.","- party.","- wings.","nut.","- chicken.","- animal."],"noisy_facts":[],"min_fact_dicts_for_query":["egg."],"noiseless_rules":["flying :- - bird, not -bat, not satisfying_hunger, not wings, not -nut.","- bird :- egg, not -eggs.","food :- egg, not -eggs.","bat :- male_female.","- satisfying_hunger :- - eating, not -social_activity.","male_female :- - eating, not -social_activity.","- eating :- food, not -diner, not chicken, not animal.","diner :- eggs.","social_activity :- - eating, not party."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_96_10_14_4_6_0.5_1.0_3_2_3","seed":96,"num_facts":7,"num_rules":15,"num_related_predicates":22,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.6666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"steel_blue(\"Elizabeth\", \"Bobby\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- canary_yellow(\"Shawn\", \"Kristina\").","- parallel_bars(\"Elizabeth\", \"Bobby\").","- brownish_yellow(\"Shawn\", \"Kristina\").","- thinking(\"Elizabeth\", \"Kristina\").","- subdeacon(\"Shawn\", \"Kristina\").","- nonsolid_color(\"Bobby\", \"Kristina\").","images_embossed_on_both_sides."],"noisy_facts":["- postposition(\"Elizabeth\", \"Bobby\").","- preposition(\"Bobby\", \"Kristina\").","- military(\"Bobby\").","angel(\"Elizabeth\", \"Kristina\").","- proscenium(\"Shawn\", \"Bobby\")."],"min_fact_dicts_for_query":["- canary_yellow(\"Shawn\", \"Kristina\").","- parallel_bars(\"Elizabeth\", \"Bobby\").","- thinking(\"Elizabeth\", \"Kristina\").","- subdeacon(\"Shawn\", \"Kristina\").","- nonsolid_color(\"Bobby\", \"Kristina\")."],"noiseless_rules":["steel_blue(V0, V2) :- - kwa(V3), color(V0, V2), not -jejunity(V0, V3).","- brown(V0, V3) :- light_brown(V0, V1), - canary_yellow(V1, V3).","- kwa(V1) :- light_brown(V0, V1), not ewe(V0, V1), not laugh_at_joke(V0, V1).","color(V0, V2) :- - chromatic_color(V0, V3), achromatic_color(V1, V3), - nonsolid_color(V2, V3).","light_brown(V0, V1) :- beige(V0, V1).","- chromatic_color(V0, V3) :- - brown(V0, V3), not yellow(V0, V3), not -blue(V0, V3).","beige(V0, V1) :- - parallel_bars(V0, V2), - thinking(V0, V3), - subdeacon(V1, V3).","jejunity(V1, V3) :- - canary_yellow(V1, V3), not brownish_yellow(V1, V3).","- yellow(V3, V3) :- - canary_yellow(V1, V3), not brownish_yellow(V1, V3).","opera_star(V3) :- - canary_yellow(V1, V3), not brownish_yellow(V1, V3).","- ewe(V0, V0) :- opera_star(V0), not -images_embossed_on_both_sides.","- powder_blue(V0, V0) :- opera_star(V0), not -images_embossed_on_both_sides.","- laugh_at_joke(V0, V0) :- - powder_blue(V0, V3).","achromatic_color(V0, V3) :- - powder_blue(V0, V3).","blue(V0, V3) :- - powder_blue(V0, V3)."],"noisy_rules":{"a":["- steel_blue(V0, V1) :- kwa(V3), - beige(V0, V1), not blue(V0, V3).","- steel_blue(V0, V1) :- not beige(V0, V1), ewe(V0, V1)."],"b":["thinking(V0, V3) :- brown(V0, V3), - light_brown(V0, V1), - steel_blue(V0, V2).","- blue(V0, V0) :- - steel_blue(V0, V2)."],"c":["brownish_yellow(V0, V3) :- chromatic_color(V0, V3).","thinking(V0, V1) :- laugh_at_joke(V0, V1)."],"d":["yellow(V0, V3) :- chromatic_color(V0, V3), - blue(V0, V3), angel(V0, V3).","- images_embossed_on_both_sides(V0, V3) :- brown(V0, V3)."],"e":["place(V0, V3) :- - military(V2), - postposition(V0, V2), - preposition(V2, V3).","- stage(V1) :- - proscenium(V1, V2)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_28_8_10_1_3_0.5_1.0_5_0_1","seed":28,"num_facts":4,"num_rules":11,"num_related_predicates":15,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" amusement_park.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["- bumper.","rhinorrhea.","draft.","- pluck."],"noisy_facts":["- barber_chair.","kite.","- bird.","- flies.","ovum.","- screw.","- hub."],"min_fact_dicts_for_query":["- bumper."],"noiseless_rules":["- amusement_park :- throng, not -airplane_propeller, not -variable_pitch_propeller.","theme_park :- - bumper.","- head_cold :- theme_park, not -cold.","mechanical_device :- - head_cold, not -ride, not -propeller, not bumper.","throng :- mechanical_device, not -pull.","cold :- rhinorrhea.","ride :- rhinorrhea.","pull :- draft, not pluck.","airplane_propeller :- draft, not pluck.","variable_pitch_propeller :- airplane_propeller.","propeller :- airplane_propeller."],"noisy_rules":{"a":["amusement_park :- - theme_park, not throng, not ride, not airplane_propeller, - variable_pitch_propeller.","amusement_park :- not -head_cold, - mechanical_device, - pull, not variable_pitch_propeller, not propeller."],"b":["- rhinorrhea :- not theme_park, not mechanical_device, not cold, - pull, not -amusement_park.","- variable_pitch_propeller :- - mechanical_device, - pull, - propeller, not -amusement_park."],"c":["- cold :- head_cold, not mechanical_device, not ride, not airplane_propeller.","- variable_pitch_propeller :- - airplane_propeller."],"d":["- propeller :- not variable_pitch_propeller, - hub, not screw.","bumper :- not mechanical_device, not airplane_propeller, ovum."],"e":["chair :- - barber_chair.","- fly :- not bird, - flies, kite."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_26_8_11_11_14_0.5_1.0_5_2_3","seed":26,"num_facts":13,"num_rules":12,"num_related_predicates":25,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" decide(\"Brandy\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["computer_brand(\"Jessica\", \"Brandy\").","- halibut_liver_oil(\"Joseph\").","- specific_amounts(\"Brandy\").","chinese_deity(\"Joseph\", \"Jessica\").","interlayer(\"Jessica\", \"Paul\").","- pea_soup(\"Paul\", \"Brandy\").","creating_awareness(\"Jessica\", \"Brandy\").","- groundhog(\"Jessica\", \"Brandy\").","golden_gram(\"Jessica\", \"Brandy\").","- staying_alive(\"Brandy\").","- nightmare(\"Brandy\").","water_butt(\"Brandy\").","- city_in_texas(\"Paul\", \"Brandy\")."],"noisy_facts":["crest(\"Joseph\", \"Brandy\").","lunar(\"Paul\").","cigarette_burn(\"Paul\").","- ticket(\"Paul\", \"Brandy\").","- loosing_money(\"Paul\", \"Brandy\")."],"min_fact_dicts_for_query":["computer_brand(\"Jessica\", \"Brandy\").","- halibut_liver_oil(\"Joseph\").","- specific_amounts(\"Brandy\").","chinese_deity(\"Joseph\", \"Jessica\").","interlayer(\"Jessica\", \"Paul\")."],"noiseless_rules":["- decide(V3) :- case(V3), hatbox(V3), - barrel(V1, V3), - anticyclone(V2, V3), not city_in_texas(V2, V3).","case(V3) :- clarified_butter(V1), - hold_soda(V1, V3), not -creating_awareness(V1, V3), not groundhog(V1, V3), not -golden_gram(V1, V3).","- wave(V3) :- clarified_butter(V1), - hold_soda(V1, V3), not -creating_awareness(V1, V3), not groundhog(V1, V3), not -golden_gram(V1, V3).","clarified_butter(V1) :- computer_brand(V1, V3), not -creating_awareness(V1, V3).","wall_color(V1, V3) :- computer_brand(V1, V3), not -creating_awareness(V1, V3).","hatbox(V3) :- - halibut_liver_oil(V0), - specific_amounts(V3), chinese_deity(V0, V1), interlayer(V1, V2), not pea_soup(V2, V3).","- hold_soda(V2, V3) :- - anticyclone(V2, V3), not -wallet(V2, V3), not specific_amounts(V3).","- barrel(V3, V3) :- - wave(V3), not -dimness(V3), not staying_alive(V3), not nightmare(V3), not -water_butt(V3).","- anticyclone(V2, V3) :- wall_color(V2, V3).","dimness(V3) :- wall_color(V2, V3).","- mane(V2) :- wall_color(V2, V3).","wallet(V2, V2) :- - mane(V2)."],"noisy_rules":{"a":["decide(V3) :- wave(V3), hold_soda(V1, V3), mane(V2).","decide(V3) :- - case(V3), hold_soda(V1, V3), anticyclone(V2, V3)."],"b":["hold_soda(V3, V3) :- decide(V3).","- clarified_butter(V1) :- not -wave(V3), - hatbox(V3), hold_soda(V1, V3), anticyclone(V2, V3), decide(V3)."],"c":["- golden_gram(V1, V3) :- - case(V3), - hatbox(V3), barrel(V1, V3), anticyclone(V2, V3).","halibut_liver_oil(V1) :- barrel(V1, V3)."],"d":["anticyclone(V2, V3) :- - case(V3), not -wave(V3), - wall_color(V2, V3), - loosing_money(V2, V3).","cliffhanger(V3) :- - dimness(V3), mane(V2), cigarette_burn(V2), lunar(V2)."],"e":["- representation(V0, V3) :- crest(V0, V3).","- gunpowder(V2) :- - ticket(V2, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_73_9_8_7_10_0.5_1.0_5_0_1","seed":73,"num_facts":11,"num_rules":9,"num_related_predicates":20,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"midland.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["smell_organ.","cutting.","scale.","shoe_collar.","seeing_world_differently.","mishap.","brisket.","gallinule.","species.","urubupunga.","cotswold."],"noisy_facts":[],"min_fact_dicts_for_query":["smell_organ.","cutting.","scale.","shoe_collar.","seeing_world_differently.","mishap.","brisket.","gallinule.","species.","urubupunga.","cotswold."],"noiseless_rules":["midland :- old_cd, giro, ophiurida.","old_cd :- smell_organ.","poultry :- cutting.","piece :- poultry, smoke, species, urubupunga, cotswold.","watch_game :- benefit, shoe_collar.","benefit :- scale, seeing_world_differently, mishap, brisket, gallinule.","smoke :- watch_game, scale.","giro :- piece, scale.","ophiurida :- shoe_collar."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_24_10_10_2_2_0.5_1.0_3_1_2","seed":24,"num_facts":7,"num_rules":11,"num_related_predicates":18,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"P10(\"Jeffrey\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P11(\"Trevor\").","- P12(\"Jeffrey\").","P13(\"Jeffrey\").","- P14(\"Jeffrey\").","- P15(\"Jeffrey\").","P16.","P17."],"noisy_facts":["- P18(\"Jeffrey\").","- P22(\"Jeffrey\").","P20(\"Jeffrey\")."],"min_fact_dicts_for_query":["- P12(\"Jeffrey\")."],"noiseless_rules":["P10(V2) :- P3(V2), not -P4(V2), not -P6(V2).","- P0(V2) :- P2(V2), not P8(V2).","P1(V0) :- P11(V0).","P2(V2) :- - P12(V2).","P3(V2) :- - P0(V2), not P7(V2).","P4(V2) :- - P5(V2), not P9(V2).","- P5(V2) :- P13(V2).","P6(V2) :- - P14(V2).","- P7(V2) :- - P15(V2).","- P8(V0) :- P1(V0), not -P16, not -P17.","- P9(V0) :- P1(V0), not -P16, not -P17."],"noisy_rules":{"a":["- P10(V2) :- - P2(V2), - P3(V2), - P6(V2).","- P10(V2) :- P0(V2), - P2(V2), - P4(V2)."],"b":["P5(V2) :- P7(V2), not -P9(V2), not P10(V2).","P5(V2) :- - P4(V2), not -P5(V2), not P10(V2)."],"c":["- P11(V0) :- - P1(V0), - P4(V2).","P9(V2) :- - P4(V2), not -P8(V2)."],"d":["- P4(V2) :- P5(V2).","P7(V2) :- - P4(V2)."],"e":["P19(V2) :- - P18(V2), P20(V2).","P21(V2) :- - P22(V2)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_2_8_10_1_4_0.5_1.0_5_1_2","seed":2,"num_facts":4,"num_rules":11,"num_related_predicates":15,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"sweet(\"Virginia\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["consumption(\"Virginia\").","easter_egg(\"Virginia\").","- product(\"Virginia\").","pull_carts(\"Virginia\")."],"noisy_facts":["lactation(\"Virginia\").","- bull(\"Virginia\").","- water(\"Virginia\").","wings(\"Virginia\").","breath(\"Virginia\").","tea(\"Virginia\")."],"min_fact_dicts_for_query":["consumption(\"Virginia\")."],"noiseless_rules":["sweet(V0) :- - means(V0), not sleeping(V0), not bodily_process(V0).","- means(V0) :- consumption(V0).","opsonization(V0) :- consumption(V0).","- caramel(V0) :- depletion(V0).","- sleeping(V0) :- - candy(V0), not dint(V0).","- candy(V0) :- - caramel(V0), not -dragee(V0), not -easter_egg(V0), not -pull_carts(V0).","- bodily_process(V0) :- opsonization(V0), not breathing(V0), not -consumption(V0).","depletion(V0) :- opsonization(V0), not breathing(V0), not -consumption(V0).","- dint(V0) :- easter_egg(V0).","- breathing(V0) :- easter_egg(V0).","dragee(V0) :- - bodily_process(V0), not product(V0)."],"noisy_rules":{"a":["- sweet(V0) :- - opsonization(V0).","- sweet(V0) :- not -candy(V0), - dragee(V0)."],"b":["- consumption(V0) :- not -bodily_process(V0), not depletion(V0), breathing(V0), - sweet(V0).","bodily_process(V0) :- not -caramel(V0), - depletion(V0), - dragee(V0), - sweet(V0)."],"c":["caramel(V0) :- sleeping(V0), bodily_process(V0), not depletion(V0).","bodily_process(V0) :- not opsonization(V0), sleeping(V0), not depletion(V0), breathing(V0), not dragee(V0)."],"d":["bodily_process(V0) :- candy(V0), not depletion(V0), lactation(V0), not -breath(V0).","means(V0) :- - opsonization(V0), not -candy(V0), - depletion(V0), dint(V0), wings(V0)."],"e":["drink(V0) :- - water(V0), not -tea(V0).","- charge_matador(V0) :- - bull(V0)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_61_9_11_10_10_0.5_1.0_5_0_1","seed":61,"num_facts":14,"num_rules":12,"num_related_predicates":26,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"P11.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P12.","- P13.","- P14.","P15.","P16.","P17.","- P18.","P19.","P20.","P21.","- P22.","P23.","P24.","P25."],"noisy_facts":["P34.","- P28.","- P26.","P29.","P35.","P36.","- P33.","- P31.","- P30."],"min_fact_dicts_for_query":["- P12."],"noiseless_rules":["P11 :- P0, not -P3, not P7, not P9.","P0 :- P5, not -P8.","- P1 :- - P12, not -P16, not -P17, not P18, not -P19.","P2 :- - P12, not -P16, not -P17, not P18, not -P19.","P3 :- - P13.","P4 :- - P13.","P5 :- - P1, not -P4, not P6.","- P6 :- P10.","- P7 :- - P14, not -P24, not -P25.","P8 :- - P14, not -P24, not -P25.","- P9 :- P15, not -P20, not -P21, not P22, not -P23.","P10 :- P2."],"noisy_rules":{"a":["- P11 :- not -P1, not P5, not -P7, - P10.","- P11 :- not -P1, - P2, not -P6, not P8."],"b":["P7 :- - P2, not -P6, not P11.","P9 :- - P11."],"c":["- P16 :- - P0, not P5.","- P4 :- not P3, P9, - P10."],"d":["P22 :- - P10.","- P25 :- - P0, P7, - P26."],"e":["- P27 :- - P28, not -P29, - P30, - P31.","- P32 :- not P33, P34, not -P35, P36."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_0_10_9_6_8_0.5_1.0_3_1_2","seed":0,"num_facts":10,"num_rules":10,"num_related_predicates":20,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.2222222222222223,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P9(\"Nicholas\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P10(\"Nicholas\").","- P11(\"Nicholas\").","P12(\"Faith\").","P13(\"Harry\").","- P14(\"Harry\").","P15(\"Nicholas\").","P16(\"Nicholas\").","- P17(\"Harry\").","- P18(\"Harry\").","- P19(\"Faith\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- P11(\"Nicholas\")."],"noiseless_rules":["- P9(V1) :- P4(V1), not P7(V1).","- P0(V0) :- P6(V0), not P19(V0).","P1(V2) :- - P2(V2), not P8(V2), not P14(V2).","- P2(V0) :- - P0(V0), not -P12(V0).","- P3(V1) :- P10(V1), not -P15(V1), not -P16(V1).","P4(V1) :- - P11(V1).","- P5(V2) :- P1(V2).","P6(V0) :- P12(V0).","- P7(V1) :- - P3(V1), not -P4(V1), not P5(V1).","- P8(V2) :- P13(V2), not P17(V2), not P18(V2)."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_82_10_13_3_4_0.5_1.0_5_0_1","seed":82,"num_facts":7,"num_rules":14,"num_related_predicates":21,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.888888888888889,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"P13.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["- P14.","- P15.","- P16.","P17.","P18.","P19.","P20."],"noisy_facts":["- P21.","- P25.","P26.","- P23."],"min_fact_dicts_for_query":["- P16."],"noiseless_rules":["P13 :- P0, not P4, not -P11.","P0 :- - P6, not P7.","P1 :- - P14.","- P2 :- - P14.","- P3 :- - P15.","- P4 :- - P16.","- P5 :- - P16.","- P6 :- - P5, not P9, not P10.","- P7 :- - P8, not -P12.","- P8 :- P1.","- P9 :- P17, not -P18, not -P19, not -P20.","- P10 :- P17, not -P18, not -P19, not -P20.","P11 :- - P2, not P3, not P10.","P12 :- - P2, not P3, not P10."],"noisy_rules":{"a":["- P13 :- P5.","- P13 :- not -P4, P5, P6, P7, not -P9."],"b":["P16 :- not -P4, not -P8, P9, not -P10, not P13.","P5 :- not -P5, P6, P9, - P12, not P13."],"c":["- P0 :- not P1, not -P8, not P11, - P12.","- P18 :- not P0, P4, P9, not P11."],"d":["P5 :- - P12.","- P19 :- not -P3, - P21."],"e":["- P22 :- - P23.","P24 :- - P25, not -P26."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_0_8_9_7_9_0.5_1.0_5_0_1","seed":0,"num_facts":9,"num_rules":10,"num_related_predicates":19,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.857142857142857,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" dangerous_animals.","target_query_in_answerset":false,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["small_print.","xmas.","manufacture.","redpoll.","race.","relaxing_with_friends.","business_address.","float.","dextrocardia."],"noisy_facts":[],"min_fact_dicts_for_query":["small_print.","xmas.","manufacture.","redpoll.","race.","relaxing_with_friends.","business_address.","float.","dextrocardia."],"noiseless_rules":["dangerous_animals :- having_fast_meal, cumin.","having_fast_meal :- community.","eater :- community.","malian :- small_print, manufacture, business_address, float, dextrocardia.","aeroplanes :- small_print, manufacture, business_address, float, dextrocardia.","nitrobacterium :- eater, malian.","community :- parchment, dextrocardia.","cumin :- nitrobacterium, petroleum.","petroleum :- aeroplanes, manufacture, redpoll, race, relaxing_with_friends.","parchment :- xmas."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_46_10_11_8_9_0.5_1.0_5_3_4","seed":46,"num_facts":13,"num_rules":12,"num_related_predicates":25,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":1.8888888888888888,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P11(\"Rick\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P12(\"Valerie\", \"Dana\", \"Gary\").","- P13(\"Dana\", \"Rick\", \"John\").","- P14(\"Valerie\", \"Rick\").","- P15(\"Valerie\", \"Gary\", \"John\").","- P16(\"Dana\", \"Rick\", \"John\").","- P17(\"Valerie\", \"Rick\", \"John\").","- P18(\"Valerie\", \"Rick\", \"John\").","- P19(\"Valerie\", \"Rick\", \"John\").","P20(\"Valerie\", \"Rick\", \"John\").","P21(\"Valerie\", \"Rick\").","- P22(\"Valerie\", \"Dana\", \"Gary\").","- P23(\"Dana\", \"Rick\", \"Gary\").","- P24(\"Dana\", \"Rick\", \"Gary\")."],"noisy_facts":["- P26(\"Rick\", \"Gary\", \"John\").","P27(\"Valerie\", \"Gary\", \"John\").","P25(\"Valerie\", \"Dana\", \"John\").","- P33(\"Rick\", \"Gary\").","- P28(\"Dana\", \"Gary\", \"John\").","- P32(\"Valerie\", \"John\").","P31(\"Valerie\", \"Gary\")."],"min_fact_dicts_for_query":["P12(\"Valerie\", \"Dana\", \"Gary\").","- P16(\"Dana\", \"Rick\", \"John\")."],"noiseless_rules":["P11(V2) :- P3(V1, V4), - P4(V2, V3), not P6(V3, V4), not P7(V1, V2, V3), not -P9(V1, V2, V4).","- P0(V3) :- P12(V0, V1, V3).","- P1(V2, V2, V4) :- P9(V1, V2, V4), not P13(V1, V2, V4).","P2(V4, V1, V4) :- P9(V1, V2, V4), not P13(V1, V2, V4).","P3(V3, V3) :- - P0(V3), not P10(V3).","- P4(V2, V4) :- - P1(V0, V2, V4), not P17(V0, V2, V4), not P18(V0, V2, V4), not P19(V0, V2, V4), not -P20(V0, V2, V4).","- P5(V0, V4, V4) :- - P1(V0, V2, V4), not P17(V0, V2, V4), not P18(V0, V2, V4), not P19(V0, V2, V4), not -P20(V0, V2, V4).","- P6(V3, V4) :- - P8(V3, V4).","- P7(V1, V2, V3) :- - P14(V0, V2), P21(V0, V2), - P22(V0, V1, V3), not P23(V1, V2, V3), not P24(V1, V2, V3).","- P8(V3, V4) :- - P15(V0, V3, V4).","P9(V1, V2, V4) :- - P16(V1, V2, V4).","- P10(V3) :- P2(V0, V3, V4), - P5(V0, V1, V4)."],"noisy_rules":{"a":["- P11(V3) :- P6(V3, V4).","- P11(V2) :- P0(V3), - P2(V0, V3, V4), P7(V1, V2, V3), not -P8(V3, V4), not P9(V1, V2, V4)."],"b":["P10(V3) :- P1(V0, V2, V4), P5(V0, V1, V4), not -P6(V3, V4), P7(V1, V2, V3), - P11(V2).","P7(V1, V2, V3) :- P5(V0, V1, V4), P7(V1, V2, V3), not -P8(V3, V4), not P11(V2)."],"c":["P10(V3) :- - P2(V0, V3, V4), - P3(V1, V4), not -P6(V3, V4), P7(V1, V2, V3), - P9(V1, V2, V4).","- P3(V1, V4) :- - P2(V0, V3, V4), not -P6(V3, V4), - P9(V1, V2, V4)."],"d":["P19(V0, V2, V4) :- P0(V3), P5(V0, V1, V4), P7(V1, V2, V3), not -P25(V0, V1, V4).","P4(V2, V3) :- - P26(V2, V3, V4)."],"e":["- P29(V1) :- P27(V0, V3, V4), - P28(V1, V3, V4).","P30(V0, V2, V3) :- P31(V0, V3), - P32(V0, V4), - P33(V2, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_11_8_8_5_8_0.5_1.0_5_1_2","seed":11,"num_facts":9,"num_rules":9,"num_related_predicates":18,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" P8(\"Emily\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P9(\"Emily\").","P10(\"Emily\").","- P11(\"Emily\").","P12(\"Emily\").","P13(\"Emily\").","P14(\"Emily\").","- P15(\"Emily\").","P16(\"Emily\").","P17(\"Emily\")."],"noisy_facts":["P29(\"Ross\").","- P22(\"Emily\").","- P30(\"Ross\").","- P23(\"Emily\").","- P18(\"Emily\").","P19(\"Emily\").","P27(\"Ross\").","- P28(\"Ross\").","P21(\"Emily\").","P25(\"Emily\").","- P24(\"Emily\")."],"min_fact_dicts_for_query":["- P11(\"Emily\")."],"noiseless_rules":["- P8(V1) :- - P1(V1), not P7(V1).","P0(V1) :- P6(V1), not -P12(V1).","- P1(V1) :- P0(V1), not P2(V1), not -P3(V1), not -P13(V1), not -P14(V1).","- P2(V1) :- - P4(V1), not -P5(V1).","P3(V1) :- - P9(V1).","- P4(V1) :- - P9(V1).","P5(V1) :- P10(V1), not -P13(V1).","P6(V1) :- - P11(V1), not -P12(V1), not P15(V1), not -P16(V1), not -P17(V1).","- P7(V1) :- P12(V1)."],"noisy_rules":{"a":["P8(V1) :- - P3(V1), P4(V1), - P5(V1), not -P7(V1).","P8(V1) :- not P0(V1), P1(V1), not -P4(V1), not -P7(V1)."],"b":["P2(V1) :- not P0(V1), P1(V1), not P5(V1), not -P7(V1), not -P8(V1).","- P16(V1) :- not P0(V1), not P5(V1), P8(V1)."],"c":["P2(V1) :- not -P1(V1), - P3(V1), - P5(V1), not P6(V1), not -P7(V1).","- P13(V1) :- - P0(V1), not -P1(V1), - P5(V1)."],"d":["- P14(V1) :- not -P1(V1), P2(V1), not -P4(V1), not P18(V1).","- P13(V1) :- - P0(V1), not -P1(V1), not -P2(V1), P7(V1), P19(V1)."],"e":["P20(V1) :- P21(V1), not P22(V1), - P23(V1), not P24(V1), not -P25(V1).","- P26(V0) :- not -P27(V0), not P28(V0), not -P29(V0), - P30(V0)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_67_7_7_6_9_0.5_1.0_3_0_1","seed":67,"num_facts":8,"num_rules":8,"num_related_predicates":16,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P7.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P8.","P9.","- P10.","P11.","P12.","- P13.","- P14.","- P15."],"noisy_facts":["- P21.","P23.","P20.","P18.","- P16.","- P17."],"min_fact_dicts_for_query":["P9."],"noiseless_rules":["P7 :- - P3, not -P5, not P14.","P0 :- P8, not P10, not P15.","- P1 :- P6, not P10, not -P11.","- P2 :- - P1, not P3, not -P4.","- P3 :- P9, not -P12.","P4 :- P9, not -P12.","P5 :- - P2.","P6 :- P0, not -P12, not P13."],"noisy_rules":{"a":["- P7 :- not P0, P1, not -P2.","- P7 :- not -P2, P3."],"b":["- P12 :- - P7.","- P5 :- - P6, not P7."],"c":["P14 :- not -P1, - P5.","- P4 :- - P0, P2, P3."],"d":["P1 :- not -P2, - P4, - P16.","P10 :- - P0, - P17, not -P18."],"e":["P19 :- P20, not P21.","P22 :- P23."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_68_8_10_10_11_0.5_1.0_3_1_2","seed":68,"num_facts":12,"num_rules":11,"num_related_predicates":23,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5714285714285716,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" little_auk(\"Barbara\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["seabird(\"Barbara\").","china.","- auklet(\"Barbara\").","razorbill(\"Barbara\").","female_offspring.","- eurasia.","- covering_mattress(\"Barbara\").","- procellariiform_seabird.","- petrel.","dog_poop(\"Barbara\").","- bangladesh(\"Barbara\").","- cockroach(\"Barbara\")."],"noisy_facts":["- next_to_street(\"Jennifer\").","not_all_animals(\"Barbara\").","- capital(\"Barbara\").","- biped(\"Barbara\").","- metazoan(\"Barbara\")."],"min_fact_dicts_for_query":["seabird(\"Barbara\")."],"noiseless_rules":["- little_auk(V2) :- commissioned_military_officer(V2), not asia(V2), not cockroach(V2).","- auk(V2) :- seabird(V2), not auklet(V2), not -razorbill(V2).","commissioned_military_officer(V2) :- - subaltern(V2), not -object(V2), not -colonel(V2).","- subaltern(V2) :- - auk(V2), not -pelagic_bird(V2), not covering_mattress(V2).","- asia(V2) :- china, - bangladesh(V2).","- diving_petrel(V2) :- china, - bangladesh(V2).","fomite(V2) :- china, - bangladesh(V2).","pelagic_bird(V1) :- - diving_petrel(V1), not procellariiform_seabird, not petrel.","object(V1) :- fomite(V1), not -female_offspring, not eurasia.","lieutenant_colonel(V1) :- fomite(V1), not -female_offspring, not eurasia.","colonel(V2) :- lieutenant_colonel(V2), not -dog_poop(V2), not bangladesh(V2)."],"noisy_rules":{"a":["little_auk(V2) :- - colonel(V2).","little_auk(V2) :- diving_petrel(V1), - fomite(V1), - lieutenant_colonel(V2)."],"b":["bangladesh(V2) :- little_auk(V2).","auk(V2) :- - object(V2), little_auk(V2)."],"c":["- seabird(V2) :- auk(V2), diving_petrel(V1), - pelagic_bird(V2).","eurasia(V2) :- asia(V2), - fomite(V1)."],"d":["subaltern(V2) :- asia(V2), not capital(V2).","eurasia(V2) :- not_all_animals(V2)."],"e":["animal(V2) :- not metazoan(V2), - biped(V2).","- promised_land(V1) :- - next_to_street(V1)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_70_7_7_7_7_0.5_1.0_3_2_3","seed":70,"num_facts":10,"num_rules":8,"num_related_predicates":18,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.6666666666666667,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"forties(\"Chad\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["list(\"Chad\").","contraceptive(\"Chad\").","laughing_owl(\"Chad\", \"Michael\").","fasten(\"Chad\", \"Christopher\").","front_garden(\"Chad\", \"Christopher\").","lexicalized_concept(\"Chad\").","coating(\"Tracy\", \"Chad\").","post_oak(\"Chad\", \"Michael\").","high_rise(\"Chad\", \"Christopher\").","move_fast_in_water(\"Chad\", \"Christopher\")."],"noisy_facts":[],"min_fact_dicts_for_query":["list(\"Chad\").","contraceptive(\"Chad\").","laughing_owl(\"Chad\", \"Michael\").","fasten(\"Chad\", \"Christopher\").","front_garden(\"Chad\", \"Christopher\").","lexicalized_concept(\"Chad\").","coating(\"Tracy\", \"Chad\").","post_oak(\"Chad\", \"Michael\").","high_rise(\"Chad\", \"Christopher\").","move_fast_in_water(\"Chad\", \"Christopher\")."],"noiseless_rules":["forties(V1) :- medium(V3), riding_boot(V0, V1), yacht_club(V1, V3).","theme_park(V1, V2) :- list(V1), fasten(V1, V2), front_garden(V1, V2).","cracker(V1, V2) :- list(V1), fasten(V1, V2), front_garden(V1, V2).","medium(V3) :- art_galleries(V1, V3).","service_door(V1) :- contraceptive(V1), coating(V0, V1), post_oak(V1, V3).","art_galleries(V1, V1) :- theme_park(V1, V2), high_rise(V1, V2), move_fast_in_water(V1, V2).","riding_boot(V2, V1) :- cracker(V1, V2), service_door(V1), lexicalized_concept(V1).","yacht_club(V1, V3) :- laughing_owl(V1, V3)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_2_10_15_1_1_0.5_1.0_3_0_1","seed":2,"num_facts":4,"num_rules":16,"num_related_predicates":20,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.4444444444444446,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"hold_broth.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- nest.","- record.","- cake.","- soup."],"noisy_facts":["crabs.","polynya.","bar.","- surface.","- chicken."],"min_fact_dicts_for_query":["- cake."],"noiseless_rules":["hold_broth :- - toll_bridge, not -candy, not -colour.","- bird :- - nest, not soup.","bowl :- - nest, not soup.","- plate :- - record.","- toll_bridge :- - cake.","- eating :- - cake.","- sugar :- - cake.","candy :- - chocolate, not jelly_bean, not -hold_cream.","- chocolate :- - bird, not eating, not dinnerware.","- jelly_bean :- hold_mixed_nuts.","yellow :- hold_mixed_nuts.","colour :- yellow, not -white.","white :- - sugar.","hold_cream :- bowl, not plate.","- dinnerware :- bowl, not plate.","hold_mixed_nuts :- bowl, not plate."],"noisy_rules":{"a":["- hold_broth :- eating, - candy, chocolate.","- hold_broth :- - bowl."],"b":["jelly_bean :- not -jelly_bean, not hold_mixed_nuts, - hold_broth.","dinnerware :- - hold_broth."],"c":["sugar :- - candy, chocolate.","- bowl :- - hold_cream."],"d":["- white :- eating, not hold_cream, - chicken.","red :- - colour, not hold_mixed_nuts."],"e":["- drinking_establishment :- not -bar, polynya.","claws_to_pinch_things :- not -crabs, - surface."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_9_7_8_5_8_0.5_1.0_5_3_4","seed":9,"num_facts":9,"num_rules":9,"num_related_predicates":18,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"potato_salad(\"Mary\", \"Amy\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["having_beer(\"William\", \"Mark\", \"Mary\").","shell(\"Mark\", \"Richard\", \"Mary\").","wedding_band(\"Mark\", \"Richard\", \"Mary\").","scoffer(\"Richard\", \"Amy\").","mine_for_oil(\"Mary\", \"Amy\").","jewelry(\"Mary\", \"Amy\").","give_food(\"William\", \"Mark\", \"Mary\").","black_tailed_deer(\"Mark\", \"Mary\", \"Amy\").","hinny(\"Mark\", \"Richard\", \"Mary\")."],"noisy_facts":[],"min_fact_dicts_for_query":["having_beer(\"William\", \"Mark\", \"Mary\").","shell(\"Mark\", \"Richard\", \"Mary\").","wedding_band(\"Mark\", \"Richard\", \"Mary\").","scoffer(\"Richard\", \"Amy\").","mine_for_oil(\"Mary\", \"Amy\").","jewelry(\"Mary\", \"Amy\").","give_food(\"William\", \"Mark\", \"Mary\").","black_tailed_deer(\"Mark\", \"Mary\", \"Amy\").","hinny(\"Mark\", \"Richard\", \"Mary\")."],"noiseless_rules":["potato_salad(V3, V4) :- lamp(V0), tall_oil(V1, V3), big(V2, V4), shrub(V0, V3, V4).","lamp(V0) :- relistening(V0, V3), leverage(V0, V1, V3), hinny(V1, V2, V3).","relistening(V0, V3) :- leverage(V0, V1, V3), having_beer(V0, V1, V3).","prospector(V1, V1, V2) :- shell(V1, V2, V3), hinny(V1, V2, V3).","tall_oil(V1, V3) :- wedding_band(V1, V2, V3).","big(V2, V4) :- scoffer(V2, V4), mine_for_oil(V3, V4), jewelry(V3, V4), give_food(V0, V1, V3), black_tailed_deer(V1, V3, V4).","leverage(V0, V1, V3) :- scoffer(V2, V4), mine_for_oil(V3, V4), jewelry(V3, V4), give_food(V0, V1, V3), black_tailed_deer(V1, V3, V4).","brown_rice(V1, V2) :- scoffer(V2, V4), mine_for_oil(V3, V4), jewelry(V3, V4), give_food(V0, V1, V3), black_tailed_deer(V1, V3, V4).","shrub(V0, V3, V4) :- prospector(V0, V1, V4), brown_rice(V1, V2), mine_for_oil(V3, V4)."],"noisy_rules":{}},"num_min_facts_for_query":6,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_62_9_12_8_9_0.5_1.0_5_0_1","seed":62,"num_facts":11,"num_rules":13,"num_related_predicates":24,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":1.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P12.","target_query_in_answerset":false,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P13.","P14.","P15.","P16.","P17.","P18.","P19.","P20.","P21.","P22.","P23."],"noisy_facts":[],"min_fact_dicts_for_query":["P13.","P14.","P15.","P16.","P17.","P18.","P19.","P20.","P21.","P22.","P23."],"noiseless_rules":["P12 :- P0, P8, P9, P10, P11.","P0 :- P3.","P1 :- P3.","P2 :- P1.","P3 :- P13, P20, P21, P22, P23.","P4 :- P13, P20, P21, P22, P23.","P5 :- P13, P20, P21, P22, P23.","P6 :- P14, P16, P17, P18, P19.","P7 :- P14, P16, P17, P18, P19.","P8 :- P4.","P9 :- P5, P6, P18.","P10 :- P15.","P11 :- P2, P7."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_65_8_10_6_9_0.5_1.0_5_1_2","seed":65,"num_facts":8,"num_rules":11,"num_related_predicates":19,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5714285714285716,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"fruit(\"Andrew\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- safflower_seed.","selfish_person(\"Andrew\").","- back.","obtuseness.","- cereal_bowl.","shelter.","- plum(\"Andrew\").","acorn(\"Andrew\")."],"noisy_facts":["entering_building(\"Andrew\").","picture_book(\"Andrew\").","run(\"Thomas\").","- baboon(\"Andrew\").","novel(\"Andrew\").","cupule(\"Andrew\").","umbrella(\"Andrew\").","- pig(\"Thomas\").","- knell(\"Andrew\").","- binding(\"Andrew\")."],"min_fact_dicts_for_query":["selfish_person(\"Andrew\")."],"noiseless_rules":["fruit(V1) :- edible_fruit(V1), not seed(V1), not achene(V1), not -acorn(V1).","edible_fruit(V1) :- apple(V1), not berry(V1), not plum(V1), not -acorn(V1).","- samara(V1) :- - nut(V1), not safflower_seed.","- seed(V1) :- - nut(V1), not safflower_seed.","P3(V1) :- - nut(V1), not safflower_seed.","- achene(V2) :- - samara(V2), not back, not -obtuseness, not cereal_bowl, not -shelter.","- juniper_berry(V2) :- - samara(V2), not back, not -obtuseness, not cereal_bowl, not -shelter.","- nut(V1) :- selfish_person(V1).","apple(V1) :- - seed(V1), not nut(V1), not cooking_apple(V1).","- berry(V1) :- - juniper_berry(V1).","- cooking_apple(V0) :- P3(V0)."],"noisy_rules":{"a":["- fruit(V1) :- samara(V2), achene(V1), juniper_berry(V1), not -cooking_apple(V1).","- fruit(V1) :- not edible_fruit(V1), not -nut(V1), berry(V1)."],"b":["- apple(V1) :- - edible_fruit(V1), - fruit(V1).","- P3(V0) :- - P3(V0), achene(V1), not -berry(V1), not fruit(V1)."],"c":["safflower_seed(V1) :- - edible_fruit(V1), - P3(V0), cooking_apple(V1).","- edible_fruit(V1) :- not -achene(V1), - apple(V1)."],"d":["- acorn(V1) :- - edible_fruit(V1), not -achene(V1), not -berry(V1), not -cupule(V1), not knell(V1).","seal(V1) :- - edible_fruit(V1), - baboon(V1)."],"e":["book(V1) :- novel(V1), umbrella(V1), not -picture_book(V1), entering_building(V1), - binding(V1).","- fast_walk(V2) :- run(V2), not pig(V2)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_69_7_6_3_4_0.5_1.0_3_0_1","seed":69,"num_facts":6,"num_rules":7,"num_related_predicates":13,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.8333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"pests.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["new_years_eve.","little_auk.","disturbance.","share_toy.","- thrall.","- fill."],"noisy_facts":["healer.","- provincial_capital.","insignia.","razor_edge.","owl.","squeaker.","- parrot.","material."],"min_fact_dicts_for_query":["new_years_eve."],"noiseless_rules":["pests :- camp.","- crosswalk :- new_years_eve.","camp :- step, not honk.","step :- - honk, not stuff.","- honk :- - crosswalk, not -sofa_hide_bed.","sofa_hide_bed :- little_auk, not fill.","- stuff :- disturbance, not -share_toy, not thrall."],"noisy_rules":{"a":["- pests :- crosswalk, not camp, stuff.","- pests :- honk, not sofa_hide_bed."],"b":["- new_years_eve :- - pests.","- sofa_hide_bed :- - camp, not pests."],"c":["fill :- stuff.","- new_years_eve :- - sofa_hide_bed."],"d":["mahdist :- honk, owl, - parrot.","thrall :- - step, not -insignia."],"e":["give :- razor_edge, not -healer.","- pool :- - provincial_capital, not -squeaker, material."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_14_9_9_4_5_0.5_1.0_3_0_1","seed":14,"num_facts":9,"num_rules":10,"num_related_predicates":19,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.375,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P9.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P10.","P11.","P12.","P13.","- P14.","- P15.","- P16.","- P17.","- P18."],"noisy_facts":["P21.","- P24.","P20.","- P25.","P23.","P26."],"min_fact_dicts_for_query":["- P10."],"noiseless_rules":["- P9 :- P0, not P3, not P18.","P0 :- - P10, not -P11.","- P1 :- - P10, not -P11.","P2 :- P11.","- P3 :- - P1, not -P4, not P7.","P4 :- P6, not -P8.","P5 :- P12, not P15, not P16.","P6 :- P13.","- P7 :- P2, not -P5, not P17.","P8 :- - P14."],"noisy_rules":{"a":["P9 :- - P8.","P9 :- - P4, not P5, not P8."],"b":["- P13 :- P1, not P6, not -P9.","- P12 :- - P8, P9."],"c":["- P0 :- - P2.","- P2 :- - P5."],"d":["P19 :- - P5, P20.","P3 :- P1, not -P21."],"e":["P22 :- P23.","- P27 :- - P24, - P25, P26."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_57_8_9_7_10_0.5_1.0_5_0_1","seed":57,"num_facts":9,"num_rules":10,"num_related_predicates":19,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.5714285714285716,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"limb.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- poker.","printed_paper.","- value.","emblem.","- kite.","black_oak.","- storage.","sing.","stalinist."],"noisy_facts":["creative.","lifting_things.","- quarto.","clock.","war.","- atmosphere.","- phragmocone.","- muskellunge.","- having_parties.","night.","going_to_pub.","- lappet_caterpillar."],"min_fact_dicts_for_query":["printed_paper."],"noiseless_rules":["limb :- - abrachia, not lore.","- water_plants :- - poker, not value, not -emblem, not kite, not -black_oak.","thread :- - poker, not value, not -emblem, not kite, not -black_oak.","- hinges :- - water_plants, not shout, not -bowl.","- bicycles :- thread, not storage, not -sing, not -stalinist.","- shout :- thread, not storage, not -sing, not -stalinist.","bowl :- - bicycles.","- abrachia :- printed_paper.","- lore :- - hinges, not -women_clothing, not -printed_paper.","women_clothing :- - shout, not -printed_paper."],"noisy_rules":{"a":["- limb :- shout, lore.","- limb :- - bowl, not -lore."],"b":["storage :- - limb.","- printed_paper :- not -hinges, bicycles, shout, not women_clothing, - limb."],"c":["water_plants :- - thread, not -hinges, bicycles, not -abrachia.","abrachia :- - women_clothing."],"d":["- printed_paper :- abrachia, lore, - phragmocone, creative.","- black_oak :- bicycles, going_to_pub."],"e":["- important_person :- not -clock, night, war, not having_parties, - atmosphere.","- executive_council :- - muskellunge, not -lifting_things, - quarto, - lappet_caterpillar."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_18_10_13_6_9_0.5_1.0_3_0_1","seed":18,"num_facts":9,"num_rules":14,"num_related_predicates":23,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.7777777777777777,"num_noise_rules_per_type":2,"num_rules_with_default_negation":13,"target_query":"mac.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["hyperplasia.","- moo.","- skimmer.","- jerky.","ford.","- radio.","- makeup.","flower.","- street_address."],"noisy_facts":["- toy_ball.","- dictionary.","comedian.","legging.","- convenience.","- mourning_cloak.","- smell_things.","- christian_holiday."],"min_fact_dicts_for_query":["- moo."],"noiseless_rules":["mac :- - quack_quack, not vegetation, not street_address.","reference_book :- short_ribs, not -scene, not jerky.","dinner_bell :- hyperplasia, not jerky.","american_copper :- hyperplasia, not jerky.","getting_to_know_more_people :- hyperplasia, not jerky.","short_ribs :- - moo, not -ford, not radio.","- barnstormer :- dinner_bell, not jerky.","- minnow :- dinner_bell, not jerky.","- quack_quack :- reference_book, not barnstormer, not -brown.","scene :- american_copper, not minnow, not amazon.","- vegetation :- play.","brown :- - skimmer, not makeup, not -flower.","- amazon :- getting_to_know_more_people, not minnow.","play :- getting_to_know_more_people, not minnow."],"noisy_rules":{"a":["- mac :- quack_quack.","- mac :- - dinner_bell."],"b":["- dinner_bell :- - reference_book, - mac.","- play :- - mac."],"c":["radio :- barnstormer.","moo :- - short_ribs, minnow."],"d":["street_address :- - play, not dictionary.","- play :- - getting_to_know_more_people, not scene, not toy_ball."],"e":["taret_organ :- - mourning_cloak, not -legging, not smell_things.","- money :- - convenience, not -comedian, not christian_holiday."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_81_5_6_6_8_0.5_1.0_5_1_2","seed":81,"num_facts":9,"num_rules":7,"num_related_predicates":16,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"product(\"Elizabeth\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["juniper_berry(\"Elizabeth\").","nest(\"Elizabeth\").","- bears(\"Elizabeth\").","- squirrel(\"Elizabeth\").","sheep(\"Elizabeth\").","bear(\"Elizabeth\").","flea(\"Elizabeth\").","- tiger_cub(\"Elizabeth\").","- bell_sheep(\"Elizabeth\")."],"noisy_facts":["- human_cells(\"Elizabeth\").","- fox(\"Elizabeth\").","seal(\"Elizabeth\").","prairie_dog(\"Deanna\").","- medallion(\"Elizabeth\").","throbbing(\"Elizabeth\").","- blowing_things_up(\"Elizabeth\").","leopard(\"Elizabeth\").","- beaver(\"Elizabeth\").","- ermine(\"Elizabeth\").","- marmot(\"Deanna\").","P28(\"Deanna\")."],"min_fact_dicts_for_query":["juniper_berry(\"Elizabeth\")."],"noiseless_rules":["product(V2) :- - wool(V2), not shepherd(V2), not -egg(V2), not fur(V2).","- wool(V2) :- - find_outside(V2), not -egg(V2), not -attack_people(V2).","- shepherd(V2) :- juniper_berry(V2), not tiger_cub(V2), not bell_sheep(V2).","- find_outside(V2) :- juniper_berry(V2), not tiger_cub(V2), not bell_sheep(V2).","egg(V2) :- nest(V2), not -sheep(V2).","- fur(V2) :- - bears(V2), not squirrel(V2), not -sheep(V2), not -bear(V2), not -flea(V2).","attack_people(V2) :- - bears(V2), not squirrel(V2), not -sheep(V2), not -bear(V2), not -flea(V2)."],"noisy_rules":{"a":["- product(V2) :- not -wool(V2), shepherd(V2), not -find_outside(V2), not egg(V2), not attack_people(V2).","- product(V2) :- shepherd(V2), not -find_outside(V2), - attack_people(V2)."],"b":["find_outside(V2) :- not -shepherd(V2), - egg(V2), not product(V2).","bell_sheep(V2) :- shepherd(V2), find_outside(V2), - egg(V2), - attack_people(V2), - product(V2)."],"c":["- sheep(V2) :- not -wool(V2), not -shepherd(V2), not -find_outside(V2), - attack_people(V2).","squirrel(V2) :- not -find_outside(V2), - attack_people(V2)."],"d":["squirrel(V2) :- not -wool(V2), not -shepherd(V2), - human_cells(V2), not blowing_things_up(V2).","- sheep(V2) :- not -shepherd(V2), not medallion(V2), throbbing(V2)."],"e":["P20(V2) :- not fox(V2), leopard(V2), not -seal(V2), - beaver(V2), - ermine(V2).","- rodent(V1) :- prairie_dog(V1), - marmot(V1), P28(V1)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_71_10_12_11_14_0.5_1.0_3_0_1","seed":71,"num_facts":15,"num_rules":13,"num_related_predicates":28,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":13,"target_query":"P12.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P13.","- P14.","- P15.","- P16.","P17.","- P18.","- P19.","- P20.","- P21.","P22.","- P23.","- P24.","P25.","P26.","P27."],"noisy_facts":["- P30.","P31.","- P28.","P34.","- P29."],"min_fact_dicts_for_query":["- P15."],"noiseless_rules":["P12 :- - P4, not P6, not -P9.","P0 :- P13, not P24, not -P25.","- P1 :- P7, not -P26, not -P27.","P2 :- P7, not -P26, not -P27.","- P3 :- - P14, not P19, not P20.","- P4 :- - P15, not -P17, not P18.","- P5 :- - P15, not -P17, not P18.","- P6 :- - P1, not P8, not P10.","P7 :- - P5, not P21, not -P22.","- P8 :- - P5, not P21, not -P22.","P9 :- P0, not P3, not P16.","- P10 :- P2, not -P11, not P19.","P11 :- P0, not P3, not P23."],"noisy_rules":{"a":["- P12 :- P5.","- P12 :- P4, not -P5, not P7."],"b":["P20 :- P5, not -P6, not P12.","P20 :- not P2, - P9, - P12."],"c":["P14 :- - P2, P8, - P9.","- P13 :- not -P3, P10."],"d":["- P9 :- not P0, P6, - P28.","P14 :- not -P3, - P29."],"e":["P32 :- - P30, not -P31.","P33 :- P34."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_18_4_3_1_3_0.5_1.0_5_2_3","seed":18,"num_facts":3,"num_rules":4,"num_related_predicates":7,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.3333333333333333,"num_noise_rules_per_type":2,"num_rules_with_default_negation":3,"target_query":"endangered_species(\"Sherry\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":2,"asp_program_dlv2":{"noiseless_facts":["hypodermis(\"David\", \"Sherry\").","- man(\"David\", \"Sherry\").","- irish_setter(\"David\", \"Sherry\")."],"noisy_facts":["payed_with_mastercard(\"David\", \"Sherry\").","- sell_beer(\"Sherry\", \"Kelly\").","dustpan(\"Kelly\").","ruff(\"Sherry\").","yolk(\"Sherry\").","black_backed_gull(\"Joe\", \"Sherry\").","aileron(\"Joe\", \"David\").","- gouda(\"Joe\", \"Sherry\")."],"min_fact_dicts_for_query":["hypodermis(\"David\", \"Sherry\").","- man(\"David\", \"Sherry\")."],"noiseless_rules":["endangered_species(V2) :- merit_badge(V2), green_pea_soup(V0, V2).","merit_badge(V2) :- hypodermis(V1, V2), not irish_setter(V1, V2).","green_pea_soup(V1, V2) :- guide_blind_person(V1, V2), not irish_setter(V1, V2).","guide_blind_person(V1, V2) :- - man(V1, V2), not irish_setter(V1, V2)."],"noisy_rules":{"a":["- endangered_species(V2) :- - merit_badge(V2), - green_pea_soup(V0, V2).","- endangered_species(V2) :- - merit_badge(V2), - green_pea_soup(V0, V2), - guide_blind_person(V1, V2)."],"b":["- guide_blind_person(V1, V2) :- - guide_blind_person(V1, V2), - endangered_species(V2).","- green_pea_soup(V2, V2) :- not merit_badge(V2), - endangered_species(V2)."],"c":["- green_pea_soup(V1, V2) :- - merit_badge(V2), - guide_blind_person(V1, V2).","irish_setter(V1, V2) :- - green_pea_soup(V0, V2), - guide_blind_person(V1, V2)."],"d":["man(V1, V2) :- - merit_badge(V2), - green_pea_soup(V0, V2), - guide_blind_person(V1, V2), not gouda(V0, V2).","- guide_blind_person(V2, V2) :- - merit_badge(V2), - green_pea_soup(V0, V2), black_backed_gull(V0, V2)."],"e":["- athapaskan(V1, V2) :- ruff(V2), not -yolk(V2), aileron(V0, V1), payed_with_mastercard(V1, V2).","- gill(V3) :- dustpan(V3), - sell_beer(V2, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_24_10_12_5_6_0.5_1.0_5_0_1","seed":24,"num_facts":9,"num_rules":13,"num_related_predicates":22,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" firetrap.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["two_ears.","- standing.","- wipe.","oscine.","departmental_highway.","- plainness.","- birth_anniversary.","- mate.","- marble."],"noisy_facts":[],"min_fact_dicts_for_query":["two_ears."],"noiseless_rules":["- firetrap :- restaurant, not granules, not grenade.","- gauze :- current_events, not whiskey_neat, not -domestic_sheep.","birthday_parties :- two_ears.","dining_area :- two_ears.","current_events :- birthday_parties, not -short.","restaurant :- - gauze, not executive_branch, not marble.","- granules :- hoofed_mammals_oink, not -short.","hoofed_mammals_oink :- - standing.","- grenade :- - wipe.","- whiskey_neat :- - wipe.","- executive_branch :- oscine.","domestic_sheep :- dining_area, not -departmental_highway, not plainness, not birth_anniversary, not mate.","short :- dining_area, not -departmental_highway, not plainness, not birth_anniversary, not mate."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_81_9_13_5_6_0.5_1.0_3_2_3","seed":81,"num_facts":7,"num_rules":14,"num_related_predicates":21,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"region(\"Heather\", \"Patrick\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- space(\"Heather\", \"Patrick\").","- book_bag(\"Heather\", \"Matthew\").","pogonion(\"Heather\", \"Patrick\").","- base(\"Heather\", \"Patrick\").","- safety(\"Heather\", \"Patrick\").","no_mans_land(\"Heather\", \"Patrick\").","asthenosphere(\"Heather\", \"Patrick\")."],"noisy_facts":["- nucleus(\"Heather\", \"Patrick\").","harness_horse(\"Matthew\", \"Patrick\").","- getting_up_early(\"Victor\", \"Patrick\")."],"min_fact_dicts_for_query":["- space(\"Heather\", \"Patrick\").","- book_bag(\"Heather\", \"Matthew\").","asthenosphere(\"Heather\", \"Patrick\")."],"noiseless_rules":["region(V1, V3) :- - side(V1, V3), - layer(V2, V3), not -area(V2, V3).","- side(V1, V3) :- - bottom(V1, V3), not -shell(V1, V3).","- bottom(V1, V3) :- heel(V3), underbelly(V1, V3), not base(V1, V3).","- cowboy_boot(V1, V3) :- - space(V1, V3).","bootlace(V1, V3) :- - space(V1, V3).","- layer(V2, V3) :- - book_bag(V1, V2), asthenosphere(V1, V3).","bag(V1, V2) :- - book_bag(V1, V2), asthenosphere(V1, V3).","heel(V3) :- - layer(V2, V3), not -compartment(V2, V3).","underbelly(V1, V3) :- - cowboy_boot(V1, V3), not gammon(V1, V3), not -pogonion(V1, V3).","area(V3, V3) :- bootlace(V1, V3), not safety(V1, V3), not -no_mans_land(V1, V3).","- gammon(V1, V3) :- bootlace(V1, V3), not safety(V1, V3), not -no_mans_land(V1, V3).","- boot(V1, V3) :- bootlace(V1, V3), not safety(V1, V3), not -no_mans_land(V1, V3).","shell(V1, V3) :- bag(V1, V2), - boot(V2, V3).","compartment(V2, V3) :- bag(V1, V2), - boot(V2, V3)."],"noisy_rules":{"a":["- region(V1, V3) :- - bag(V1, V2), not underbelly(V1, V3), - area(V2, V3).","- region(V1, V3) :- - underbelly(V1, V3)."],"b":["- shell(V1, V3) :- - bootlace(V1, V3), - region(V1, V3).","base(V1, V3) :- - region(V1, V3)."],"c":["boot(V1, V3) :- cowboy_boot(V1, V3), not bootlace(V1, V3), - heel(V3).","space(V1, V3) :- layer(V2, V3), - bag(V1, V2), not compartment(V2, V3)."],"d":["- underbelly(V1, V3) :- - bootlace(V1, V3).","layer(V3, V3) :- - underbelly(V1, V3)."],"e":["cell(V1, V3) :- - nucleus(V1, V3).","- allowing_extra_time(V0, V2) :- - getting_up_early(V0, V3), harness_horse(V2, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_0_8_12_3_5_0.5_1.0_5_0_1","seed":0,"num_facts":4,"num_rules":13,"num_related_predicates":17,"max_depth_of_rule_graph":7,"average_depth_of_rule_graph":4.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"bills.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["fire.","- adana.","seyhan.","two_tires."],"noisy_facts":["- propeller.","- ab_crunches.","- steam.","- adult.","scapular.","play_chess."],"min_fact_dicts_for_query":["fire."],"noiseless_rules":["bills :- - hot, not turkey, not -peanut.","- hot :- - heat, not chick.","hotness :- - heat, not chick.","- heat :- fire.","- burn_things :- fire.","tigris :- hotness, not heat, not burn_things.","- chick :- - soup.","euphrates :- - soup.","- turkey :- tigris, not -euphrates, not aegospotami, not adana, not -seyhan.","- aegospotami :- - burn_things.","- front :- - burn_things.","peanut :- - front, not -two_tires.","- soup :- - front, not -two_tires."],"noisy_rules":{"a":["- bills :- aegospotami.","- bills :- heat, not tigris, chick, not -aegospotami."],"b":["burn_things :- - tigris, not -chick, - bills.","- seyhan :- - bills."],"c":["adana :- hot.","- seyhan :- - tigris, aegospotami, not -front, - peanut."],"d":["hot :- heat, aegospotami, not -soup, not steam.","- seyhan :- soup."],"e":["- vichyssoise :- scapular, not adult, not propeller, not -play_chess.","- capsule :- - ab_crunches."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_0_4_4_1_3_0.5_1.0_3_1_2","seed":0,"num_facts":2,"num_rules":5,"num_related_predicates":7,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"playing_card(\"Charles\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":2,"asp_program_dlv2":{"noiseless_facts":["- part_in_acrimonious_ways(\"Charles\").","lobster_stew(\"Charles\")."],"noisy_facts":["service(\"Greg\").","- kentucky(\"Charles\").","- cross_over_body_of_water(\"George\").","- cotton(\"Charles\").","- home_room(\"George\").","jamaican_dollar(\"Charles\")."],"min_fact_dicts_for_query":["- part_in_acrimonious_ways(\"Charles\")."],"noiseless_rules":["playing_card(V1) :- - sing(V1), not -lobster_stew(V1).","- sing(V1) :- united_states(V1), not crash(V1).","united_states(V1) :- - part_in_acrimonious_ways(V1), not -lobster_stew(V1).","- cracked_wheat_bread(V1) :- - part_in_acrimonious_ways(V1), not -lobster_stew(V1).","- crash(V1) :- united_states(V1), not cracked_wheat_bread(V1)."],"noisy_rules":{"a":["- playing_card(V1) :- sing(V1), crash(V1).","- playing_card(V1) :- - united_states(V1), crash(V1)."],"b":["sing(V1) :- - playing_card(V1).","sing(V1) :- sing(V1), not playing_card(V1)."],"c":["crash(V1) :- sing(V1), not united_states(V1).","part_in_acrimonious_ways(V1) :- sing(V1)."],"d":["cracked_wheat_bread(V1) :- not -sing(V1), - united_states(V1), not -jamaican_dollar(V1).","- lobster_stew(V1) :- not united_states(V1), not kentucky(V1), - cotton(V1)."],"e":["- thick_skin(V0) :- - cross_over_body_of_water(V0), - home_room(V0).","tuareg(V2) :- service(V2)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_58_5_5_2_4_0.5_1.0_5_0_1","seed":58,"num_facts":3,"num_rules":6,"num_related_predicates":9,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" noodle.","target_query_in_answerset":false,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["craniometric_point.","umbilical_cord.","getting_attention."],"noisy_facts":[],"min_fact_dicts_for_query":["craniometric_point.","umbilical_cord.","getting_attention."],"noiseless_rules":["noodle :- snuffle, required_course.","rattle :- craniometric_point, umbilical_cord, getting_attention.","socializing_with_friends_or_family :- craniometric_point, umbilical_cord, getting_attention.","fib :- rattle.","snuffle :- socializing_with_friends_or_family, craniometric_point.","required_course :- rattle, fib."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_90_7_8_2_4_0.5_1.0_3_3_4","seed":90,"num_facts":5,"num_rules":9,"num_related_predicates":14,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" nest(\"Matthew\", \"Joshua\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- lighter(\"Matthew\", \"Joshua\", \"Steven\").","- cod_liver_oil(\"Matthew\", \"Felicia\", \"Joshua\").","- egg(\"Felicia\", \"Joshua\", \"James\").","- sheep(\"Felicia\", \"Joshua\").","bird(\"Felicia\", \"Joshua\")."],"noisy_facts":["shortener(\"Matthew\", \"Joshua\", \"James\").","- principal(\"Felicia\", \"Joshua\", \"James\").","wool(\"Felicia\", \"Joshua\").","- bill(\"Felicia\", \"Joshua\", \"James\").","chemical_element(\"Matthew\", \"Joshua\", \"Steven\").","act(\"Felicia\", \"Joshua\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- nest(V0, V2) :- - oval(V0, V2, V3), - torture(V1, V3, V4).","burning(V2) :- - lighter(V0, V2, V4).","- change_of_integrity(V1, V2, V3) :- - cod_liver_oil(V0, V1, V2), - egg(V1, V2, V3).","- oval(V2, V2, V3) :- execution(V1, V2, V3), not egg(V1, V2, V3).","yolk(V2, V2, V3) :- execution(V1, V2, V3), not egg(V1, V2, V3).","- chicken(V1, V2) :- execution(V1, V2, V3), not egg(V1, V2, V3).","execution(V1, V2, V3) :- burning(V2), - change_of_integrity(V1, V2, V3).","- torture(V1, V3, V3) :- yolk(V0, V2, V3), execution(V1, V2, V3), not animal(V0, V2, V3).","- animal(V2, V2, V2) :- - chicken(V1, V2), not sheep(V1, V2), not -bird(V1, V2)."],"noisy_rules":{"a":["nest(V2, V2) :- change_of_integrity(V1, V2, V3).","nest(V0, V2) :- - yolk(V0, V2, V3), not execution(V1, V2, V3), torture(V1, V3, V4)."],"b":["change_of_integrity(V2, V2, V3) :- oval(V0, V2, V3), nest(V0, V2).","- bird(V1, V2) :- change_of_integrity(V1, V2, V3), nest(V0, V2)."],"c":["change_of_integrity(V1, V2, V3) :- - burning(V2), - execution(V1, V2, V3), animal(V0, V2, V3).","torture(V1, V3, V2) :- - burning(V2), - execution(V1, V2, V3), animal(V0, V2, V3)."],"d":["sheep(V1, V2) :- chicken(V1, V2), torture(V1, V3, V4), wool(V1, V2).","torture(V0, V3, V3) :- oval(V0, V2, V3), not -shortener(V0, V2, V3)."],"e":["substance(V2) :- chemical_element(V0, V2, V4).","- legal_document(V1, V2, V3) :- act(V1, V2), - bill(V1, V2, V3), not principal(V1, V2, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_24_10_10_4_5_0.5_1.0_5_1_2","seed":24,"num_facts":9,"num_rules":11,"num_related_predicates":20,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P10(\"Jerry\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P11(\"Jessica\").","- P12.","P13(\"Jerry\").","- P14(\"Jerry\").","- P15(\"Jerry\").","P16.","P17.","- P18.","- P19."],"noisy_facts":["P30(\"Jessica\").","- P28(\"Jessica\").","- P27(\"Jessica\").","- P24(\"Jessica\").","P25(\"Jessica\").","P20(\"Jerry\").","- P29(\"Jessica\").","P21(\"Jerry\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["P10(V2) :- P3(V2), not -P4(V2), not -P6(V2).","- P0(V2) :- P2(V2), not P8(V2).","P1(V0) :- P11(V0).","P2(V0) :- P11(V0), not P12.","P3(V2) :- - P0(V2), not P7(V2).","P4(V2) :- - P5(V2), not P9(V2).","- P5(V2) :- P13(V2).","P6(V2) :- - P14(V2).","- P7(V2) :- - P15(V2).","- P8(V0) :- P1(V0), not -P16, not -P17, not P18, not P19.","- P9(V0) :- P1(V0), not -P16, not -P17, not P18, not P19."],"noisy_rules":{"a":["- P10(V2) :- - P1(V0), - P2(V2), not P3(V2), not -P9(V2).","- P10(V2) :- P7(V2)."],"b":["- P17(V2) :- - P10(V2).","P9(V2) :- - P1(V0), not P4(V2), P7(V2), - P10(V2)."],"c":["- P6(V2) :- P5(V2).","- P3(V2) :- not P2(V2), not P4(V2), P7(V2)."],"d":["- P4(V2) :- - P6(V2), P20(V2).","P22(V2) :- not P3(V2), not P4(V2), not P6(V2), P8(V2), not -P21(V2)."],"e":["P23(V0) :- not P24(V0), P25(V0).","P26(V0) :- - P27(V0), not P28(V0), not P29(V0), not -P30(V0)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_50_9_14_10_11_0.5_1.0_3_3_4","seed":50,"num_facts":12,"num_rules":15,"num_related_predicates":27,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"cloth_covering(\"Christina\", \"Donna\", \"William\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["camshaft(\"Donna\", \"Martin\").","- ladder_back(\"Christina\", \"Donna\", \"Jason\").","think_critically(\"Donna\", \"Jason\", \"Martin\").","shore_boulder(\"Christina\").","- river_boulder(\"Christina\").","electric_blanket(\"Christina\", \"Donna\", \"Jason\").","security_blanket(\"Christina\", \"Donna\", \"Jason\").","- horse(\"Christina\", \"Donna\", \"William\").","clock(\"Christina\", \"Jason\", \"Martin\").","bone(\"William\", \"Jason\", \"Martin\").","wheelchair(\"Christina\", \"Donna\", \"Martin\").","- leg(\"Donna\", \"William\", \"Martin\")."],"noisy_facts":["feelings(\"William\").","raising_metabolism(\"Christina\", \"Jason\", \"Martin\").","knight(\"Christina\", \"Donna\", \"Martin\").","event(\"Christina\", \"Jason\", \"Martin\").","detonator(\"Christina\", \"Jason\", \"Martin\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["cloth_covering(V0, V1, V2) :- rock(V2), bedclothes(V0, V2, V3), think_critically(V1, V3, V4).","rock(V2) :- - boulder(V0, V2), people(V2, V3), - steeplechaser(V1, V3, V4).","- mattress_cover(V2, V3, V4) :- camshaft(V1, V4), clock(V0, V3, V4), bone(V2, V3, V4).","- glacial_boulder(V0) :- camshaft(V1, V4), clock(V0, V3, V4), bone(V2, V3, V4).","chair(V1, V4) :- - ladder_back(V0, V1, V3), wheelchair(V0, V1, V4), - leg(V1, V2, V4).","mackinaw(V0, V1, V3) :- - ladder_back(V0, V1, V3), wheelchair(V0, V1, V4), - leg(V1, V2, V4).","cot(V0, V1, V2) :- - ladder_back(V0, V1, V3), wheelchair(V0, V1, V4), - leg(V1, V2, V4).","bedclothes(V3, V2, V3) :- - mattress_cover(V2, V3, V4), not quilt(V2, V3, V4), not -blanket(V2, V3, V4).","- boulder(V0, V0) :- - glacial_boulder(V0), not -shore_boulder(V0), not river_boulder(V0).","- quilt(V0, V0, V0) :- - glacial_boulder(V0), not -shore_boulder(V0), not river_boulder(V0).","- poll(V0, V0, V0) :- - glacial_boulder(V0), not -shore_boulder(V0), not river_boulder(V0).","people(V4, V3) :- chair(V1, V4), - aquarium(V0, V3, V4), not -clock(V0, V3, V4).","blanket(V3, V3, V0) :- mackinaw(V0, V1, V3), not -electric_blanket(V0, V1, V3), not -security_blanket(V0, V1, V3).","- steeplechaser(V1, V3, V4) :- cot(V0, V1, V2), - poll(V0, V3, V4), not horse(V0, V1, V2).","- aquarium(V0, V3, V4) :- cot(V0, V1, V2), - poll(V0, V3, V4), not horse(V0, V1, V2)."],"noisy_rules":{"a":["- cloth_covering(V2, V1, V2) :- - rock(V2), steeplechaser(V1, V3, V4).","- cloth_covering(V0, V0, V0) :- aquarium(V0, V3, V4)."],"b":["river_boulder(V0) :- - bedclothes(V0, V2, V3), - cloth_covering(V0, V1, V2).","leg(V1, V2, V4) :- not cot(V0, V1, V2), poll(V0, V3, V4), - cloth_covering(V0, V1, V2)."],"c":["horse(V0, V1, V2) :- mattress_cover(V2, V3, V4), poll(V0, V3, V4), steeplechaser(V1, V3, V4).","- cot(V3, V4, V2) :- not -mattress_cover(V2, V3, V4), quilt(V2, V3, V4), - people(V2, V3)."],"d":["river_boulder(V0) :- - chair(V1, V4), poll(V0, V3, V4), detonator(V0, V3, V4).","- cot(V2, V2, V2) :- - rock(V2), not -feelings(V2)."],"e":["ballpoint_pen(V1, V4) :- knight(V0, V1, V4), raising_metabolism(V0, V3, V4).","gymnastics(V0, V3) :- event(V0, V3, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_64_6_5_3_5_0.5_1.0_5_1_2","seed":64,"num_facts":6,"num_rules":6,"num_related_predicates":12,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" rice_rat(\"Susan\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["- daughter(\"Ryan\").","- flare(\"Ryan\").","- hundred.","throw(\"Ryan\").","gelignite(\"Ryan\").","eupnea(\"Ryan\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- rice_rat(V1) :- believe_in_god(V1), not fly_aeroplane(V1).","large_flying_vehicles(V2) :- - empty(V2).","believe_in_god(V2) :- large_flying_vehicles(V2), not -impeller(V2), not -eupnea(V2).","impeller(V2) :- - daughter(V2).","- empty(V2) :- - flare(V2), not -throw(V2), not -gelignite(V2), not -eupnea(V2).","- fly_aeroplane(V2) :- impeller(V2), not hundred."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_20_10_15_12_14_0.5_1.0_5_2_3","seed":20,"num_facts":15,"num_rules":16,"num_related_predicates":31,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" bark(\"Charles\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["table(\"Charles\").","branches(\"Charles\", \"Zachary\").","trepan(\"Tonya\", \"Charles\").","cats(\"Tonya\", \"Zachary\").","- spy(\"Tonya\", \"Zachary\").","- swing_set(\"Tonya\", \"Zachary\").","- piece_of_furniture(\"Tonya\", \"Zachary\").","door(\"Charles\", \"Zachary\").","hitting(\"Charles\", \"Zachary\").","- stick(\"Charles\", \"Zachary\").","forest(\"Charles\", \"Zachary\").","home(\"Tonya\", \"Charles\").","house(\"Tonya\", \"Charles\").","- gland(\"Christopher\", \"Charles\").","undercoat(\"Charles\", \"Zachary\")."],"noisy_facts":["- speed(\"Christopher\", \"Charles\").","- metropolis(\"Tonya\", \"Zachary\").","great_dane(\"Tonya\", \"Christopher\").","servant(\"Tonya\", \"Zachary\").","girdle(\"Tonya\", \"Charles\").","plate(\"Charles\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- bark(V2) :- - tree(V2), flying(V0, V1), wood(V0, V2), - hunt_mice(V0, V3).","- tree(V2) :- nest(V2), - flea(V0, V2).","flying(V0, V1) :- domestic(V3), - bird(V0, V1), not -living(V0, V3).","nest(V2) :- table(V2), cats(V0, V3), not -door(V2, V3).","- room(V2, V3) :- table(V2), cats(V0, V3), not -door(V2, V3).","wood(V2, V2) :- branches(V2, V3), not -door(V2, V3), not -hitting(V2, V3), not stick(V2, V3), not -forest(V2, V3).","- dog(V3) :- branches(V2, V3), not -door(V2, V3), not -hitting(V2, V3), not stick(V2, V3), not -forest(V2, V3).","dogs(V2, V3) :- branches(V2, V3), not -door(V2, V3), not -hitting(V2, V3), not stick(V2, V3), not -forest(V2, V3).","growing(V3, V3) :- branches(V2, V3), not -door(V2, V3), not -hitting(V2, V3), not stick(V2, V3), not -forest(V2, V3).","domestic(V0) :- - dog(V0).","animal(V0, V0) :- - dog(V0).","cat(V0, V0) :- - dog(V0).","- bird(V0, V3) :- dogs(V0, V3).","- flea(V0, V2) :- trepan(V0, V2), - gland(V1, V2), undercoat(V2, V3).","living(V0, V3) :- - room(V2, V3), growing(V0, V3), not -animal(V0, V2), not -home(V0, V2), not -house(V0, V2).","- hunt_mice(V0, V3) :- cat(V1, V3), cats(V0, V3), not spy(V0, V3), not swing_set(V0, V3), not piece_of_furniture(V0, V3)."],"noisy_rules":{"a":["bark(V2) :- not -tree(V2), not wood(V0, V2), not -dog(V0), - dogs(V0, V3), flea(V0, V2).","bark(V2) :- - wood(V0, V2), - dogs(V0, V3)."],"b":["- branches(V2, V3) :- tree(V2), not -room(V2, V3), - domestic(V3), bark(V2).","- animal(V0, V2) :- - growing(V0, V3), - cat(V1, V3), bird(V0, V1), bark(V2)."],"c":["- dogs(V0, V3) :- not animal(V0, V2), flea(V0, V2), - living(V0, V3).","- hitting(V3, V3) :- - living(V0, V3)."],"d":["- table(V2) :- - nest(V2), plate(V2).","- domestic(V3) :- not -tree(V2), room(V2, V3), hunt_mice(V0, V3), servant(V0, V3)."],"e":["- coexistence(V1) :- great_dane(V0, V1), - speed(V1, V2).","- band(V2, V3) :- girdle(V0, V2), - metropolis(V0, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_22_9_11_3_6_0.5_1.0_5_3_4","seed":22,"num_facts":7,"num_rules":12,"num_related_predicates":19,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P11(\"Andrew\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["- P12(\"Nathan\", \"Patricia\", \"Andrew\").","P13(\"Ashley\", \"Andrew\").","- P14(\"Ashley\", \"Sarah\", \"Andrew\").","P15(\"Ashley\", \"Patricia\", \"Sarah\").","P16(\"Sarah\", \"Andrew\").","- P17(\"Nathan\", \"Patricia\", \"Andrew\").","- P18(\"Ashley\", \"Patricia\", \"Sarah\")."],"noisy_facts":["- P23(\"Ashley\", \"Patricia\", \"Sarah\").","- P22(\"Nathan\", \"Sarah\", \"Andrew\").","- P25(\"Nathan\", \"Andrew\").","P26(\"Nathan\", \"Ashley\", \"Sarah\").","- P20(\"Nathan\", \"Patricia\", \"Andrew\").","- P19(\"Nathan\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- P11(V4) :- P7(V2), P8(V0, V2, V4), - P9(V1, V2, V3), not P10(V1, V2, V4).","P0(V0) :- - P12(V0, V2, V4).","P1(V0, V2, V4) :- - P12(V0, V2, V4).","P2(V0, V1) :- P3(V0, V1).","P3(V0, V1) :- P13(V1, V4), P16(V3, V4), - P17(V0, V2, V4), not P18(V1, V2, V3).","P4(V1, V3, V4) :- P13(V1, V4), P16(V3, V4), - P17(V0, V2, V4), not P18(V1, V2, V3).","- P5(V4, V3, V4) :- P4(V1, V3, V4), not P14(V1, V3, V4).","P6(V4) :- P4(V1, V3, V4), not P14(V1, V3, V4).","P7(V2) :- P0(V0), P4(V1, V3, V4), - P5(V0, V2, V4), not P17(V0, V2, V4).","P8(V0, V1, V1) :- P2(V0, V1), not -P3(V0, V1), not -P6(V0).","- P9(V1, V2, V3) :- P15(V1, V2, V3).","- P10(V0, V2, V4) :- P1(V0, V2, V4)."],"noisy_rules":{"a":["P11(V4) :- - P3(V0, V1), P5(V0, V2, V4), P9(V1, V2, V3).","P11(V2) :- - P0(V0), not P2(V0, V1), - P3(V0, V1), - P6(V0), P9(V1, V2, V3)."],"b":["P10(V0, V2, V4) :- P5(V0, V2, V4), not -P11(V4).","- P16(V3, V4) :- - P1(V0, V2, V4), - P3(V0, V1), P9(V1, V2, V3), not -P10(V1, V2, V4), not -P11(V4)."],"c":["- P2(V0, V1) :- - P1(V0, V2, V4), - P8(V0, V2, V4), P10(V1, V2, V4).","P17(V0, V2, V4) :- - P0(V0), - P6(V0), - P8(V0, V2, V4)."],"d":["P12(V0, V0, V0) :- - P6(V0), not P19(V0).","- P0(V0) :- - P1(V0, V2, V4), not P7(V2), - P8(V0, V2, V4), - P20(V0, V2, V4)."],"e":["- P21(V0) :- - P22(V0, V3, V4), - P23(V1, V2, V3).","P24(V3, V4) :- - P25(V0, V4), P26(V0, V1, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_26_8_11_11_11_0.5_1.0_3_3_4","seed":26,"num_facts":13,"num_rules":12,"num_related_predicates":25,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" hymenopterous_insect(\"Allison\", \"Victor\", \"Brent\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["thruway(\"Dean\", \"Allison\").","vermicide(\"Dean\", \"Chelsea\", \"Victor\").","toe_box(\"Dean\", \"Chelsea\", \"Brent\").","source_of_food_for_people(\"Allison\", \"Chelsea\", \"Brent\").","yellow_and_blue(\"Allison\", \"Victor\", \"Brent\").","space(\"Allison\").","lepidopterous_insect(\"Chelsea\", \"Victor\", \"Brent\").","broadbill(\"Chelsea\", \"Victor\", \"Brent\").","overlay(\"Chelsea\", \"Victor\").","include_meat(\"Dean\", \"Chelsea\", \"Brent\").","flour(\"Dean\", \"Chelsea\", \"Brent\").","writer(\"Dean\", \"Chelsea\", \"Brent\").","reflex(\"Allison\", \"Chelsea\", \"Victor\")."],"noisy_facts":[],"min_fact_dicts_for_query":["thruway(\"Dean\", \"Allison\").","vermicide(\"Dean\", \"Chelsea\", \"Victor\").","toe_box(\"Dean\", \"Chelsea\", \"Brent\").","source_of_food_for_people(\"Allison\", \"Chelsea\", \"Brent\").","yellow_and_blue(\"Allison\", \"Victor\", \"Brent\").","space(\"Allison\").","lepidopterous_insect(\"Chelsea\", \"Victor\", \"Brent\").","broadbill(\"Chelsea\", \"Victor\", \"Brent\").","overlay(\"Chelsea\", \"Victor\").","include_meat(\"Dean\", \"Chelsea\", \"Brent\").","flour(\"Dean\", \"Chelsea\", \"Brent\").","writer(\"Dean\", \"Chelsea\", \"Brent\").","reflex(\"Allison\", \"Chelsea\", \"Victor\")."],"noiseless_rules":["hymenopterous_insect(V1, V3, V4) :- hand_brake(V1, V3), american_shrew_mole(V0, V1, V3), iraq(V0, V1, V4).","hand_brake(V1, V3) :- tavern(V1, V3, V4), storage_devices(V1, V3, V4), yellow_and_blue(V1, V3, V4).","animal_group(V1) :- tavern(V1, V3, V4), storage_devices(V1, V3, V4), yellow_and_blue(V1, V3, V4).","tavern(V1, V3, V4) :- thruway(V0, V1), overlay(V2, V3), include_meat(V0, V2, V4).","rooms(V0, V2, V4) :- thruway(V0, V1), overlay(V2, V3), include_meat(V0, V2, V4).","american_shrew_mole(V0, V1, V3) :- vermicide(V0, V2, V3), toe_box(V0, V2, V4), source_of_food_for_people(V1, V2, V4).","storage_devices(V1, V3, V4) :- inside(V2, V4), cranberry_sauce(V0, V1, V4), reflex(V1, V2, V3).","iraq(V1, V1, V1) :- animal_group(V1), shoulder_bag(V1), space(V1).","inside(V2, V4) :- rooms(V0, V2, V4), flour(V0, V2, V4), writer(V0, V2, V4).","shoulder_bag(V0) :- rooms(V0, V2, V4), flour(V0, V2, V4), writer(V0, V2, V4).","fried_rice(V2, V0, V4) :- rooms(V0, V2, V4), flour(V0, V2, V4), writer(V0, V2, V4).","cranberry_sauce(V4, V4, V4) :- fried_rice(V2, V3, V4), lepidopterous_insect(V2, V3, V4), broadbill(V2, V3, V4)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_30_10_12_8_11_0.5_1.0_5_3_4","seed":30,"num_facts":12,"num_rules":13,"num_related_predicates":25,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":1.8888888888888888,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P12(\"Joel\", \"Peter\", \"Kathryn\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P13(\"Joel\", \"Travis\", \"Kathryn\").","P14(\"Peter\", \"Christopher\", \"Kathryn\").","- P15(\"Joel\", \"Peter\", \"Christopher\").","- P16(\"Joel\", \"Travis\", \"Kathryn\").","P17(\"Peter\", \"Christopher\", \"Kathryn\").","- P18(\"Peter\", \"Christopher\", \"Kathryn\").","P19(\"Peter\", \"Christopher\", \"Kathryn\").","P20(\"Peter\", \"Christopher\", \"Kathryn\").","P21(\"Joel\").","- P22(\"Joel\", \"Peter\", \"Christopher\").","- P23(\"Joel\").","P24(\"Joel\", \"Peter\", \"Christopher\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- P12(V0, V1, V4) :- - P4(V0), - P9(V0), P10(V0), - P11(V0, V3, V4), P14(V1, V2, V4).","- P0(V4) :- - P11(V0, V3, V4), not -P13(V0, V3, V4).","P1(V4, V4, V3) :- - P11(V0, V3, V4), not -P13(V0, V3, V4).","P2(V1, V1, V2) :- P14(V1, V2, V4), not -P17(V1, V2, V4), not P18(V1, V2, V4), not -P19(V1, V2, V4), not -P20(V1, V2, V4).","- P3(V2, V4, V4) :- P14(V1, V2, V4), not -P17(V1, V2, V4), not P18(V1, V2, V4), not -P19(V1, V2, V4), not -P20(V1, V2, V4).","- P4(V0) :- P2(V0, V1, V2), not -P6(V0, V1, V2), not -P8(V0, V1, V2), not P22(V0, V1, V2).","P5(V4) :- - P0(V4).","P6(V0, V1, V2) :- - P15(V0, V1, V2).","P7(V0, V1, V2) :- - P15(V0, V1, V2).","P8(V0, V1, V2) :- P1(V1, V2, V3), P5(V0), not -P21(V0), not P22(V0, V1, V2), not P23(V0).","- P9(V4) :- - P3(V2, V3, V4).","P10(V0) :- P7(V0, V1, V2), not -P24(V0, V1, V2).","- P11(V0, V3, V4) :- - P16(V0, V3, V4)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_68_10_14_9_12_0.5_1.0_5_2_3","seed":68,"num_facts":13,"num_rules":15,"num_related_predicates":28,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" P14(\"Gerald\", \"Christopher\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P15(\"Leah\", \"Raven\").","- P16(\"Leah\", \"Christopher\").","- P17(\"Leah\", \"Christopher\").","- P18(\"Christopher\", \"Raven\").","- P19(\"Christopher\", \"Raven\").","P20(\"Christopher\", \"Raven\").","P21(\"Christopher\", \"Raven\").","- P22(\"Christopher\", \"Raven\").","- P23(\"Christopher\", \"Raven\").","- P24(\"Christopher\", \"Raven\").","- P25(\"Christopher\", \"Raven\").","P26(\"Christopher\", \"Raven\").","- P27(\"Christopher\", \"Raven\")."],"noisy_facts":["P28(\"Leah\", \"Christopher\").","- P31(\"Gerald\", \"Raven\").","P33(\"Christopher\", \"Raven\").","- P30(\"Raven\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- P14(V1, V2) :- - P0(V0, V1), - P1(V0, V2), - P8(V0, V3), not P10(V1, V2), not -P11(V2, V3).","- P0(V0, V1) :- P2(V0, V2), P3(V1, V2), P12(V2, V3).","- P1(V0, V2) :- - P15(V0, V3), - P27(V2, V3).","P2(V0, V2) :- - P15(V0, V3), - P27(V2, V3).","P3(V1, V2) :- - P4(V0), - P7(V0, V2), - P13(V1, V3), not P19(V2, V3).","- P4(V0) :- - P1(V0, V2), not P16(V0, V2).","- P5(V2, V0) :- - P1(V0, V2), not P16(V0, V2).","- P6(V3, V3) :- - P5(V2, V3), not P23(V2, V3), not P24(V2, V3), not P25(V2, V3), not -P26(V2, V3).","- P7(V0, V2) :- P9(V0, V2).","- P8(V0, V3) :- - P6(V0, V3).","P9(V0, V0) :- - P6(V0, V3).","- P10(V0, V2) :- P2(V0, V2), not P17(V0, V2).","P11(V2, V3) :- - P18(V2, V3), not P19(V2, V3), not -P20(V2, V3), not -P21(V2, V3), not P22(V2, V3).","P12(V2, V3) :- - P18(V2, V3), not P19(V2, V3), not -P20(V2, V3), not -P21(V2, V3), not P22(V2, V3).","- P13(V3, V3) :- - P18(V2, V3), not P19(V2, V3), not -P20(V2, V3), not -P21(V2, V3), not P22(V2, V3)."],"noisy_rules":{"a":["P14(V3, V2) :- P6(V0, V3), - P11(V2, V3).","P14(V2, V2) :- P7(V0, V2), - P12(V2, V3)."],"b":["- P11(V2, V1) :- P14(V1, V2).","- P26(V2, V3) :- - P12(V2, V3), P14(V1, V2)."],"c":["P24(V2, V3) :- P6(V0, V3), P7(V0, V2), - P9(V0, V2), not P12(V2, V3).","P4(V2) :- - P12(V2, V3)."],"d":["P22(V2, V0) :- P7(V0, V2).","- P3(V2, V2) :- - P9(V0, V2), not -P28(V0, V2)."],"e":["P29(V1, V3) :- not P30(V3), - P31(V1, V3).","- P32(V2, V3) :- P33(V2, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_85_9_14_8_9_0.5_1.0_5_2_3","seed":85,"num_facts":11,"num_rules":15,"num_related_predicates":26,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"traveling_faster(\"Stacy\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["wing(\"Hunter\", \"Alison\").","- duck(\"Alison\", \"Stacy\").","eggs(\"Alison\", \"Stacy\").","tahiti(\"Alison\", \"Stacy\").","- shoulders(\"Alison\", \"Stacy\").","rooster(\"Alison\").","- airport(\"Hunter\", \"Tasha\").","- bird(\"Alison\", \"Tasha\").","wings(\"Tasha\", \"Stacy\").","- bat(\"Tasha\", \"Stacy\").","- hire(\"Alison\", \"Stacy\")."],"noisy_facts":["- mug(\"Hunter\", \"Stacy\").","stroma(\"Alison\", \"Stacy\").","nymphalid(\"Alison\", \"Tasha\").","first_class_travel(\"Alison\", \"Stacy\").","- dark_eyed_junco(\"Hunter\", \"Stacy\").","cheviot(\"Alison\", \"Stacy\").","danaid(\"Hunter\", \"Alison\").","fontanelle(\"Hunter\", \"Alison\")."],"min_fact_dicts_for_query":["wing(\"Hunter\", \"Alison\").","- duck(\"Alison\", \"Stacy\").","- airport(\"Hunter\", \"Tasha\").","- bird(\"Alison\", \"Tasha\").","wings(\"Tasha\", \"Stacy\")."],"noiseless_rules":["traveling_faster(V3) :- airplanes(V1), flying(V1), - chicken(V1), feathers(V1, V3).","airplanes(V1) :- wing(V0, V1), - airport(V0, V2), - bird(V1, V2), wings(V2, V3), not bat(V2, V3).","flying(V1) :- wing(V0, V1), - airport(V0, V2), - bird(V1, V2), wings(V2, V3), not bat(V2, V3).","birds(V0, V2) :- wing(V0, V1), - airport(V0, V2), - bird(V1, V2), wings(V2, V3), not bat(V2, V3).","- registrar(V3) :- wing(V0, V1), - airport(V0, V2), - bird(V1, V2), wings(V2, V3), not bat(V2, V3).","- flapping(V3) :- wing(V0, V1), - airport(V0, V2), - bird(V1, V2), wings(V2, V3), not bat(V2, V3).","- chicken(V1) :- flying(V1), not -egg(V1), not employee(V1), not -hen(V1), not -rooster(V1).","egg(V3) :- - nest(V3).","- home(V3, V3) :- - nest(V3).","feathers(V1, V3) :- - duck(V1, V3).","- nest(V3) :- - duck(V1, V3).","- tollkeeper(V2, V2) :- birds(V0, V2).","- chick(V1, V3) :- eggs(V1, V3).","- employee(V1) :- - registrar(V3), - tollkeeper(V1, V3), not hire(V1, V3).","hen(V1) :- - flapping(V3), - home(V2, V3), - chick(V1, V3), not -tahiti(V1, V3), not shoulders(V1, V3)."],"noisy_rules":{"a":["- traveling_faster(V3) :- chick(V1, V3).","- traveling_faster(V3) :- - birds(V0, V2), chick(V1, V3)."],"b":["- airplanes(V3) :- - traveling_faster(V3).","- eggs(V3, V3) :- nest(V3), not traveling_faster(V3)."],"c":["- wing(V3, V3) :- flapping(V3), not -nest(V3).","- feathers(V1, V3) :- - birds(V0, V2), registrar(V3), chicken(V1)."],"d":["- tahiti(V1, V3) :- flapping(V3), tollkeeper(V1, V3), not -first_class_travel(V1, V3).","- wing(V1, V1) :- tollkeeper(V1, V3), cheviot(V1, V3)."],"e":["butterfly(V0, V2) :- danaid(V0, V1), nymphalid(V1, V2).","- pledge(V3) :- not -fontanelle(V0, V1), not mug(V0, V3), - dark_eyed_junco(V0, V3), stroma(V1, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_40_9_12_9_11_0.5_1.0_3_1_2","seed":40,"num_facts":12,"num_rules":13,"num_related_predicates":25,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":" afternoon(\"Kendra\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["starfish.","- metropolis(\"Kendra\").","corncob(\"Edwin\").","being_army_company_commander(\"Kendra\").","- miniature_poodle.","crow(\"Kendra\").","- stage_direction(\"Kendra\").","- baby_rooster(\"Kendra\").","- bok_choy(\"Edwin\").","- itch_mite(\"Edwin\").","- tank(\"Kendra\").","falsehood(\"Kendra\")."],"noisy_facts":["beryl(\"Kendra\").","urubupunga(\"Kendra\").","- fricassee(\"Edwin\").","- birds(\"Kendra\").","- coffee_mug(\"Kendra\")."],"min_fact_dicts_for_query":["starfish.","falsehood(\"Kendra\")."],"noiseless_rules":["- afternoon(V1) :- - destroy(V1), not tree_rat(V1), not -salt_meal(V1).","- destroy(V1) :- starfish, falsehood(V1).","let_fall(V1) :- starfish, falsehood(V1).","gesture(V0) :- let_fall(V0), not metatarsal(V0), not miniature_poodle.","- tree_rat(V1) :- actor(V1), not guitar(V1), not -salt_meal(V1).","actor(V1) :- getting_even(V1), not gliding_joint(V1), not -being_army_company_commander(V1).","getting_even(V1) :- - metropolis(V1), not tank(V1), not -falsehood(V1).","- bedclothes(V1) :- - metropolis(V1), not tank(V1), not -falsehood(V1).","- river_dolphin(V1) :- - metropolis(V1), not tank(V1), not -falsehood(V1).","- guitar(V1) :- gesture(V1), not bedclothes(V1), not -crow(V1).","salt_meal(V1) :- - river_dolphin(V1), not stage_direction(V1), not baby_rooster(V1).","- gliding_joint(V1) :- - river_dolphin(V1), not stage_direction(V1), not baby_rooster(V1).","- metatarsal(V0) :- corncob(V0), not bok_choy(V0), not itch_mite(V0)."],"noisy_rules":{"a":["afternoon(V1) :- not gesture(V1), not -river_dolphin(V1), - salt_meal(V1).","afternoon(V1) :- guitar(V1)."],"b":["metropolis(V1) :- afternoon(V1).","guitar(V1) :- metatarsal(V0), afternoon(V1)."],"c":["- actor(V1) :- - salt_meal(V1).","gliding_joint(V1) :- destroy(V1)."],"d":["miniature_poodle(V1) :- tree_rat(V1), not actor(V1), - coffee_mug(V1).","river_dolphin(V1) :- - getting_even(V1), not -urubupunga(V1)."],"e":["- lolita(V1) :- not -beryl(V1), - birds(V1).","oak(V0) :- - fricassee(V0)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_87_9_10_3_5_0.5_1.0_3_2_3","seed":87,"num_facts":7,"num_rules":11,"num_related_predicates":18,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" P10(\"Makayla\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P11(\"Jamie\", \"Marissa\").","- P12.","- P13(\"Makayla\").","- P14(\"Catherine\", \"Makayla\").","- P15(\"Catherine\", \"Jamie\").","P16(\"Jamie\", \"Makayla\").","- P17(\"Jamie\")."],"noisy_facts":["P18(\"Makayla\").","- P22(\"Makayla\", \"Marissa\").","P24(\"Jamie\", \"Makayla\").","P21(\"Jamie\", \"Marissa\").","- P19."],"min_fact_dicts_for_query":[],"noiseless_rules":["- P10(V2) :- P0(V2), - P4(V0, V1), not -P9(V1, V2).","P0(V2) :- - P1(V1, V3), - P3(V2, V3).","- P1(V1, V3) :- P11(V1, V3).","P2(V1) :- P11(V1, V3).","- P3(V1, V1) :- P2(V1), not P12.","- P4(V0, V1) :- P5(V0, V1).","P5(V1, V1) :- P2(V1), not P6(V1), not P17(V1).","- P6(V1) :- - P13(V2), - P15(V0, V1), not -P16(V1, V2).","- P7(V0, V2) :- - P13(V2), - P15(V0, V1), not -P16(V1, V2).","P8(V0, V2) :- - P14(V0, V2).","P9(V2, V2) :- - P7(V0, V2), not -P8(V0, V2), not P13(V2)."],"noisy_rules":{"a":["P10(V2) :- - P2(V1), - P8(V0, V2).","P10(V2) :- - P0(V2), P7(V0, V2)."],"b":["P15(V0, V1) :- - P5(V0, V1), P10(V2).","- P2(V1) :- - P2(V1), - P5(V0, V1), P10(V2)."],"c":["P13(V2) :- P4(V0, V1), - P5(V0, V1), - P9(V1, V2).","- P8(V1, V2) :- P1(V1, V3), P6(V1), - P9(V1, V2)."],"d":["- P9(V2, V2) :- - P0(V2), P18(V2).","P14(V1, V1) :- P6(V1), - P19."],"e":["- P20(V3) :- P21(V1, V3), - P22(V2, V3).","P23(V1) :- P24(V1, V2)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_89_9_11_10_13_0.5_1.0_3_3_4","seed":89,"num_facts":13,"num_rules":12,"num_related_predicates":25,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"P11(\"Eric\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P12(\"Melanie\").","- P13(\"Marissa\", \"Melanie\", \"Latoya\").","P14(\"Melanie\", \"Eric\", \"Oscar\").","P15(\"Oscar\").","- P16(\"Melanie\", \"Latoya\", \"Oscar\").","P17(\"Eric\", \"Latoya\", \"Oscar\").","- P18(\"Marissa\", \"Melanie\", \"Latoya\").","P19(\"Eric\", \"Latoya\", \"Oscar\").","P20(\"Eric\", \"Oscar\").","P21(\"Eric\", \"Oscar\").","P22(\"Marissa\", \"Melanie\", \"Latoya\").","- P23(\"Marissa\", \"Melanie\", \"Oscar\").","- P24(\"Marissa\", \"Melanie\", \"Latoya\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["P11(V2) :- P3(V0, V1, V2), P8(V0, V1, V3), not P18(V0, V1, V3).","- P0(V0, V2, V4) :- P6(V0, V3), - P10(V0, V2, V4), not -P19(V2, V3, V4).","- P1(V4) :- P12(V1), P22(V0, V1, V3), - P23(V0, V1, V4).","P2(V1, V4) :- P12(V1), P22(V0, V1, V3), - P23(V0, V1, V4).","P3(V0, V1, V3) :- - P13(V0, V1, V3), not -P22(V0, V1, V3), not P24(V0, V1, V3).","- P4(V0) :- - P13(V0, V1, V3), not -P22(V0, V1, V3), not P24(V0, V1, V3).","P5(V1, V3) :- - P13(V0, V1, V3), not -P22(V0, V1, V3), not P24(V0, V1, V3).","P6(V4, V4) :- - P1(V4), not P4(V4), not -P15(V4).","P7(V1, V2) :- P14(V1, V2, V4), - P16(V1, V3, V4), not -P17(V2, V3, V4).","P8(V0, V1, V1) :- - P0(V0, V2, V4), P2(V1, V4), not P9(V0, V2, V4).","- P9(V4, V2, V4) :- P5(V2, V4), not -P20(V2, V4), not -P21(V2, V4).","- P10(V1, V2, V4) :- P5(V2, V4), P7(V1, V2), P19(V2, V3, V4)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_31_9_12_9_10_0.5_1.0_3_2_3","seed":31,"num_facts":12,"num_rules":13,"num_related_predicates":25,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":" fruit_fly(\"Jordan\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["position(\"Jordan\").","nymphalid(\"Jordan\", \"Ryan\").","mother_cell(\"Ryan\").","septation(\"Jordan\", \"Michelle\").","- australia(\"Ryan\", \"Michelle\").","dipterous_insect(\"Jordan\").","- moth(\"Ryan\").","cell_wall(\"Ryan\").","sticktight(\"Jordan\", \"John\").","danaid(\"Jordan\", \"John\").","pierid(\"Jordan\", \"John\").","- antarctic_ocean(\"Ryan\", \"John\")."],"noisy_facts":["electric_blanket(\"Jordan\", \"John\").","- mackinaw(\"Jordan\", \"Michelle\").","- article_in_magazine(\"Jordan\", \"John\").","start(\"Ryan\", \"Michelle\").","- lie(\"Jordan\", \"Ryan\").","woodcraft(\"Jordan\", \"Michelle\").","- afghan(\"Jordan\")."],"min_fact_dicts_for_query":["position(\"Jordan\").","nymphalid(\"Jordan\", \"Ryan\").","septation(\"Jordan\", \"Michelle\").","- australia(\"Ryan\", \"Michelle\").","danaid(\"Jordan\", \"John\")."],"noiseless_rules":["- fruit_fly(V0) :- - wing(V0, V1), learn_new_informaton(V1, V3), not insect(V1, V3).","- wing(V0, V1) :- position(V0), septation(V0, V2), - australia(V1, V2).","lymantriid(V0, V3) :- - cell(V1), plant_cell(V0, V1), - getting(V0, V3).","flea(V0) :- lymantriid(V0, V3), not cat_flea(V0, V3), not -sticktight(V0, V3).","- cat_flea(V0, V3) :- nymphalid(V0, V1), danaid(V0, V3), not -pierid(V0, V3).","- butterfly(V1) :- nymphalid(V0, V1), danaid(V0, V3), not -pierid(V0, V3).","- grow(V1, V3) :- nymphalid(V0, V1), danaid(V0, V3), not -pierid(V0, V3).","learn_new_informaton(V1, V1) :- - butterfly(V1), not -mother_cell(V1).","- cell(V1) :- - butterfly(V1), not -mother_cell(V1).","- insect(V0, V0) :- flea(V0), not -lepidopterous_insect(V0), not -dipterous_insect(V0).","plant_cell(V1, V1) :- - butterfly(V1), not moth(V1), not -cell_wall(V1).","lepidopterous_insect(V1) :- - butterfly(V1), not moth(V1), not -cell_wall(V1).","- getting(V1, V3) :- - grow(V1, V3), not antarctic_ocean(V1, V3)."],"noisy_rules":{"a":["fruit_fly(V1) :- cell(V1).","fruit_fly(V0) :- - lepidopterous_insect(V0)."],"b":["- dipterous_insect(V0) :- fruit_fly(V0).","antarctic_ocean(V0, V0) :- fruit_fly(V0)."],"c":["cell(V1) :- - plant_cell(V0, V1).","moth(V3) :- - lymantriid(V0, V3)."],"d":["- learn_new_informaton(V3, V3) :- not -cat_flea(V0, V3), - article_in_magazine(V0, V3).","- position(V0) :- not -wing(V0, V1), - lie(V0, V1)."],"e":["- chatelaine(V1) :- woodcraft(V0, V2), start(V1, V2).","blanket(V2) :- - afghan(V0), - mackinaw(V0, V2), electric_blanket(V0, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_69_7_7_3_6_0.5_1.0_3_1_2","seed":69,"num_facts":6,"num_rules":8,"num_related_predicates":14,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.8333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"dress_herself(\"Allison\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["relative(\"Joyce\").","write_on(\"Joyce\").","dougout(\"Allison\").","- jirga(\"Allison\").","- ant(\"Joyce\").","raceway(\"Allison\")."],"noisy_facts":["orange(\"Allison\").","formalwear.","- ephemera(\"Joyce\").","pheasant(\"Joyce\").","half_crown(\"Joyce\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["dress_herself(V2) :- comb_out(V2), not -antiquity(V2), not jirga(V2).","- berth(V0) :- - machiavellian(V0), not -relative(V0), not ant(V0).","comb_out(V2) :- - placing_chess_pieces_on(V2), not -raceway(V2).","antiquity(V2) :- dust_bag(V2), not -cleavage(V2), not -dougout(V2).","- placing_chess_pieces_on(V2) :- dust_bag(V2), not -cleavage(V2), not -dougout(V2).","dust_bag(V0) :- - berth(V0), not machiavellian(V0), not ant(V0).","- machiavellian(V0) :- write_on(V0).","cleavage(V2) :- dougout(V2)."],"noisy_rules":{"a":["- dress_herself(V2) :- berth(V0), - comb_out(V2), not cleavage(V2).","- dress_herself(V2) :- placing_chess_pieces_on(V2), not cleavage(V2)."],"b":["- cleavage(V2) :- - dress_herself(V2).","- dust_bag(V2) :- - comb_out(V2), not dress_herself(V2)."],"c":["ant(V0) :- machiavellian(V0).","- cleavage(V2) :- - dust_bag(V2)."],"d":["undercharge(V2) :- machiavellian(V0), - cleavage(V2), not -formalwear.","jirga(V2) :- not cleavage(V2), orange(V2)."],"e":["- form_of_transportation(V0) :- half_crown(V0).","- stove(V0) :- not -pheasant(V0), - ephemera(V0)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_36_10_14_12_15_0.5_1.0_5_2_3","seed":36,"num_facts":16,"num_rules":15,"num_related_predicates":31,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"P14(\"Eric\", \"Michael\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P15(\"Eric\").","P16(\"Eric\", \"Michelle\").","P17(\"Eric\", \"Arthur\").","P18(\"Eric\", \"Arthur\").","- P19(\"Arthur\").","- P20(\"Michael\").","P21(\"Eric\", \"Michael\").","- P22(\"Arthur\", \"Michael\").","- P23(\"Eric\", \"Michelle\").","P24(\"Eric\", \"Michelle\").","P25(\"Eric\").","P26(\"Eric\").","- P27(\"Eric\").","- P28(\"Eric\", \"Arthur\").","P29(\"Arthur\", \"Michelle\").","- P30(\"Arthur\", \"Michelle\")."],"noisy_facts":["P32(\"Eric\", \"Arthur\").","P37(\"Eric\").","P31(\"Eric\", \"Michael\").","P39(\"Eric\", \"Arthur\").","P33(\"Eric\", \"Arthur\").","- P35(\"Eric\", \"Michael\").","- P38(\"Eric\")."],"min_fact_dicts_for_query":["P15(\"Eric\").","- P19(\"Arthur\").","- P20(\"Michael\").","P25(\"Eric\").","P26(\"Eric\").","- P27(\"Eric\").","- P28(\"Eric\", \"Arthur\")."],"noiseless_rules":["P14(V0, V2) :- P3(V0), - P19(V1), - P20(V2), not -P21(V0, V2), not P22(V1, V2).","P0(V0) :- P15(V0), P25(V0), P26(V0), - P27(V0), - P28(V0, V1).","- P1(V0, V1) :- P15(V0), P25(V0), P26(V0), - P27(V0), - P28(V0, V1).","- P2(V1) :- P15(V0), P25(V0), P26(V0), - P27(V0), - P28(V0, V1).","P3(V0) :- P0(V0), not -P5(V0), not P9(V0).","P4(V0) :- - P1(V0, V1), not P6(V0, V1), not -P8(V0, V1), not -P12(V0, V1).","P5(V0) :- - P7(V0), - P11(V0, V2), P13(V0, V3), not P23(V0, V3), not -P24(V0, V3).","- P6(V0, V3) :- P13(V0, V3), not -P16(V0, V3).","- P7(V0) :- P13(V0, V3), not -P16(V0, V3).","P8(V0, V3) :- P13(V0, V3), not -P16(V0, V3).","- P9(V0) :- - P2(V1), P8(V0, V1), not -P25(V0).","P10(V0, V1) :- - P2(V1), P8(V0, V1), not -P25(V0).","- P11(V0, V2) :- P4(V2), P10(V0, V2).","P12(V0, V1) :- P17(V0, V1).","P13(V0, V3) :- P18(V0, V1), P29(V1, V3), not P30(V1, V3)."],"noisy_rules":{"a":["- P14(V0, V1) :- P2(V1), not P5(V0), - P8(V0, V1), - P13(V0, V3).","- P14(V0, V1) :- P1(V0, V1)."],"b":["- P0(V0) :- - P8(V0, V1), - P14(V0, V2).","- P4(V2) :- not P0(V0), - P8(V0, V1), - P10(V0, V2), not -P11(V0, V2), not P14(V0, V2)."],"c":["- P25(V0) :- P1(V0, V1), not P4(V2), P9(V0), P11(V0, V2).","- P29(V0, V2) :- P11(V0, V2)."],"d":["P23(V0, V2) :- P11(V0, V2), not -P31(V0, V2).","P6(V0, V1) :- - P8(V0, V1), P11(V0, V2), P32(V0, V1), P33(V0, V1)."],"e":["P34(V0) :- - P35(V0, V2).","- P36(V1) :- P37(V0), - P38(V0), P39(V0, V1)."]}},"num_min_facts_for_query":7,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_9_9_14_5_7_0.5_1.0_3_3_4","seed":9,"num_facts":8,"num_rules":15,"num_related_predicates":23,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"sheikdom(\"Cody\", \"Candace\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- stew(\"Angela\", \"Aaron\").","- bathrooms(\"Angela\", \"Jonathan\", \"Cody\").","- cylinder(\"Aaron\", \"Jonathan\", \"Candace\").","- medium(\"Aaron\", \"Cody\", \"Candace\").","- opening_business(\"Angela\", \"Jonathan\", \"Cody\").","- energid(\"Aaron\", \"Jonathan\", \"Candace\").","- habit(\"Aaron\", \"Candace\").","- ambulance(\"Aaron\", \"Candace\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["sheikdom(V3, V4) :- - subdivision(V0, V1, V3), powder_and_shot(V0, V1, V3), taxiway(V0, V2, V4).","- electromyography(V1, V4) :- - stew(V0, V1), - energid(V1, V2, V4).","- west_sussex(V0, V4) :- - stew(V0, V1), - energid(V1, V2, V4).","- subdivision(V0, V1, V3) :- steak(V4), sea_weed(V0, V3), - medium(V1, V3, V4).","- anachronism(V4, V4) :- - electromyography(V1, V4), not habit(V1, V4), not ambulance(V1, V4).","- scat(V1, V4, V4) :- - electromyography(V1, V4), not habit(V1, V4), not ambulance(V1, V4).","lac(V4, V1, V1) :- - electromyography(V1, V4), not habit(V1, V4), not ambulance(V1, V4).","powder_and_shot(V2, V2, V3) :- - anachronism(V2, V3), not -mandolin(V2, V3), not not_all_mammals(V2, V3).","steak(V3) :- - anachronism(V2, V3), not -mandolin(V2, V3), not not_all_mammals(V2, V3).","mandolin(V2, V3) :- - bathrooms(V0, V2, V3).","governador_valadares(V2, V3) :- - bathrooms(V0, V2, V3).","sea_weed(V4, V3) :- - scat(V1, V2, V4), governador_valadares(V2, V3), not -pea_flour(V1, V2, V4).","- not_all_mammals(V2, V3) :- - west_sussex(V0, V4), lac(V0, V2, V3), not opening_business(V0, V2, V3).","taxiway(V1, V2, V4) :- - cylinder(V1, V2, V4), not energid(V1, V2, V4), not habit(V1, V4).","pea_flour(V1, V2, V4) :- - cylinder(V1, V2, V4), not energid(V1, V2, V4), not habit(V1, V4)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_84_8_11_4_4_0.5_1.0_3_2_3","seed":84,"num_facts":6,"num_rules":12,"num_related_predicates":18,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P11(\"David\", \"Jaclyn\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P12(\"David\", \"Tammy\").","P13(\"Casey\", \"Tammy\").","P14.","P15(\"Jaclyn\", \"Casey\").","- P16(\"Casey\", \"Tammy\").","P17(\"Jaclyn\", \"Casey\")."],"noisy_facts":["- P19(\"David\", \"Tammy\").","P24(\"David\", \"Tammy\").","- P18.","P23(\"David\", \"Casey\").","- P20(\"David\", \"Tammy\").","P25(\"David\", \"Tammy\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["P11(V0, V1) :- - P2(V0, V3), - P5(V0, V3), P10(V1, V3).","- P0(V0) :- P3(V0, V2), - P8(V2, V3).","P1(V0) :- P7(V0, V2).","- P2(V0, V3) :- - P12(V0, V3), P15(V1, V2), not P16(V2, V3).","P3(V0, V2) :- - P12(V0, V3), P15(V1, V2), not P16(V2, V3).","- P4(V3) :- - P12(V0, V3), P15(V1, V2), not P16(V2, V3).","- P5(V3, V3) :- - P4(V3), P9(V2, V3), not -P14.","- P6(V3, V2) :- - P4(V3), P9(V2, V3), not -P14.","P7(V2, V2) :- - P6(V1, V2), not -P17(V1, V2).","- P8(V2, V3) :- P13(V2, V3).","P9(V2, V3) :- P13(V2, V3).","P10(V0, V0) :- - P0(V0), not -P1(V0)."],"noisy_rules":{"a":["- P11(V0, V3) :- P0(V0), P4(V3), - P7(V0, V2).","- P11(V0, V0) :- P5(V0, V3), P8(V2, V3)."],"b":["- P10(V1, V3) :- - P9(V2, V3), - P11(V0, V1).","- P17(V1, V1) :- - P11(V0, V1)."],"c":["P16(V2, V3) :- P8(V2, V3).","- P7(V0, V2) :- - P3(V0, V2)."],"d":["P16(V0, V0) :- P0(V0), - P18.","- P9(V3, V3) :- not -P2(V0, V3), - P19(V0, V3)."],"e":["P21(V0) :- - P20(V0, V3).","P22(V0) :- P23(V0, V2), P24(V0, V3), not -P25(V0, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_18_9_14_9_9_0.5_1.0_3_3_4","seed":18,"num_facts":11,"num_rules":15,"num_related_predicates":26,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":"P14(\"Suzanne\", \"Ashley\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P15(\"Suzanne\", \"Curtis\").","- P16(\"Ashley\", \"Jessica\", \"Curtis\").","- P17(\"Suzanne\", \"Ryan\", \"Curtis\").","P18(\"Suzanne\", \"Ryan\", \"Curtis\").","- P19(\"Ashley\", \"Jessica\", \"Ryan\").","- P20(\"Ashley\", \"Jessica\", \"Ryan\").","P21(\"Suzanne\", \"Ryan\").","- P22(\"Ashley\", \"Jessica\", \"Curtis\").","P23(\"Suzanne\", \"Ryan\", \"Curtis\").","P24(\"Ashley\", \"Ryan\").","- P25(\"Jessica\", \"Ryan\", \"Curtis\")."],"noisy_facts":["P26(\"Suzanne\", \"Curtis\").","- P31(\"Ashley\").","P33(\"Suzanne\", \"Ryan\", \"Curtis\").","- P32(\"Suzanne\", \"Ashley\", \"Ryan\").","P27(\"Suzanne\", \"Ashley\", \"Curtis\").","- P29(\"Ashley\", \"Jessica\", \"Ryan\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["P14(V0, V1) :- P2(V0, V4), - P6(V1, V3), not P11(V1, V4).","P0(V1, V3, V4) :- - P15(V0, V4), P24(V1, V3), - P25(V2, V3, V4).","P1(V0, V3, V4) :- - P15(V0, V4), P24(V1, V3), - P25(V2, V3, V4).","P2(V0, V4) :- P4(V3, V4), - P7(V3, V4), P23(V0, V3, V4).","P3(V1, V2, V4) :- - P16(V1, V2, V4).","P4(V3, V4) :- P0(V1, V3, V4), P3(V1, V2, V4), not P22(V1, V2, V4).","- P5(V4, V1, V4) :- P0(V1, V3, V4), P3(V1, V2, V4), not P22(V1, V2, V4).","- P6(V1, V4) :- - P5(V0, V1, V4), not -P8(V0, V1, V4), not -P12(V0, V1, V4).","- P7(V1, V4) :- - P5(V0, V1, V4), not -P8(V0, V1, V4), not -P12(V0, V1, V4).","P8(V0, V4, V4) :- P1(V0, V3, V4), not P17(V0, V3, V4), not -P18(V0, V3, V4).","- P9(V0, V3) :- P1(V0, V3, V4), not P17(V0, V3, V4), not -P18(V0, V3, V4).","P10(V3, V3, V3) :- P1(V0, V3, V4), not P17(V0, V3, V4), not -P18(V0, V3, V4).","- P11(V3, V3) :- - P9(V0, V3), not -P13(V0, V3), not -P21(V0, V3).","P12(V3, V1, V1) :- P10(V1, V2, V3), not P19(V1, V2, V3), not P20(V1, V2, V3).","P13(V2, V3) :- P10(V1, V2, V3), not P19(V1, V2, V3), not P20(V1, V2, V3)."],"noisy_rules":{"a":["- P14(V4, V3) :- - P4(V3, V4), P7(V3, V4).","- P14(V0, V1) :- - P8(V0, V1, V4), - P10(V1, V2, V3)."],"b":["P6(V1, V0) :- - P14(V0, V1).","P25(V3, V3, V4) :- P7(V3, V4), not P13(V0, V3), - P14(V0, V1)."],"c":["- P12(V4, V1, V4) :- - P3(V1, V2, V4), P11(V1, V4).","P20(V1, V3, V3) :- - P4(V3, V4), P11(V1, V4)."],"d":["- P21(V0, V3) :- - P2(V0, V4), - P10(V1, V2, V3), not -P26(V0, V4).","- P4(V3, V4) :- - P8(V0, V1, V4), P9(V0, V3), P27(V0, V1, V4)."],"e":["P28(V1, V2, V3) :- - P29(V1, V2, V3).","P30(V1, V3) :- - P31(V1), not P32(V0, V1, V3), P33(V0, V3, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_47_8_11_1_4_0.5_1.0_5_2_3","seed":47,"num_facts":4,"num_rules":12,"num_related_predicates":16,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" dwelling(\"Erica\", \"Christopher\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- rent(\"Erica\", \"Stephen\").","- lawn(\"Erica\", \"Christopher\").","nest.","- place(\"Erica\", \"Stephen\")."],"noisy_facts":["- pillow(\"Sharon\", \"Christopher\").","pepsi(\"Erica\", \"Sharon\").","- production_line(\"Sharon\").","cot(\"Sharon\", \"Christopher\").","- end_product(\"Christopher\", \"Stephen\").","measuring_worm(\"Stephen\").","deliverable(\"Erica\", \"Christopher\").","- book(\"Sharon\").","- movie(\"Sharon\", \"Christopher\").","- crush(\"Sharon\", \"Stephen\").","- fall_armyworm(\"Erica\", \"Sharon\").","- lappet_caterpillar(\"Sharon\", \"Stephen\").","weep(\"Erica\", \"Christopher\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- dwelling(V0, V2) :- abode(V0), lease(V1), - monthly(V0, V1), apartment(V0, V2), not -living_place(V1, V2).","landlord(V0, V3) :- - rent(V0, V3).","- bed(V3, V3) :- - rent(V0, V3).","- family(V1, V2) :- - house(V1, V2), not home(V1, V2).","abode(V0) :- - lawn(V0, V2).","lease(V0) :- - rent(V0, V3), not -nest.","- house(V3, V0) :- - rent(V0, V3), not -nest.","- payment(V0, V3) :- - rent(V0, V3), not -nest.","- monthly(V0, V0) :- - rent(V0, V3), not -nest.","apartment(V0, V1) :- landlord(V0, V3), - payment(V1, V3), not rent(V0, V3), not place(V0, V3).","living_place(V1, V2) :- - family(V1, V2), - monthly(V0, V1).","- home(V1, V3) :- - bed(V1, V3)."],"noisy_rules":{"a":["dwelling(V0, V2) :- - lease(V1), house(V1, V2), monthly(V0, V1).","dwelling(V2, V2) :- house(V1, V2), home(V1, V2)."],"b":["- living_place(V1, V2) :- monthly(V0, V1), dwelling(V0, V2).","- living_place(V1, V2) :- house(V1, V2), monthly(V0, V1), home(V1, V2), not -dwelling(V0, V2)."],"c":["family(V1, V2) :- - abode(V0), - living_place(V1, V2).","place(V3, V3) :- bed(V1, V3), home(V1, V2)."],"d":["- sleeping(V3, V2) :- bed(V1, V3), house(V1, V2), not pillow(V1, V2), not -cot(V1, V2).","- palatable(V0, V3) :- - landlord(V0, V3), not -monthly(V0, V1), - living_place(V1, V2), pepsi(V0, V1)."],"e":["- caterpillar(V1, V2) :- measuring_worm(V3), - fall_armyworm(V0, V1), weep(V0, V2), not crush(V1, V3), not lappet_caterpillar(V1, V3).","- product(V0, V2) :- - production_line(V1), - book(V1), deliverable(V0, V2), - movie(V1, V2), - end_product(V2, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_33_6_9_6_7_0.5_1.0_5_3_4","seed":33,"num_facts":8,"num_rules":10,"num_related_predicates":18,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P9(\"Laurie\", \"Danielle\", \"Robert\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P10(\"Laurie\").","- P11(\"Laurie\", \"Stephanie\", \"Danielle\").","P12(\"Danielle\").","- P13(\"Stephanie\", \"Katherine\").","- P14(\"Laurie\", \"Danielle\", \"Robert\").","P15(\"Laurie\", \"Robert\", \"Katherine\").","P16(\"Stephanie\", \"Robert\", \"Katherine\").","- P17(\"Danielle\", \"Robert\", \"Katherine\")."],"noisy_facts":["- P25(\"Stephanie\", \"Danielle\", \"Katherine\").","- P20(\"Laurie\", \"Danielle\").","P27(\"Stephanie\", \"Robert\", \"Katherine\").","- P18(\"Laurie\", \"Robert\", \"Katherine\").","P28(\"Laurie\", \"Robert\", \"Katherine\").","P29(\"Stephanie\", \"Danielle\", \"Katherine\").","- P26(\"Stephanie\", \"Danielle\", \"Katherine\").","- P24(\"Laurie\", \"Danielle\").","P23(\"Robert\").","- P31(\"Stephanie\", \"Robert\", \"Katherine\").","- P21(\"Laurie\", \"Danielle\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- P9(V0, V2, V3) :- P0(V0, V2), P4(V0, V2), - P7(V1, V2, V3).","P0(V0, V2) :- P2(V0, V2), not -P4(V0, V2).","P1(V0, V2, V2) :- P2(V0, V2), not -P4(V0, V2).","P2(V0, V2) :- P10(V0), P12(V2), - P13(V1, V4), - P14(V0, V2, V3), not -P15(V0, V3, V4).","P3(V0, V4) :- P10(V0), P12(V2), - P13(V1, V4), - P14(V0, V2, V3), not -P15(V0, V3, V4).","P4(V0, V2) :- - P11(V0, V1, V2), P16(V1, V3, V4), not P17(V2, V3, V4).","- P5(V1, V3, V4) :- - P11(V0, V1, V2), P16(V1, V3, V4), not P17(V2, V3, V4).","- P6(V0, V1) :- - P11(V0, V1, V2), P16(V1, V3, V4), not P17(V2, V3, V4).","- P7(V1, V4, V3) :- P1(V0, V3, V4), - P5(V1, V3, V4), not P8(V0, V3, V4).","- P8(V0, V0, V4) :- P3(V0, V4), - P6(V0, V1)."],"noisy_rules":{"a":["P9(V0, V2, V3) :- - P2(V0, V2), - P3(V0, V4), P6(V0, V1), P7(V1, V2, V3), not -P8(V0, V3, V4).","P9(V0, V2, V3) :- - P4(V0, V2), P6(V0, V1), P7(V1, V2, V3)."],"b":["P7(V3, V2, V3) :- - P0(V0, V2), - P1(V0, V3, V4), not -P9(V0, V2, V3).","- P3(V0, V4) :- - P3(V0, V4), P5(V1, V3, V4), P9(V0, V2, V3)."],"c":["- P10(V0) :- - P0(V0, V2), - P1(V0, V3, V4), - P3(V0, V4), P6(V0, V1), not -P8(V0, V3, V4).","P11(V0, V0, V2) :- - P0(V0, V2)."],"d":["P19(V0, V2, V3) :- P7(V1, V2, V3), P8(V0, V3, V4), not P18(V0, V3, V4).","P5(V3, V3, V4) :- - P0(V0, V2), P8(V0, V3, V4), not P20(V0, V2), not P21(V0, V2)."],"e":["- P22(V0, V3) :- P23(V3), - P24(V0, V2), not P25(V1, V2, V4), not P26(V1, V2, V4), P27(V1, V3, V4).","P30(V0, V1, V2) :- P28(V0, V3, V4), P29(V1, V2, V4), - P31(V1, V3, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_41_8_9_6_9_0.5_1.0_5_3_4","seed":41,"num_facts":9,"num_rules":10,"num_related_predicates":19,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.5714285714285716,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" artery(\"Tamara\", \"Caitlin\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["dark_eyed_junco(\"Tamara\", \"Caitlin\", \"Jill\").","mental_health(\"Tamara\").","quadruped(\"Jennifer\", \"Caitlin\", \"Jill\").","musteline_mammal(\"Renee\", \"Tamara\").","tribalism(\"Tamara\", \"Jill\").","primary_colour(\"Renee\", \"Tamara\", \"Jill\").","tour_de_france(\"Jennifer\", \"Caitlin\", \"Jill\").","liquids(\"Tamara\", \"Caitlin\", \"Jill\").","hungarian_partridge(\"Tamara\", \"Caitlin\", \"Jill\")."],"noisy_facts":[],"min_fact_dicts_for_query":["dark_eyed_junco(\"Tamara\", \"Caitlin\", \"Jill\").","mental_health(\"Tamara\").","quadruped(\"Jennifer\", \"Caitlin\", \"Jill\").","musteline_mammal(\"Renee\", \"Tamara\").","tribalism(\"Tamara\", \"Jill\").","primary_colour(\"Renee\", \"Tamara\", \"Jill\").","tour_de_france(\"Jennifer\", \"Caitlin\", \"Jill\").","liquids(\"Tamara\", \"Caitlin\", \"Jill\").","hungarian_partridge(\"Tamara\", \"Caitlin\", \"Jill\")."],"noiseless_rules":["artery(V2, V3) :- plural_form_of_bank(V2), common_mosquito(V1, V3), tundra_swan(V0, V2, V4), liquids(V2, V3, V4).","plural_form_of_bank(V2) :- shoulder(V0, V2, V4), update(V0, V2, V4).","shoulder(V2, V2, V4) :- dark_eyed_junco(V2, V3, V4), liquids(V2, V3, V4), hungarian_partridge(V2, V3, V4).","wormian_bone(V1, V3) :- mental_health(V2), musteline_mammal(V0, V2), tribalism(V2, V4), primary_colour(V0, V2, V4), tour_de_france(V1, V3, V4).","main(V1, V2) :- mental_health(V2), musteline_mammal(V0, V2), tribalism(V2, V4), primary_colour(V0, V2, V4), tour_de_france(V1, V3, V4).","white(V1) :- wormian_bone(V1, V3).","common_mosquito(V1, V3) :- quadruped(V1, V3, V4).","update(V0, V2, V4) :- shoulder(V0, V2, V4), visual(V0, V2, V4).","tundra_swan(V0, V2, V4) :- shoulder(V0, V2, V4), main(V1, V2), white(V4).","visual(V0, V2, V4) :- shoulder(V0, V2, V4), main(V1, V2), white(V4)."],"noisy_rules":{}},"num_min_facts_for_query":7,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_0_9_10_7_9_0.5_1.0_3_3_4","seed":0,"num_facts":10,"num_rules":11,"num_related_predicates":21,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"bare_bone(\"Steven\", \"Mark\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["windward_passage(\"Sheila\", \"Trevor\", \"Steven\").","nut(\"Sheila\", \"Trevor\", \"Steven\").","page(\"Steven\", \"Alexander\").","airplanes(\"Sheila\", \"Trevor\", \"Steven\").","blanket(\"Sheila\", \"Trevor\", \"Steven\").","expense(\"Steven\", \"Alexander\").","disavowal(\"Mark\", \"Alexander\").","bill(\"Steven\", \"Alexander\").","fly(\"Sheila\", \"Trevor\", \"Alexander\").","dollar(\"Steven\", \"Alexander\")."],"noisy_facts":[],"min_fact_dicts_for_query":["windward_passage(\"Sheila\", \"Trevor\", \"Steven\").","nut(\"Sheila\", \"Trevor\", \"Steven\").","page(\"Steven\", \"Alexander\").","airplanes(\"Sheila\", \"Trevor\", \"Steven\").","blanket(\"Sheila\", \"Trevor\", \"Steven\").","expense(\"Steven\", \"Alexander\").","disavowal(\"Mark\", \"Alexander\").","bill(\"Steven\", \"Alexander\").","fly(\"Sheila\", \"Trevor\", \"Alexander\").","dollar(\"Steven\", \"Alexander\")."],"noiseless_rules":["bare_bone(V2, V3) :- vegetation(V1, V2, V3), enter_hangar(V2, V3, V4).","nest(V2, V4) :- planes(V0, V2), expense(V2, V4), disavowal(V3, V4).","plant(V1, V2) :- tree(V0, V4), seed(V0, V1, V2), leaf(V0, V2, V4).","atlantic(V0, V1, V2) :- windward_passage(V0, V1, V2).","planes(V0, V2) :- paper(V1, V4), bill(V2, V4), fly(V0, V1, V4).","vegetation(V1, V2, V1) :- plant(V1, V2), atlantic(V0, V1, V2), nut(V0, V1, V2).","tree(V4, V4) :- nest(V2, V4).","enter_hangar(V2, V1, V2) :- nut(V0, V1, V2), airplanes(V0, V1, V2), blanket(V0, V1, V2).","seed(V0, V1, V2) :- nut(V0, V1, V2), airplanes(V0, V1, V2), blanket(V0, V1, V2).","leaf(V2, V2, V4) :- page(V2, V4), bill(V2, V4), dollar(V2, V4).","paper(V4, V4) :- page(V2, V4), bill(V2, V4), dollar(V2, V4)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_38_8_10_10_10_0.5_1.0_3_2_3","seed":38,"num_facts":14,"num_rules":11,"num_related_predicates":25,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"work(\"Amy\", \"Jacqueline\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["pubes(\"Amy\", \"Jacob\").","sky(\"Jacob\", \"Brittany\").","bhutan(\"Jacob\").","plundering(\"Amy\", \"Brittany\").","violence(\"Amy\", \"Jacqueline\").","self_assertion(\"Jacob\", \"Brittany\").","hydrosphere(\"Jacob\", \"Jacqueline\").","lithosphere(\"Jacob\", \"Jacqueline\").","bangladesh(\"Amy\", \"Jacqueline\").","kyrgyzstan(\"Jacob\", \"Jacqueline\").","alto(\"Jacob\", \"Brittany\").","warbler(\"Jacob\", \"Jacqueline\").","roll_under_table(\"Amy\", \"Jacob\").","macula(\"Amy\", \"Jacob\")."],"noisy_facts":[],"min_fact_dicts_for_query":["pubes(\"Amy\", \"Jacob\").","sky(\"Jacob\", \"Brittany\").","bhutan(\"Jacob\").","plundering(\"Amy\", \"Brittany\").","violence(\"Amy\", \"Jacqueline\").","self_assertion(\"Jacob\", \"Brittany\").","hydrosphere(\"Jacob\", \"Jacqueline\").","lithosphere(\"Jacob\", \"Jacqueline\").","bangladesh(\"Amy\", \"Jacqueline\").","kyrgyzstan(\"Jacob\", \"Jacqueline\").","alto(\"Jacob\", \"Brittany\").","warbler(\"Jacob\", \"Jacqueline\").","roll_under_table(\"Amy\", \"Jacob\").","macula(\"Amy\", \"Jacob\")."],"noiseless_rules":["work(V0, V3) :- beard(V0, V1), action(V0, V2), singer(V2, V3).","beard(V0, V1) :- pubes(V0, V1), roll_under_table(V0, V1), macula(V0, V1).","area(V1) :- pubes(V0, V1), roll_under_table(V0, V1), macula(V0, V1).","alienation(V1) :- pubes(V0, V1), roll_under_table(V0, V1), macula(V0, V1).","transfusion(V1, V1) :- area(V1), earth(V1), asia(V1).","action(V2, V2) :- alienation(V1), transfusion(V1, V2), aggression(V1).","earth(V1) :- sky(V1, V2), hydrosphere(V1, V3), lithosphere(V1, V3).","singer(V2, V3) :- canary(V0, V3), alto(V1, V2), warbler(V1, V3).","asia(V1) :- bhutan(V1), bangladesh(V0, V3), kyrgyzstan(V1, V3).","aggression(V1) :- plundering(V0, V2), violence(V0, V3), self_assertion(V1, V2).","canary(V0, V3) :- plundering(V0, V2), violence(V0, V3), self_assertion(V1, V2)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_17_8_12_9_10_0.5_1.0_3_3_4","seed":17,"num_facts":10,"num_rules":13,"num_related_predicates":23,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.7142857142857144,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" pine(\"Joyce\", \"Crystal\", \"Patrick\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["kentucky(\"Joyce\", \"Crystal\").","- club(\"Crystal\", \"Alice\").","- anchorage(\"Crystal\", \"Alice\").","prairies(\"Crystal\", \"Patrick\").","- atheist(\"Crystal\", \"Bobby\", \"Alice\").","- writing_style(\"Alice\").","consistory(\"Alice\").","- disk(\"Crystal\", \"Bobby\").","- event(\"Crystal\", \"Patrick\").","- four_paws(\"Crystal\", \"Bobby\", \"Patrick\")."],"noisy_facts":["- college(\"Crystal\", \"Bobby\", \"Patrick\").","- stalk(\"Crystal\", \"Bobby\", \"Alice\").","- harrier_eagle(\"Crystal\", \"Bobby\", \"Patrick\").","tyrol(\"Joyce\", \"Crystal\", \"Patrick\").","- fundraiser(\"Joyce\", \"Bobby\", \"Alice\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- pine(V0, V1, V3) :- immortality(V2, V3), motel(V0, V1, V4), not -keeping_warm(V0, V2, V4).","immortality(V2, V3) :- salmon_oil(V0, V3), - event(V1, V3), - four_paws(V1, V2, V3).","motel(V0, V1, V4) :- kentucky(V0, V1), prairies(V1, V3), - atheist(V1, V2, V4).","- fiber_from_plant(V1, V4) :- kentucky(V0, V1), prairies(V1, V3), - atheist(V1, V2, V4).","- basketball_court(V1, V2) :- kentucky(V0, V1), prairies(V1, V3), - atheist(V1, V2, V4).","- drawer(V2, V3, V4) :- stem(V0, V1, V3), eel(V0, V1, V4), - knocker(V2, V3, V4).","stem(V1, V1, V1) :- - fiber_from_plant(V1, V4), not club(V1, V4), not anchorage(V1, V4).","- shooting(V4) :- - fiber_from_plant(V1, V4), not club(V1, V4), not anchorage(V1, V4).","- use_guns_to_commit_crimes(V1, V1, V4) :- - fiber_from_plant(V1, V4), not club(V1, V4), not anchorage(V1, V4).","eel(V4, V4, V4) :- - shooting(V4), not writing_style(V4), not -consistory(V4).","keeping_warm(V3, V2, V4) :- - basketball_court(V1, V2), - drawer(V2, V3, V4), not disk(V1, V2).","salmon_oil(V0, V0) :- motel(V0, V1, V4), not use_guns_to_commit_crimes(V0, V1, V4).","- knocker(V4, V0, V4) :- motel(V0, V1, V4), not use_guns_to_commit_crimes(V0, V1, V4)."],"noisy_rules":{"a":["pine(V0, V1, V3) :- drawer(V2, V3, V4), - stem(V0, V1, V3), not -shooting(V4).","pine(V1, V1, V2) :- basketball_court(V1, V2)."],"b":["atheist(V1, V0, V3) :- - stem(V0, V1, V3), not -pine(V0, V1, V3).","shooting(V1) :- pine(V0, V1, V3)."],"c":["writing_style(V4) :- - motel(V0, V1, V4), - salmon_oil(V0, V3).","atheist(V1, V4, V4) :- use_guns_to_commit_crimes(V0, V1, V4)."],"d":["knocker(V2, V0, V4) :- not -shooting(V4), - keeping_warm(V0, V2, V4), - fundraiser(V0, V2, V4).","drawer(V0, V3, V4) :- - stem(V0, V1, V3), shooting(V4), tyrol(V0, V1, V3)."],"e":["musical_instrument(V1, V2) :- - harrier_eagle(V1, V2, V3).","rifle_range(V1, V2) :- - college(V1, V2, V3), - stalk(V1, V2, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_12_8_10_5_8_0.5_1.0_5_2_3","seed":12,"num_facts":8,"num_rules":11,"num_related_predicates":19,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5714285714285716,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" consume(\"Brenda\", \"Linda\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- thrown_ball(\"Brenda\", \"Christina\").","sense_environment(\"Linda\").","madrilene(\"Laura\", \"Brenda\").","- ink(\"Laura\", \"Brenda\").","- picnicker(\"Brenda\", \"Christina\").","- common_pets(\"Brenda\", \"Christina\").","- authority(\"Linda\", \"Christina\").","craft(\"Laura\", \"Brenda\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- thrown_ball(\"Brenda\", \"Christina\").","sense_environment(\"Linda\").","- ink(\"Laura\", \"Brenda\").","- picnicker(\"Brenda\", \"Christina\")."],"noiseless_rules":["- consume(V1, V2) :- - buckthorn_berry(V1), - financial_institution(V0, V2), not -setting(V1, V2), not -feelings(V1, V2).","military_service(V1, V3) :- - thrown_ball(V1, V3).","- buckthorn_berry(V1) :- military_service(V1, V3), not -pursuer(V1, V3).","goods_for_kissing(V1) :- military_service(V1, V3), not -pursuer(V1, V3).","- financial_institution(V0, V2) :- sense_environment(V2), - ink(V0, V1), - picnicker(V1, V3), not common_pets(V1, V3), not authority(V2, V3).","pillow(V0) :- sense_environment(V2), - ink(V0, V1), - picnicker(V1, V3), not common_pets(V1, V3), not authority(V2, V3).","- veins(V0, V2) :- sense_environment(V2), - ink(V0, V1), - picnicker(V1, V3), not common_pets(V1, V3), not authority(V2, V3).","setting(V0, V0) :- pillow(V0).","bench(V0, V1) :- madrilene(V0, V1).","pursuer(V1, V1) :- bench(V0, V1), not -craft(V0, V1).","feelings(V1, V2) :- goods_for_kissing(V2), - financial_institution(V0, V2), - veins(V0, V2), setting(V1, V2), - picnicker(V1, V3)."],"noisy_rules":{}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_38_10_11_8_9_0.5_1.0_5_2_3","seed":38,"num_facts":14,"num_rules":12,"num_related_predicates":26,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P11(\"Tracey\", \"Savannah\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P12(\"Tracey\").","P13(\"Tracey\", \"Edgar\").","P14(\"Tracey\", \"Joseph\").","P15(\"Tracey\", \"Edgar\").","P16.","P17(\"Tracey\", \"Joseph\").","P18(\"Edgar\").","P19(\"Savannah\").","P20(\"Tracey\", \"Savannah\").","P21(\"Edgar\", \"Savannah\").","P22(\"Tracey\", \"Joseph\").","P23(\"Tracey\", \"Savannah\").","P24(\"Edgar\", \"Joseph\").","P25(\"Joseph\", \"Savannah\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P12(\"Tracey\").","P13(\"Tracey\", \"Edgar\").","P14(\"Tracey\", \"Joseph\").","P15(\"Tracey\", \"Edgar\").","P16.","P17(\"Tracey\", \"Joseph\").","P18(\"Edgar\").","P19(\"Savannah\").","P20(\"Tracey\", \"Savannah\").","P21(\"Edgar\", \"Savannah\").","P22(\"Tracey\", \"Joseph\").","P23(\"Tracey\", \"Savannah\").","P24(\"Edgar\", \"Joseph\").","P25(\"Joseph\", \"Savannah\")."],"noiseless_rules":["P11(V0, V3) :- P2(V0, V1), P3(V0, V2), P5(V2, V3).","P0(V1) :- P12(V0), P18(V1), P19(V3), P20(V0, V3), P21(V1, V3).","P1(V0, V2) :- P4(V0, V2), P6(V1, V2), P9(V1, V2).","P2(V0, V1) :- P13(V0, V1).","P3(V0, V2) :- P1(V0, V2), P10(V0, V2).","P4(V1, V1) :- P0(V1), P7(V1), P8(V1).","P5(V2, V3) :- P14(V0, V2), P22(V0, V2), P23(V0, V3), P24(V1, V2), P25(V2, V3).","P6(V1, V2) :- P14(V0, V2), P22(V0, V2), P23(V0, V3), P24(V1, V2), P25(V2, V3).","P7(V1) :- P14(V0, V2), P22(V0, V2), P23(V0, V3), P24(V1, V2), P25(V2, V3).","P8(V1) :- P15(V0, V1).","P9(V3, V3) :- P16, P20(V0, V3).","P10(V0, V2) :- P17(V0, V2)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_3_10_14_7_9_0.5_1.0_5_3_4","seed":3,"num_facts":10,"num_rules":15,"num_related_predicates":25,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.888888888888889,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" edge(\"Garrett\", \"Jenna\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- condiment(\"Garrett\", \"Katie\", \"James\").","- menu(\"Garrett\", \"Tara\").","giblet(\"Garrett\", \"Katie\", \"Tara\").","tree_cotton(\"Garrett\", \"Jenna\").","- uniat_church(\"Tara\", \"James\").","toning_muscles(\"Katie\", \"Tara\", \"Jenna\").","- darter(\"Tara\", \"Jenna\", \"James\").","throat(\"Katie\", \"Jenna\").","gallop_faster_than_humans_run(\"Katie\", \"Tara\", \"James\").","eating_from(\"Katie\", \"Jenna\", \"James\")."],"noisy_facts":["- hallucination(\"Katie\", \"Tara\").","- stroke(\"Garrett\", \"Katie\", \"Tara\").","mailbox(\"Garrett\", \"Katie\", \"Jenna\").","- circle(\"Jenna\").","coast(\"Katie\", \"Jenna\", \"James\").","earthworms(\"Katie\", \"James\").","unreality(\"Katie\", \"James\").","industrial_watercourse(\"Garrett\", \"Katie\", \"Tara\").","- silicon(\"Garrett\", \"Katie\", \"Jenna\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- edge(V0, V3) :- - jump_start(V0, V1, V3).","- treasure(V1, V4) :- spindlelegs(V1, V3, V4).","- jump_start(V1, V1, V1) :- - treasure(V1, V4), not -icebreaker(V1, V4), not -cable_car(V1, V4), not -peripterous(V1, V4).","icebreaker(V1, V4) :- - condiment(V0, V1, V4).","eggs(V0, V4) :- - condiment(V0, V1, V4).","- pearl_millet(V1, V4) :- - condiment(V0, V1, V4).","philatelist(V1, V2, V4) :- - menu(V0, V2), throat(V1, V3), gallop_faster_than_humans_run(V1, V2, V4), not -eating_from(V1, V3, V4).","feeding_yourself(V0, V1, V2) :- - menu(V0, V2), throat(V1, V3), gallop_faster_than_humans_run(V1, V2, V4), not -eating_from(V1, V3, V4).","car(V2, V3, V4) :- - menu(V0, V2), throat(V1, V3), gallop_faster_than_humans_run(V1, V2, V4), not -eating_from(V1, V3, V4).","excitability(V1, V2) :- - playing_cards(V0, V1), tree_cotton(V0, V3), - uniat_church(V2, V4), not -toning_muscles(V1, V2, V3), not darter(V2, V3, V4).","cable_car(V1, V4) :- eggs(V0, V4), philatelist(V1, V2, V4), not -passing_time(V0, V4).","peripterous(V1, V4) :- eggs(V0, V4), philatelist(V1, V2, V4), not -passing_time(V0, V4).","passing_time(V0, V4) :- eggs(V0, V4), feeding_yourself(V0, V1, V2).","- playing_cards(V0, V1) :- giblet(V0, V1, V2).","spindlelegs(V1, V3, V4) :- - pearl_millet(V1, V4), car(V2, V3, V4), not -excitability(V1, V2), not -peripterous(V1, V4)."],"noisy_rules":{"a":["edge(V0, V4) :- - eggs(V0, V4), pearl_millet(V1, V4), not passing_time(V0, V4), playing_cards(V0, V1).","edge(V0, V3) :- not icebreaker(V1, V4), - feeding_yourself(V0, V1, V2), - spindlelegs(V1, V3, V4)."],"b":["darter(V2, V3, V4) :- jump_start(V0, V1, V3), - feeding_yourself(V0, V1, V2), - cable_car(V1, V4), not passing_time(V0, V4), edge(V0, V3).","- toning_muscles(V1, V2, V3) :- - philatelist(V1, V2, V4), edge(V0, V3)."],"c":["- cable_car(V1, V4) :- treasure(V1, V4), - excitability(V1, V2), - passing_time(V0, V4), playing_cards(V0, V1).","jump_start(V0, V1, V3) :- treasure(V1, V4), - eggs(V0, V4), - excitability(V1, V2), - passing_time(V0, V4), - spindlelegs(V1, V3, V4)."],"d":["- philatelist(V1, V2, V4) :- - excitability(V1, V2), - peripterous(V1, V4), - hallucination(V1, V2).","- giblet(V0, V1, V0) :- treasure(V1, V4), jump_start(V0, V1, V3), - peripterous(V1, V4), not silicon(V0, V1, V3)."],"e":["water_milfoil(V0, V1, V4) :- unreality(V1, V4), not -earthworms(V1, V4), - stroke(V0, V1, V2).","- mumbling(V1) :- - circle(V3), industrial_watercourse(V0, V1, V2), mailbox(V0, V1, V3), coast(V1, V3, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_11_9_13_7_9_0.5_1.0_5_1_2","seed":11,"num_facts":11,"num_rules":14,"num_related_predicates":25,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.125,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":"fall_out(\"Jon\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["egg(\"Jon\").","milk.","mane(\"Jon\").","- boar(\"Jon\").","- steak.","- neck.","chief(\"Jon\").","face.","- farm_animal(\"Jon\").","- sow(\"Jon\").","farmer(\"Jon\")."],"noisy_facts":["- ruling_country(\"Jon\").","- menial(\"Gregory\").","- crown(\"Jon\").","powhatan(\"Gregory\").","ox(\"Jon\").","adam(\"Jon\").","loving(\"Jon\").","- topographic_point(\"Gregory\").","- nut_collector(\"Jon\")."],"min_fact_dicts_for_query":["milk.","- steak.","- neck.","chief(\"Jon\")."],"noiseless_rules":["fall_out(V1) :- hog(V1), not chicken(V1), not pig(V1), not -chief(V1).","horse(V1) :- cow(V1), not -hair(V1).","hog(V1) :- horse(V1), not -barnyard(V1), not sheep(V1), not chick(V1), not -farm(V1).","barnyard(V1) :- head(V1), not animal(V1).","- chicken(V1) :- egg(V1).","- sheep(V1) :- egg(V1).","cow(V1) :- milk, - steak, - neck, chief(V1), not -face.","head(V1) :- milk, - steak, - neck, chief(V1), not -face.","product(V1) :- milk, - steak, - neck, chief(V1), not -face.","hair(V1) :- head(V1), not -mane(V1).","- animal(V1) :- head(V1), not -mane(V1).","- chick(V0) :- product(V0).","- pig(V1) :- - boar(V1), not farm_animal(V1), not sow(V1), not -farmer(V1).","farm(V1) :- - boar(V1), not farm_animal(V1), not sow(V1), not -farmer(V1)."],"noisy_rules":{"a":["- fall_out(V1) :- - product(V0), not hair(V1), not -pig(V1), - farm(V1).","- fall_out(V1) :- not hog(V1), - barnyard(V1), not -sheep(V1), not hair(V1)."],"b":["- barnyard(V1) :- not horse(V1), chicken(V1), chick(V1), - farm(V1), - fall_out(V1).","- mane(V1) :- not horse(V1), chick(V1), not fall_out(V1)."],"c":["- barnyard(V1) :- not -sheep(V1), - cow(V1), not head(V1), not -pig(V1), not farm(V1).","- barnyard(V1) :- - horse(V1), sheep(V1), pig(V1), not farm(V1)."],"d":["farm_animal(V1) :- not hog(V1), not -sheep(V1), - cow(V1), not -ox(V1).","- head(V1) :- - farm(V1), not crown(V1)."],"e":["- attached(V1) :- - ruling_country(V1), not -loving(V1), not -adam(V1), not nut_collector(V1).","servant(V0) :- not menial(V0), powhatan(V0), - topographic_point(V0)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_27_7_9_6_9_0.5_1.0_5_2_3","seed":27,"num_facts":9,"num_rules":10,"num_related_predicates":19,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" peregrine(\"Angela\", \"Gabriella\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["audubons_caracara(\"Gabriella\", \"Christopher\").","showjumping(\"Wesley\", \"Angela\").","cross_country_riding(\"Wesley\", \"Angela\").","- goshawk(\"Wesley\", \"Christopher\").","- honey_buzzard(\"Angela\", \"Christopher\").","tiercel(\"Gabriella\", \"Christopher\").","- gyrfalcon(\"Angela\", \"Gabriella\").","christian_holiday(\"Gabriella\", \"Christopher\").","- setting_cup_on_table(\"Angela\", \"Gabriella\")."],"noisy_facts":["currency(\"Wesley\", \"Gabriella\").","- franco_american(\"Wesley\", \"Gabriella\").","lifting_things(\"Wesley\", \"Gabriella\").","- tribe(\"Angela\").","- nisei(\"Wesley\").","- recliner(\"Angela\").","tails(\"Gabriella\", \"Christopher\").","atlantic(\"Wesley\", \"Angela\").","- granite_stater(\"Wesley\", \"Gabriella\").","- subset_of_sports(\"Angela\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- peregrine(V1, V2) :- hawk(V0, V3), pigeon_hawk(V1, V2), not falcon_gentle(V2, V3).","hawk(V0, V3) :- falcon(V1), - sparrow_hawk(V2), - goshawk(V0, V3), not honey_buzzard(V1, V3), not -tiercel(V2, V3).","falcon(V1) :- caracara(V1, V2), hobby(V1, V2), kestrel(V1, V2), - gyrfalcon(V1, V2), christian_holiday(V2, V3).","caracara(V3, V2) :- audubons_caracara(V2, V3), not -tiercel(V2, V3).","pigeon_hawk(V1, V2) :- showjumping(V0, V1), - setting_cup_on_table(V1, V2).","hobby(V1, V2) :- showjumping(V0, V1), - setting_cup_on_table(V1, V2).","- falcon_gentle(V2, V2) :- caracara(V1, V2), showjumping(V0, V1), not -cross_country_riding(V0, V1).","- sparrow_hawk(V2) :- caracara(V1, V2), showjumping(V0, V1), not -cross_country_riding(V0, V1).","equestrian_sport(V1) :- caracara(V1, V2), showjumping(V0, V1), not -cross_country_riding(V0, V1).","kestrel(V1, V1) :- equestrian_sport(V1)."],"noisy_rules":{"a":["peregrine(V1, V2) :- not falcon(V1), - hobby(V1, V2).","peregrine(V1, V2) :- - pigeon_hawk(V1, V2), not -sparrow_hawk(V2)."],"b":["falcon_gentle(V2, V3) :- falcon_gentle(V2, V3), peregrine(V1, V2).","- falcon(V1) :- - falcon(V1), - pigeon_hawk(V1, V2), not -peregrine(V1, V2)."],"c":["- christian_holiday(V2, V2) :- - caracara(V1, V2), - hobby(V1, V2).","- tiercel(V2, V3) :- falcon_gentle(V2, V3)."],"d":["- cross_country_riding(V2, V1) :- - kestrel(V1, V2).","- tiercel(V2, V2) :- not caracara(V1, V2), sparrow_hawk(V2), - equestrian_sport(V1), - subset_of_sports(V1), - tribe(V1)."],"e":["- dolmas(V0, V1) :- - recliner(V1), atlantic(V0, V1), lifting_things(V0, V2), not -currency(V0, V2).","american(V3) :- - nisei(V0), not granite_stater(V0, V2), not franco_american(V0, V2), tails(V2, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_58_5_5_4_6_0.5_1.0_3_3_4","seed":58,"num_facts":5,"num_rules":6,"num_related_predicates":11,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"action(\"Brittany\", \"Ronnie\", \"Justin\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- nest(\"Justin\", \"Cheryl\").","baby(\"Katherine\", \"Justin\", \"Cheryl\").","break(\"Katherine\", \"Justin\", \"Cheryl\").","fly(\"Justin\", \"Cheryl\").","- chicken(\"Justin\", \"Cheryl\")."],"noisy_facts":["- ontario(\"Brittany\", \"Katherine\", \"Ronnie\").","- rest(\"Katherine\", \"Justin\", \"Cheryl\").","contract(\"Justin\").","physical_activity(\"Katherine\", \"Justin\").","- tenerife(\"Katherine\", \"Ronnie\", \"Cheryl\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["action(V0, V2, V3) :- - cry(V0, V2), - smash(V2, V4), fly(V3, V4).","- bird(V3, V4) :- - nest(V3, V4), not -fly(V3, V4), not chicken(V3, V4).","- bones(V4, V3, V4) :- - nest(V3, V4), not -fly(V3, V4), not chicken(V3, V4).","- rain_on(V0, V2) :- - bird(V0, V2).","- cry(V3, V3) :- - bones(V1, V3, V4), not -baby(V1, V3, V4), not -break(V1, V3, V4).","- smash(V2, V2) :- - rain_on(V0, V2), not cry(V0, V2)."],"noisy_rules":{"a":["- action(V4, V3, V3) :- bones(V1, V3, V4).","- action(V0, V2, V2) :- rain_on(V0, V2)."],"b":["bones(V3, V3, V0) :- bird(V0, V2), - action(V0, V2, V3).","nest(V3, V4) :- bones(V1, V3, V4), smash(V2, V4), - action(V0, V2, V3)."],"c":["nest(V3, V4) :- bones(V1, V3, V4).","bird(V0, V2) :- bones(V1, V3, V4), not -rain_on(V0, V2), cry(V0, V2)."],"d":["not_good_food_for_dogs(V0, V2, V3) :- bones(V1, V3, V4), cry(V0, V2), not -smash(V2, V4).","- break(V1, V3, V4) :- bones(V1, V3, V4), smash(V2, V4), - rest(V1, V3, V4)."],"e":["canada(V0, V2) :- - ontario(V0, V1, V2).","stock_cube(V1) :- contract(V3), not -physical_activity(V1, V3), - tenerife(V1, V2, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_76_8_10_1_4_0.5_1.0_5_2_3","seed":76,"num_facts":5,"num_rules":11,"num_related_predicates":16,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P10(\"Wanda\", \"Lisa\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P11(\"Brian\", \"Laura\").","- P12(\"Wanda\", \"Brian\").","- P13(\"Wanda\", \"Laura\").","- P14(\"Wanda\", \"Laura\").","P15(\"Wanda\", \"Laura\")."],"noisy_facts":["P22(\"Wanda\", \"Lisa\").","P21(\"Wanda\", \"Brian\").","- P23(\"Wanda\", \"Lisa\").","- P16(\"Wanda\", \"Brian\").","- P17.","P20(\"Lisa\").","P19(\"Lisa\").","P25(\"Brian\", \"Laura\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["P10(V0, V2) :- P0(V2), - P2(V0, V1), - P4(V0, V2), P6(V0, V3), not P9(V2, V3).","P0(V1) :- - P2(V0, V1), not -P5(V0, V1).","P1(V3) :- - P11(V1, V3).","- P2(V0, V1) :- - P12(V0, V1).","P3(V0, V3) :- - P13(V0, V3).","- P4(V0, V0) :- P1(V3), P3(V0, V3), not -P7(V0, V3), not -P15(V0, V3).","P5(V0, V0) :- P1(V3), P3(V0, V3), not -P7(V0, V3), not -P15(V0, V3).","P6(V0, V3) :- P3(V0, V3), not P14(V0, V3).","P7(V0, V3) :- P3(V0, V3), not P14(V0, V3).","- P8(V0, V3) :- P3(V0, V3), not P14(V0, V3).","- P9(V1, V3) :- - P8(V0, V1), - P11(V1, V3)."],"noisy_rules":{"a":["- P10(V0, V2) :- - P1(V3), - P3(V0, V3), - P5(V0, V1), P9(V2, V3).","- P10(V0, V2) :- - P6(V0, V3), P9(V2, V3)."],"b":["P8(V0, V2) :- - P3(V0, V3), not P6(V0, V3), - P10(V0, V2).","P12(V0, V1) :- - P1(V3), - P5(V0, V1), - P6(V0, V3), not P7(V0, V3), - P10(V0, V2)."],"c":["- P6(V0, V3) :- P2(V0, V1), - P3(V0, V3), not P5(V0, V1), - P7(V0, V3), P8(V0, V1).","P13(V2, V2) :- - P0(V2)."],"d":["- P1(V3) :- - P0(V2), P2(V0, V1), - P3(V0, V3), - P7(V0, V3), not P16(V0, V1).","- P6(V2, V3) :- - P0(V2), - P1(V3), - P17."],"e":["- P18(V1, V2) :- not -P19(V2), P20(V2), P21(V0, V1), not -P22(V0, V2), not P23(V0, V2).","- P24(V3) :- P25(V1, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_94_10_14_11_11_0.5_1.0_5_2_3","seed":94,"num_facts":15,"num_rules":15,"num_related_predicates":30,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" P14(\"Aaron\", \"Cassandra\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P15(\"Jacob\", \"Aaron\").","P16(\"Aaron\", \"Jeanne\").","P17(\"Aaron\", \"Cassandra\").","P18(\"Jacob\", \"Cassandra\").","- P19(\"Jacob\", \"Aaron\").","- P20(\"Jacob\", \"Aaron\").","- P21(\"Jacob\", \"Aaron\").","P22(\"Jacob\", \"Aaron\").","- P23(\"Jacob\", \"Cassandra\").","P24(\"Jacob\", \"Cassandra\").","- P25(\"Jacob\", \"Cassandra\").","- P26(\"Jacob\", \"Aaron\").","- P27(\"Jacob\", \"Aaron\").","P28(\"Jacob\", \"Aaron\").","P29(\"Jacob\", \"Aaron\")."],"noisy_facts":["- P36(\"Jacob\", \"Jeanne\").","- P39(\"Aaron\", \"Jeanne\").","P35(\"Jacob\", \"Aaron\").","- P38(\"Jacob\", \"Jeanne\").","- P32(\"Jacob\", \"Aaron\").","P30(\"Jacob\", \"Aaron\").","- P42(\"Jeanne\", \"Cassandra\").","- P34(\"Aaron\").","- P37(\"Jeanne\", \"Cassandra\").","P41(\"Aaron\", \"Cassandra\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- P14(V1, V3) :- - P4(V1), - P8(V3), P10(V0, V1), not P12(V1, V3).","- P0(V1) :- - P15(V0, V1).","P1(V0, V1) :- - P15(V0, V1).","P2(V0, V1) :- - P15(V0, V1).","- P3(V1) :- - P0(V1), not -P5(V1), not P11(V1).","- P4(V1) :- P16(V1, V2).","P5(V1) :- P1(V0, V1), not P19(V0, V1), not P20(V0, V1), not P21(V0, V1), not -P22(V0, V1).","P6(V0, V1) :- P1(V0, V1), not P19(V0, V1), not P20(V0, V1), not P21(V0, V1), not -P22(V0, V1).","P7(V0, V1) :- P1(V0, V1), not P19(V0, V1), not P20(V0, V1), not P21(V0, V1), not -P22(V0, V1).","- P8(V1) :- P2(V0, V1), not P3(V0), not -P6(V0, V1).","P9(V0, V3) :- P7(V0, V3), not -P13(V0, V3), not P23(V0, V3), not -P24(V0, V3), not P25(V0, V3).","P10(V0, V1) :- P9(V0, V1), not P26(V0, V1), not P27(V0, V1), not -P28(V0, V1), not -P29(V0, V1).","- P11(V1) :- P9(V0, V1), not P26(V0, V1), not P27(V0, V1), not -P28(V0, V1), not -P29(V0, V1).","- P12(V1, V3) :- P17(V1, V3).","P13(V0, V3) :- P18(V0, V3)."],"noisy_rules":{"a":["P14(V1, V1) :- - P1(V0, V1), not P2(V0, V1), P4(V1), not P6(V0, V1), P11(V1).","P14(V1, V3) :- P0(V1), - P5(V1), - P6(V0, V1), P12(V1, V3), not P13(V0, V3)."],"b":["P8(V3) :- - P2(V0, V1), P14(V1, V3).","- P28(V0, V1) :- - P1(V0, V1), not -P12(V1, V3), P14(V1, V3)."],"c":["P25(V0, V3) :- P0(V1), not -P3(V0), P4(V1), - P10(V0, V1), - P13(V0, V3).","- P22(V3, V1) :- not -P11(V1), P12(V1, V3)."],"d":["P3(V0) :- P30(V0, V1).","P31(V1) :- - P5(V1), - P6(V0, V1), not P10(V0, V1), P11(V1), - P32(V0, V1)."],"e":["P33(V0, V1) :- - P34(V1), P35(V0, V1), - P36(V0, V2), - P37(V2, V3).","- P40(V0, V3) :- - P38(V0, V2), - P39(V1, V2), not -P41(V1, V3), - P42(V2, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_68_7_8_5_6_0.5_1.0_3_3_4","seed":68,"num_facts":8,"num_rules":9,"num_related_predicates":17,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" administrative_unit(\"Michael\", \"Zachary\", \"Jacqueline\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["alatae(\"Michael\", \"Jacqueline\").","- sorority(\"Michael\", \"John\", \"Jacqueline\").","hand(\"Michael\", \"John\").","master_bedroom(\"Michael\", \"Zachary\", \"Jacqueline\").","- norse_deity(\"John\", \"Zachary\").","- buying_presents_for_others(\"Michael\", \"Zachary\", \"Jacqueline\").","- wings(\"Kaitlyn\", \"Michael\", \"Jacqueline\").","- tree(\"Kaitlyn\", \"John\", \"Jacqueline\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- administrative_unit(V1, V3, V4) :- council(V3, V4), - limbs(V0, V1, V4).","- vermin(V1, V2, V4) :- alatae(V1, V4), - norse_deity(V2, V3), not buying_presents_for_others(V1, V3, V4).","- find_underground(V1, V3, V4) :- alatae(V1, V4), - norse_deity(V2, V3), not buying_presents_for_others(V1, V3, V4).","council(V2, V4) :- - vermin(V1, V2, V4), not -water_pipe(V1, V2, V4), not economic_and_social_council(V1, V2, V4).","water_pipe(V1, V4, V4) :- - find_underground(V1, V3, V4), not pest(V1, V3, V4), not -master_bedroom(V1, V3, V4).","- pest(V1, V4, V4) :- - vermin(V1, V2, V4), not write_with(V1, V2, V4).","- economic_and_social_council(V1, V2, V4) :- - sorority(V1, V2, V4).","- limbs(V0, V1, V4) :- hand(V1, V2), - wings(V0, V1, V4), not tree(V0, V2, V4).","- write_with(V1, V2, V4) :- hand(V1, V2), - wings(V0, V1, V4), not tree(V0, V2, V4)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_70_6_7_2_3_0.5_1.0_5_2_3","seed":70,"num_facts":4,"num_rules":8,"num_related_predicates":12,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"opening(\"Julia\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["liner(\"Julia\").","night(\"Julia\", \"Rodney\").","- laundry(\"Julia\", \"Rodney\").","hose(\"Julia\", \"Rodney\")."],"noisy_facts":["button(\"Julia\", \"Rodney\").","acanthocephalan(\"Robin\", \"Rodney\").","sever(\"Robin\").","- fleet(\"Julia\", \"Rodney\").","band(\"Julia\", \"Rodney\").","ribbon_worm(\"Robin\", \"Julia\").","- wood(\"Robin\", \"Rodney\")."],"min_fact_dicts_for_query":["liner(\"Julia\").","- laundry(\"Julia\", \"Rodney\")."],"noiseless_rules":["opening(V1) :- - fly(V3), - exit(V0, V1), not -yoke(V1, V3).","- blue(V1, V2) :- liner(V1), - laundry(V1, V2), not -hose(V1, V2).","garment(V1, V2) :- liner(V1), - laundry(V1, V2), not -hose(V1, V2).","- fly(V1) :- - blue(V1, V2), not -fur(V1, V2).","- exit(V2, V1) :- garment(V1, V2).","- atlantic_salmon(V1) :- garment(V1, V2).","fur(V1, V1) :- - atlantic_salmon(V1).","yoke(V1, V1) :- fur(V1, V2), not -night(V1, V2)."],"noisy_rules":{"a":["- opening(V3) :- fly(V3).","- opening(V1) :- blue(V1, V2), not fur(V1, V2), - yoke(V1, V3)."],"b":["- fur(V1, V2) :- exit(V0, V1), atlantic_salmon(V1), - fur(V1, V2), - yoke(V1, V3), - opening(V1).","fly(V1) :- - opening(V1)."],"c":["laundry(V1, V2) :- - garment(V1, V2), not -fly(V3), not -atlantic_salmon(V1), - yoke(V1, V3).","fly(V0) :- exit(V0, V1)."],"d":["clothing(V1) :- blue(V1, V2), - garment(V1, V2), not -fly(V3), - yoke(V1, V3), button(V1, V2).","- garment(V1, V2) :- fly(V3), - fur(V1, V2), not yoke(V1, V3), not -band(V1, V2)."],"e":["- worm(V1, V2) :- ribbon_worm(V0, V1), acanthocephalan(V0, V2).","boats(V0, V2) :- sever(V0), - wood(V0, V2), - fleet(V1, V2)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_41_7_6_5_8_0.5_1.0_3_3_4","seed":41,"num_facts":8,"num_rules":7,"num_related_predicates":15,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" fuzzy(\"Jesse\", \"Marc\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["part_of_body(\"Wendy\", \"Marc\").","- drive(\"Felicia\", \"Marc\").","- trap_door(\"Felicia\", \"Wendy\", \"Samantha\").","protective_covering(\"Felicia\", \"Wendy\", \"Samantha\").","united_arab_emirates(\"Felicia\", \"Wendy\", \"Samantha\").","- demand_satisfaction(\"Felicia\", \"Jesse\", \"Marc\").","- stocking_new_refrigerator(\"Felicia\", \"Jesse\", \"Marc\").","sea_god(\"Wendy\", \"Jesse\", \"Samantha\")."],"noisy_facts":["- bread(\"Felicia\", \"Jesse\", \"Marc\").","- mother_puppies(\"Felicia\", \"Jesse\", \"Marc\").","- delaware_bay(\"Wendy\", \"Jesse\", \"Marc\").","- red_and_white(\"Felicia\", \"Wendy\", \"Marc\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- fuzzy(V2, V3) :- small_animal(V0, V3), - hod(V0, V2, V3), sea_god(V1, V2, V4).","head(V0, V3) :- - literature(V0, V2), - judgment_day(V0, V2, V3).","small_animal(V0, V3) :- part_of_body(V1, V3), protective_covering(V0, V1, V4).","- literature(V0, V3) :- small_animal(V0, V3), not drive(V0, V3).","- judgment_day(V0, V1, V4) :- - trap_door(V0, V1, V4), not -protective_covering(V0, V1, V4), not -united_arab_emirates(V0, V1, V4).","- hod(V0, V0, V3) :- head(V0, V3), not propellers(V0, V3).","- propellers(V0, V3) :- - judgment_day(V0, V2, V3), not demand_satisfaction(V0, V2, V3), not stocking_new_refrigerator(V0, V2, V3)."],"noisy_rules":{"a":["fuzzy(V2, V3) :- not small_animal(V0, V3), hod(V0, V2, V3).","fuzzy(V0, V3) :- not head(V0, V3), propellers(V0, V3)."],"b":["- part_of_body(V2, V3) :- fuzzy(V2, V3).","propellers(V3, V3) :- fuzzy(V2, V3)."],"c":["literature(V0, V2) :- not head(V0, V3), - small_animal(V0, V3), judgment_day(V0, V2, V3).","demand_satisfaction(V0, V2, V3) :- literature(V0, V2), judgment_day(V0, V2, V3)."],"d":["literature(V0, V2) :- judgment_day(V0, V2, V3), propellers(V0, V3), not mother_puppies(V0, V2, V3).","propellers(V0, V3) :- not head(V0, V3), hod(V0, V2, V3), not bread(V0, V2, V3)."],"e":["- chorus(V0, V3) :- - red_and_white(V0, V1, V3).","petroleum(V2, V3) :- - delaware_bay(V1, V2, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_11_5_8_7_10_0.5_1.0_5_2_3","seed":11,"num_facts":8,"num_rules":9,"num_related_predicates":17,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" dogs(\"Brian\", \"Kayla\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- bed(\"Brian\", \"Alexander\").","animal(\"Brian\", \"Kayla\").","- shadow(\"Kayla\", \"Alexander\").","- stone_crab(\"Brian\", \"Kayla\").","- dining_table(\"Kayla\", \"Alexander\").","- steak_house(\"Brian\", \"Kayla\").","- smell_food(\"Brian\", \"Kayla\").","soft_shell_crab(\"Gabriel\", \"Brian\")."],"noisy_facts":["fun_artistic_activities(\"Gabriel\", \"Kayla\").","- values(\"Gabriel\", \"Kayla\").","- zambian(\"Kayla\", \"Alexander\").","chicken(\"Brian\", \"Kayla\").","- widgeon(\"Brian\", \"Alexander\").","fruit_fly(\"Brian\", \"Kayla\").","fox(\"Alexander\").","oklahoma(\"Brian\", \"Alexander\").","- ruddy_duck(\"Gabriel\", \"Brian\").","bird(\"Brian\", \"Kayla\").","pinole(\"Gabriel\", \"Kayla\")."],"min_fact_dicts_for_query":["- bed(\"Brian\", \"Alexander\").","animal(\"Brian\", \"Kayla\").","- stone_crab(\"Brian\", \"Kayla\").","- dining_table(\"Kayla\", \"Alexander\")."],"noiseless_rules":["- dogs(V1, V2) :- flea(V3), - eating_quickly(V0, V1), crab(V0, V1), animal(V1, V2), not shadow(V2, V3).","flea(V3) :- - bed(V1, V3), - dining_table(V2, V3).","- buying_hamburger(V1, V2) :- - bed(V1, V3), - dining_table(V2, V3).","japanese_crab(V1, V2) :- - bed(V1, V3), - dining_table(V2, V3).","making_love(V1, V3) :- - bed(V1, V3), - dining_table(V2, V3).","- eating_quickly(V2, V1) :- - buying_hamburger(V1, V2), - stone_crab(V1, V2), - dining_table(V2, V3), not steak_house(V1, V2), not smell_food(V1, V2).","- eating_dinner(V3) :- - buying_hamburger(V1, V2), - stone_crab(V1, V2), - dining_table(V2, V3), not steak_house(V1, V2), not smell_food(V1, V2).","crab(V0, V1) :- japanese_crab(V1, V2), - eating_quickly(V0, V1), not alaska_king_crab(V0, V1), not stone_crab(V1, V2), not -soft_shell_crab(V0, V1).","- alaska_king_crab(V1, V1) :- making_love(V1, V3), not eating_dinner(V3)."],"noisy_rules":{"a":["dogs(V1, V2) :- buying_hamburger(V1, V2), - japanese_crab(V1, V2), eating_quickly(V0, V1), eating_dinner(V3), - crab(V0, V1).","dogs(V1, V1) :- alaska_king_crab(V0, V1)."],"b":["- soft_shell_crab(V1, V1) :- dogs(V1, V2).","smell_food(V1, V2) :- not japanese_crab(V1, V2), dogs(V1, V2)."],"c":["- crab(V0, V1) :- buying_hamburger(V1, V2), not japanese_crab(V1, V2), - making_love(V1, V3), eating_quickly(V0, V1), eating_dinner(V3).","- soft_shell_crab(V0, V1) :- - flea(V3), - japanese_crab(V1, V2), eating_quickly(V0, V1), - crab(V0, V1), alaska_king_crab(V0, V1)."],"d":["eating_quickly(V1, V1) :- - japanese_crab(V1, V2), not -fruit_fly(V1, V2).","- animal(V1, V2) :- - flea(V3), buying_hamburger(V1, V2), not -bird(V1, V2), not -chicken(V1, V2)."],"e":["- duck(V1, V2) :- - ruddy_duck(V0, V1), - values(V0, V2), - widgeon(V1, V3).","- gulf(V1, V3) :- fox(V3), pinole(V0, V2), fun_artistic_activities(V0, V2), oklahoma(V1, V3), not zambian(V2, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_62_8_10_10_10_0.5_1.0_3_3_4","seed":62,"num_facts":12,"num_rules":11,"num_related_predicates":23,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"laminate(\"Amanda\", \"Elizabeth\", \"Jason\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["golf_course(\"Amanda\", \"Alexander\", \"Tyler\").","head(\"Amanda\", \"Alexander\").","on(\"Jason\", \"Tyler\").","sky(\"Alexander\", \"Elizabeth\", \"Jason\").","experience(\"Alexander\", \"Elizabeth\").","object(\"Alexander\", \"Elizabeth\").","obidoxime_chloride(\"Amanda\", \"Elizabeth\", \"Jason\").","counter(\"Amanda\", \"Elizabeth\", \"Jason\").","excitement(\"Alexander\", \"Tyler\").","learning_about_clothes(\"Alexander\", \"Tyler\").","row_of_bricks(\"Amanda\", \"Elizabeth\", \"Tyler\").","damp_proof_course(\"Alexander\", \"Jason\", \"Tyler\")."],"noisy_facts":[],"min_fact_dicts_for_query":["golf_course(\"Amanda\", \"Alexander\", \"Tyler\").","head(\"Amanda\", \"Alexander\").","on(\"Jason\", \"Tyler\").","sky(\"Alexander\", \"Elizabeth\", \"Jason\").","experience(\"Alexander\", \"Elizabeth\").","object(\"Alexander\", \"Elizabeth\").","obidoxime_chloride(\"Amanda\", \"Elizabeth\", \"Jason\").","counter(\"Amanda\", \"Elizabeth\", \"Jason\").","excitement(\"Alexander\", \"Tyler\").","learning_about_clothes(\"Alexander\", \"Tyler\").","row_of_bricks(\"Amanda\", \"Elizabeth\", \"Tyler\").","damp_proof_course(\"Alexander\", \"Jason\", \"Tyler\")."],"noiseless_rules":["laminate(V0, V2, V3) :- cognition(V0, V2), layer(V0, V3), plywood(V0, V2, V3).","course(V2) :- golf_course(V0, V1, V4), row_of_bricks(V0, V2, V4), damp_proof_course(V1, V3, V4).","cognition(V0, V2) :- content(V0, V1), obidoxime_chloride(V0, V2, V3), counter(V0, V2, V3).","layer(V2, V2) :- course(V2), blanket(V2).","knowledge_domain(V1, V2) :- head(V0, V1), on(V3, V4), sky(V1, V2, V3).","mackinaw(V1, V2, V3) :- head(V0, V1), on(V3, V4), sky(V1, V2, V3).","above(V1, V4) :- head(V0, V1), on(V3, V4), sky(V1, V2, V3).","content(V1, V1) :- knowledge_domain(V1, V2), experience(V1, V2), object(V1, V2).","education(V1, V1, V1) :- knowledge_domain(V1, V2), experience(V1, V2), object(V1, V2).","blanket(V2) :- mackinaw(V1, V2, V3), education(V0, V1, V3).","plywood(V4, V4, V1) :- above(V1, V4), excitement(V1, V4), learning_about_clothes(V1, V4)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_94_10_10_9_11_0.5_1.0_3_0_1","seed":94,"num_facts":14,"num_rules":11,"num_related_predicates":25,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.4444444444444446,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"conveying_idea.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- use.","- hydrozoan.","survey.","- print.","- palmature.","sound.","blasting_cap.","femur.","red_blue.","- flesh.","- northern_bobwhite.","- dollhouse.","hepatomegaly.","going_to_sleep."],"noisy_facts":["sadness.","bridge.","gabriel.","major_term.","sweatshop."],"min_fact_dicts_for_query":["- hydrozoan."],"noiseless_rules":["conveying_idea :- atomic_energy, not geological_formation, not -from_america.","- thirteen :- - use, not flesh, not northern_bobwhite.","pull_cart :- - notebook, not -corporation, not -going_to_sleep.","atomic_energy :- - hydrozoan, not dollhouse, not -hepatomegaly.","- notebook :- survey, not -femur, not -red_blue.","social_event :- survey, not -femur, not -red_blue.","- geological_formation :- - thirteen, not -pull_cart, not -social_event.","ox :- anthracite.","corporation :- ox, not -sound, not -blasting_cap.","from_america :- - print, not flesh, not -going_to_sleep.","anthracite :- - palmature."],"noisy_rules":{"a":["- conveying_idea :- - anthracite.","- conveying_idea :- not pull_cart, - atomic_energy."],"b":["- hepatomegaly :- geological_formation, - conveying_idea.","thirteen :- - atomic_energy, not -notebook, not conveying_idea."],"c":["print :- - corporation.","- going_to_sleep :- - atomic_energy, not -geological_formation."],"d":["flesh :- not social_event, not from_america, sadness.","- anthracite :- not from_america, major_term."],"e":["- enjoying_treat :- bridge, sweatshop.","food :- gabriel."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_61_6_8_1_2_0.5_1.0_3_1_2","seed":61,"num_facts":2,"num_rules":9,"num_related_predicates":11,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"P8(\"Amber\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P9(\"Amber\").","P10."],"noisy_facts":["- P13(\"Amber\").","- P15(\"Amber\").","- P11(\"Amber\").","P20(\"Amber\").","- P18(\"Amber\").","P19(\"Amber\").","- P17(\"Amber\").","P16(\"Amber\").","- P12(\"Amber\")."],"min_fact_dicts_for_query":["- P9(\"Amber\")."],"noiseless_rules":["P8(V1) :- - P1(V1), not -P3(V1), not P7(V1).","P0(V2) :- P4(V2), not -P5(V2).","- P1(V1) :- - P9(V1).","P2(V1) :- - P9(V1).","P3(V1) :- - P6(V1).","P4(V1) :- - P6(V1).","P5(V1) :- - P1(V1), not -P2(V1).","- P6(V1) :- - P1(V1), not -P2(V1).","- P7(V2) :- P0(V2), not -P10."],"noisy_rules":{"a":["- P8(V1) :- - P2(V1), - P4(V2).","- P8(V1) :- - P0(V2), - P3(V1)."],"b":["P7(V1) :- - P5(V2), - P8(V1).","P1(V1) :- not P2(V1), not -P7(V1), - P8(V1)."],"c":["P6(V1) :- - P2(V1), - P5(V2), not -P7(V1).","- P10(V1) :- - P3(V1), - P4(V2), not -P6(V1)."],"d":["P7(V1) :- P1(V1), - P2(V1), - P11(V1).","P1(V1) :- not -P6(V1), not P12(V1), - P13(V1)."],"e":["- P14(V1) :- - P15(V1), not -P16(V1), - P17(V1).","- P21(V1) :- - P18(V1), not -P19(V1), not -P20(V1)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_60_6_9_4_5_0.5_1.0_3_1_2","seed":60,"num_facts":6,"num_rules":10,"num_related_predicates":16,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":" P9(\"Justin\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P10(\"Justin\").","P11(\"Justin\").","P12(\"Justin\").","P13(\"Justin\").","P14(\"Justin\").","P15(\"Justin\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P10(\"Justin\").","P11(\"Justin\").","P12(\"Justin\").","P13(\"Justin\").","P14(\"Justin\").","P15(\"Justin\")."],"noiseless_rules":["P9(V1) :- P0(V1), P1(V1), P5(V1).","P0(V1) :- P3(V1), P4(V1), P6(V1).","P1(V1) :- P3(V1), P7(V1).","P2(V1) :- P3(V1), P7(V1).","P3(V1) :- P10(V1), P15(V1).","P4(V1) :- P2(V1), P8(V1), P12(V1).","P5(V1) :- P11(V1), P13(V1), P14(V1).","P6(V1) :- P11(V1), P13(V1), P14(V1).","P7(V1) :- P11(V1), P13(V1), P14(V1).","P8(V1) :- P11(V1), P13(V1), P14(V1)."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_27_9_12_10_11_0.5_1.0_5_0_1","seed":27,"num_facts":14,"num_rules":13,"num_related_predicates":27,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" P12.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P13.","- P14.","P15.","- P16.","P17.","P18.","P19.","- P20.","- P21.","- P22.","P23.","- P24.","- P25.","P26."],"noisy_facts":[],"min_fact_dicts_for_query":["- P13."],"noiseless_rules":["- P12 :- P1, not P4, not P8.","P0 :- P3, not -P5, not P9, not -P26.","P1 :- - P13, not -P17, not -P18, not -P19, not P20.","- P2 :- - P13, not -P17, not -P18, not -P19, not P20.","P3 :- - P11.","- P4 :- P0, not P2, not -P6, not -P10, not P25.","P5 :- - P9, not P14.","P6 :- - P9, not P14.","P7 :- - P9, not P14.","- P8 :- P15.","- P9 :- P15.","P10 :- - P16.","- P11 :- P7, not P21, not P22, not -P23, not P24."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_70_9_12_12_12_0.5_1.0_3_0_1","seed":70,"num_facts":15,"num_rules":13,"num_related_predicates":28,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":13,"target_query":"degree_centigrade.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- small_mountain.","housing.","hyperpnea.","- bat.","- tomb.","- prepare_rocket_for_departure.","- hold_mixed_nuts.","kill_birds.","- damper.","- scrambled.","- chest_presses.","hear_very_well.","- serving_dish.","- chinese.","major."],"noisy_facts":["bill_of_attainder.","hold_grapes.","fist.","panting."],"min_fact_dicts_for_query":["- small_mountain."],"noiseless_rules":["degree_centigrade :- possible, not -percussion, not -statutory_offense.","- nutshell :- - corner, not bat, not tomb.","possible :- - small_mountain, not -hear_very_well, not serving_dish.","- bit :- - small_mountain, not -hear_very_well, not serving_dish.","- kaiser_roll :- - small_mountain, not -hear_very_well, not serving_dish.","- corner :- housing, not scrambled, not chest_presses.","children :- hyperpnea, not -kill_birds, not damper.","assemble :- hyperpnea, not -kill_birds, not damper.","arcus :- in_north_america, not chinese, not -major.","in_north_america :- children, not prepare_rocket_for_departure, not hold_mixed_nuts.","percussion :- - nutshell, not bit, not -assemble.","- pork :- - nutshell, not bit, not -assemble.","statutory_offense :- - kaiser_roll, not -arcus, not pork."],"noisy_rules":{"a":["- degree_centigrade :- corner.","- degree_centigrade :- - children."],"b":["scrambled :- kaiser_roll, not percussion, not degree_centigrade.","bit :- - children, not in_north_america, not degree_centigrade."],"c":["- possible :- - in_north_america.","nutshell :- - children."],"d":["tomb :- - assemble, not -bill_of_attainder.","northern_spy :- - possible."],"e":["- expensive_food :- hold_grapes.","squab :- fist, not -panting."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_59_9_10_3_4_0.5_1.0_3_0_1","seed":59,"num_facts":6,"num_rules":11,"num_related_predicates":17,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"P10.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P11.","P12.","P13.","P14.","P15.","P16."],"noisy_facts":["P19.","P24.","- P21.","P17.","P23.","P18."],"min_fact_dicts_for_query":["- P11."],"noiseless_rules":["P10 :- - P0, not -P2, not P3.","- P0 :- - P11, not -P14, not -P15.","P1 :- - P11, not -P14, not -P15.","P2 :- - P4, not P5.","- P3 :- P1.","- P4 :- P12.","- P5 :- - P8, not P9.","- P6 :- P1, not -P13.","- P7 :- P1, not -P13.","- P8 :- - P6.","- P9 :- - P7, not -P16."],"noisy_rules":{"a":["- P10 :- P6, not -P9.","- P10 :- not P1, P5, P9."],"b":["- P12 :- P7, not -P9, not P10.","- P15 :- - P2, P3, not P10."],"c":["P5 :- P0, - P2, not -P8.","P6 :- P0, not P1."],"d":["- P13 :- P0, P17.","- P15 :- not -P0, P18."],"e":["- P20 :- P19, not P21.","- P22 :- P23, not -P24."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_93_10_10_10_11_0.5_1.0_5_2_3","seed":93,"num_facts":15,"num_rules":11,"num_related_predicates":26,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" wrongdoer(\"Jeffrey\", \"Carla\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["beast(\"Jeffrey\", \"Carla\").","mountebank(\"Corey\").","- humming(\"Carla\", \"Trevor\").","heaven(\"Corey\", \"Carla\").","letter(\"Jeffrey\", \"Carla\").","- hypocrite(\"Corey\", \"Jeffrey\").","front_man(\"Jeffrey\", \"Carla\").","decoy(\"Jeffrey\", \"Trevor\").","two_timer(\"Carla\", \"Trevor\").","- raper(\"Jeffrey\", \"Carla\").","being(\"Jeffrey\", \"Carla\").","- group_action(\"Jeffrey\", \"Carla\").","- criminals(\"Jeffrey\", \"Carla\").","- affiliation(\"Jeffrey\").","- fraternization(\"Jeffrey\")."],"noisy_facts":["eye(\"Corey\", \"Carla\").","- female_offspring(\"Trevor\").","- peanut(\"Corey\", \"Jeffrey\").","imp(\"Corey\", \"Carla\").","- action(\"Corey\", \"Jeffrey\").","- army_brat(\"Jeffrey\", \"Trevor\").","- reviewing_film(\"Corey\", \"Carla\")."],"min_fact_dicts_for_query":["beast(\"Jeffrey\", \"Carla\").","mountebank(\"Corey\").","- hypocrite(\"Corey\", \"Jeffrey\").","front_man(\"Jeffrey\", \"Carla\").","decoy(\"Jeffrey\", \"Trevor\")."],"noiseless_rules":["- wrongdoer(V1, V2) :- - attacker(V1, V2), - deceiver(V2, V3), not -singing(V2, V3), not jesus(V2, V3).","- attacker(V1, V2) :- beast(V1, V2), not raper(V1, V2).","- deceiver(V2, V3) :- mountebank(V0), - hypocrite(V0, V1), front_man(V1, V2), decoy(V1, V3), not -two_timer(V2, V3).","table_talk(V1) :- mountebank(V0), - hypocrite(V0, V1), front_man(V1, V2), decoy(V1, V3), not -two_timer(V2, V3).","association(V1, V1) :- table_talk(V1), not affiliation(V1), not fraternization(V1).","singing(V2, V3) :- - humming(V2, V3).","- jesus(V2, V3) :- - person(V0, V1), - god(V0, V2), - social_activity(V2, V3).","- person(V0, V1) :- - character(V0, V1).","- god(V0, V2) :- heaven(V0, V2).","- character(V2, V1) :- letter(V1, V2), not raper(V1, V2), not -being(V1, V2), not group_action(V1, V2), not criminals(V1, V2).","- social_activity(V2, V2) :- association(V0, V2)."],"noisy_rules":{"a":["wrongdoer(V1, V2) :- attacker(V1, V2), not -deceiver(V2, V3), not -jesus(V2, V3), social_activity(V2, V3).","wrongdoer(V1, V2) :- attacker(V1, V2), social_activity(V2, V3)."],"b":["- being(V1, V2) :- wrongdoer(V1, V2).","- being(V1, V2) :- god(V0, V2), wrongdoer(V1, V2)."],"c":["person(V0, V1) :- attacker(V1, V2), deceiver(V2, V3), character(V0, V1).","fraternization(V2) :- - singing(V2, V3)."],"d":["affiliation(V3) :- deceiver(V2, V3), - association(V0, V2), not -god(V0, V2), social_activity(V2, V3), not reviewing_film(V0, V2).","group_action(V1, V2) :- not -attacker(V1, V2), - singing(V2, V3), character(V0, V1), not -social_activity(V2, V3), not action(V0, V1)."],"e":["- pupil(V0, V2) :- eye(V0, V2).","- child(V1) :- - female_offspring(V3), - peanut(V0, V1), imp(V0, V2), not army_brat(V1, V3)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_65_10_13_12_12_0.5_1.0_3_0_1","seed":65,"num_facts":14,"num_rules":14,"num_related_predicates":28,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":2.888888888888889,"num_noise_rules_per_type":2,"num_rules_with_default_negation":12,"target_query":" cow.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["beef.","- alarm.","withers.","- trip_hikers.","subfigure.","furry.","portal.","doves.","rock_and.","- misrepresentation.","- equine.","rhinoceros.","aquatic_plant.","- aurochs."],"noisy_facts":["- entertaining_people.","eubacteria.","- sense_danger."],"min_fact_dicts_for_query":["beef."],"noiseless_rules":["- cow :- hoatzin, not springer, not -udder.","hoatzin :- - act, not -heifer, not misrepresentation.","- act :- horse, not trip_hikers, not -subfigure.","- three_notes :- horse, not trip_hikers, not -subfigure.","horse :- - saddle_horse, not poll, not -withers.","- springer :- ox, not -furry, not -portal.","- saddle_horse :- beef.","- cattle :- beef.","udder :- - alarm, not -doves, not -rock_and.","- poll :- - cattle, not equine, not -rhinoceros.","- odd_toed_ungulate :- - cattle, not equine, not -rhinoceros.","ox :- - odd_toed_ungulate, not aurochs.","- ungulate :- - odd_toed_ungulate, not aurochs.","heifer :- - three_notes, not ungulate, not -aquatic_plant."],"noisy_rules":{"a":["cow :- springer, not heifer.","cow :- saddle_horse, - udder, not -poll."],"b":["cattle :- - ox, cow.","saddle_horse :- cow."],"c":["misrepresentation :- saddle_horse.","- udder :- - horse, cattle, not -ungulate."],"d":["equine :- springer.","equine :- - horse."],"e":["- black_crappie :- eubacteria.","- ratatouille :- - entertaining_people, not sense_danger."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_58_9_12_1_4_0.5_1.0_5_0_1","seed":58,"num_facts":5,"num_rules":13,"num_related_predicates":18,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.125,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"bars.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- rightist.","- bar.","square.","cars.","- adult."],"noisy_facts":["saturniid.","company.","bank.","- farm.","pacifist.","- lymantriid.","- reading."],"min_fact_dicts_for_query":["- rightist."],"noiseless_rules":["bars :- banks, not adult.","conservative :- - rightist, not -square.","simpleton :- - rightist, not -square.","customers :- - bar.","place :- - bar.","banks :- conservative, not business, not place_money_on_counter, not -money, not rightist.","- profit :- square.","- business :- simpleton, not -customers, not profit, not sole_proprietorship.","- corner_well :- square, not -cars.","- place_money_on_counter :- - corner_well, not location.","- sole_proprietorship :- - corner_well, not location.","money :- place.","- location :- place."],"noisy_rules":{"a":["- bars :- - simpleton.","- bars :- profit, business, corner_well, not -place_money_on_counter, location."],"b":["- customers :- not customers, - banks, not -business, - bars.","- place :- - bars."],"c":["location :- - conservative, - simpleton, not -sole_proprietorship.","place_money_on_counter :- not customers, corner_well."],"d":["business :- not customers, not banks, - farm, bank, company.","adult :- not conservative, not -sole_proprietorship, pacifist."],"e":["berkshire :- - reading.","moth :- - lymantriid, saturniid."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_31_5_4_1_4_0.5_1.0_5_0_1","seed":31,"num_facts":4,"num_rules":5,"num_related_predicates":9,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":3,"target_query":" P4.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P5.","- P6.","- P7.","P8."],"noisy_facts":["P10.","P11.","- P16.","P21.","P19.","P20.","- P14.","P18.","P15.","- P9.","P22."],"min_fact_dicts_for_query":["P5."],"noiseless_rules":["- P4 :- P0, not -P2, not P3, not -P5, not P7.","P0 :- P5.","- P1 :- - P6.","P2 :- - P7, not -P8.","- P3 :- - P1, not -P8."],"noisy_rules":{"a":["P4 :- P1.","P4 :- - P0, not -P1, not P2, P3."],"b":["P7 :- - P2, not -P4.","P6 :- not -P3, P4."],"c":["P3 :- - P0, P1, - P2.","P6 :- - P0, not -P1."],"d":["P1 :- not P0, - P2, - P9, P10.","- P12 :- P11."],"e":["- P13 :- - P14, P15, - P16.","- P17 :- not -P18, P19, P20, not -P21, P22."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_18_7_9_5_7_0.5_1.0_5_0_1","seed":18,"num_facts":6,"num_rules":10,"num_related_predicates":16,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" P9.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P10.","P11.","- P12.","- P13.","P14.","- P15."],"noisy_facts":["P21.","P17.","P18.","P27.","P16.","P22.","P24.","- P19.","P25.","P26."],"min_fact_dicts_for_query":["- P10."],"noiseless_rules":["- P9 :- - P3, not P4, not P7.","- P0 :- - P10.","- P1 :- - P10.","- P2 :- - P0.","- P3 :- - P1, not P4, not P6.","- P4 :- - P2, not -P11, not P12, not P13, not -P14.","P5 :- - P2, not -P11, not P12, not P13, not -P14.","- P6 :- P8, not P15.","- P7 :- P5, not -P11.","P8 :- P5, not -P11."],"noisy_rules":{"a":["P9 :- P1, not -P7.","P9 :- P2, not -P3, P7, - P8."],"b":["- P8 :- not -P2, P3, not -P9.","- P8 :- P1, not -P3, not P5, P7, not -P9."],"c":["- P8 :- P4, not P5, not -P6, P7.","P10 :- not -P2, not -P3, not P5, - P8."],"d":["P4 :- not -P1, not P8, not -P16, P17.","- P8 :- P2, not P5, not -P6, not -P18, not P19."],"e":["P20 :- not -P21, P22.","P23 :- not -P24, P25, P26, not -P27."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_61_9_11_11_13_0.5_1.0_5_0_1","seed":61,"num_facts":15,"num_rules":12,"num_related_predicates":27,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"P11.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P12.","P13.","- P14.","- P15.","- P16.","P17.","- P18.","- P19.","- P20.","P21.","P22.","P23.","- P24.","P25.","P26."],"noisy_facts":["P31.","- P33.","- P28.","P29.","P27."],"min_fact_dicts_for_query":["- P12."],"noiseless_rules":["P11 :- - P0, not P3, not P7, not P9.","- P0 :- P5, not -P8, not P20, not -P21, not -P22.","P1 :- - P12.","- P2 :- - P12.","- P3 :- P13.","P4 :- P13.","P5 :- P1, not -P4, not -P6.","P6 :- - P10, not -P21.","- P7 :- - P14, not P19.","P8 :- - P14, not P19.","- P9 :- - P15, not -P23, not P24, not -P25, not -P26.","- P10 :- - P2, not P16, not -P17, not P18, not P19."],"noisy_rules":{"a":["- P11 :- not -P2, P3, not P5, not P8.","- P11 :- not P1, - P6, not -P7."],"b":["- P23 :- not -P0, - P1, P2, not P5, not P11.","P15 :- - P5, not -P9, not P11."],"c":["P7 :- not -P0, P2, - P4, P10.","P0 :- not -P2, P3, P7."],"d":["- P1 :- - P8, not -P27.","- P22 :- not P4, - P28."],"e":["P30 :- not -P29, P31.","P32 :- - P33."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_31_10_14_13_13_0.5_1.0_5_0_1","seed":31,"num_facts":16,"num_rules":15,"num_related_predicates":31,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.4444444444444446,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":" ordinand.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["neck.","- prickly_edged_leaf.","bully.","- glaze.","golden_fur.","- kerosene.","- sit_on.","international_court_of_justice.","subsistence.","- unification_church.","- horned_puffin.","- sofabed.","pin_oak.","- pea.","- round_dish.","openings."],"noisy_facts":["- making_love.","- fingertip.","- birth_defect.","- bahai.","winning_eating_competition.","new_yorker."],"min_fact_dicts_for_query":["- prickly_edged_leaf."],"noiseless_rules":["- ordinand :- detonate, not -marker, not -australian_turtledove, not lie_down, not -hiatus.","chinese_cabbage :- neck.","lory :- neck.","detonate :- - take_in, not angle.","marker :- - prickly_edged_leaf, not glaze, not -golden_fur, not kerosene, not sit_on.","potassium_cyanide :- - prickly_edged_leaf, not glaze, not -golden_fur, not kerosene, not sit_on.","- smell_organ :- - prickly_edged_leaf, not glaze, not -golden_fur, not kerosene, not sit_on.","- take_in :- potassium_cyanide, not round_dish, not -openings.","vixen :- potassium_cyanide, not round_dish, not -openings.","australian_turtledove :- - smell_organ, not -vixen.","- lie_down :- bully.","hiatus :- chinese_cabbage, not horned_puffin, not sofabed, not -pin_oak, not pea.","grand_duchy :- chinese_cabbage, not horned_puffin, not sofabed, not -pin_oak, not pea.","aircraft :- grand_duchy.","- angle :- lory, not -aircraft, not -international_court_of_justice, not -subsistence, not unification_church."],"noisy_rules":{"a":["ordinand :- - vixen.","ordinand :- - chinese_cabbage, - hiatus."],"b":["- potassium_cyanide :- - grand_duchy, not -ordinand.","glaze :- - grand_duchy, ordinand."],"c":["- detonate :- not chinese_cabbage, not lory, not potassium_cyanide, not -take_in, - vixen.","angle :- not -lie_down, - hiatus."],"d":["round_dish :- not marker, - hiatus, not fingertip.","sit_on :- not marker, - birth_defect."],"e":["- supernaturalism :- winning_eating_competition.","plastic_art :- new_yorker, - making_love, - bahai."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_12_9_10_5_6_0.5_1.0_5_0_1","seed":12,"num_facts":9,"num_rules":11,"num_related_predicates":20,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"bouncy.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- musical_performance.","satin_bowerbird.","- stagehand.","- sallowness.","pullet.","hygeine.","- colorful.","- prickly_edged_leaf.","creation."],"noisy_facts":[],"min_fact_dicts_for_query":["satin_bowerbird."],"noiseless_rules":["bouncy :- - eelgrass.","hunt_foxes :- - washington_dc, not musical_performance.","- ripcord :- - washington_dc, not musical_performance.","keyboard :- hunt_foxes, not -important_components_of_humans, not -testiness.","believe_in_world_of_peace :- - ripcord, not -north_atlantic_council, not -pullet, not -hygeine, not colorful.","- eelgrass :- keyboard, not washington_dc.","- washington_dc :- satin_bowerbird.","important_components_of_humans :- - stagehand.","bacteria :- - stagehand.","testiness :- believe_in_world_of_peace, not -bacteria.","north_atlantic_council :- - sallowness, not prickly_edged_leaf, not -creation."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_72_5_5_2_4_0.5_1.0_5_3_4","seed":72,"num_facts":5,"num_rules":6,"num_related_predicates":11,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"P5(\"Michael\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["- P6(\"Sean\", \"Michael\", \"Mason\").","P7(\"Sean\", \"Michael\", \"Mason\").","P8(\"Sean\", \"Michael\", \"Mason\").","- P9(\"Sean\", \"Jamie\", \"Michael\").","P10(\"Sean\", \"Jamie\", \"Michael\")."],"noisy_facts":["- P20(\"Sean\", \"Amy\", \"Mason\").","P18(\"Sean\", \"Jamie\", \"Amy\").","P12(\"Sean\", \"Michael\", \"Mason\").","P13(\"Michael\", \"Amy\").","P15(\"Jamie\", \"Michael\", \"Mason\").","P19(\"Sean\", \"Jamie\", \"Mason\").","- P17(\"Sean\", \"Jamie\", \"Michael\")."],"min_fact_dicts_for_query":["- P6(\"Sean\", \"Michael\", \"Mason\").","- P9(\"Sean\", \"Jamie\", \"Michael\")."],"noiseless_rules":["P5(V2) :- - P1(V2, V3), P2(V2, V4), - P9(V0, V1, V2), not -P10(V0, V1, V2).","- P0(V0, V2, V4) :- - P6(V0, V2, V4).","- P1(V2, V2) :- - P0(V0, V2, V4), not -P3(V0, V2, V4), not -P4(V0, V2, V4), not P6(V0, V2, V4).","P2(V2, V4) :- - P6(V0, V2, V4), not -P7(V0, V2, V4).","P3(V0, V2, V4) :- - P6(V0, V2, V4), not -P7(V0, V2, V4).","P4(V0, V2, V4) :- P8(V0, V2, V4)."],"noisy_rules":{"a":["- P5(V2) :- P0(V0, V2, V4), P1(V2, V3), - P2(V2, V4), not P3(V0, V2, V4), not P4(V0, V2, V4).","- P5(V2) :- - P2(V2, V4), - P3(V0, V2, V4)."],"b":["- P2(V2, V4) :- - P4(V0, V2, V4), not P5(V2).","P1(V2, V2) :- - P5(V2)."],"c":["P9(V0, V3, V2) :- P1(V2, V3), - P2(V2, V4), - P3(V0, V2, V4), not P4(V0, V2, V4).","P6(V2, V2, V4) :- - P2(V2, V4)."],"d":["- P11(V2) :- not -P0(V0, V2, V4), P1(V2, V3), not P3(V0, V2, V4), - P4(V0, V2, V4), not -P12(V0, V2, V4).","- P7(V3, V2, V2) :- P1(V2, V3), not -P13(V2, V3)."],"e":["P14(V1, V4) :- P15(V1, V2, V4).","P16(V1, V2) :- - P17(V0, V1, V2), P18(V0, V1, V3), P19(V0, V1, V4), not P20(V0, V3, V4)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_75_9_14_4_7_0.5_1.0_5_0_1","seed":75,"num_facts":8,"num_rules":15,"num_related_predicates":23,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" weaponry.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["pigs.","- gabonese.","hand_grenade.","sheep.","chicken.","- fibrous_dysplasia_of_bone.","- smoke_bomb.","- seaplane."],"noisy_facts":[],"min_fact_dicts_for_query":["pigs."],"noiseless_rules":["- weaponry :- bomb, not -dumb_bomb, not ammunition, not animal.","fly :- pigs.","rifle_grenade :- pigs.","- omnivorous :- pigs.","bomb :- microwave_bomb, not -dumb_bomb, not balloon_bomb, not -grenade, not smoke_bomb.","- duck :- microwave_bomb, not -dumb_bomb, not balloon_bomb, not -grenade, not smoke_bomb.","microwave_bomb :- fly, not simpleton.","bird :- fly, not simpleton.","dumb_bomb :- - gabonese, not fibrous_dysplasia_of_bone, not smoke_bomb, not seaplane.","- balloon_bomb :- rifle_grenade.","- ammunition :- rifle_grenade, not -hand_grenade.","grenade :- rifle_grenade, not -hand_grenade.","- animal :- - omnivorous, not duck, not -bird, not follower, not -chicken.","- simpleton :- sheep.","- follower :- sheep."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_84_8_9_7_10_0.5_1.0_5_0_1","seed":84,"num_facts":9,"num_rules":10,"num_related_predicates":19,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"travel.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["afterlife.","milk_can.","- past.","airplanes.","captain.","ark.","- sunset.","drinker.","- marsupials."],"noisy_facts":["- intonation.","photosynthesis.","chub.","nest.","- humming.","- duckling.","religious.","taxi.","crooning."],"min_fact_dicts_for_query":["afterlife."],"noiseless_rules":["travel :- - boat, not taking_bus, not -airplanes.","- bus :- wings, not -captain.","airplane :- - bird, not -afterlife.","- boat :- afterlife, not past, not -airplanes, not -captain, not -ark.","wings :- afterlife, not past, not -airplanes, not -captain, not -ark.","- life :- afterlife, not past, not -airplanes, not -captain, not -ark.","- time_period :- - life, not -morning.","- bird :- - time_period.","morning :- milk_can.","- taking_bus :- - bus, not -airplane, not sunset, not -drinker, not marsupials."],"noisy_rules":{"a":["- travel :- not -bus, not morning, taking_bus.","- travel :- boat, life, not -time_period, - morning, taking_bus."],"b":["- drinker :- - travel.","sunset :- - travel."],"c":["- morning :- - wings.","- wings :- not -bus, time_period, not -bird."],"d":["bird :- boat, nest.","form_of_transportation :- bus, - airplane, not morning, taking_bus, not -taxi."],"e":["bull_market :- not -photosynthesis, not -religious, chub, not duckling.","singing :- not -crooning, not humming, - intonation."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_74_8_9_7_10_0.5_1.0_5_0_1","seed":74,"num_facts":11,"num_rules":10,"num_related_predicates":21,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.5714285714285714,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"living.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["plaster.","nest.","helmet.","branch.","bird.","chicken.","duck.","chick.","table.","door.","floor."],"noisy_facts":[],"min_fact_dicts_for_query":["plaster.","nest.","helmet.","branch.","bird.","chicken.","duck.","chick.","table.","door.","floor."],"noiseless_rules":["living :- home, house, room, growing, animal.","farm :- plaster.","home :- nest.","house :- farm, bank.","room :- helmet, table, door, floor.","bank :- helmet, branch.","bear :- helmet, branch.","growing :- polar, bird, floor.","animal :- bear, bird, chicken, duck, chick.","polar :- bear, bird, chicken, duck, chick."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_17_9_13_7_8_0.5_1.0_3_0_1","seed":17,"num_facts":8,"num_rules":14,"num_related_predicates":22,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" never.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- balance_beam.","coronoid_process.","mane.","forks.","- varmint.","cannon.","kidnapper.","sikh."],"noisy_facts":[],"min_fact_dicts_for_query":["- balance_beam."],"noiseless_rules":["- never :- - furnish_home, not -nacreous_cloud, not wiping.","- furnish_home :- - balance_beam.","- grebe :- - balance_beam.","- bird_home :- - balance_beam.","- dredging_bucket :- - balance_beam.","nacreous_cloud :- - paste, not middle, not varmint.","- paste :- - grebe, not -mane, not -forks.","- garden_party :- - grebe, not -mane, not -forks.","- wiping :- old_world_buffalo, not -openings, not -coronoid_process.","old_world_buffalo :- - roll_down_hill, not -cannon, not -kidnapper.","openings :- - bird_home, not anseriform_bird.","- middle :- - garden_party.","- roll_down_hill :- - garden_party.","- anseriform_bird :- - dredging_bucket, not -nacreous_cloud, not -sikh."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_68_9_9_7_10_0.5_1.0_5_1_2","seed":68,"num_facts":12,"num_rules":10,"num_related_predicates":22,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"stable_gear(\"Janice\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- barn(\"Janice\").","hypocrite(\"Janice\").","- specific_seat_on_plane(\"Janice\").","spatchcock(\"Janice\").","- form_of_mass_transit(\"Janice\").","- when_extremely_hungry(\"Janice\").","- charge(\"Janice\").","skeleton_part(\"Janice\").","enjoyment_of_meal(\"Janice\").","- counter(\"Janice\").","dive_bomber(\"Janice\").","mosan(\"Janice\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- barn(\"Janice\")."],"noiseless_rules":["stable_gear(V2) :- - artifact(V2), not -electric(V2), not -dive_bomber(V2), not -mosan(V2).","- seed(V2) :- - barn(V2).","- artifact(V2) :- - kill_each_other(V2), not -gem(V2), not -lie(V2), not sing_songs(V2), not when_extremely_hungry(V2).","electric(V2) :- - seed(V2), not -julienne(V2), not -hypocrite(V2).","- kill_each_other(V2) :- - seed(V2), not -julienne(V2), not -hypocrite(V2).","gem(V2) :- lie(V2), not -invasion(V2).","julienne(V2) :- hypocrite(V2).","lie(V2) :- - specific_seat_on_plane(V2), not -mosan(V2).","invasion(V2) :- spatchcock(V2), not charge(V2), not -skeleton_part(V2), not -enjoyment_of_meal(V2), not counter(V2).","- sing_songs(V2) :- - form_of_mass_transit(V2)."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_15_5_6_1_2_0.5_1.0_5_0_1","seed":15,"num_facts":3,"num_rules":7,"num_related_predicates":10,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" winery.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["bird.","- machines.","- factory."],"noisy_facts":["- fish.","- duck.","distillery.","- manufacture.","- bill.","ambulacrum.","good_protein_food.","withers.","ships_boss.","- vivarium.","- blue.","soup."],"min_fact_dicts_for_query":["bird."],"noiseless_rules":["- winery :- - fly, not bottle_wine, not paper, not -planes, not -bird.","- fly :- bird.","- bottle_wine :- - machines, not factory.","- fail_to_work :- - machines, not factory.","- make_life_easier_for_humans :- - machines, not factory.","- paper :- - fail_to_work.","planes :- - make_life_easier_for_humans."],"noisy_rules":{"a":["winery :- fly, not -paper.","winery :- fly."],"b":["bottle_wine :- fail_to_work, winery.","paper :- bottle_wine, fail_to_work, paper, not -winery."],"c":["machines :- make_life_easier_for_humans, not planes.","- planes :- fly, not -bottle_wine, not -make_life_easier_for_humans, not -paper."],"d":["factory :- bottle_wine, - manufacture, distillery.","paper :- make_life_easier_for_humans, not bill."],"e":["water :- - fish, - blue, - duck, soup.","body_part :- withers, ambulacrum, not -good_protein_food, ships_boss, not vivarium."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_37_7_8_8_8_0.5_1.0_5_0_1","seed":37,"num_facts":10,"num_rules":9,"num_related_predicates":19,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" P8.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P9.","P10.","P11.","- P12.","- P13.","P14.","P15.","P16.","- P17.","- P18."],"noisy_facts":["- P28.","P23.","- P24.","- P27.","- P26.","P21.","P19."],"min_fact_dicts_for_query":["- P9."],"noiseless_rules":["- P8 :- - P0, not P1, not P2.","- P0 :- - P9.","- P1 :- - P4, not -P11, not P12, not P13, not -P14.","- P2 :- - P5.","- P3 :- - P5.","- P4 :- - P3, not P7.","- P5 :- P10, not -P15, not -P16, not P17, not P18.","P6 :- P10, not -P15, not -P16, not P17, not P18.","- P7 :- P6."],"noisy_rules":{"a":["P8 :- P0, not -P2, not -P7.","P8 :- not -P2, P4, not P6."],"b":["P12 :- not -P1, P3, - P6, P8.","- P16 :- not -P5, P8."],"c":["P4 :- P1, P2, not -P3, not -P7.","- P15 :- P0, not -P1, not -P3, not -P4, not -P5."],"d":["- P20 :- P3, not -P7, not -P19.","- P10 :- P2, P4, P5, - P6, not -P21."],"e":["P22 :- not -P23, - P24.","- P25 :- not P26, - P27, - P28."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_49_8_11_10_10_0.5_1.0_5_0_1","seed":49,"num_facts":14,"num_rules":12,"num_related_predicates":26,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5714285714285716,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"spectator.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- bird.","- first_class_airplane_seat.","canal.","bluffer.","- rill.","gut.","watercourse.","- strait.","chicken.","- man.","- chick.","contact.","discourtesy.","- harmonization."],"noisy_facts":[],"min_fact_dicts_for_query":["- first_class_airplane_seat."],"noiseless_rules":["spectator :- - people_with_too_much_money, not deceiver, not -spy.","two_legs :- - bird, not -chicken, not man, not chick, not -contact.","snoop :- - bird, not -chicken, not man, not chick, not -contact.","- people_with_too_much_money :- - first_class_airplane_seat.","channel :- canal, not rill, not -gut, not -watercourse, not strait.","humming :- canal, not rill, not -gut, not -watercourse, not strait.","- deceiver :- bluffer.","- cantillation :- bluffer.","- general :- two_legs, not cantillation.","intonation :- two_legs, not cantillation.","spy :- snoop, not -channel, not general, not singing, not -discourtesy.","- singing :- humming, not -intonation, not harmonization."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_51_7_8_3_5_0.5_1.0_5_0_1","seed":51,"num_facts":5,"num_rules":9,"num_related_predicates":14,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"pallet.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["gills.","bevel.","range.","school.","backyard."],"noisy_facts":[],"min_fact_dicts_for_query":["gills.","bevel.","range.","school.","backyard."],"noiseless_rules":["pallet :- shirts.","undertide :- gills.","grooming :- gills.","sugar :- gills.","outdoors :- grooming, bevel.","octal_digit :- undertide, sugar.","shirts :- grooming, octal_digit, watching_tv.","one_astronomical_unit_from_sun :- outdoors, range, school, backyard.","watching_tv :- sugar, one_astronomical_unit_from_sun."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_40_9_13_11_13_0.5_1.0_5_0_1","seed":40,"num_facts":14,"num_rules":14,"num_related_predicates":28,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" animal.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- fish.","- bite.","bottlenose_dolphin.","chicken.","duck.","chick.","- canary.","loving.","tried_judged_and_sentenced_in_court.","- dormitory.","- common_dolphin.","- grampus.","porpoise.","white_whale."],"noisy_facts":[],"min_fact_dicts_for_query":["- fish."],"noiseless_rules":["- animal :- creature, not -toothed_whale, not -bat, not -bird.","creature :- - fish.","water :- - fish.","toothed_whale :- water, not dolphin, not -chicken, not -white_whale.","drink :- water, not dolphin, not -chicken, not -white_whale.","bat :- - shell, not -food, not -loving, not -tried_judged_and_sentenced_in_court, not dormitory.","- shell :- snail, not egg.","snail :- - bite.","success :- - bite.","- nest :- - bite.","food :- drink, not -success.","bird :- - nest, not -chicken, not -duck, not -chick, not canary.","- egg :- - nest, not -chicken, not -duck, not -chick, not canary.","- dolphin :- bottlenose_dolphin, not common_dolphin, not grampus, not -porpoise, not -white_whale."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_78_6_6_4_6_0.5_1.0_3_0_1","seed":78,"num_facts":7,"num_rules":7,"num_related_predicates":14,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" hawk.","target_query_in_answerset":false,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["old_world_oriole.","audubons_caracara.","fur_on_bodies.","carancha.","litter.","look_grey_during_storm.","extremity."],"noisy_facts":[],"min_fact_dicts_for_query":["old_world_oriole.","audubons_caracara.","fur_on_bodies.","carancha.","litter.","look_grey_during_storm.","extremity."],"noiseless_rules":["hawk :- falcon, sparrow_hawk, goshawk.","pigeon_hawk :- old_world_oriole.","caracara :- audubons_caracara, carancha, litter.","direct_current :- audubons_caracara, carancha, litter.","falcon :- pigeon_hawk, caracara.","sparrow_hawk :- direct_current, goshawk, extremity.","goshawk :- fur_on_bodies, look_grey_during_storm, extremity."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_39_9_13_8_11_0.5_1.0_5_0_1","seed":39,"num_facts":12,"num_rules":14,"num_related_predicates":26,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.375,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"lighter.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["stiffening.","jewel.","truck.","t_bone_steak.","- earwig.","- banded_purple.","- inclined_presses.","ice_hockey.","office_furniture.","make_person_irrational.","reticule.","great_care."],"noisy_facts":[],"min_fact_dicts_for_query":["jewel."],"noiseless_rules":["lighter :- - gauntlet, not granulation, not earwig.","stall :- - tiger, not van_allen_belt.","seven :- - tiger, not van_allen_belt.","allen_screw :- stall, not -nosher, not -cross_over_body_of_water, not -make_person_irrational.","nosher :- stiffening, not earwig, not banded_purple, not inclined_presses, not -ice_hockey.","- tiger :- jewel, not -office_furniture, not -make_person_irrational, not -reticule, not -great_care.","- van_allen_belt :- truck.","cross_over_body_of_water :- truck.","- miniature_animals :- truck.","owed :- seven, not -allen_screw, not -alcoholic_beverage.","- gauntlet :- allen_screw, not miniature_animals, not -owed, not novillero.","- granulation :- t_bone_steak.","alcoholic_beverage :- t_bone_steak.","- novillero :- t_bone_steak."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_60_8_12_6_9_0.5_1.0_5_0_1","seed":60,"num_facts":10,"num_rules":13,"num_related_predicates":23,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.4285714285714284,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" living.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- table.","- baking_cake.","chicken.","bird.","- home.","- door.","floor.","- court.","panama.","place_for_learning_basic_things."],"noisy_facts":[],"min_fact_dicts_for_query":["- baking_cake."],"noiseless_rules":["- living :- - house, not room, not animal, not actinium, not home.","- house :- nest, not -farm, not flying.","- birds :- nest, not -farm, not flying.","- room :- - table, not home, not door, not -floor, not court.","- dwelling :- - table, not home, not door, not -floor, not court.","nest :- - baking_cake.","evening :- - baking_cake.","farm :- nest, not -chicken.","- animal :- bird.","- flying :- bird.","fowl :- bird.","- actinium :- - birds, not -fowl, not sing, not -panama, not -place_for_learning_basic_things.","- sing :- - dwelling, not -evening, not -bird."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_98_9_10_1_4_0.5_1.0_3_0_1","seed":98,"num_facts":5,"num_rules":11,"num_related_predicates":16,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" outbuilding.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["major_term.","- rest.","- cigar_band.","frozen_water.","tissue."],"noisy_facts":["poodle.","- character.","- pressure.","decimation."],"min_fact_dicts_for_query":["- cigar_band."],"noiseless_rules":["- outbuilding :- bears, not -inclined_presses, not -air.","bears :- cere, not -major_term, not -tissue.","inclined_presses :- vouge, not -flower_in_spring.","cere :- rat, not rest.","- disk :- - cigar_band.","rat :- - cigar_band.","vouge :- - tapa.","- basso_profundo :- - tapa.","- tapa :- flower_in_spring, not -frozen_water.","air :- cere, not disk, not basso_profundo.","flower_in_spring :- rat."],"noisy_rules":{"a":["outbuilding :- - vouge.","outbuilding :- - bears, not inclined_presses."],"b":["- air :- - bears, not air, not -outbuilding.","tapa :- not inclined_presses, basso_profundo, outbuilding."],"c":["cigar_band :- not inclined_presses, disk.","- air :- - inclined_presses, not vouge."],"d":["- air :- disk.","- bears :- tapa, not character."],"e":["- playing_games_with :- - pressure.","waiter :- not -decimation, poodle."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_3_10_11_3_6_0.5_1.0_3_0_1","seed":3,"num_facts":6,"num_rules":12,"num_related_predicates":18,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"lung.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- watch_movie.","knight.","- detonation.","west_virginia.","gala.","- tuvalu_dollar."],"noisy_facts":[],"min_fact_dicts_for_query":["- watch_movie."],"noiseless_rules":["lung :- - yummy.","doors :- - russia.","- yummy :- doors, not royal.","flank :- - watch_movie, not -west_virginia, not -gala.","having_besides_meatloaf_again :- - watch_movie, not -west_virginia, not -gala.","pleasure_of_growing :- knight.","- outfield :- knight.","cottonseed :- tongue, not -gala.","- royal :- flank, not -pleasure_of_growing, not -water_hyacinth.","water_hyacinth :- - outfield.","tongue :- - detonation, not -west_virginia, not -gala.","- russia :- having_besides_meatloaf_again, not -cottonseed, not tuvalu_dollar."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_35_9_13_6_8_0.5_1.0_5_0_1","seed":35,"num_facts":9,"num_rules":14,"num_related_predicates":23,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"P13.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P14.","P15.","- P16.","P17.","P18.","- P19.","- P20.","P21.","P22."],"noisy_facts":[],"min_fact_dicts_for_query":["P15."],"noiseless_rules":["P13 :- P0, not -P7, not -P9.","P0 :- - P5, not -P8.","P1 :- - P5, not -P8.","P2 :- P14, not -P21, not -P22.","- P3 :- P14, not -P21, not -P22.","- P4 :- P15.","- P5 :- P15.","P6 :- P1, not -P2, not P4, not P10, not P11.","P7 :- P6, not -P12.","P8 :- - P16, not -P17, not -P18, not P19, not P20.","P9 :- - P5.","- P10 :- - P5.","- P11 :- - P3, not P20.","P12 :- - P3, not P20."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_39_7_11_8_10_0.5_1.0_5_0_1","seed":39,"num_facts":11,"num_rules":12,"num_related_predicates":23,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" stalk.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["enter_hangar.","- watch_baseball_game.","- buying_steak.","- chewing.","proportional.","- edirne.","- hamamelidae.","- neural_actions.","shilling.","- check.","- cut_steel."],"noisy_facts":["synchrotron.","- homes.","- playing_violin.","- illinois.","- hundredth."],"min_fact_dicts_for_query":["- watch_baseball_game."],"noiseless_rules":["- stalk :- intern, not -bribery, not -boredom.","small_animal :- enter_hangar, not cut_steel.","intern :- - watch_baseball_game, not neural_actions, not -shilling, not check, not cut_steel.","- nitrobacterium :- - watch_baseball_game, not neural_actions, not -shilling, not check, not cut_steel.","gland :- - watch_baseball_game, not neural_actions, not -shilling, not check, not cut_steel.","- lager :- - buying_steak.","- ribbon :- - buying_steak.","- state_of_matter :- - buying_steak.","bribery :- - lager, not baby_showers, not cut_steel.","- baby_showers :- - nitrobacterium, not ribbon, not chewing, not -proportional, not edirne.","- meals :- - nitrobacterium, not ribbon, not chewing, not -proportional, not edirne.","boredom :- small_animal, not -gland, not state_of_matter, not meals, not hamamelidae."],"noisy_rules":{"a":["stalk :- not intern, not gland, lager, - boredom.","stalk :- - small_animal, not intern, not -nitrobacterium, baby_showers."],"b":["lager :- - gland, not -stalk.","hamamelidae :- not -baby_showers, stalk."],"c":["chewing :- - intern, not bribery.","neural_actions :- - gland, not -lager, ribbon, not -meals."],"d":["watch_baseball_game :- not -ribbon, not -state_of_matter, - hundredth.","return :- not gland, not -ribbon, meals, not playing_violin."],"e":["- baggage :- - homes.","- island :- synchrotron, not illinois."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_56_6_9_6_6_0.5_1.0_5_2_3","seed":56,"num_facts":9,"num_rules":10,"num_related_predicates":19,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"limb(\"John\", \"Thomas\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- quadruped(\"Amy\").","- finger(\"Andrea\", \"Amy\").","aquarium(\"Andrea\", \"Thomas\").","prehensor(\"Andrea\", \"Amy\").","spindlelegs(\"Andrea\", \"Amy\").","- ankle(\"John\", \"Thomas\").","cannon(\"Amy\", \"Thomas\").","- parapodium(\"John\", \"Thomas\").","- digit(\"Amy\", \"Thomas\")."],"noisy_facts":["robin(\"John\", \"Thomas\").","- bell(\"Andrea\", \"John\").","queens(\"Andrea\").","nightingale(\"Andrea\", \"Thomas\").","- sphenoid_bone(\"Andrea\").","acromicria.","minister(\"Andrea\", \"Amy\").","- pastor(\"John\", \"Thomas\").","cathedral(\"Andrea\", \"John\").","cross(\"Amy\", \"Thomas\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["limb(V1, V3) :- - leg(V0), extremity(V0), - foot(V0, V1), arm(V0, V2), people(V0, V3).","- leg(V0) :- - quadruped(V2), prehensor(V0, V2), spindlelegs(V0, V2), - ankle(V1, V3), not -cannon(V2, V3).","animal_leg(V1, V2) :- - quadruped(V2), prehensor(V0, V2), spindlelegs(V0, V2), - ankle(V1, V3), not -cannon(V2, V3).","- biceps_brachii(V1, V3) :- - quadruped(V2), prehensor(V0, V2), spindlelegs(V0, V2), - ankle(V1, V3), not -cannon(V2, V3).","extremity(V0) :- - finger(V0, V2), - parapodium(V1, V3), not digit(V2, V3).","biped(V1, V3) :- - finger(V0, V2), - parapodium(V1, V3), not digit(V2, V3).","- foot(V2, V1) :- animal_leg(V1, V2).","arm(V1, V3) :- - biceps_brachii(V1, V3), not -biped(V1, V3), not tank(V3).","people(V0, V3) :- aquarium(V0, V3).","- tank(V3) :- aquarium(V0, V3)."],"noisy_rules":{"a":["- limb(V1, V3) :- leg(V0), biceps_brachii(V1, V3), not biped(V1, V3), not -foot(V0, V1), not people(V0, V3).","- limb(V2, V0) :- leg(V0), - extremity(V0), - arm(V0, V2)."],"b":["- biped(V1, V3) :- - limb(V1, V3).","- extremity(V0) :- - extremity(V0), - limb(V1, V3)."],"c":["- biped(V1, V3) :- - animal_leg(V1, V2), not -foot(V0, V1), - people(V0, V3), not -tank(V3).","leg(V0) :- - animal_leg(V1, V2), - extremity(V0), not -foot(V0, V1)."],"d":["- arm(V0, V1) :- biceps_brachii(V1, V3), not extremity(V0), - sphenoid_bone(V0), queens(V0).","quadruped(V2) :- leg(V0), - animal_leg(V1, V2), tank(V3), acromicria."],"e":["- church(V1, V2) :- cathedral(V0, V1), - bell(V0, V1), not -minister(V0, V2), - pastor(V1, V3), cross(V2, V3).","thrush(V1, V3) :- nightingale(V0, V3), robin(V1, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_62_5_4_3_6_0.5_1.0_5_1_2","seed":62,"num_facts":5,"num_rules":5,"num_related_predicates":10,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":3,"target_query":"find_hidden_things(\"Brett\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["serving_customers(\"Geoffrey\").","major_cause_of_pollution(\"Geoffrey\").","negation.","negative.","abnegation."],"noisy_facts":[],"min_fact_dicts_for_query":["serving_customers(\"Geoffrey\").","major_cause_of_pollution(\"Geoffrey\").","negation.","negative.","abnegation."],"noiseless_rules":["find_hidden_things(V2) :- speech_act(V2).","assertion(V0) :- denial(V0), serving_customers(V0), major_cause_of_pollution(V0).","naysaying(V0) :- major_cause_of_pollution(V0).","denial(V1) :- naysaying(V1), negation, negative, abnegation.","speech_act(V0) :- assertion(V0), denial(V0), abnegation."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_69_6_5_5_8_0.5_1.0_5_2_3","seed":69,"num_facts":7,"num_rules":6,"num_related_predicates":13,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" P5(\"Angel\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P6(\"Joanna\").","P7(\"Joanna\").","P8(\"Joanna\").","P9(\"Joanna\").","P10(\"Joanna\").","P11(\"Joanna\").","P12(\"Bailey\", \"Kristopher\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P6(\"Joanna\").","P7(\"Joanna\").","P8(\"Joanna\").","P9(\"Joanna\").","P10(\"Joanna\").","P11(\"Joanna\").","P12(\"Bailey\", \"Kristopher\")."],"noiseless_rules":["P5(V0) :- P1(V0).","P0(V2) :- P6(V2), P9(V2).","P1(V0) :- P2(V0, V1), P12(V1, V3).","P2(V2, V2) :- P3(V2), P8(V2), P9(V2), P10(V2), P11(V2).","P3(V2) :- P0(V2), P4(V2).","P4(V2) :- P0(V2), P7(V2), P10(V2)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_18_9_12_12_12_0.5_1.0_5_3_4","seed":18,"num_facts":16,"num_rules":13,"num_related_predicates":29,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P12(\"Phyllis\", \"Andrew\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P13(\"Phyllis\", \"Joseph\", \"Dawn\").","P14(\"Phyllis\", \"Andrew\", \"Frederick\").","- P15(\"Phyllis\").","- P16(\"Andrew\", \"Frederick\").","- P17(\"Joseph\", \"Frederick\").","P18(\"Joseph\", \"Dawn\").","- P19(\"Phyllis\", \"Joseph\", \"Dawn\").","- P20(\"Andrew\", \"Frederick\", \"Dawn\").","P21(\"Phyllis\", \"Andrew\", \"Frederick\").","- P22(\"Phyllis\", \"Andrew\", \"Dawn\").","P23(\"Phyllis\", \"Joseph\", \"Dawn\").","P24(\"Joseph\", \"Frederick\", \"Dawn\").","- P25(\"Phyllis\", \"Dawn\").","P26(\"Phyllis\", \"Dawn\").","- P27(\"Phyllis\", \"Dawn\").","P28(\"Phyllis\", \"Andrew\", \"Frederick\")."],"noisy_facts":["P36(\"Phyllis\", \"Andrew\", \"Dawn\").","P38(\"Andrew\", \"Joseph\").","P31(\"Phyllis\", \"Dawn\").","P30(\"Phyllis\", \"Joseph\", \"Frederick\").","P34(\"Andrew\", \"Joseph\").","- P29(\"Phyllis\", \"Joseph\", \"Frederick\").","P39(\"Phyllis\", \"Andrew\", \"Frederick\").","- P33(\"Phyllis\", \"Dawn\").","- P35(\"Andrew\", \"Frederick\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["P12(V0, V1) :- P1(V1, V4), - P5(V2, V4), - P9(V0, V3, V4).","P0(V0, V2) :- P13(V0, V2, V4).","P1(V1, V4) :- P3(V1, V4), - P6(V3, V4).","P2(V0, V1, V3) :- P14(V0, V1, V3).","P3(V1, V2) :- P0(V0, V2), P2(V0, V1, V3), not -P28(V0, V1, V3).","P4(V0, V2, V3) :- P0(V0, V2), P2(V0, V1, V3), not -P28(V0, V1, V3).","- P5(V2, V3) :- P4(V0, V2, V3), not P7(V0, V2, V3), not -P10(V0, V2, V3).","- P6(V3, V0) :- P4(V0, V2, V3), not P7(V0, V2, V3), not -P10(V0, V2, V3).","- P7(V0, V2, V3) :- - P15(V0), - P17(V2, V3), P18(V2, V4), - P19(V0, V2, V4), - P20(V1, V3, V4).","P8(V0, V4) :- - P15(V0), - P17(V2, V3), P18(V2, V4), - P19(V0, V2, V4), - P20(V1, V3, V4).","- P9(V0, V4, V4) :- P8(V0, V4), not P11(V0, V4), not P25(V0, V4), not -P26(V0, V4), not P27(V0, V4).","P10(V0, V2, V3) :- - P16(V1, V3), P21(V0, V1, V3), - P22(V0, V1, V4), P23(V0, V2, V4), not -P24(V2, V3, V4).","- P11(V0, V4) :- - P16(V1, V3), P21(V0, V1, V3), - P22(V0, V1, V4), P23(V0, V2, V4), not -P24(V2, V3, V4)."],"noisy_rules":{"a":["- P12(V0, V1) :- - P1(V1, V4), - P10(V0, V2, V3).","- P12(V0, V0) :- P7(V0, V2, V3), not P10(V0, V2, V3)."],"b":["P15(V0) :- - P3(V1, V4), - P4(V0, V2, V3), - P12(V0, V1).","P5(V1, V4) :- - P3(V1, V4), - P12(V0, V1)."],"c":["P6(V3, V4) :- - P0(V0, V2), - P4(V0, V2, V3), P5(V2, V4), P11(V0, V4).","P20(V3, V3, V4) :- - P4(V0, V2, V3), not P8(V0, V4), P11(V0, V4)."],"d":["P17(V2, V3) :- - P3(V1, V4), P7(V0, V2, V3), - P29(V0, V2, V3), P30(V0, V2, V3).","P6(V4, V4) :- P11(V0, V4), not -P31(V0, V4)."],"e":["- P32(V1, V2, V3) :- - P33(V0, V4), P34(V1, V2), - P35(V1, V3), not -P36(V0, V1, V4).","P37(V1, V3) :- P38(V1, V2), P39(V0, V1, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_2_7_11_11_13_0.5_1.0_5_2_3","seed":2,"num_facts":12,"num_rules":12,"num_related_predicates":24,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" above_and(\"Natasha\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["playing_harp(\"Desiree\").","- harp(\"Natasha\", \"Monica\").","heaven(\"Natasha\", \"Desiree\").","- people(\"Monica\", \"Desiree\").","- thunder(\"Andrew\", \"Desiree\").","humans(\"Natasha\").","musicians(\"Natasha\").","- killing(\"Natasha\").","- jail(\"Natasha\").","- nest(\"Natasha\", \"Andrew\").","beyond(\"Natasha\", \"Andrew\").","- chick(\"Natasha\", \"Andrew\")."],"noisy_facts":["- grand_dragon(\"Monica\", \"Andrew\").","- mansion(\"Monica\", \"Andrew\").","running_away(\"Natasha\", \"Andrew\").","room(\"Andrew\").","- farm(\"Monica\").","- home(\"Natasha\").","- bank(\"Natasha\", \"Andrew\")."],"min_fact_dicts_for_query":["playing_harp(\"Desiree\").","- harp(\"Natasha\", \"Monica\").","heaven(\"Natasha\", \"Desiree\").","- people(\"Monica\", \"Desiree\").","- thunder(\"Andrew\", \"Desiree\")."],"noiseless_rules":["- above_and(V0) :- - angels(V2), city(V0, V1), not criminals(V0, V1), not -beyond(V0, V2).","- angels(V2) :- playing_harp(V3), - harp(V0, V1), heaven(V0, V3), - people(V1, V3), - thunder(V2, V3).","not_(V0, V3) :- playing_harp(V3), - harp(V0, V1), heaven(V0, V3), - people(V1, V3), - thunder(V2, V3).","two_legs(V1, V2) :- playing_harp(V3), - harp(V0, V1), heaven(V0, V3), - people(V1, V3), - thunder(V2, V3).","being(V2, V2) :- person(V0, V2), not -beyond(V0, V2).","getting_away_with_crime(V0) :- person(V0, V2), not -beyond(V0, V2).","city(V2, V2) :- being(V2, V3), not lay_eggs(V2, V3), not capital(V2, V3).","- criminals(V0, V0) :- getting_away_with_crime(V0), not -humans(V0), not -musicians(V0), not killing(V0), not jail(V0).","- lay_eggs(V0, V0) :- getting_away_with_crime(V0), not -humans(V0), not -musicians(V0), not killing(V0), not jail(V0).","person(V0, V0) :- not_(V0, V3), not baby(V0, V3).","- capital(V2, V0) :- two_legs(V1, V2), - nest(V0, V2), not -beyond(V0, V2), not chick(V0, V2).","- baby(V0, V2) :- two_legs(V1, V2), - nest(V0, V2), not -beyond(V0, V2), not chick(V0, V2)."],"noisy_rules":{"a":["above_and(V0) :- not two_legs(V1, V2), - city(V0, V1), lay_eggs(V2, V3), capital(V2, V3), not -baby(V0, V3).","above_and(V0) :- angels(V2), not person(V0, V2), baby(V0, V3)."],"b":["- beyond(V0, V2) :- angels(V2), lay_eggs(V2, V3), above_and(V0).","baby(V0, V2) :- - two_legs(V1, V2), above_and(V0)."],"c":["capital(V2, V2) :- - two_legs(V1, V2).","people(V1, V3) :- angels(V2), - city(V0, V1), not -criminals(V0, V1), lay_eggs(V2, V3), not person(V0, V2)."],"d":["people(V2, V2) :- angels(V2).","- getting_away_with_crime(V0) :- - person(V0, V2), running_away(V0, V2)."],"e":["- house(V0) :- - home(V0), - farm(V1), room(V2), not bank(V0, V2), not mansion(V1, V2).","- head(V1) :- - grand_dragon(V1, V2)."]}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_26_7_9_3_6_0.5_1.0_5_3_4","seed":26,"num_facts":6,"num_rules":10,"num_related_predicates":16,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" P9(\"Chris\", \"Caleb\", \"Matthew\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P10(\"Rebecca\", \"Marie\", \"Matthew\").","- P11(\"Marie\", \"Caleb\", \"Matthew\").","P12(\"Rebecca\", \"Marie\").","- P13(\"Rebecca\", \"Marie\", \"Matthew\").","P14(\"Rebecca\", \"Marie\", \"Matthew\").","- P15(\"Rebecca\", \"Marie\", \"Matthew\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- P9(V1, V3, V4) :- - P2(V1, V2, V4), P3(V2, V3, V4).","- P0(V0, V2) :- P5(V0, V2, V3), - P7(V0, V2, V4), not P11(V2, V3, V4).","P1(V0, V2) :- P10(V0, V2, V4).","- P2(V2, V2, V2) :- - P0(V0, V2), not -P4(V0, V2), not -P6(V0, V2), not P8(V0, V2).","P3(V2, V2, V0) :- P1(V0, V2), not -P12(V0, V2).","P4(V0, V2) :- P1(V0, V2), not -P12(V0, V2).","P5(V0, V2, V3) :- - P7(V0, V2, V4), - P11(V2, V3, V4), not P13(V0, V2, V4), not -P14(V0, V2, V4), not P15(V0, V2, V4).","P6(V0, V2) :- - P7(V0, V2, V4), - P11(V2, V3, V4), not P13(V0, V2, V4), not -P14(V0, V2, V4), not P15(V0, V2, V4).","- P7(V0, V2, V2) :- P12(V0, V2).","- P8(V0, V2) :- P12(V0, V2)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_47_8_11_11_14_0.5_1.0_5_2_3","seed":47,"num_facts":14,"num_rules":12,"num_related_predicates":26,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"P11(\"Brian\", \"Nancy\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P12(\"Jacqueline\", \"Nancy\").","P13(\"Brian\", \"Nancy\").","- P14(\"Erica\").","P15(\"Erica\").","P16(\"Brian\", \"Nancy\").","P17(\"Nancy\", \"Erica\").","P18(\"Jacqueline\", \"Nancy\").","- P19(\"Jacqueline\", \"Nancy\").","P20(\"Jacqueline\", \"Nancy\").","- P21(\"Jacqueline\", \"Nancy\").","P22(\"Brian\", \"Nancy\").","P23(\"Jacqueline\", \"Erica\").","- P24(\"Nancy\", \"Erica\").","- P25(\"Nancy\", \"Erica\")."],"noisy_facts":["- P27.","- P35(\"Jacqueline\", \"Erica\").","- P26(\"Brian\", \"Jacqueline\").","P29(\"Brian\", \"Jacqueline\").","P33(\"Jacqueline\", \"Erica\").","- P32(\"Jacqueline\", \"Nancy\").","P30(\"Brian\", \"Jacqueline\").","P31(\"Brian\", \"Erica\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["P11(V0, V2) :- - P3(V0), - P4(V1), P8(V0, V1), P9(V0, V2), not P21(V1, V2).","P0(V1, V2) :- P12(V1, V2), not -P18(V1, V2), not P19(V1, V2), not -P20(V1, V2), not P21(V1, V2).","- P1(V1, V1) :- P12(V1, V2), not -P18(V1, V2), not P19(V1, V2), not -P20(V1, V2), not P21(V1, V2).","P2(V2, V3) :- P5(V2), P10(V2), P15(V3), P16(V0, V2), not -P17(V2, V3).","- P3(V0) :- P13(V0, V2).","- P4(V1) :- - P14(V3), P22(V0, V2), P23(V1, V3), not P24(V2, V3), not P25(V2, V3).","P5(V2) :- - P14(V3), P22(V0, V2), P23(V1, V3), not P24(V2, V3), not P25(V2, V3).","P6(V1, V3) :- - P14(V3), P22(V0, V2), P23(V1, V3), not P24(V2, V3), not P25(V2, V3).","- P7(V0, V3) :- - P14(V3), P22(V0, V2), P23(V1, V3), not P24(V2, V3), not P25(V2, V3).","P8(V0, V1) :- P0(V0, V3), P6(V1, V3), P9(V0, V2).","P9(V0, V2) :- P2(V2, V3), - P7(V0, V3), not -P10(V2).","P10(V1) :- - P1(V1, V3)."],"noisy_rules":{"a":["- P11(V1, V3) :- P1(V1, V3).","- P11(V0, V2) :- - P0(V0, V3), - P2(V2, V3), - P6(V1, V3), not -P7(V0, V3), - P10(V2)."],"b":["- P9(V0, V2) :- P3(V0), P4(V1), - P6(V1, V3), - P11(V0, V2).","- P16(V0, V2) :- - P0(V0, V3), not P2(V2, V3), - P11(V0, V2)."],"c":["P19(V0, V2) :- - P9(V0, V2).","- P8(V0, V1) :- P4(V1), P7(V0, V3), - P10(V2)."],"d":["- P13(V0, V0) :- P1(V1, V3), not -P4(V1), not P6(V1, V3), - P8(V0, V1), - P26(V0, V1).","P24(V2, V3) :- P3(V0), - P6(V1, V3), - P10(V2), - P27."],"e":["- P28(V1) :- P29(V0, V1), P30(V0, V1), P31(V0, V3), - P32(V1, V2).","- P34(V1, V3) :- P33(V1, V3), not P35(V1, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_81_9_12_9_10_0.5_1.0_3_2_3","seed":81,"num_facts":11,"num_rules":13,"num_related_predicates":24,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.125,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"sea_animal(\"Deborah\", \"William\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- american_indian_day(\"Deborah\", \"William\").","- students_to_eat_in(\"David\", \"Deborah\").","- cloud(\"Deborah\", \"William\").","time_runner(\"Deborah\", \"William\").","- enterprise(\"Deborah\", \"William\").","spotter(\"Deborah\", \"William\").","wings(\"Deborah\", \"William\").","society(\"Crystal\", \"William\").","- couch(\"Deborah\", \"Crystal\").","- building_material(\"Deborah\", \"Crystal\").","- atresia."],"noisy_facts":["- comeliness(\"William\").","street(\"David\", \"Deborah\").","- cutting(\"Deborah\", \"William\").","- sliding_door(\"Deborah\", \"William\").","- silver(\"William\").","- not_dogs(\"David\", \"William\").","- indigo_bunting(\"David\", \"Deborah\").","perch_in_trees(\"Deborah\", \"William\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["sea_animal(V1, V3) :- mamo(V1, V3), gasoline(V2, V3), not -side(V2, V3).","mamo(V1, V3) :- - crops(V0, V1), - bacteria(V0, V3), carpet(V1, V2).","- crops(V0, V1) :- whale_oil(V3), - mandarin_duck(V0, V1), not -time_runner(V1, V3).","bass(V1, V3) :- - american_indian_day(V1, V3).","- petrel(V1, V3) :- - american_indian_day(V1, V3).","gasoline(V2, V3) :- - students_to_eat_in(V0, V1), wings(V1, V3), society(V2, V3).","whale_oil(V1) :- carpet(V1, V2), not couch(V1, V2), not building_material(V1, V2).","- mandarin_duck(V3, V1) :- bass(V1, V3), not collector(V1, V3), not cloud(V1, V3).","side(V3, V3) :- - petrel(V1, V3), not enterprise(V1, V3), not -spotter(V1, V3).","- collector(V1, V3) :- - petrel(V1, V3), not enterprise(V1, V3), not -spotter(V1, V3).","reading(V3) :- - petrel(V1, V3), not enterprise(V1, V3), not -spotter(V1, V3).","- bacteria(V2, V2) :- reading(V2), not atresia.","carpet(V2, V2) :- reading(V2), not atresia."],"noisy_rules":{"a":["- sea_animal(V1, V0) :- mandarin_duck(V0, V1), - reading(V2).","- sea_animal(V1, V3) :- crops(V0, V1), not whale_oil(V3), bacteria(V0, V3)."],"b":["building_material(V1, V3) :- - whale_oil(V3), - sea_animal(V1, V3).","american_indian_day(V1, V3) :- - sea_animal(V1, V3)."],"c":["mandarin_duck(V1, V1) :- - bass(V1, V3).","- whale_oil(V3) :- - mamo(V1, V3), - gasoline(V2, V3), not -collector(V1, V3)."],"d":["petrel(V3, V3) :- - whale_oil(V3), not comeliness(V3).","- reading(V3) :- - whale_oil(V3), - silver(V3)."],"e":["- autograph_album(V1, V3) :- street(V0, V1), - sliding_door(V1, V3), not cutting(V1, V3).","creating_awareness(V0, V3) :- - indigo_bunting(V0, V1), - not_dogs(V0, V3), not -perch_in_trees(V1, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_67_7_8_8_9_0.5_1.0_3_3_4","seed":67,"num_facts":10,"num_rules":9,"num_related_predicates":19,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"start_business(\"Dominique\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- record(\"Dominique\", \"Robert\").","- can(\"Thomas\", \"Robert\").","chinook(\"Dominique\", \"Marvin\", \"Robert\").","land_airport(\"Dominique\", \"Marvin\", \"Robert\").","- petal(\"Marvin\", \"Robert\").","- toy_poodle(\"Dominique\", \"Marvin\", \"Robert\").","symphysion(\"Dominique\", \"Robert\").","bucket(\"George\", \"Dominique\", \"Marvin\").","mouthful(\"Thomas\", \"Dominique\", \"Robert\").","- round(\"George\", \"Robert\")."],"noisy_facts":["human_body(\"Thomas\").","mane(\"Thomas\", \"Marvin\", \"Robert\").","whip(\"George\", \"Thomas\", \"Marvin\").","- walking_fast(\"George\", \"Dominique\").","foot(\"George\", \"Thomas\", \"Robert\").","- keg(\"George\", \"Robert\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["start_business(V2) :- launching_platform(V2), - shape(V0, V2), - storing_photographs(V0, V1, V4).","- album(V2, V3, V4) :- - record(V2, V4), - petal(V3, V4), not toy_poodle(V2, V3, V4).","- indefinite_quantity(V3, V4) :- containerful(V2, V4), store_photographs(V1, V2, V3).","fit(V2, V4) :- - indefinite_quantity(V3, V4), containerful(V2, V4), not -symphysion(V2, V4).","launching_platform(V2) :- - can(V1, V4), bucket(V0, V2, V3), not -mouthful(V1, V2, V4).","containerful(V2, V4) :- - can(V1, V4), bucket(V0, V2, V3), not -mouthful(V1, V2, V4).","- shape(V0, V0) :- fit(V0, V4), not round(V0, V4).","- storing_photographs(V4, V2, V4) :- - album(V2, V3, V4), not -chinook(V2, V3, V4), not -land_airport(V2, V3, V4).","store_photographs(V3, V2, V3) :- - album(V2, V3, V4), not -chinook(V2, V3, V4), not -land_airport(V2, V3, V4)."],"noisy_rules":{"a":["- start_business(V4) :- - fit(V0, V4).","- start_business(V2) :- - fit(V0, V4), shape(V0, V2)."],"b":["album(V2, V2, V2) :- - start_business(V2).","- symphysion(V2, V2) :- - start_business(V2)."],"c":["- mouthful(V0, V2, V2) :- shape(V0, V2).","record(V2, V4) :- - fit(V0, V4), shape(V0, V2)."],"d":["- both_kittens_and_dogs(V0, V2, V0) :- - launching_platform(V2), shape(V0, V2), - walking_fast(V0, V2).","- containerful(V0, V4) :- not fit(V0, V4), - keg(V0, V4)."],"e":["- homo(V0, V4) :- human_body(V1), foot(V0, V1, V4), mane(V1, V3, V4).","- nebbish(V0, V1, V3) :- whip(V0, V1, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_4_6_9_4_5_0.5_1.0_5_3_4","seed":4,"num_facts":7,"num_rules":10,"num_related_predicates":17,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" place(\"Nathaniel\", \"Brent\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["dwelling.","- acculturation(\"Norma\", \"Brent\", \"Chad\").","- door(\"Nathaniel\", \"Brent\", \"Chad\").","- sofa_hide_bed(\"Nathaniel\", \"Sarah\", \"Norma\").","- grave(\"Nathaniel\", \"Sarah\", \"Norma\").","capital(\"Norma\", \"Brent\", \"Chad\").","- district(\"Norma\", \"Brent\", \"Chad\")."],"noisy_facts":["- boarding_steamship(\"Nathaniel\", \"Sarah\", \"Norma\").","- conductor(\"Nathaniel\", \"Sarah\").","- animal_material(\"Norma\", \"Brent\").","sabotage(\"Nathaniel\", \"Brent\", \"Chad\").","chancery(\"Norma\", \"Brent\").","symbol(\"Nathaniel\", \"Sarah\", \"Brent\").","- room(\"Sarah\").","farm(\"Sarah\").","atom(\"Nathaniel\", \"Sarah\", \"Brent\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- place(V0, V3) :- home(V1), - bed(V4), - house(V4), heaven(V0, V1, V3), not city(V0, V3, V4).","home(V4) :- - bed(V4), not -dwelling.","living_place(V4, V4, V4) :- - bed(V4), not -dwelling.","sleeping(V4, V4, V4) :- - bed(V4), not -dwelling.","- bed(V4) :- - acculturation(V2, V3, V4).","- nest(V3, V4) :- - acculturation(V2, V3, V4).","- house(V4) :- - door(V0, V3, V4).","way(V0, V3, V4) :- - door(V0, V3, V4).","heaven(V0, V1, V3) :- living_place(V0, V1, V2), - nest(V3, V4), not -way(V0, V3, V4), not sofa_hide_bed(V0, V1, V2), not grave(V0, V1, V2).","- city(V3, V3, V4) :- sleeping(V2, V3, V4), not -capital(V2, V3, V4), not district(V2, V3, V4)."],"noisy_rules":{"a":["place(V0, V3) :- - living_place(V0, V1, V2), nest(V3, V4).","place(V0, V1) :- - living_place(V0, V1, V2)."],"b":["- dwelling(V0, V3) :- - home(V1), bed(V4), nest(V3, V4), - way(V0, V3, V4), not -place(V0, V3).","city(V0, V3, V0) :- place(V0, V3)."],"c":["- dwelling(V3, V3) :- nest(V3, V4), house(V4).","- heaven(V0, V1, V3) :- - home(V1), - living_place(V0, V1, V2), not sleeping(V2, V3, V4), not -bed(V4), city(V0, V3, V4)."],"d":["acculturation(V2, V3, V4) :- - living_place(V0, V1, V2), - sleeping(V2, V3, V4), - heaven(V0, V1, V3), not boarding_steamship(V0, V1, V2).","house(V4) :- not home(V1), nest(V3, V4), not -farm(V1), - room(V1)."],"e":["- flagellation(V1, V3, V4) :- chancery(V2, V3), symbol(V0, V1, V3), sabotage(V0, V3, V4).","- material(V0, V1, V2) :- - conductor(V0, V1), - animal_material(V2, V3), atom(V0, V1, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_18_7_10_8_8_0.5_1.0_3_2_3","seed":18,"num_facts":9,"num_rules":11,"num_related_predicates":20,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"students(\"Duane\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- handler(\"April\", \"Anne\").","robert_e_lees_birthday.","work_in_airplane.","water(\"April\", \"Duane\").","- change_into_gym_clothes(\"Anne\", \"Duane\").","- geological_phenomenon(\"Anne\", \"Duane\").","- human_cells(\"Anne\", \"Duane\").","loir(\"April\", \"Duane\").","- raise_people(\"Duane\", \"Christy\")."],"noisy_facts":["- exodus(\"Duane\", \"Christy\").","- flamingo(\"Christy\").","field_mouse(\"Anne\").","mnemonic.","transactinide(\"Christy\").","clock(\"Duane\", \"Christy\").","bay_of_fundy(\"Anne\", \"Duane\")."],"min_fact_dicts_for_query":["- handler(\"April\", \"Anne\").","loir(\"April\", \"Duane\").","- raise_people(\"Duane\", \"Christy\")."],"noiseless_rules":["students(V2) :- domesticated_to_companions_for_people(V1), cloud_sky(V1, V2), steak_sauce(V1, V3).","consenting_adults(V1, V2) :- - handler(V0, V1), loir(V0, V2), - raise_people(V2, V3).","candy_bar(V0, V2) :- - handler(V0, V1), loir(V0, V2), - raise_people(V2, V3).","wet_ground(V2) :- consenting_adults(V1, V2).","domesticated_to_companions_for_people(V2) :- candy_bar(V0, V2), not pod(V0, V2), not space(V0, V2).","cloud_sky(V3, V3) :- wet_ground(V3), not -robert_e_lees_birthday, not -work_in_airplane.","- pod(V3, V3) :- wet_ground(V3), not -robert_e_lees_birthday, not -work_in_airplane.","- sea_snemone(V3, V3) :- wet_ground(V3), not -robert_e_lees_birthday, not -work_in_airplane.","- space(V0, V2) :- - head(V1), water(V0, V2), not change_into_gym_clothes(V1, V2).","steak_sauce(V1, V1) :- - sea_snemone(V1, V2), not geological_phenomenon(V1, V2), not human_cells(V1, V2).","- head(V1) :- - sea_snemone(V1, V2), not geological_phenomenon(V1, V2), not human_cells(V1, V2)."],"noisy_rules":{"a":["- students(V2) :- - candy_bar(V0, V2).","- students(V1) :- - domesticated_to_companions_for_people(V1)."],"b":["geological_phenomenon(V2, V2) :- - students(V2).","sea_snemone(V1, V2) :- - cloud_sky(V1, V2), not students(V2)."],"c":["pod(V1, V1) :- - domesticated_to_companions_for_people(V1).","human_cells(V1, V2) :- - domesticated_to_companions_for_people(V1), space(V0, V2), head(V1)."],"d":["- robert_e_lees_birthday(V1) :- head(V1), not -field_mouse(V1).","pod(V1, V1) :- - domesticated_to_companions_for_people(V1), mnemonic."],"e":["red_spotted_purple(V1, V2) :- - flamingo(V3), bay_of_fundy(V1, V2), clock(V2, V3).","- movie(V3) :- not -transactinide(V3), - exodus(V2, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_65_10_10_10_12_0.5_1.0_5_1_2","seed":65,"num_facts":13,"num_rules":11,"num_related_predicates":24,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.4444444444444446,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"oscine(\"Brian\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["statue(\"Kristopher\").","- hunger(\"Brian\").","- scheduled_maintenance.","nutcracker(\"Brian\").","rook(\"Brian\").","- raven(\"Brian\").","jay(\"Brian\").","powder_blue(\"Kristopher\").","- dirty_tricks(\"Kristopher\").","refusal(\"Kristopher\").","open(\"Kristopher\").","- elect(\"Brian\").","hawaii_volcanoes_national_park(\"Brian\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["oscine(V1) :- finch(V1), not -corvine_bird(V1), not -new_zealand_wren(V1).","finch(V1) :- - canary(V1), not pyrrhuloxia(V1).","- canary(V0) :- common_canary(V0), not dirty_tricks(V0).","- behavior(V0) :- common_canary(V0), not dirty_tricks(V0).","common_canary(V0) :- figure(V0), not -powder_blue(V0), not dirty_tricks(V0), not -refusal(V0), not -open(V0).","corvine_bird(V1) :- - crow(V1), not -nutcracker(V1), not -rook(V1), not raven(V1), not -jay(V1).","figure(V0) :- statue(V0).","new_zealand_wren(V1) :- - hunger(V1), not elect(V1), not -hawaii_volcanoes_national_park(V1).","- american_crow(V0) :- - scheduled_maintenance, - dirty_tricks(V0).","- crow(V2) :- - american_crow(V2).","- pyrrhuloxia(V2) :- - behavior(V2)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_38_10_11_9_12_0.5_1.0_5_2_3","seed":38,"num_facts":15,"num_rules":12,"num_related_predicates":27,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P11(\"Brandon\", \"Susan\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P12(\"Thomas\").","- P13(\"Danielle\").","P14.","- P15(\"Thomas\").","P16(\"Thomas\", \"Susan\").","P17(\"Danielle\", \"Susan\").","P18(\"Thomas\", \"Susan\").","- P19(\"Thomas\", \"Susan\").","P20(\"Thomas\", \"Susan\").","P21(\"Thomas\", \"Susan\").","P22(\"Danielle\", \"Susan\").","- P23(\"Danielle\", \"Susan\").","- P24(\"Thomas\", \"Susan\").","- P25(\"Danielle\", \"Susan\").","- P26(\"Danielle\", \"Susan\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["P11(V0, V3) :- - P2(V2), - P3(V3), P5(V0, V3), not -P22(V2, V3), not P23(V2, V3).","- P0(V1) :- - P12(V1).","- P1(V0, V2) :- - P4(V3), - P6(V0, V3), - P9(V0, V3), - P10(V2, V3).","- P2(V2) :- - P13(V2).","- P3(V3) :- - P1(V0, V2), - P10(V2, V3).","- P4(V1) :- - P0(V1), not P7(V1), not -P8(V1).","P5(V2, V2) :- - P13(V2), not -P14.","- P6(V2, V2) :- - P13(V2), not -P14.","- P7(V2) :- - P13(V2), not -P14.","P8(V1) :- - P15(V1), P16(V1, V3), - P24(V1, V3), - P25(V2, V3), not P26(V2, V3).","- P9(V3, V3) :- P16(V1, V3), not -P18(V1, V3), not P19(V1, V3), not -P20(V1, V3), not -P21(V1, V3).","- P10(V2, V3) :- P17(V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_11_9_14_14_15_0.5_1.0_5_2_3","seed":11,"num_facts":18,"num_rules":15,"num_related_predicates":33,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"tool(\"Jaime\", \"Daniel\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- bit(\"James\", \"Daniel\").","fly_away(\"Daniel\").","wings(\"James\", \"Jaime\").","- bass.","- power_drill(\"James\", \"Seth\").","breast_drill(\"Jaime\", \"Daniel\").","hand_drill(\"Jaime\", \"Daniel\").","- mountains(\"Jaime\", \"Seth\").","- leading_edge(\"James\", \"Daniel\").","- flap(\"Daniel\", \"Seth\").","pocketcomb(\"James\", \"Jaime\").","- hatchel(\"Jaime\", \"Daniel\").","- tooth(\"Jaime\", \"Daniel\").","column(\"James\", \"Seth\").","- design(\"Jaime\", \"Daniel\").","connective_tissue(\"Jaime\", \"Seth\").","- exodus(\"Jaime\", \"Seth\").","pinata(\"James\", \"Daniel\")."],"noisy_facts":["charis(\"Jaime\", \"Seth\").","- lute(\"Jaime\", \"Daniel\").","mandolin(\"Jaime\", \"Daniel\").","- where_people_live(\"Daniel\", \"Seth\").","happening(\"Jaime\", \"Seth\").","harp(\"James\", \"Jaime\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["tool(V1, V2) :- - device(V0, V1), drill(V1, V3), ship_cargo(V2, V3).","comb(V1, V2) :- fine_tooth_comb(V2), - currycomb(V0, V1), not -pocketcomb(V0, V1), not hatchel(V1, V2), not tooth(V1, V2).","- device(V2, V1) :- comb(V1, V2), not airfoil(V1, V2), not stabilizer(V1, V2), not strengthener(V1, V2), not -musical_instrument(V1, V2).","- airfoil(V1, V2) :- wing(V0), - aileron(V1), vertical_tail(V0, V1), - leading_edge(V0, V2), - flap(V2, V3).","drill(V1, V3) :- - bit(V0, V2), - power_drill(V0, V3), breast_drill(V1, V2), not -hand_drill(V1, V2), not mountains(V1, V3).","- stabilizer(V1, V2) :- - bit(V0, V2), - power_drill(V0, V3), breast_drill(V1, V2), not -hand_drill(V1, V2), not mountains(V1, V3).","wing(V0) :- - bit(V0, V2), - power_drill(V0, V3), breast_drill(V1, V2), not -hand_drill(V1, V2), not mountains(V1, V3).","fine_tooth_comb(V2) :- fly_away(V2), column(V0, V3), - design(V1, V2), not -connective_tissue(V1, V3), not exodus(V1, V3).","- aileron(V1) :- fly_away(V2), column(V0, V3), - design(V1, V2), not -connective_tissue(V1, V3), not exodus(V1, V3).","- backing(V1) :- fly_away(V2), column(V0, V3), - design(V1, V2), not -connective_tissue(V1, V3), not exodus(V1, V3).","- currycomb(V0, V1) :- wings(V0, V1), pinata(V0, V2).","vertical_tail(V0, V1) :- wings(V0, V1), pinata(V0, V2).","- strengthener(V1, V1) :- - backing(V1).","ship_cargo(V2, V2) :- fine_tooth_comb(V2), not bass.","musical_instrument(V2, V2) :- fine_tooth_comb(V2), not bass."],"noisy_rules":{"a":["- tool(V1, V2) :- - comb(V1, V2), - fine_tooth_comb(V2), aileron(V1), currycomb(V0, V1), - musical_instrument(V1, V2).","- tool(V1, V2) :- device(V0, V1), - drill(V1, V3), - wing(V0), aileron(V1), - ship_cargo(V2, V3)."],"b":["- wings(V1, V1) :- airfoil(V1, V2), aileron(V1), not tool(V1, V2).","design(V1, V2) :- currycomb(V0, V1), - tool(V1, V2)."],"c":["backing(V1) :- - drill(V1, V3), stabilizer(V1, V2).","design(V1, V2) :- not -device(V0, V1), - fine_tooth_comb(V2), aileron(V1), not -currycomb(V0, V1), - vertical_tail(V0, V1)."],"d":["- wing(V0) :- - vertical_tail(V0, V1).","- ship_cargo(V2, V3) :- - where_people_live(V2, V3)."],"e":["- four_legs(V1, V3) :- not -charis(V1, V3), happening(V1, V3).","- chordophone(V1, V2) :- harp(V0, V1), mandolin(V1, V2), - lute(V1, V2)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_72_7_6_1_4_0.5_1.0_3_1_2","seed":72,"num_facts":4,"num_rules":7,"num_related_predicates":11,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"P6(\"David\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P7(\"Daniel\").","- P8.","- P9(\"Daniel\").","P10."],"noisy_facts":["P14(\"Samuel\").","P16(\"Samuel\").","P13(\"Samuel\").","P18(\"Daniel\").","- P11.","- P12."],"min_fact_dicts_for_query":[],"noiseless_rules":["P6(V0) :- - P2(V0), not P5(V0).","P0(V1) :- - P1(V1), not P7(V1), not P9(V1).","- P1(V1) :- - P4(V1).","- P2(V1) :- - P4(V1), not P8, not -P10.","- P3(V1) :- P0(V1), not P1(V1).","- P4(V1) :- - P9(V1).","- P5(V2) :- - P3(V2)."],"noisy_rules":{"a":["- P6(V1) :- P4(V1).","- P6(V0) :- P2(V0), P4(V1), not -P5(V0)."],"b":["P2(V0) :- P5(V0), not P6(V0).","P8(V0) :- - P6(V0)."],"c":["P9(V0) :- P2(V0).","P4(V0) :- P2(V0), P5(V0)."],"d":["- P10(V0) :- P2(V0), P4(V1), not P11.","P2(V2) :- P3(V2), - P12."],"e":["- P15(V2) :- P13(V2), P14(V2), P16(V2).","- P17(V1) :- P18(V1)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_43_10_11_10_12_0.5_1.0_5_3_4","seed":43,"num_facts":15,"num_rules":12,"num_related_predicates":27,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" beginning(\"Donna\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- trail_riding(\"Eric\", \"Matthew\").","mosan(\"Michael\").","cockpit(\"Donna\", \"Michael\").","- engraving(\"Eric\", \"Donna\", \"Michael\").","- high_explosive(\"Eric\", \"Matthew\", \"Daniel\").","ear(\"Eric\", \"Matthew\").","- becoming_popular(\"Daniel\", \"Michael\").","- engine(\"Eric\", \"Donna\", \"Michael\").","- unit(\"Donna\", \"Matthew\", \"Michael\").","- football_helmet(\"Matthew\", \"Daniel\").","- oryx(\"Eric\", \"Donna\", \"Matthew\").","liberty(\"Eric\", \"Matthew\", \"Daniel\").","- laugh_at_clown(\"Eric\", \"Matthew\", \"Michael\").","- burundian(\"Donna\", \"Matthew\", \"Michael\").","spareribs(\"Donna\", \"Matthew\", \"Michael\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- trail_riding(\"Eric\", \"Matthew\").","mosan(\"Michael\").","- engraving(\"Eric\", \"Donna\", \"Michael\").","ear(\"Eric\", \"Matthew\").","- becoming_popular(\"Daniel\", \"Michael\").","- engine(\"Eric\", \"Donna\", \"Michael\").","- football_helmet(\"Matthew\", \"Daniel\").","- oryx(\"Eric\", \"Donna\", \"Matthew\")."],"noiseless_rules":["- beginning(V1) :- zairean(V1, V2), - air_pocket(V1, V3, V4).","gluteus(V1, V2, V4) :- - trail_riding(V0, V2), ear(V0, V2), - becoming_popular(V3, V4), - engine(V0, V1, V4), not unit(V1, V2, V4).","bo_hai(V2, V3, V4) :- - trail_riding(V0, V2), ear(V0, V2), - becoming_popular(V3, V4), - engine(V0, V1, V4), not unit(V1, V2, V4).","- shelter(V0, V4) :- mosan(V4), - football_helmet(V2, V3), - oryx(V0, V1, V2), not -liberty(V0, V2, V3), not laugh_at_clown(V0, V2, V4).","zairean(V1, V2) :- gluteus(V1, V2, V4), not burundian(V1, V2, V4), not -spareribs(V1, V2, V4).","frame(V4) :- cockpit(V1, V4).","nonfiction(V0, V1, V4) :- - engraving(V0, V1, V4).","- photo_opportunity(V0, V2) :- - high_explosive(V0, V2, V3), not -liberty(V0, V2, V3).","bowerbird(V0) :- - high_explosive(V0, V2, V3), not -liberty(V0, V2, V3).","- air_pocket(V1, V0, V4) :- - shelter(V0, V4), nonfiction(V0, V1, V4), not photo_opportunity(V0, V1), not -blow(V0, V1), not dumdum(V0, V1).","blow(V0, V0) :- bowerbird(V0), - trail_riding(V0, V2).","- dumdum(V3, V2) :- bo_hai(V2, V3, V4), not -frame(V4)."],"noisy_rules":{}},"num_min_facts_for_query":8,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_77_5_6_1_3_0.5_1.0_5_3_4","seed":77,"num_facts":4,"num_rules":7,"num_related_predicates":11,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"catch_cold(\"Kimberly\", \"Angela\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["basket_with_handle(\"Charles\", \"Angela\").","eating_cat_food(\"Charles\", \"Molly\", \"Angela\").","town_gas(\"Charles\", \"Angela\").","soft_roll(\"Charles\")."],"noisy_facts":[],"min_fact_dicts_for_query":["basket_with_handle(\"Charles\", \"Angela\").","eating_cat_food(\"Charles\", \"Molly\", \"Angela\").","town_gas(\"Charles\", \"Angela\").","soft_roll(\"Charles\")."],"noiseless_rules":["catch_cold(V0, V4) :- baggage(V1, V4), getting_exercise(V0, V1, V4), hitter(V1, V3, V4), are(V1, V3, V4).","baggage(V1, V4) :- basket_with_handle(V1, V4).","paper(V1) :- basket_with_handle(V1, V4).","getting_exercise(V3, V1, V4) :- paper(V1), hitter(V1, V3, V4), robin(V1), soft_roll(V1).","hitter(V1, V3, V4) :- eating_cat_food(V1, V3, V4).","are(V1, V4, V4) :- basket_with_handle(V1, V4), town_gas(V1, V4).","robin(V1) :- basket_with_handle(V1, V4), town_gas(V1, V4)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_41_10_15_10_12_0.5_1.0_5_2_3","seed":41,"num_facts":14,"num_rules":16,"num_related_predicates":30,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":"P15(\"Cameron\", \"Nathan\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P16(\"Cameron\", \"Douglas\").","- P17(\"Nathan\").","- P18(\"Douglas\", \"Nathan\").","- P19(\"Douglas\", \"Nathan\").","- P20(\"Cameron\", \"Douglas\").","- P21(\"Cameron\", \"Nathan\").","P22(\"Shelby\", \"Douglas\").","P23(\"Douglas\", \"Nathan\").","P24(\"Cameron\", \"Shelby\").","- P25(\"Cameron\", \"Shelby\").","- P26(\"Cameron\", \"Shelby\").","- P27(\"Cameron\", \"Nathan\").","- P28(\"Cameron\", \"Nathan\").","P29(\"Cameron\", \"Nathan\")."],"noisy_facts":["- P34(\"Cameron\", \"Douglas\").","- P30(\"Douglas\", \"Nathan\").","- P35(\"Douglas\", \"Nathan\").","- P33(\"Douglas\").","P37(\"Cameron\", \"Douglas\").","- P39(\"Cameron\", \"Nathan\").","P31(\"Douglas\", \"Nathan\").","- P38(\"Cameron\", \"Douglas\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["P15(V0, V3) :- P0(V2), P2(V2), - P9(V0, V3), not P13(V2, V3).","P0(V2) :- P1(V2, V3), not P4(V2, V3), not P11(V2, V3), not P13(V2, V3), not -P14(V2, V3).","P1(V2, V3) :- P5(V2, V3), not -P12(V2, V3), not P13(V2, V3).","P2(V2) :- P16(V0, V2), - P27(V0, V3), not P28(V0, V3), not -P29(V0, V3).","- P3(V0, V3) :- P16(V0, V2), - P27(V0, V3), not P28(V0, V3), not -P29(V0, V3).","- P4(V2, V3) :- - P17(V3), - P20(V0, V2), - P21(V0, V3), P22(V1, V2), not -P23(V2, V3).","P5(V2, V3) :- - P17(V3), - P20(V0, V2), - P21(V0, V3), P22(V1, V2), not -P23(V2, V3).","- P6(V0, V1) :- - P17(V3), - P20(V0, V2), - P21(V0, V3), P22(V1, V2), not -P23(V2, V3).","P7(V1, V3) :- - P17(V3), - P20(V0, V2), - P21(V0, V3), P22(V1, V2), not -P23(V2, V3).","P8(V0, V1) :- - P17(V3), - P20(V0, V2), - P21(V0, V3), P22(V1, V2), not -P23(V2, V3).","- P9(V0, V0) :- - P6(V0, V1), not -P10(V0, V1), not -P24(V0, V1), not P25(V0, V1), not P26(V0, V1).","P10(V0, V1) :- - P3(V0, V3), P7(V1, V3).","- P11(V2, V3) :- - P18(V2, V3).","P12(V2, V3) :- - P18(V2, V3).","- P13(V1, V0) :- P8(V0, V1).","P14(V2, V3) :- - P19(V2, V3)."],"noisy_rules":{"a":["- P15(V2, V3) :- - P5(V2, V3), P11(V2, V3).","- P15(V2, V3) :- not P0(V2), - P5(V2, V3)."],"b":["P4(V2, V3) :- - P2(V2), - P15(V0, V3).","- P10(V0, V0) :- - P15(V0, V3)."],"c":["P26(V0, V1) :- - P10(V0, V1).","- P7(V2, V3) :- not P0(V2), - P2(V2), P11(V2, V3), not -P13(V2, V3)."],"d":["P27(V3, V3) :- - P14(V2, V3), not P30(V2, V3).","P18(V2, V3) :- not P5(V2, V3), not -P11(V2, V3), P31(V2, V3)."],"e":["- P32(V3) :- - P33(V2), - P34(V0, V2), - P35(V2, V3).","- P36(V0, V3) :- P37(V0, V2), - P38(V0, V2), - P39(V0, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_27_7_8_8_9_0.5_1.0_3_2_3","seed":27,"num_facts":11,"num_rules":9,"num_related_predicates":20,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" color(\"Kimberly\", \"Angel\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- record(\"Angel\").","- brown(\"Victoria\", \"Kimberly\").","- mine(\"Kimberly\", \"Manuel\").","digitally_encoded_music(\"Kimberly\", \"Manuel\").","mare(\"Angel\", \"Manuel\").","- black(\"Victoria\", \"Kimberly\").","white(\"Kimberly\", \"Manuel\").","yellow(\"Victoria\", \"Angel\").","- blue(\"Angel\", \"Manuel\").","- cranberry_sauce(\"Kimberly\").","- relish(\"Kimberly\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- color(V1, V2) :- - achromatic_color(V0, V3), chromatic_color(V1, V2), not nonsolid_color(V2, V3).","- achromatic_color(V0, V3) :- - usualy_laser_written(V3), - black(V0, V1), not -white(V1, V3).","- usualy_laser_written(V3) :- cd(V3), - run(V0, V3), - condiment(V1, V3).","cd(V3) :- - record(V2), digitally_encoded_music(V1, V3), not -mare(V2, V3).","chromatic_color(V1, V2) :- - brown(V0, V1), yellow(V0, V2), - blue(V2, V3).","- run(V0, V3) :- - brown(V0, V1), yellow(V0, V2), - blue(V2, V3).","- nonsolid_color(V3, V3) :- - mine(V1, V3), not -white(V1, V3).","salsa(V1) :- - mine(V1, V3), not -white(V1, V3).","- condiment(V1, V1) :- salsa(V1), not cranberry_sauce(V1), not relish(V1)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_11_4_3_3_6_0.5_1.0_3_3_4","seed":11,"num_facts":6,"num_rules":4,"num_related_predicates":10,"max_depth_of_rule_graph":1,"average_depth_of_rule_graph":1.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":3,"target_query":"parchment(\"Cody\", \"Jason\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["spiders(\"John\", \"Natasha\", \"Cody\").","- spiritualism(\"John\", \"Natasha\", \"Cody\").","- spread_at_room_temperature(\"Spencer\", \"Natasha\", \"Cody\").","- pickerel(\"Spencer\", \"Cody\", \"Jason\").","quilt(\"John\", \"Natasha\", \"Cody\").","- tennis(\"John\", \"Natasha\", \"Cody\")."],"noisy_facts":["- low_to_make_noise(\"Spencer\", \"Cody\").","south_dakotan(\"Natasha\", \"Cody\").","unsupportive(\"Natasha\", \"Cody\", \"Jason\").","ceramics(\"John\", \"Natasha\", \"Jason\").","respiratory_disease(\"Cody\", \"Jason\").","wirer(\"John\", \"Natasha\", \"Cody\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["parchment(V3, V4) :- pole(V2, V4), resistance(V1, V2, V3), not -time_period(V1, V2, V4).","pole(V2, V3) :- resistance(V1, V2, V3), not -spiders(V1, V2, V3), not spiritualism(V1, V2, V3).","resistance(V1, V2, V3) :- time_period(V1, V2, V4), - spiritualism(V1, V2, V3), not tennis(V1, V2, V3).","time_period(V1, V2, V4) :- - spread_at_room_temperature(V0, V2, V3), - pickerel(V0, V3, V4), quilt(V1, V2, V3)."],"noisy_rules":{"a":["- parchment(V4, V4) :- - pole(V2, V4).","- parchment(V3, V4) :- - resistance(V1, V2, V3), - time_period(V1, V2, V4)."],"b":["spiritualism(V4, V2, V3) :- - pole(V2, V4), - parchment(V3, V4).","- time_period(V1, V2, V4) :- - pole(V2, V4), - time_period(V1, V2, V4), - parchment(V3, V4)."],"c":["- quilt(V1, V2, V3) :- - pole(V2, V4), - resistance(V1, V2, V3), - time_period(V1, V2, V4).","pickerel(V2, V3, V4) :- - pole(V2, V4), - resistance(V1, V2, V3), not time_period(V1, V2, V4)."],"d":["building(V3, V1) :- - resistance(V1, V2, V3), wirer(V1, V2, V3).","- specimen_bottle(V2, V2, V4) :- not pole(V2, V4), - time_period(V1, V2, V4), not -ceramics(V1, V2, V4)."],"e":["- change_into_street_clothes(V3, V4) :- respiratory_disease(V3, V4), unsupportive(V2, V3, V4).","- dame(V0, V2, V3) :- - low_to_make_noise(V0, V3), south_dakotan(V2, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_32_9_8_8_11_0.5_1.0_3_2_3","seed":32,"num_facts":11,"num_rules":9,"num_related_predicates":20,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.375,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"P8(\"Yolanda\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P9(\"Nancy\", \"Diana\").","- P10(\"Diana\").","P11(\"Nancy\", \"Diana\").","- P12(\"Nancy\", \"Shelby\").","P13(\"Yolanda\", \"Shelby\").","P14(\"Diana\").","P15(\"Diana\").","P16(\"Diana\").","P17(\"Diana\").","- P18(\"Nancy\", \"Yolanda\").","- P19(\"Nancy\", \"Yolanda\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["P8(V1) :- P0(V2), P2(V2), - P4(V1, V2).","P0(V2) :- P3(V2), not -P14(V2), not -P15(V2).","P1(V0, V1) :- - P9(V0, V2), - P12(V0, V3), P13(V1, V3).","P2(V2) :- - P10(V2), not -P15(V2), not -P16(V2).","P3(V2) :- - P5(V2, V3).","- P4(V2, V2) :- P6(V0, V2), not P9(V0, V2).","- P5(V2, V2) :- - P7(V2), not -P16(V2), not -P17(V2).","P6(V0, V2) :- P11(V0, V2).","- P7(V1) :- P1(V0, V1), not P18(V0, V1), not P19(V0, V1)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_10_9_10_5_7_0.5_1.0_5_1_2","seed":10,"num_facts":9,"num_rules":11,"num_related_predicates":20,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.125,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" tolerance(\"Patrick\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["social_group(\"Michael\").","- horseman(\"Michael\").","- ride.","november_5(\"Patrick\").","- give_food(\"Michael\").","margin(\"Michael\").","re_creation(\"Michael\").","rabbit(\"Michael\").","- written_record(\"Patrick\")."],"noisy_facts":["hoist(\"Patrick\").","- female_parent.","attempt(\"Patrick\").","- philatelist.","conscience_money(\"Patrick\").","- experience_life(\"Patrick\").","lambs(\"Michael\").","- ear(\"Michael\").","forever(\"Patrick\").","studs(\"Michael\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- tolerance(V2) :- - laughter(V2), not gulf(V2).","- brewers_mole(V1) :- social_group(V1), not give_food(V1), not -margin(V1), not -re_creation(V1), not -rabbit(V1).","- telecommuting(V2) :- - bodily_process(V2), not extent(V2), not written_record(V2).","- laughter(V2) :- - telecommuting(V2), not -chromosomal_aberration(V2), not robin_goodfellow(V2).","- steak(V1) :- - horseman(V1).","- gulf(V1) :- - steak(V1).","chromosomal_aberration(V1) :- - brewers_mole(V1), not -giving_gift(V1), not give_food(V1).","- bodily_process(V2) :- - gulf(V2), not ride.","- robin_goodfellow(V2) :- - gulf(V2), not ride.","giving_gift(V2) :- - gulf(V2), not ride.","- extent(V2) :- november_5(V2)."],"noisy_rules":{"a":["tolerance(V2) :- - chromosomal_aberration(V2).","tolerance(V2) :- brewers_mole(V1), laughter(V2), not -bodily_process(V2)."],"b":["written_record(V2) :- - giving_gift(V1), tolerance(V2).","- november_5(V2) :- not -laughter(V2), steak(V1), - chromosomal_aberration(V2), not giving_gift(V1), not -tolerance(V2)."],"c":["extent(V2) :- not -laughter(V2), bodily_process(V2), not -robin_goodfellow(V2).","written_record(V2) :- not -telecommuting(V2), not chromosomal_aberration(V2), bodily_process(V2), not -extent(V2)."],"d":["laughter(V1) :- steak(V1), - female_parent, not philatelist.","gulf(V2) :- not -robin_goodfellow(V2), conscience_money(V2)."],"e":["- abrasion(V1) :- lambs(V1), studs(V1), - ear(V1).","urchin(V2) :- not -attempt(V2), not experience_life(V2), hoist(V2), not -forever(V2)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_39_7_11_11_13_0.5_1.0_5_3_4","seed":39,"num_facts":14,"num_rules":12,"num_related_predicates":26,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":"trap(\"Alyssa\", \"Amy\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- minibar(\"Amy\").","quantum(\"Alyssa\", \"Amy\", \"Diamond\").","- sodium_chloride(\"Amy\", \"Diamond\").","- foam(\"Alyssa\", \"Mary\", \"Amy\").","- shell(\"Alyssa\", \"Amy\", \"Diamond\").","- travel_from_one_place_to_another(\"Alyssa\", \"Amy\", \"Diamond\").","dc_motors(\"Alyssa\", \"Amy\", \"Diamond\").","- industrial(\"Alyssa\", \"Amy\", \"Diamond\").","- extremity(\"Mary\", \"Amy\").","- screen(\"Mary\", \"Amy\").","paleness(\"Mary\", \"Amy\").","- suitcase(\"Amy\", \"Diamond\").","forge(\"Alyssa\", \"Amy\", \"Whitney\").","- macrencephaly(\"Alyssa\", \"Amy\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["trap(V0, V2) :- - show(V3), - directed_study(V4), - produce_fruit(V0, V2), not suitcase(V2, V3), not -forge(V0, V2, V4).","confection(V2, V3) :- - minibar(V2), - shell(V0, V2, V3).","- show(V3) :- quantum(V0, V2, V3), not shell(V0, V2, V3), not travel_from_one_place_to_another(V0, V2, V3), not -dc_motors(V0, V2, V3), not industrial(V0, V2, V3).","broken(V0, V2) :- quantum(V0, V2, V3), not shell(V0, V2, V3), not travel_from_one_place_to_another(V0, V2, V3), not -dc_motors(V0, V2, V3), not industrial(V0, V2, V3).","watering_can(V0, V3) :- quantum(V0, V2, V3), not shell(V0, V2, V3), not travel_from_one_place_to_another(V0, V2, V3), not -dc_motors(V0, V2, V3), not industrial(V0, V2, V3).","loquat(V3, V2) :- confection(V2, V3), not sodium_chloride(V2, V3).","scatter_rubbish(V3, V2) :- confection(V2, V3), not sodium_chloride(V2, V3).","- thunk(V2, V3, V3) :- confection(V2, V3), not sodium_chloride(V2, V3).","- directed_study(V2) :- loquat(V1, V2), not expression(V1, V2), not extremity(V1, V2), not screen(V1, V2), not -paleness(V1, V2).","- expression(V1, V2) :- broken(V0, V2), scatter_rubbish(V1, V2), not macrencephaly(V0, V2).","gravy_boat(V0, V1, V2) :- broken(V0, V2), scatter_rubbish(V1, V2), not macrencephaly(V0, V2).","- produce_fruit(V0, V2) :- confection(V2, V3), watering_can(V0, V3), - thunk(V0, V1, V3), not -gravy_boat(V0, V1, V2), not foam(V0, V1, V2)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_44_6_5_5_5_0.5_1.0_3_1_2","seed":44,"num_facts":8,"num_rules":6,"num_related_predicates":14,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" paid(\"Raven\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["reproductive_organ(\"Courtney\").","- english_muffin(\"Raven\").","poetry(\"Raven\").","- alum(\"Courtney\").","oil_company(\"Courtney\").","- knockout(\"Raven\").","- morgen(\"Raven\").","proboscis(\"Courtney\")."],"noisy_facts":["lying(\"Courtney\").","- godchild(\"Courtney\").","- captain(\"Raven\").","- thames(\"Courtney\").","auriculare(\"Courtney\").","- play_baseball_in(\"Courtney\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- paid(V1) :- brake_disk(V1), not -written_symbol(V1), not -watercourse(V1).","ammunition(V0) :- reproductive_organ(V0), not -proboscis(V0).","- coal(V0) :- ammunition(V0), not alum(V0), not -oil_company(V0).","brake_disk(V0) :- - coal(V0).","written_symbol(V1) :- - english_muffin(V1).","watercourse(V1) :- poetry(V1), not knockout(V1), not morgen(V1)."],"noisy_rules":{"a":["paid(V1) :- - ammunition(V0), - watercourse(V1).","paid(V0) :- - ammunition(V0), not -coal(V0)."],"b":["- proboscis(V1) :- paid(V1).","english_muffin(V1) :- - brake_disk(V1), not watercourse(V1), not -paid(V1)."],"c":["alum(V0) :- - ammunition(V0).","coal(V0) :- - ammunition(V0), - written_symbol(V1)."],"d":["- ammunition(V0) :- coal(V0), not play_baseball_in(V0).","morgen(V1) :- not watercourse(V1), - captain(V1)."],"e":["- pop_up_book(V0) :- auriculare(V0).","- empty(V0) :- - thames(V0), - godchild(V0), not -lying(V0)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_22_10_14_9_12_0.5_1.0_5_3_4","seed":22,"num_facts":13,"num_rules":15,"num_related_predicates":28,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8888888888888888,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" donuts(\"Brandon\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["meeting_people(\"Brianna\", \"Marie\", \"James\").","lobster_thermidor(\"Marie\", \"James\", \"Brandon\").","greyhound_racing(\"Brianna\", \"Marie\", \"James\").","focus(\"Marie\", \"Brandon\").","honker(\"Marie\", \"Brandon\").","jump_high(\"James\", \"Brandon\").","dance_dance_dance(\"James\", \"Brandon\").","community(\"Brianna\", \"James\", \"Tiffany\").","tanoan(\"Brianna\", \"James\", \"Brandon\").","grebe(\"Brianna\", \"Tiffany\", \"Brandon\").","hall_of_residence(\"Brianna\", \"Tiffany\", \"Brandon\").","semidarkness(\"Marie\", \"Brandon\").","scale(\"Marie\", \"Brandon\")."],"noisy_facts":[],"min_fact_dicts_for_query":["meeting_people(\"Brianna\", \"Marie\", \"James\").","lobster_thermidor(\"Marie\", \"James\", \"Brandon\").","greyhound_racing(\"Brianna\", \"Marie\", \"James\").","focus(\"Marie\", \"Brandon\").","honker(\"Marie\", \"Brandon\").","jump_high(\"James\", \"Brandon\").","dance_dance_dance(\"James\", \"Brandon\").","community(\"Brianna\", \"James\", \"Tiffany\").","tanoan(\"Brianna\", \"James\", \"Brandon\").","grebe(\"Brianna\", \"Tiffany\", \"Brandon\").","hall_of_residence(\"Brianna\", \"Tiffany\", \"Brandon\").","semidarkness(\"Marie\", \"Brandon\").","scale(\"Marie\", \"Brandon\")."],"noiseless_rules":["donuts(V4) :- trombidiid(V2, V4), buying_house(V0, V1, V2), flour(V0, V2, V3), pens_on_chains(V0, V3, V4), band(V0, V3, V4).","trombidiid(V2, V4) :- meeting_people(V0, V1, V2), community(V0, V2, V3), tanoan(V0, V2, V4), grebe(V0, V3, V4), hall_of_residence(V0, V3, V4).","grinding(V2, V3, V4) :- meeting_people(V0, V1, V2), community(V0, V2, V3), tanoan(V0, V2, V4), grebe(V0, V3, V4), hall_of_residence(V0, V3, V4).","female_son(V0, V2, V3) :- knee_piece(V0, V1), withe(V0, V3), honker(V1, V4), jump_high(V2, V4), dance_dance_dance(V2, V4).","woodcraft(V2, V4) :- lobster_thermidor(V1, V2, V4).","satisfying_questioner(V1, V4) :- lobster_thermidor(V1, V2, V4).","knee_piece(V0, V1) :- greyhound_racing(V0, V1, V2).","withe(V1, V1) :- focus(V1, V4).","gloves(V1, V1, V4) :- focus(V1, V4).","need_repair(V1, V4) :- focus(V1, V4).","buying_house(V0, V2, V2) :- female_son(V0, V2, V3), gloves(V0, V2, V4), rotifer(V0, V2, V3).","flour(V3, V2, V3) :- grinding(V2, V3, V4), woodcraft(V2, V4).","pens_on_chains(V4, V3, V4) :- satisfying_questioner(V1, V4), need_repair(V3, V4), semidarkness(V1, V4).","rotifer(V3, V3, V3) :- satisfying_questioner(V1, V4), need_repair(V3, V4), semidarkness(V1, V4).","band(V4, V4, V4) :- satisfying_questioner(V1, V4), focus(V1, V4), semidarkness(V1, V4), scale(V1, V4)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_61_4_3_1_4_0.5_1.0_3_1_2","seed":61,"num_facts":2,"num_rules":4,"num_related_predicates":6,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":3,"target_query":"P3(\"Donald\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P4(\"Marissa\").","P5(\"Marissa\")."],"noisy_facts":["- P6.","- P11(\"Donald\").","- P9(\"Wendy\").","- P12(\"Donald\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["P3(V1) :- P2(V1).","P0(V2) :- - P1(V2), not -P5(V2).","- P1(V2) :- P4(V2), not -P5(V2).","P2(V2) :- P0(V2), not P1(V2), not -P4(V2)."],"noisy_rules":{"a":["- P3(V1) :- - P0(V2), - P2(V1).","- P3(V1) :- - P0(V2), P1(V2), - P2(V1)."],"b":["P1(V2) :- P1(V2), - P3(V1).","- P0(V2) :- P1(V2), - P3(V1)."],"c":["- P2(V2) :- - P0(V2), not -P1(V2).","- P5(V2) :- - P0(V2), not -P1(V2), - P2(V1)."],"d":["- P7(V1) :- P1(V2), - P2(V1), - P6.","- P4(V1) :- - P2(V1)."],"e":["P8(V0) :- - P9(V0).","- P10(V1) :- - P11(V1), - P12(V1)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_51_6_7_5_6_0.5_1.0_3_2_3","seed":51,"num_facts":7,"num_rules":8,"num_related_predicates":15,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" bones(\"James\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["catch_mice(\"Michael\", \"James\").","- break(\"Michael\", \"James\").","chicken(\"Danny\", \"Nicole\").","- animal(\"Nicole\", \"James\").","peach_scented(\"Michael\", \"Danny\").","cat(\"James\").","farm(\"James\")."],"noisy_facts":["flea(\"Michael\", \"James\").","- debt_limit(\"Michael\", \"James\").","- common_brant_goose(\"Danny\", \"James\").","bird(\"Danny\", \"Nicole\").","arrears(\"Michael\", \"Danny\")."],"min_fact_dicts_for_query":["catch_mice(\"Michael\", \"James\").","chicken(\"Danny\", \"Nicole\")."],"noiseless_rules":["- bones(V3) :- pigs(V0, V3).","ducks(V3) :- catch_mice(V0, V3), chicken(V1, V2), not animal(V2, V3).","- fish(V3) :- catch_mice(V0, V3), chicken(V1, V2), not animal(V2, V3).","- cats(V0, V3) :- catch_mice(V0, V3), not break(V0, V3).","hunt_mice(V3, V3) :- ducks(V3), not -cat(V3), not -farm(V3).","animals(V3, V3) :- ducks(V3), not -cat(V3), not -farm(V3).","pigs(V1, V3) :- - fish(V3), hunt_mice(V1, V3), not good_sense_of_smell(V1, V3).","- good_sense_of_smell(V1, V0) :- - cats(V0, V1), animals(V1, V2), not -peach_scented(V0, V1)."],"noisy_rules":{"a":["bones(V3) :- fish(V3), cats(V0, V1), good_sense_of_smell(V1, V3).","bones(V3) :- - ducks(V3), - animals(V1, V2), - pigs(V0, V3)."],"b":["break(V3, V3) :- bones(V3).","- catch_mice(V0, V3) :- cats(V0, V1), - pigs(V0, V3), not -bones(V3)."],"c":["- hunt_mice(V1, V0) :- cats(V0, V1).","cats(V0, V0) :- - ducks(V3), - pigs(V0, V3)."],"d":["cats(V0, V0) :- not pigs(V0, V3), flea(V0, V3).","animal(V2, V3) :- fish(V3), - animals(V1, V2), not -bird(V1, V2)."],"e":["- debt(V3) :- arrears(V0, V1), - debt_limit(V0, V3).","- brant(V1, V3) :- - common_brant_goose(V1, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_99_9_12_5_6_0.5_1.0_5_2_3","seed":99,"num_facts":10,"num_rules":13,"num_related_predicates":23,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.375,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" descent(\"Corey\", \"Linda\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["maraco(\"Corey\", \"Linda\").","hand_cream(\"Corey\", \"Jonathan\").","- plunge(\"Jonathan\").","canal.","- cotton(\"Sheila\", \"Linda\").","free_fall(\"Corey\", \"Sheila\").","- precipitation(\"Corey\", \"Jonathan\").","- sun(\"Sheila\", \"Linda\").","- heat_room(\"Jonathan\", \"Linda\").","- chicken(\"Sheila\", \"Linda\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- descent(V0, V3) :- - cream(V2), drop(V0, V2), - grotesque(V0, V2), - natural_language(V0, V3).","colour(V3) :- yellow(V3), white(V1, V3).","amerind(V3) :- maraco(V0, V3).","- cream(V2) :- hand_cream(V0, V2).","drop(V0, V2) :- - plunge(V2), free_fall(V0, V1), - precipitation(V0, V2), - sun(V1, V3), not heat_room(V2, V3).","- chick(V1) :- - plunge(V2), free_fall(V0, V1), - precipitation(V0, V2), - sun(V1, V3), not heat_room(V2, V3).","watercourse(V0, V1) :- - plunge(V2), free_fall(V0, V1), - precipitation(V0, V2), - sun(V1, V3), not heat_room(V2, V3).","- grotesque(V0, V0) :- watercourse(V0, V1), not -canal.","- channel(V1, V1) :- watercourse(V0, V1), not -canal.","yellow(V1) :- - chick(V1), not natural_fiber(V1).","white(V1, V3) :- - cotton(V1, V3), not chicken(V1, V3).","- natural_fiber(V1) :- - cotton(V1, V3), not chicken(V1, V3).","- natural_language(V0, V3) :- colour(V3), amerind(V3), watercourse(V0, V1), not channel(V1, V3)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_35_8_12_3_6_0.5_1.0_5_3_4","seed":35,"num_facts":5,"num_rules":13,"num_related_predicates":18,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.7142857142857144,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"friend(\"Donald\", \"Frank\", \"Victor\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["confidant(\"Frank\", \"Erica\", \"Victor\").","cooking_apple(\"Frank\", \"Erica\", \"Victor\").","lips_help_form_spoken_word(\"Frank\", \"Erica\", \"Victor\").","barbados_gooseberry(\"Frank\", \"Erica\", \"Victor\").","berry(\"Frank\", \"Erica\", \"Victor\")."],"noisy_facts":[],"min_fact_dicts_for_query":["confidant(\"Frank\", \"Erica\", \"Victor\").","cooking_apple(\"Frank\", \"Erica\", \"Victor\").","lips_help_form_spoken_word(\"Frank\", \"Erica\", \"Victor\").","barbados_gooseberry(\"Frank\", \"Erica\", \"Victor\").","berry(\"Frank\", \"Erica\", \"Victor\")."],"noiseless_rules":["friend(V0, V1, V4) :- brother(V1, V2), buddy(V0, V2, V3), confidant(V1, V2, V4).","plum(V2, V2, V4) :- confidant(V1, V2, V4), lips_help_form_spoken_word(V1, V2, V4).","little_brother(V4) :- confidant(V1, V2, V4), lips_help_form_spoken_word(V1, V2, V4).","acorn(V1, V1, V4) :- confidant(V1, V2, V4), lips_help_form_spoken_word(V1, V2, V4).","edible_fruit(V4) :- plum(V2, V3, V4), apple(V1, V2, V4), lips_help_form_spoken_word(V1, V2, V4), barbados_gooseberry(V1, V2, V4), berry(V1, V2, V4).","apple(V1, V2, V4) :- confidant(V1, V2, V4), cooking_apple(V1, V2, V4).","night(V4, V2, V4) :- confidant(V1, V2, V4), cooking_apple(V1, V2, V4).","argus(V2, V1) :- confidant(V1, V2, V4), cooking_apple(V1, V2, V4).","brother(V2, V2) :- little_brother(V4), night(V0, V2, V4), stepbrother(V0, V2, V4), fruit(V0, V2, V4).","cobber(V2) :- argus(V2, V3).","buddy(V1, V1, V1) :- cobber(V1).","stepbrother(V1, V1, V1) :- cobber(V1).","fruit(V4, V3, V4) :- acorn(V1, V3, V4), edible_fruit(V4)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_31_9_10_7_9_0.5_1.0_5_3_4","seed":31,"num_facts":11,"num_rules":11,"num_related_predicates":22,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"P10(\"Jessica\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P11(\"Jessica\", \"Crystal\").","P12(\"Jessica\", \"Douglas\").","- P13(\"Crystal\", \"William\", \"Angela\").","- P14(\"Crystal\", \"William\", \"Angela\").","P15(\"Crystal\", \"William\", \"Angela\").","- P16(\"Crystal\", \"William\", \"Angela\").","P17(\"Crystal\", \"William\", \"Angela\").","- P18(\"Crystal\", \"William\", \"Angela\").","P19(\"Jessica\", \"Angela\").","- P20(\"Crystal\", \"William\").","- P21(\"Jessica\", \"William\", \"Angela\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["P10(V0) :- P0(V0, V1), P4(V2, V3), - P6(V0, V2, V4), not -P15(V1, V2, V4).","P0(V0, V1) :- P11(V0, V1).","P1(V2, V3, V4) :- - P5(V0, V1), P7(V0, V2, V3), - P9(V1, V2, V4).","P2(V3, V3) :- P1(V2, V3, V4), P15(V1, V2, V4), not P16(V1, V2, V4), not -P17(V1, V2, V4), not P18(V1, V2, V4).","P3(V3) :- P12(V0, V3), P19(V0, V4), - P20(V1, V2), not P21(V0, V2, V4).","P4(V2, V4) :- - P13(V1, V2, V4), not -P15(V1, V2, V4).","- P5(V1, V1) :- - P13(V1, V2, V4), not -P15(V1, V2, V4).","- P6(V0, V3, V3) :- P2(V0, V3), not -P8(V0, V3).","P7(V3, V3, V3) :- P3(V3).","P8(V3, V3) :- P3(V3).","- P9(V1, V2, V4) :- - P14(V1, V2, V4)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_14_7_10_5_6_0.5_1.0_3_2_3","seed":14,"num_facts":7,"num_rules":11,"num_related_predicates":18,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" nitramine(\"Deanna\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["business_address(\"Debbie\").","finger_bowl(\"Angelica\", \"Debbie\").","getting_to_higher_place(\"Deanna\", \"Amy\").","- nurturing_loved_ones(\"Deanna\", \"Debbie\").","- plastic_bag(\"Angelica\", \"Deanna\").","- precious_metal(\"Deanna\", \"Debbie\").","- listening."],"noisy_facts":["- round(\"Amy\", \"Debbie\").","wires(\"Deanna\", \"Debbie\").","bill_of_attainder(\"Angelica\", \"Deanna\").","- naiad(\"Angelica\", \"Amy\").","granulation(\"Deanna\", \"Amy\").","- smoke."],"min_fact_dicts_for_query":["business_address(\"Debbie\").","finger_bowl(\"Angelica\", \"Debbie\").","getting_to_higher_place(\"Deanna\", \"Amy\").","- plastic_bag(\"Angelica\", \"Deanna\")."],"noiseless_rules":["- nitramine(V1) :- militarist(V1, V2), case_victims(V1, V3), not seesaw(V2, V3).","impact(V1, V3) :- business_address(V3), - plastic_bag(V0, V1), not precious_metal(V1, V3).","- composition(V3) :- business_address(V3), - plastic_bag(V0, V1), not precious_metal(V1, V3).","militarist(V1, V3) :- impact(V1, V3), not listening.","- scrub_oak(V3, V1) :- impact(V1, V3), not listening.","case_victims(V1, V3) :- - water_shamrock(V0, V3), dorking(V1, V3).","webbed_feet(V0, V1) :- - water_shamrock(V0, V3), dorking(V1, V3).","animal_material(V1) :- - composition(V3), dorking(V1, V3).","- water_shamrock(V0, V3) :- finger_bowl(V0, V3), getting_to_higher_place(V1, V2), not nurturing_loved_ones(V1, V3).","dorking(V1, V3) :- finger_bowl(V0, V3), getting_to_higher_place(V1, V2), not nurturing_loved_ones(V1, V3).","- seesaw(V1, V1) :- - scrub_oak(V0, V1), not -webbed_feet(V0, V1), not -animal_material(V1)."],"noisy_rules":{"a":["nitramine(V3) :- seesaw(V2, V3).","nitramine(V1) :- composition(V3), - case_victims(V1, V3), seesaw(V2, V3)."],"b":["scrub_oak(V1, V1) :- - case_victims(V1, V3), nitramine(V1).","- finger_bowl(V3, V3) :- - dorking(V1, V3), not -nitramine(V1)."],"c":["- impact(V1, V2) :- - militarist(V1, V2).","- militarist(V1, V1) :- - webbed_feet(V0, V1)."],"d":["expressing_opinion(V1) :- - webbed_feet(V0, V1), bill_of_attainder(V0, V1).","scrub_oak(V3, V3) :- composition(V3), - smoke."],"e":["pollution(V1, V3) :- wires(V1, V3).","- point(V0, V1) :- - naiad(V0, V2), granulation(V1, V2), - round(V2, V3)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_28_8_7_2_4_0.5_1.0_5_3_4","seed":28,"num_facts":6,"num_rules":8,"num_related_predicates":14,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"come_in_matching_sets(\"Debra\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["dinner(\"Elizabeth\", \"Matthew\").","chachka(\"Elizabeth\", \"Debra\", \"Megan\").","- star_in_film(\"Elizabeth\", \"Debra\", \"Megan\").","meeting(\"Elizabeth\", \"Debra\", \"Megan\").","socialist_labor_party(\"Elizabeth\", \"Christian\", \"Megan\").","opposition(\"Matthew\", \"Christian\", \"Megan\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["come_in_matching_sets(V3) :- - sheets(V0, V1), - plates(V1, V3, V4).","party(V0, V1, V4) :- dinner(V0, V1), socialist_labor_party(V0, V2, V4), not -opposition(V1, V2, V4).","- organization(V0, V0) :- party(V0, V1, V4).","- bed(V3) :- - organization(V0, V3), not nest(V0, V3).","- sheets(V4, V4) :- - bed(V4), not mattress(V4).","- nest(V0, V3) :- chachka(V0, V3, V4).","- mattress(V4) :- chachka(V0, V3, V4), not star_in_film(V0, V3, V4).","- plates(V4, V3, V4) :- chachka(V0, V3, V4), not -meeting(V0, V3, V4)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_28_8_7_3_3_0.5_1.0_3_1_2","seed":28,"num_facts":7,"num_rules":8,"num_related_predicates":15,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"swiss_steak(\"Amanda\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["carry_on_bag(\"Jose\").","large_group(\"Amanda\").","- sea_snemone(\"Amanda\").","- gland(\"Amanda\").","swiss_cheese(\"Amanda\").","bakery(\"Amanda\").","- nt_birds."],"noisy_facts":["- copper(\"Amanda\").","return(\"Jose\").","- donna(\"Amanda\").","- rota.","- wading_bird(\"Jose\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["swiss_steak(V0) :- footbridge(V0), not -basket_star(V0).","catch_mouse(V2) :- carry_on_bag(V2).","- very_affectionate_creatures(V2) :- catch_mouse(V2), not nt_birds.","master_bedroom(V0) :- - very_affectionate_creatures(V0), not -song(V0).","footbridge(V0) :- master_bedroom(V0), not -beeswax(V0).","song(V0) :- large_group(V0).","beeswax(V0) :- - sea_snemone(V0), not -swiss_cheese(V0), not -bakery(V0).","basket_star(V0) :- - gland(V0)."],"noisy_rules":{"a":["- swiss_steak(V0) :- - beeswax(V0).","- swiss_steak(V0) :- very_affectionate_creatures(V0)."],"b":["- footbridge(V0) :- - swiss_steak(V0).","nt_birds(V0) :- - swiss_steak(V0)."],"c":["- catch_mouse(V0) :- - song(V0).","- basket_star(V0) :- - master_bedroom(V0)."],"d":["- large_group(V0) :- - catch_mouse(V2), - beeswax(V0), - rota.","- bakery(V0) :- - footbridge(V0), not donna(V0)."],"e":["states_rights_democratic_party(V2) :- - wading_bird(V2), not -return(V2).","- fun(V0) :- - copper(V0)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_1_9_14_12_15_0.5_1.0_5_3_4","seed":1,"num_facts":14,"num_rules":15,"num_related_predicates":29,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"cabbage(\"Erin\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- uninterestingness(\"Kathryn\").","- fluke(\"Kathryn\").","ply(\"Gail\", \"Kathryn\").","proposition(\"Gail\", \"Kathryn\").","decoupage(\"Gail\", \"Kathryn\").","- people(\"Gail\", \"Kathryn\", \"Alexander\").","person(\"Gail\", \"Elizabeth\", \"Alexander\").","- living_thing(\"Gail\", \"Elizabeth\", \"Alexander\").","- wings(\"Kathryn\", \"Elizabeth\", \"Erin\").","- canopy(\"Kathryn\", \"Elizabeth\", \"Alexander\").","- one_foot(\"Kathryn\", \"Erin\").","- drug(\"Kathryn\", \"Elizabeth\", \"Alexander\").","- poor_box(\"Kathryn\").","- coffin(\"Kathryn\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["cabbage(V4) :- - experience_pain(V0, V1), head_cabbage(V3, V4), - bok_choy(V0, V1, V2), not -point(V0, V2, V3), not kale(V1, V2, V4).","- experience_pain(V0, V1) :- - uninterestingness(V1), - people(V0, V1, V3), person(V0, V2, V3), - living_thing(V0, V2, V3), - wings(V1, V2, V4).","- not_(V0, V2, V4) :- - uninterestingness(V1), - people(V0, V1, V3), person(V0, V2, V3), - living_thing(V0, V2, V3), - wings(V1, V2, V4).","- two_legs(V1, V4) :- - uninterestingness(V1), - people(V0, V1, V3), person(V0, V2, V3), - living_thing(V0, V2, V3), - wings(V1, V2, V4).","- pikestaff(V0, V4) :- - uninterestingness(V1), - people(V0, V1, V3), person(V0, V2, V3), - living_thing(V0, V2, V3), - wings(V1, V2, V4).","head_cabbage(V1, V1) :- - uninterestingness(V1), not fluke(V1), not poor_box(V1), not coffin(V1).","box(V1, V1) :- - uninterestingness(V1), not fluke(V1), not poor_box(V1), not coffin(V1).","barb(V1, V1, V1) :- - uninterestingness(V1), not fluke(V1), not poor_box(V1), not coffin(V1).","- negative(V0, V0) :- - not_(V0, V2, V4).","- bok_choy(V0, V1, V0) :- box(V0, V1), not territorial_waters(V0, V1), not -ply(V0, V1), not -proposition(V0, V1), not -decoupage(V0, V1).","partisan(V1, V4) :- - two_legs(V1, V4), not one_foot(V1, V4).","point(V4, V2, V3) :- barb(V1, V2, V3), pike(V1, V2, V3), - canopy(V1, V2, V3), - one_foot(V1, V4), not drug(V1, V2, V3).","- territorial_waters(V3, V1) :- - negative(V1, V3), not poor_box(V1).","- kale(V4, V2, V4) :- - pikestaff(V0, V4), partisan(V0, V2).","pike(V2, V2, V0) :- - pikestaff(V0, V4), partisan(V0, V2)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_48_6_7_3_6_0.5_1.0_3_3_4","seed":48,"num_facts":5,"num_rules":8,"num_related_predicates":13,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" food(\"Lisa\", \"Kelly\", \"Luke\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- water_in_ocean(\"Lisa\", \"Kelly\", \"Thomas\").","- eating(\"Lisa\", \"Kelly\", \"Thomas\").","- ketchup(\"Kelly\", \"Andrea\", \"Thomas\").","- churches(\"Lisa\", \"Andrea\", \"Luke\").","freezing(\"Kelly\", \"Andrea\", \"Luke\")."],"noisy_facts":["- croquet_ball(\"Lisa\", \"Andrea\", \"Thomas\").","radio_operator(\"Thomas\").","- broken_computer(\"Kelly\", \"Andrea\").","- fishpond(\"Kelly\", \"Andrea\").","water_hole(\"Kelly\", \"Andrea\", \"Luke\").","guyana_dollar(\"Lisa\", \"Andrea\", \"Luke\").","horsepond(\"Lisa\", \"Andrea\", \"Luke\")."],"min_fact_dicts_for_query":["- water_in_ocean(\"Lisa\", \"Kelly\", \"Thomas\").","- eating(\"Lisa\", \"Kelly\", \"Thomas\").","- churches(\"Lisa\", \"Andrea\", \"Luke\")."],"noiseless_rules":["- food(V0, V1, V4) :- - condiment(V1, V2), - candy(V1, V4), chicken(V0, V1, V3).","- condiment(V1, V2) :- - salt(V3), - sugar(V1, V2), not ketchup(V1, V2, V3).","- salt(V3) :- - water_in_ocean(V0, V1, V3), - churches(V0, V2, V4), not -freezing(V1, V2, V4).","cake(V0, V1, V4) :- - water_in_ocean(V0, V1, V3), - churches(V0, V2, V4), not -freezing(V1, V2, V4).","chocolate(V1, V2, V4) :- - water_in_ocean(V0, V1, V3), - churches(V0, V2, V4), not -freezing(V1, V2, V4).","- sugar(V1, V4) :- cake(V0, V1, V4), not candy(V1, V4).","- candy(V1, V4) :- - salt(V3), chocolate(V1, V2, V4), - water_in_ocean(V0, V1, V3).","chicken(V0, V1, V3) :- - eating(V0, V1, V3)."],"noisy_rules":{"a":["food(V2, V1, V4) :- condiment(V1, V2), salt(V3), candy(V1, V4).","food(V0, V1, V3) :- sugar(V1, V2), - chicken(V0, V1, V3)."],"b":["eating(V0, V1, V3) :- - cake(V0, V1, V4), - chicken(V0, V1, V3), not -food(V0, V1, V4).","candy(V1, V4) :- - chocolate(V1, V2, V4), food(V0, V1, V4)."],"c":["salt(V3) :- - cake(V0, V1, V4), - chocolate(V1, V2, V4), - chicken(V0, V1, V3).","- cake(V2, V1, V4) :- condiment(V1, V2), salt(V3), candy(V1, V4)."],"d":["water_in_ocean(V3, V3, V3) :- salt(V3), not -radio_operator(V3).","- cake(V0, V1, V1) :- - chicken(V0, V1, V3)."],"e":["- pond(V4) :- - fishpond(V1, V2), horsepond(V0, V2, V4), not -water_hole(V1, V2, V4).","colorful(V1, V2, V4) :- - broken_computer(V1, V2), - croquet_ball(V0, V2, V3), guyana_dollar(V0, V2, V4)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_24_8_9_9_11_0.5_1.0_5_3_4","seed":24,"num_facts":13,"num_rules":10,"num_related_predicates":23,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.7142857142857142,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"somalian(\"Carrie\", \"Stephanie\", \"Martin\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["making_clothing(\"Devon\", \"Carrie\", \"Shawna\").","tree_part(\"Carrie\", \"Shawna\", \"Martin\").","- east_coast(\"Carrie\", \"Stephanie\", \"Shawna\").","- passengers(\"Stephanie\").","- tabby_cat(\"Carrie\", \"Shawna\", \"Martin\").","- thoughts(\"Carrie\", \"Shawna\", \"Martin\").","flying_rodent(\"Carrie\", \"Shawna\", \"Martin\").","quilt(\"Carrie\", \"Shawna\", \"Martin\").","- double_breasted_jacket(\"Devon\", \"Stephanie\").","kwa(\"Carrie\", \"Stephanie\").","- world(\"Devon\", \"Carrie\", \"Martin\").","- knell(\"Carrie\", \"Stephanie\", \"Martin\").","sweet_taste(\"Carrie\", \"Stephanie\", \"Shawna\")."],"noisy_facts":["- scan(\"Carrie\", \"Shawna\", \"Martin\").","dentine(\"Shawna\", \"Martin\").","- opportuneness(\"Carrie\", \"Stephanie\").","- tour_de_france(\"Devon\", \"Carrie\", \"Stephanie\").","player(\"Devon\", \"Stephanie\").","facility(\"Carrie\", \"Stephanie\", \"Shawna\").","- professional(\"Devon\", \"Shawna\", \"Martin\").","- pepper(\"Carrie\").","- electronic_equipment(\"Devon\", \"Carrie\", \"Stephanie\").","boulder(\"Devon\", \"Carrie\", \"Shawna\")."],"min_fact_dicts_for_query":["making_clothing(\"Devon\", \"Carrie\", \"Shawna\").","tree_part(\"Carrie\", \"Shawna\", \"Martin\").","- passengers(\"Stephanie\").","- double_breasted_jacket(\"Devon\", \"Stephanie\").","kwa(\"Carrie\", \"Stephanie\").","- world(\"Devon\", \"Carrie\", \"Martin\")."],"noiseless_rules":["somalian(V1, V2, V4) :- - miniature_poodle(V2), belted_ammunition(V1, V3), - ball_cartridge(V2, V4), not -venuss_girdle(V1, V3, V4), not -tree_part(V1, V3, V4).","- relatives(V1, V2, V3) :- - furnish_home(V1, V2, V3).","- miniature_poodle(V2) :- gray(V1, V2, V4).","belted_ammunition(V1, V3) :- elongation(V3, V4), making_clothing(V0, V1, V3).","elongation(V3, V4) :- tree_part(V1, V3, V4), not tabby_cat(V1, V3, V4), not thoughts(V1, V3, V4), not -flying_rodent(V1, V3, V4), not -quilt(V1, V3, V4).","- furnish_home(V1, V2, V3) :- - east_coast(V1, V2, V3).","- ball_cartridge(V2, V4) :- - passengers(V2), - double_breasted_jacket(V0, V2), kwa(V1, V2), - world(V0, V1, V4), not knell(V1, V2, V4).","gray(V1, V2, V4) :- - passengers(V2), - double_breasted_jacket(V0, V2), kwa(V1, V2), - world(V0, V1, V4), not knell(V1, V2, V4).","native_american(V2, V4) :- - passengers(V2), - double_breasted_jacket(V0, V2), kwa(V1, V2), - world(V0, V1, V4), not knell(V1, V2, V4).","venuss_girdle(V1, V3, V4) :- - relatives(V1, V2, V3), elongation(V3, V4), not -native_american(V2, V4), not -sweet_taste(V1, V2, V3)."],"noisy_rules":{"a":["- somalian(V1, V2, V1) :- not -relatives(V1, V2, V3), furnish_home(V1, V2, V3).","- somalian(V1, V2, V4) :- miniature_poodle(V2), - native_american(V2, V4), - venuss_girdle(V1, V3, V4)."],"b":["double_breasted_jacket(V2, V2) :- relatives(V1, V2, V3), not venuss_girdle(V1, V3, V4), - somalian(V1, V2, V4).","thoughts(V1, V3, V4) :- relatives(V1, V2, V3), not -miniature_poodle(V2), not -ball_cartridge(V2, V4), - gray(V1, V2, V4), not somalian(V1, V2, V4)."],"c":["- elongation(V3, V4) :- not -relatives(V1, V2, V3), miniature_poodle(V2), furnish_home(V1, V2, V3), not native_american(V2, V4), - venuss_girdle(V1, V3, V4).","- kwa(V2, V2) :- - native_american(V2, V4)."],"d":["- belted_ammunition(V1, V3) :- miniature_poodle(V2), - native_american(V2, V4), - venuss_girdle(V1, V3, V4), - scan(V1, V3, V4).","world(V3, V1, V1) :- furnish_home(V1, V2, V3), not -facility(V1, V2, V3)."],"e":["furnitire(V0, V2, V3) :- player(V0, V2), - opportuneness(V1, V2), - professional(V0, V3, V4).","- army_rank(V0, V2) :- - pepper(V1), dentine(V3, V4), - electronic_equipment(V0, V1, V2), not tour_de_france(V0, V1, V2), boulder(V0, V1, V3)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_94_8_7_7_8_0.5_1.0_5_0_1","seed":94,"num_facts":11,"num_rules":8,"num_related_predicates":19,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.857142857142857,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"P7.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P8.","P9.","P10.","- P11.","- P12.","P13.","- P14.","- P15.","P16.","P17.","P18."],"noisy_facts":["P22.","P26.","P20.","- P28.","- P21.","- P24.","- P25."],"min_fact_dicts_for_query":["- P8."],"noiseless_rules":["P7 :- P6, not P8.","- P0 :- - P8, not -P16, not -P17, not -P18.","P1 :- P9.","P2 :- P10.","- P3 :- P5.","- P4 :- - P11, not P12, not -P13, not P14, not P15.","P5 :- - P0, not -P1, not -P2.","P6 :- - P3, not P4."],"noisy_rules":{"a":["- P7 :- P0, not P1, not P2, P4, not P6.","- P7 :- P0, - P1, not -P3, not P5, not P6."],"b":["- P9 :- - P1, not P7.","- P2 :- not P2, - P6, - P7."],"c":["P8 :- P0, - P2, not -P3.","- P16 :- - P1, not -P4."],"d":["P19 :- - P2, P3, P4, not -P20, not P21.","P11 :- not P1, P3, - P5, P22."],"e":["- P23 :- - P24, not P25, not -P26.","- P27 :- - P28."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_30_9_9_5_7_0.5_1.0_3_1_2","seed":30,"num_facts":9,"num_rules":10,"num_related_predicates":19,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.125,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" electricity(\"Carlos\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- absorbent_material(\"Carlos\").","bound(\"Carlos\").","square_inch(\"Carlos\").","- sitting_in.","butter.","cheese.","ojibwa(\"Carlos\").","real(\"Carlos\").","- another_word_for_money."],"noisy_facts":[],"min_fact_dicts_for_query":["bound(\"Carlos\")."],"noiseless_rules":["- electricity(V2) :- direct_current(V2), not piezoelectricity(V2), not -signal(V2).","light_cream(V2) :- - absorbent_material(V2).","dogs_and_horses(V2) :- bound(V2).","direct_current(V2) :- dogs_and_horses(V2), not panel(V2), not -dairy_product(V2).","- cream(V2) :- light_cream(V2).","- panel(V2) :- square_inch(V2), not -ojibwa(V2), not -real(V2).","dairy_product(V0) :- - cream(V0), not -butter, not -cheese.","- piezoelectricity(V2) :- - absorbent_material(V2), not sitting_in, not another_word_for_money.","- symphysion(V2) :- - absorbent_material(V2), not sitting_in, not another_word_for_money.","signal(V1) :- - symphysion(V1), not sitting_in."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_82_10_15_3_4_0.5_1.0_5_0_1","seed":82,"num_facts":6,"num_rules":16,"num_related_predicates":22,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.888888888888889,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" escape.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["pass_bus.","- morrow.","fire_cannonball.","machine_translation.","refund.","- helmet."],"noisy_facts":["glass_of_milk.","broadtail.","north_sea_oilfield.","entering_building.","swimmers.","third_dimension.","- being_early.","admission_day.","run.","special_occasions."],"min_fact_dicts_for_query":["pass_bus."],"noiseless_rules":["- escape :- water_speedwell, not variety, not -allegorizer, not lamb_chop, not -machine_translation.","water_speedwell :- packrat, not -root_crop.","- funny_wagon :- pass_bus.","- natural_language :- pass_bus.","- glamor :- pass_bus.","- marble :- - morrow.","- variety :- - funny_wagon, not glamor.","veneer :- - funny_wagon, not glamor.","packrat :- veneer, not -superior_conjunction.","allegorizer :- conglomerate, not -exercising_intellect, not -refund, not helmet.","root_crop :- conglomerate, not -exercising_intellect, not -refund, not helmet.","conglomerate :- - natural_language.","superior_conjunction :- fire_cannonball.","- pasta :- fire_cannonball.","- lamb_chop :- - glamor, not marble, not pasta.","exercising_intellect :- - glamor, not marble, not pasta."],"noisy_rules":{"a":["escape :- - packrat, not -pasta.","escape :- - water_speedwell, not -natural_language, not -pasta."],"b":["- fire_cannonball :- not -natural_language, lamb_chop, escape.","- pass_bus :- funny_wagon, not packrat, not -escape."],"c":["- water_speedwell :- - veneer, not root_crop, not exercising_intellect.","- allegorizer :- - water_speedwell, not -funny_wagon, not -marble, not -variety."],"d":["- conglomerate :- - water_speedwell, pasta, glass_of_milk.","- water_speedwell :- natural_language, - packrat, not conglomerate, lamb_chop, not -entering_building."],"e":["- pipe :- broadtail, not -special_occasions, not -third_dimension, run.","town :- not -north_sea_oilfield, not -swimmers, - being_early, not -admission_day."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_14_8_11_10_10_0.5_1.0_3_0_1","seed":14,"num_facts":11,"num_rules":12,"num_related_predicates":23,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.5714285714285716,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"P11.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P12.","P13.","- P14.","- P15.","- P16.","- P17.","- P18.","P19.","- P20.","P21.","P22."],"noisy_facts":["P24.","P23.","P25.","P27.","- P28.","- P30."],"min_fact_dicts_for_query":["P12."],"noiseless_rules":["P11 :- P5, not P10, not -P13.","P0 :- P12, not -P21, not -P22.","- P1 :- P12, not -P21, not -P22.","P2 :- P12, not -P21, not -P22.","- P3 :- P0.","P4 :- P0.","P5 :- P6, not P9, not P20.","P6 :- P8, not P18, not -P19.","- P7 :- P8, not P18, not -P19.","P8 :- - P1, not P3, not P14.","- P9 :- P2, not P15, not P16.","- P10 :- P4, not P7, not P17."],"noisy_rules":{"a":["- P11 :- P9.","- P11 :- P1, not P4, P10."],"b":["P3 :- - P4, not P11.","- P12 :- P10, not P11."],"c":["- P0 :- - P2.","- P2 :- - P5."],"d":["- P19 :- P10, not -P23.","- P2 :- not -P1, - P5, P24."],"e":["- P26 :- P25, P27, not P28.","- P29 :- - P30."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_32_10_11_9_11_0.5_1.0_3_0_1","seed":32,"num_facts":14,"num_rules":12,"num_related_predicates":26,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":"P11.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P12.","P13.","P14.","P15.","P16.","P17.","- P18.","- P19.","- P20.","P21.","P22.","P23.","P24.","P25."],"noisy_facts":["- P30.","P29.","P27."],"min_fact_dicts_for_query":["P13."],"noiseless_rules":["P11 :- P6, not -P8, not -P25.","P0 :- - P12, not -P17, not P18.","P1 :- - P12, not -P17, not P18.","P2 :- P13, not P19, not P20.","P3 :- P13, not P19, not P20.","- P4 :- P14, not -P23, not -P24.","- P5 :- P15.","P6 :- P3, not P7, not P9.","- P7 :- P0, not -P2, not -P15.","P8 :- - P4, not P10.","- P9 :- P16, not -P21, not -P22.","- P10 :- P1, not -P3, not P5."],"noisy_rules":{"a":["- P11 :- P4.","- P11 :- - P1, not -P10."],"b":["- P14 :- not -P5, P9, - P11.","- P3 :- - P11."],"c":["P5 :- P9.","P20 :- P4, not P8."],"d":["P5 :- - P1.","- P23 :- - P2."],"e":["P26 :- P27.","- P28 :- P29, - P30."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_81_9_9_2_5_0.5_1.0_3_2_3","seed":81,"num_facts":5,"num_rules":10,"num_related_predicates":15,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"P9(\"Chelsea\", \"Chris\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P10(\"Chelsea\", \"Chris\").","P11(\"Chelsea\", \"Chris\").","- P12(\"Chelsea\", \"Chris\").","P13(\"Chelsea\", \"Chris\").","- P14(\"Chelsea\", \"Chris\")."],"noisy_facts":["- P20(\"Judith\", \"Chelsea\").","P22(\"Chelsea\", \"Chris\").","- P17(\"Judith\", \"Chris\").","P21(\"Judith\", \"Chelsea\").","- P15(\"Chris\").","P18(\"Thomas\", \"Chris\")."],"min_fact_dicts_for_query":["- P10(\"Chelsea\", \"Chris\").","- P12(\"Chelsea\", \"Chris\")."],"noiseless_rules":["P9(V1, V3) :- P0(V1, V3), P3(V2, V3), not P6(V2, V3).","P0(V1, V3) :- P1(V1, V3).","P1(V1, V3) :- P4(V3), P5(V1, V3), not -P11(V1, V3).","P2(V1, V3) :- - P10(V1, V3).","P3(V3, V3) :- - P7(V1, V3), not -P11(V1, V3).","P4(V3) :- P8(V3).","P5(V1, V3) :- P2(V1, V3), not P14(V1, V3).","- P6(V1, V3) :- - P12(V1, V3), not -P13(V1, V3), not P14(V1, V3).","- P7(V1, V3) :- - P12(V1, V3), not -P13(V1, V3), not P14(V1, V3).","P8(V3) :- - P7(V1, V3)."],"noisy_rules":{"a":["- P9(V2, V3) :- - P3(V2, V3), not -P6(V2, V3).","- P9(V1, V3) :- - P1(V1, V3)."],"b":["- P11(V1, V3) :- - P1(V1, V3), - P8(V3), not P9(V1, V3).","P14(V1, V3) :- P6(V2, V3), - P9(V1, V3)."],"c":["- P2(V1, V3) :- - P0(V1, V3), P6(V2, V3), not P8(V3).","- P4(V3) :- - P0(V1, V3)."],"d":["- P5(V3, V3) :- - P8(V3), - P15(V3).","P6(V3, V3) :- P7(V1, V3)."],"e":["P16(V0, V2) :- - P17(V0, V3), P18(V2, V3).","- P19(V1, V3) :- - P20(V0, V1), P21(V0, V1), P22(V1, V3)."]}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_2_8_8_7_10_0.5_1.0_3_0_1","seed":2,"num_facts":10,"num_rules":9,"num_related_predicates":19,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.7142857142857144,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" measure.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["cow.","rowanberry.","longhorn.","bad_check.","- reading.","black_gold.","launching_space_shuttle.","- obverse.","- bangladesh.","- bald."],"noisy_facts":["- aerosol.","canto.","- dining_room_table.","- most_commonly.","- capital."],"min_fact_dicts_for_query":["cow."],"noiseless_rules":["- measure :- - tapestry, not flowing.","- tapestry :- cow, not reading, not -black_gold.","thermometer :- - chocolate_liquor, not bangladesh, not bald.","- flowing :- - cappuccino, not ballrooms, not -longhorn.","- cappuccino :- thermometer, not family_court, not -bad_check.","- chocolate_liquor :- bars.","- ballrooms :- rowanberry, not -launching_space_shuttle, not obverse.","bars :- rowanberry, not -launching_space_shuttle, not obverse.","- family_court :- - ballrooms, not -longhorn, not -launching_space_shuttle."],"noisy_rules":{"a":["measure :- flowing.","measure :- tapestry, - thermometer, not -chocolate_liquor."],"b":["obverse :- not -cappuccino, family_court, not -measure.","tapestry :- - thermometer, family_court, measure."],"c":["reading :- cappuccino, not bars.","- thermometer :- flowing."],"d":["- analytical_game :- not bars, - capital.","cappuccino :- - bars, not -family_court, canto."],"e":["guardroom :- - most_commonly, not dining_room_table.","- men :- - aerosol."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_0_10_11_10_11_0.5_1.0_3_2_3","seed":0,"num_facts":14,"num_rules":12,"num_related_predicates":26,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.4444444444444446,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" animal_material(\"Stephanie\", \"Elizabeth\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["swimmer(\"Stephanie\", \"Elizabeth\").","material(\"Stephanie\", \"Elizabeth\").","- dove(\"Stephanie\", \"Joseph\").","organisms(\"Joseph\").","extramarital(\"Rebecca\", \"Joseph\").","- water_vehicle(\"Joseph\", \"Elizabeth\").","- trees(\"Stephanie\", \"Joseph\").","- living_being(\"Stephanie\", \"Elizabeth\").","grinding(\"Stephanie\", \"Rebecca\").","- grain(\"Stephanie\", \"Elizabeth\").","sussex_spaniel(\"Rebecca\", \"Elizabeth\").","lead_to_drunken_behavior(\"Rebecca\", \"Elizabeth\").","decoration(\"Rebecca\", \"Elizabeth\").","- vampire(\"Joseph\", \"Elizabeth\")."],"noisy_facts":["- necrosis(\"Joseph\", \"Elizabeth\").","- poison(\"Stephanie\", \"Elizabeth\").","- banana_quit(\"Stephanie\", \"Rebecca\").","cinema(\"Stephanie\", \"Joseph\").","rubber_band(\"Stephanie\", \"Elizabeth\").","evening(\"Stephanie\", \"Rebecca\")."],"min_fact_dicts_for_query":["- dove(\"Stephanie\", \"Joseph\").","grinding(\"Stephanie\", \"Rebecca\").","decoration(\"Rebecca\", \"Elizabeth\")."],"noiseless_rules":["- animal_material(V0, V3) :- - shell(V0, V3), not dentine(V0, V3).","- shell(V0, V3) :- - mother_of_pearl(V3), grinding(V0, V1), not grain(V0, V3).","atom(V0) :- - mother_of_pearl(V3), grinding(V0, V1), not grain(V0, V3).","- petroglyph(V1, V3) :- - adhesive_material(V0, V1), - place(V0, V3), die(V2, V3).","- adhesive_material(V0, V0) :- atom(V0).","grave(V0, V3) :- swimmer(V0, V3), extramarital(V1, V2), not water_vehicle(V2, V3).","- place(V0, V3) :- grave(V0, V3), not -material(V0, V3).","dead(V0, V0) :- grave(V0, V3), not -material(V0, V3).","- ivory(V1, V3) :- - petroglyph(V1, V3), not -sussex_spaniel(V1, V3), not -lead_to_drunken_behavior(V1, V3).","- mother_of_pearl(V3) :- - dove(V0, V2), decoration(V1, V3), not vampire(V2, V3).","- dentine(V0, V3) :- grave(V0, V3), dead(V0, V1), - ivory(V0, V2).","die(V2, V3) :- organisms(V2), - trees(V0, V2), - living_being(V0, V3)."],"noisy_rules":{"a":["animal_material(V0, V3) :- dentine(V0, V3).","animal_material(V0, V0) :- ivory(V0, V2)."],"b":["- material(V0, V3) :- - atom(V0), adhesive_material(V0, V1), animal_material(V0, V3).","vampire(V2, V3) :- shell(V0, V3), ivory(V0, V2), animal_material(V0, V3)."],"c":["shell(V0, V0) :- - atom(V0).","- dead(V0, V1) :- shell(V0, V3), adhesive_material(V0, V1), ivory(V0, V2)."],"d":["shell(V0, V3) :- dentine(V0, V3).","death(V0, V3) :- - grave(V0, V3), - die(V2, V3), not poison(V0, V3)."],"e":["- notebook(V0) :- - banana_quit(V0, V1), cinema(V0, V2).","- night_time(V1, V3) :- evening(V0, V1), not -rubber_band(V0, V3), - necrosis(V2, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_12_9_12_5_6_0.5_1.0_3_0_1","seed":12,"num_facts":8,"num_rules":13,"num_related_predicates":21,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"artifact.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["growing_cornucopia.","make_traveling_easier.","animal.","home.","continental_breakfast.","drumstick.","creation.","plaything."],"noisy_facts":[],"min_fact_dicts_for_query":["growing_cornucopia.","make_traveling_easier.","animal.","home.","continental_breakfast.","drumstick.","creation.","plaything."],"noiseless_rules":["artifact :- block, creation, plaything.","breakfast :- growing_cornucopia, continental_breakfast.","dark_meat :- growing_cornucopia, continental_breakfast.","meal :- breakfast, dinner, helping.","second_joint :- dark_meat, double_eagle, living.","block :- meal, swage_block.","double_eagle :- make_traveling_easier.","swage_block :- make_traveling_easier.","high_tea :- make_traveling_easier.","dinner :- high_tea.","wing :- high_tea.","helping :- second_joint, wing, drumstick.","living :- animal, home, continental_breakfast."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_32_9_13_9_10_0.5_1.0_3_0_1","seed":32,"num_facts":12,"num_rules":14,"num_related_predicates":26,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":14,"target_query":" P13.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P14.","P15.","P16.","P17.","- P18.","P19.","P20.","P21.","P22.","- P23.","- P24.","- P25."],"noisy_facts":["- P27.","P32.","P26.","P29.","P30."],"min_fact_dicts_for_query":["P16."],"noiseless_rules":["- P13 :- - P0, not P2, not P5.","- P0 :- P4, not P6, not -P20.","- P1 :- - P14, not P23, not P24.","- P2 :- P15, not -P17, not P18.","- P3 :- P15, not -P17, not P18.","P4 :- - P7, not -P9.","- P5 :- - P10, not P11, not P25.","- P6 :- - P10, not P11, not P25.","- P7 :- - P10, not P11, not P25.","P8 :- - P10, not P11, not P25.","P9 :- - P3, not -P8, not P12.","- P10 :- P16, not -P21, not -P22.","- P11 :- - P1, not -P19, not -P20.","- P12 :- - P1, not -P19, not -P20."],"noisy_rules":{"a":["P13 :- P0, not -P12.","P13 :- P2, P3, P10."],"b":["P2 :- P6, not P9, P13.","P12 :- P13."],"c":["- P16 :- P3, - P8, P11.","P18 :- P0, not -P2, - P9."],"d":["P25 :- not P4, P26.","P11 :- P6, not P27."],"e":["- P28 :- P29, not -P30.","P31 :- P32."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_0_10_13_12_15_0.5_1.0_5_0_1","seed":0,"num_facts":16,"num_rules":14,"num_related_predicates":30,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":"water.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- egg.","pipes.","chick.","- find_outside.","- paper.","- wood.","milk.","- bread.","black.","brown.","red.","- white_fluffy.","coat_surfaces.","- aquaplane.","hat.","- pudge."],"noisy_facts":["- robber_fly.","- blue.","fox.","halter.","P40.","- pastel.","P42.","purple.","mosquito.","- fungus_gnat.","gnat."],"min_fact_dicts_for_query":["chick."],"noiseless_rules":["water :- - cloud, not smoke, not -employment.","- cloud :- - yellow, not -black, not -brown, not -red, not white_fluffy.","color :- - yellow, not -black, not -brown, not -red, not white_fluffy.","- like :- chicken, not -mist, not squirrel.","- smoke :- color, not -steam, not -pipes.","chicken :- color, not -steam, not -pipes.","- product :- - egg, not paper, not wood, not -milk, not bread.","mist :- pipes, not -coat_surfaces, not aquaplane, not -hat, not pudge.","- crow :- pipes, not -coat_surfaces, not aquaplane, not -hat, not pudge.","- love :- - like.","- yellow :- chick, not -milk.","employment :- - product, not crow, not love, not squirrel.","- squirrel :- - find_outside.","steam :- - find_outside."],"noisy_rules":{"a":["- water :- - color, yellow.","- water :- smoke, not mist, not -crow, not employment."],"b":["white_fluffy :- not -cloud, not chicken, not -crow, - steam, - water.","cloud :- not -smoke, not mist, not employment, - steam, not water."],"c":["- black :- smoke, not -crow.","bread :- - color, not -like, not chicken, not employment, not steam."],"d":["- red :- not color, like, not -yellow, squirrel, fox.","product :- smoke."],"e":["dipterous_insect :- - robber_fly, halter, not -mosquito, gnat, not fungus_gnat.","- chromatic_color :- not -purple, - pastel, not -P40, not blue, not -P42."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_1_7_7_3_4_0.5_1.0_3_1_2","seed":1,"num_facts":6,"num_rules":8,"num_related_predicates":14,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"P7(\"Katie\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P8(\"Katie\").","- P9(\"Katie\").","P10(\"Katie\").","- P11.","P12.","P13(\"Katie\")."],"noisy_facts":["P21(\"Brian\").","P16(\"Katie\").","- P14(\"Katie\").","- P20(\"Brian\").","- P15(\"Katie\").","P18(\"Brian\")."],"min_fact_dicts_for_query":["P8(\"Katie\")."],"noiseless_rules":["P7(V0) :- - P1(V0), not P3(V0), not P5(V0).","P0(V0) :- P2(V0), not P5(V0).","- P1(V0) :- P8(V0), not -P13(V0).","P2(V0) :- P8(V0), not -P13(V0).","- P3(V0) :- P4(V0), not P6(V0).","P4(V0) :- - P9(V0).","- P5(V0) :- P10(V0).","- P6(V1) :- P0(V1), not P11, not -P12."],"noisy_rules":{"a":["- P7(V0) :- - P4(V0).","- P7(V0) :- P3(V0)."],"b":["P6(V0) :- P1(V0), not -P6(V0), not P7(V0).","- P10(V0) :- P6(V0), not P7(V0)."],"c":["- P13(V0) :- - P0(V1), not -P1(V0), - P4(V0).","P9(V0) :- - P0(V1), P1(V0), not -P3(V0)."],"d":["P3(V0) :- P1(V0), not P14(V0).","P1(V0) :- not P4(V0), - P15(V0), P16(V0)."],"e":["- P17(V1) :- P18(V1).","P19(V1) :- - P20(V1), not -P21(V1)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_48_6_9_6_7_0.5_1.0_3_2_3","seed":48,"num_facts":7,"num_rules":10,"num_related_predicates":17,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" sport(\"Sheena\", \"Jeremy\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- bat(\"Nicole\", \"Sheena\").","- ball(\"Sheena\", \"Jeremy\").","baseball_stadium(\"Sheena\", \"Jeremy\").","plate(\"Nicole\", \"Kimberly\").","field(\"Sheena\", \"Jeremy\").","play_game_of_baseball(\"Nicole\", \"Sheena\").","home(\"Nicole\", \"Sheena\")."],"noisy_facts":["yellowtail_flounder(\"Sheena\", \"Kimberly\").","plaice(\"Sheena\", \"Jeremy\").","thrown_ball(\"Sheena\", \"Jeremy\").","foul_line(\"Sheena\", \"Jeremy\").","- beverage(\"Sheena\", \"Kimberly\").","lemon_sole(\"Kimberly\")."],"min_fact_dicts_for_query":["- bat(\"Nicole\", \"Sheena\").","plate(\"Nicole\", \"Kimberly\").","field(\"Sheena\", \"Jeremy\")."],"noiseless_rules":["- sport(V1, V3) :- american_pastime(V3), playing_baseball(V1, V2), not -living(V2, V3).","american_pastime(V3) :- baseball(V1), flying(V1, V3), not -base(V1, V3).","baseball(V1) :- - bat(V0, V1), plate(V0, V2), field(V1, V3).","bird(V1, V3) :- - bat(V0, V1), plate(V0, V2), field(V1, V3).","- baseball_field(V1, V3) :- - bat(V0, V1), plate(V0, V2), field(V1, V3).","- animal(V0, V1) :- - bat(V0, V1), plate(V0, V2), field(V1, V3).","flying(V1, V3) :- bird(V1, V3), not baseball_field(V1, V3).","playing_baseball(V1, V1) :- - baseball_field(V1, V3), not ball(V1, V3), not -baseball_stadium(V1, V3).","base(V1, V3) :- - baseball_field(V1, V3), not ball(V1, V3), not -baseball_stadium(V1, V3).","living(V0, V1) :- - animal(V0, V1), not -play_game_of_baseball(V0, V1), not -home(V0, V1)."],"noisy_rules":{"a":["sport(V1, V1) :- - baseball(V1).","sport(V1, V3) :- - baseball(V1), - bird(V1, V3), not -baseball_field(V1, V3)."],"b":["- field(V1, V3) :- baseball_field(V1, V3), - playing_baseball(V1, V2), not -sport(V1, V3).","- american_pastime(V3) :- sport(V1, V3)."],"c":["- american_pastime(V3) :- - flying(V1, V3).","ball(V1, V3) :- baseball_field(V1, V3), - playing_baseball(V1, V2), not base(V1, V3)."],"d":["baseball_field(V1, V3) :- - base(V1, V3), not -foul_line(V1, V3).","- play_game_of_baseball(V3, V1) :- not -baseball_field(V1, V3), thrown_ball(V1, V3)."],"e":["liquid_food(V2) :- - beverage(V1, V2).","- flounder(V1, V3) :- lemon_sole(V2), yellowtail_flounder(V1, V2), plaice(V1, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_86_10_11_2_5_0.5_1.0_5_0_1","seed":86,"num_facts":7,"num_rules":12,"num_related_predicates":19,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.2222222222222223,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"broken.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["fall_down.","- beldam.","serviette.","- run_fast_both_uphill_and_down.","- news.","farm.","- lay."],"noisy_facts":[],"min_fact_dicts_for_query":["fall_down."],"noiseless_rules":["broken :- - imperfect, not -chickens, not -woman, not -belle.","- imperfect :- fall_down, not beldam.","- nest :- fall_down, not beldam.","chickens :- - egg, not -farm, not lay.","- old_woman :- - beldam.","- egg :- - nest, not -chick, not chicken_egg, not -humpty_dumpty.","woman :- - old_woman, not -egg_in_fairy_tale.","chick :- serviette.","belle :- - beldam, not run_fast_both_uphill_and_down.","- chicken_egg :- - beldam, not run_fast_both_uphill_and_down.","humpty_dumpty :- - news.","egg_in_fairy_tale :- humpty_dumpty."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_24_7_7_1_3_0.5_1.0_5_1_2","seed":24,"num_facts":4,"num_rules":8,"num_related_predicates":12,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.6666666666666667,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" ducks(\"Robert\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["superficies(\"Robert\").","- taller_than_plants(\"Robert\").","cooling_off(\"Robert\").","- county_seat."],"noisy_facts":["hold_cereal(\"Tommy\").","electric_blanket(\"Robert\").","- cyanide.","- bioscope(\"Robert\").","- dark_blue(\"Robert\").","- xerox(\"Tommy\").","- nanophthalmos(\"Tommy\")."],"min_fact_dicts_for_query":["- taller_than_plants(\"Robert\")."],"noiseless_rules":["- ducks(V2) :- - annex(V2), not -branch(V2), not dove(V2).","voice(V2) :- intellectual_property(V2).","- annex(V2) :- branch(V2), not -superficies(V2).","branch(V2) :- - taller_than_plants(V2), not -cooling_off(V2).","intellectual_property(V2) :- cooling_off(V2), not county_seat.","sable_antelope(V2) :- cooling_off(V2), not county_seat.","- dove(V2) :- voice(V2), not -gathering_information(V2).","gathering_information(V0) :- sable_antelope(V0)."],"noisy_rules":{"a":["ducks(V2) :- - voice(V2), not branch(V2), not intellectual_property(V2), not gathering_information(V2).","ducks(V2) :- - branch(V2)."],"b":["- branch(V2) :- - voice(V2), not -annex(V2), - sable_antelope(V0), not -ducks(V2).","- gathering_information(V2) :- annex(V2), - branch(V2), - intellectual_property(V2), dove(V2), not -ducks(V2)."],"c":["- sable_antelope(V2) :- not voice(V2), annex(V2), - intellectual_property(V2), dove(V2), not gathering_information(V2).","- intellectual_property(V2) :- - voice(V2), not gathering_information(V2)."],"d":["film_noir(V2) :- - voice(V2), not -annex(V2), - intellectual_property(V2), not bioscope(V2).","- voice(V2) :- - branch(V2), - sable_antelope(V0), not -dove(V2), not gathering_information(V2), - cyanide."],"e":["- crime(V2) :- electric_blanket(V2), - dark_blue(V2).","fib(V0) :- not -hold_cereal(V0), not xerox(V0), - nanophthalmos(V0)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_41_8_10_2_5_0.5_1.0_5_0_1","seed":41,"num_facts":5,"num_rules":11,"num_related_predicates":16,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" sound.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["cry.","belgian_hare.","- go_from_place_to_place.","- cock_doodle_doo.","pull_cart."],"noisy_facts":["- baa.","- reading.","- grab_bag.","music.","cheep.","- double_breasted_jacket.","- eton_college.","howl.","honk.","ten."],"min_fact_dicts_for_query":["- go_from_place_to_place."],"noiseless_rules":["- sound :- - tapping, not quack, not -purr, not -cry.","- tapping :- - strum, not crow.","- strum :- - quack, not -cry.","pat :- belgian_hare.","trample :- belgian_hare.","stigmatism :- pat.","- quack :- - go_from_place_to_place.","toot :- - go_from_place_to_place.","- crow :- mutter, not cock_doodle_doo, not -pull_cart.","purr :- trample, not -stigmatism, not -toot, not go_from_place_to_place.","mutter :- trample, not -stigmatism, not -toot, not go_from_place_to_place."],"noisy_rules":{"a":["sound :- not -tapping, not pat, - toot.","sound :- not -tapping, not -strum, not trample, - toot, - mutter."],"b":["- cry :- - mutter, not -sound.","tapping :- not purr, sound."],"c":["- purr :- not -strum, - stigmatism.","strum :- not pat, quack, - mutter."],"d":["- cry :- not -crow, - baa, cheep.","- cry :- not -quack, not -howl, honk."],"e":["- double_breasted_suit :- not double_breasted_jacket, ten, not -music.","- berkshire :- - reading, not grab_bag, not eton_college."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_40_9_14_2_4_0.5_1.0_5_0_1","seed":40,"num_facts":5,"num_rules":15,"num_related_predicates":20,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"reflexive_reactions.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["people.","coat.","chess_set.","dish.","cup."],"noisy_facts":[],"min_fact_dicts_for_query":["people.","coat.","chess_set.","dish.","cup."],"noiseless_rules":["reflexive_reactions :- emotions, aircraft, container, crockery.","emotions :- people.","bogy :- people.","aircraft :- bogy, porringer, cruise_missile.","bomb :- bogy, porringer, cruise_missile.","container :- bowl, pod, dish.","bowl :- porringer, salad_bowl.","amulet :- porringer, salad_bowl.","porringer :- coat.","feathers :- coat.","ovenware :- coat.","pod :- bomb, amulet, feathers.","crockery :- ovenware, dish, cup.","salad_bowl :- ovenware, dish, cup.","cruise_missile :- chess_set."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_57_8_11_4_4_0.5_1.0_3_0_1","seed":57,"num_facts":6,"num_rules":12,"num_related_predicates":18,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.857142857142857,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"signet_ring.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["glue.","pony_trekking.","- overexertion.","- trophoblast.","- mountain_quail.","bathrooms."],"noisy_facts":["yearly_celebration.","- arietta.","- cause_overeating."],"min_fact_dicts_for_query":["pony_trekking."],"noiseless_rules":["signet_ring :- - granny_smith, not billion_years_old_45.","obtuseness :- glue, not overexertion, not trophoblast.","miles :- glue, not overexertion, not trophoblast.","- green :- obtuseness, not thermobaric_bomb.","- footwear :- miles, not mountain_quail, not -bathrooms.","- not_all_domesticated_animals :- miles, not mountain_quail, not -bathrooms.","- thermobaric_bomb :- - footwear.","- fish :- - footwear.","- granny_smith :- pony_trekking.","- sand_rat :- pony_trekking.","- billion_years_old_45 :- - green, not fish, not entry.","- entry :- - not_all_domesticated_animals, not sand_rat."],"noisy_rules":{"a":["- signet_ring :- thermobaric_bomb.","- signet_ring :- not_all_domesticated_animals, not -thermobaric_bomb, not -granny_smith."],"b":["- glue :- not -fish, entry, not signet_ring.","not_all_domesticated_animals :- green, fish, - signet_ring."],"c":["- bathrooms :- footwear, sand_rat.","fish :- - obtuseness, granny_smith, sand_rat."],"d":["- obtuseness :- thermobaric_bomb.","sand_rat :- green, not -yearly_celebration."],"e":["pony :- - arietta.","guide_blind_people :- - cause_overeating."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_93_5_6_4_6_0.5_1.0_5_1_2","seed":93,"num_facts":7,"num_rules":7,"num_related_predicates":14,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" shove(\"David\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- man(\"David\").","- okra(\"David\").","- fixed_intonation(\"David\").","- answering_door(\"David\").","winker(\"David\").","animal(\"David\").","- date(\"David\")."],"noisy_facts":["- upper_mantle(\"David\").","- tracing(\"David\").","- winter_sport(\"David\").","- professional(\"Victoria\").","- knife(\"David\").","jimmies(\"David\").","- ledger(\"David\")."],"min_fact_dicts_for_query":["- man(\"David\")."],"noiseless_rules":["- shove(V1) :- - mammal(V1), not nymphalid(V1), not -choose(V1), not date(V1).","- mammal(V1) :- - nymphalid(V1), not -skateboards(V1), not -textile_mill(V1), not stick_horse(V1).","- nymphalid(V1) :- - man(V1), not answering_door(V1), not -winker(V1), not -animal(V1), not date(V1).","skateboards(V1) :- - man(V1), not answering_door(V1), not -winker(V1), not -animal(V1), not date(V1).","textile_mill(V1) :- - okra(V1).","choose(V1) :- - fixed_intonation(V1).","- stick_horse(V1) :- - fixed_intonation(V1)."],"noisy_rules":{"a":["shove(V1) :- mammal(V1), - skateboards(V1), - textile_mill(V1), - choose(V1).","shove(V1) :- mammal(V1), not choose(V1)."],"b":["- winker(V1) :- shove(V1).","- winker(V1) :- not textile_mill(V1), shove(V1)."],"c":["- textile_mill(V1) :- not -mammal(V1), - choose(V1), not -stick_horse(V1).","date(V1) :- - skateboards(V1)."],"d":["- animal(V1) :- mammal(V1), not skateboards(V1), - choose(V1), not -stick_horse(V1), not upper_mantle(V1).","- winker(V1) :- not -mammal(V1), not skateboards(V1), - choose(V1), stick_horse(V1), - tracing(V1)."],"e":["bullfinch(V0) :- - professional(V0).","- spice(V1) :- - knife(V1), - ledger(V1), jimmies(V1), not winter_sport(V1)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_60_6_7_1_3_0.5_1.0_5_1_2","seed":60,"num_facts":3,"num_rules":8,"num_related_predicates":11,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"cartesian_coordinate(\"Brian\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["evening_bag(\"Brian\").","- layer(\"Brian\").","- butternut(\"Brian\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- layer(\"Brian\")."],"noiseless_rules":["cartesian_coordinate(V1) :- wooden(V1), not -beef_neck(V1), not celebrating(V1).","wooden(V1) :- - explosive_mixture(V1), not celebrating(V1).","beef_neck(V1) :- personality(V1), not -robert_e_lees_birthday(V1).","personality(V1) :- evening_bag(V1), not butternut(V1).","- explosive_mixture(V1) :- harasser(V1), not butternut(V1).","- celebrating(V1) :- - layer(V1).","robert_e_lees_birthday(V1) :- - layer(V1).","harasser(V1) :- - layer(V1)."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_32_9_11_3_6_0.5_1.0_5_0_1","seed":32,"num_facts":6,"num_rules":12,"num_related_predicates":18,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"upper_berth.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["- spaghetti.","meeting_friends.","chicken.","noodle.","cow_liquid.","white_rhinoceros."],"noisy_facts":["reproductive_structure.","food.","- carp.","last_forever.","waiting_lines.","meat.","vicar.","dew.","- shepherd.","anagnost.","- crucian_carp.","- roach.","- ordinary."],"min_fact_dicts_for_query":["meeting_friends."],"noiseless_rules":["upper_berth :- steakhouse, not -berth, not satisfying_hunger.","steakhouse :- - lower_berth, not -socialising.","pasta :- - spaghetti, not -noodle, not -cow_liquid, not -white_rhinoceros.","berth :- meeting_friends.","eating_in_restaurant :- meeting_friends.","- lower_berth :- eating_in_restaurant, not socialization, not -being_social.","- satisfying_hunger :- pasta, not -eating_in_restaurant, not eating.","socialising :- pasta, not -eating_in_restaurant, not eating.","- socialization :- pasta, not -eating_in_restaurant, not eating.","being_social :- eating_in_restaurant, not animal.","- eating :- chicken.","- animal :- pasta."],"noisy_rules":{"a":["- upper_berth :- socialization, not being_social.","- upper_berth :- - eating_in_restaurant, satisfying_hunger, not socialising, not -socialization."],"b":["- berth :- lower_berth, not -satisfying_hunger, - being_social, animal, not upper_berth.","- pasta :- - steakhouse, not -satisfying_hunger, - socialising, - upper_berth."],"c":["- meeting_friends :- - steakhouse, not eating_in_restaurant.","satisfying_hunger :- not eating_in_restaurant, not -lower_berth, not socialising, not being_social, eating."],"d":["eating :- - pasta, animal, not -food, meat.","- eating_in_restaurant :- socialization, animal, not -last_forever, waiting_lines, dew."],"e":["clergyman :- - shepherd, not ordinary, anagnost, not -vicar.","cyprinid :- not crucian_carp, - carp, not -reproductive_structure, not roach."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_80_6_6_4_6_0.5_1.0_3_0_1","seed":80,"num_facts":6,"num_rules":7,"num_related_predicates":13,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" finding_new_ways_to_prepare_food.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- pinwheel_wind_collector.","target_organ.","pubis.","nirvana.","garment_cutter.","drupe."],"noisy_facts":["canal.","comfort.","kernels.","- flat_dish.","garden.","gifts_at_wedding.","- having_someplace_to_stay.","eyeful."],"min_fact_dicts_for_query":["- pinwheel_wind_collector."],"noiseless_rules":["- finding_new_ways_to_prepare_food :- jesus, not -drupe.","jesus :- silver, not coinage, not -pubis.","silver :- - crosshead, not -powhatan, not -pubis.","- crosshead :- - pinwheel_wind_collector.","mara :- target_organ, not -nirvana, not -garment_cutter.","- coinage :- - crosshead, not -mara.","powhatan :- - crosshead, not -mara."],"noisy_rules":{"a":["finding_new_ways_to_prepare_food :- not mara, coinage.","finding_new_ways_to_prepare_food :- not jesus, not -crosshead, - mara."],"b":["crosshead :- finding_new_ways_to_prepare_food.","- nirvana :- - silver, not -finding_new_ways_to_prepare_food."],"c":["- nirvana :- - silver, not powhatan.","- silver :- - jesus, not powhatan."],"d":["- drupe :- not jesus, eyeful.","- jesus :- crosshead, not flat_dish."],"e":["- sense_organ :- not -canal, gifts_at_wedding, kernels.","- liner :- - having_someplace_to_stay, not -garden, not -comfort."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_59_9_11_6_9_0.5_1.0_3_0_1","seed":59,"num_facts":9,"num_rules":12,"num_related_predicates":21,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":12,"target_query":"rolled_tobacco.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- in_veins.","- weight.","reading_book.","- liger.","fight.","behavior.","- throw.","- red_salmon.","- applying_for_job."],"noisy_facts":[],"min_fact_dicts_for_query":["- in_veins."],"noiseless_rules":["rolled_tobacco :- ballroom, not icing_candles, not weimar_republic.","ballroom :- - in_veins, not throw, not red_salmon.","- cause_person_to_make_errors :- - in_veins, not throw, not red_salmon.","- icing_candles :- - percussion_instrument, not venus_fly_trap, not liger.","- weimar_republic :- - cause_person_to_make_errors, not red_salmon.","- percussion_instrument :- - weimar_republic, not weight.","- engagement :- - weimar_republic, not weight.","- venus_fly_trap :- - ensign, not gnu, not -behavior.","education :- reading_book, not liger, not -fight.","- small_river :- reading_book, not liger, not -fight.","- ensign :- education, not applying_for_job.","- gnu :- - engagement, not small_river."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_19_8_12_8_11_0.5_1.0_5_0_1","seed":19,"num_facts":10,"num_rules":13,"num_related_predicates":23,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.7142857142857144,"num_noise_rules_per_type":2,"num_rules_with_default_negation":12,"target_query":" oyster_shell.","target_query_in_answerset":false,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["beechnut.","atlantic_coast.","atmosphere.","butcher.","smash.","sheep.","dining.","soar.","university.","nasal."],"noisy_facts":[],"min_fact_dicts_for_query":["beechnut.","atlantic_coast.","atmosphere.","butcher.","smash.","sheep.","dining.","soar.","university.","nasal."],"noiseless_rules":["oyster_shell :- two, dining, soar, university, nasal.","pipeful :- beechnut, atmosphere.","soft_finned_fish :- beechnut, atmosphere.","two :- pipeful, publication, moving_to_music_on_ice, atmosphere, butcher.","inhalation :- redpoll.","publication :- inhalation, doves, mountain_nyala, smash, sheep.","analytical_game :- atlantic_coast, butcher.","tithe_barn :- atlantic_coast, butcher.","doves :- analytical_game, smash.","magnetic_bottle :- analytical_game, smash.","moving_to_music_on_ice :- soft_finned_fish, tithe_barn, magnetic_bottle.","redpoll :- soft_finned_fish, tithe_barn, magnetic_bottle.","mountain_nyala :- soft_finned_fish, tithe_barn, magnetic_bottle."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_18_7_11_4_6_0.5_1.0_5_3_4","seed":18,"num_facts":5,"num_rules":12,"num_related_predicates":17,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" polyp(\"Sarah\", \"Michael\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- mutism(\"Sarah\", \"Michael\", \"Justin\").","chamber(\"Michael\").","cinnamon_bread(\"Michael\").","ranch_house(\"Michael\").","birth_defect(\"Michael\")."],"noisy_facts":["carinate(\"Victor\", \"Misty\").","aluminum(\"Michael\", \"Victor\", \"Misty\").","kindness(\"Victor\", \"Justin\").","- slept(\"Misty\").","- japan(\"Victor\", \"Misty\", \"Justin\").","- organic_machines(\"Sarah\", \"Michael\", \"Justin\").","- eating_in_restaurant(\"Sarah\", \"Misty\").","spending_free_time(\"Michael\", \"Victor\", \"Misty\").","- chest_presses(\"Sarah\", \"Michael\", \"Justin\").","- test(\"Sarah\", \"Michael\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- polyp(V0, V1) :- - brome(V1, V2), - painting_picture(V1, V2), - pen(V0, V1, V4), - week(V1, V3, V4).","generousity(V1) :- - mutism(V0, V1, V4).","due(V0, V1, V4) :- - mutism(V0, V1, V4).","- brome(V1, V1) :- generousity(V1), not -chamber(V1), not -cinnamon_bread(V1), not -ranch_house(V1), not -birth_defect(V1).","travel_hundred_miles_day(V1, V1, V1) :- generousity(V1), not -chamber(V1), not -cinnamon_bread(V1), not -ranch_house(V1), not -birth_defect(V1).","- painting_picture(V1, V1) :- due(V0, V1, V4), not cheerfulness(V0, V1, V4), not guinea_hen(V0, V1, V4).","- pen(V1, V1, V4) :- travel_hundred_miles_day(V1, V3, V4), not -birth_defect(V1).","- cheerfulness(V3, V1, V4) :- travel_hundred_miles_day(V1, V3, V4), not -birth_defect(V1).","cider(V1, V4) :- travel_hundred_miles_day(V1, V3, V4), not -birth_defect(V1).","- guinea_hen(V0, V1, V4) :- due(V0, V1, V4), not v_neck(V0, V1, V4).","- week(V1, V4, V4) :- cider(V1, V4).","- v_neck(V4, V1, V4) :- cider(V1, V4)."],"noisy_rules":{"a":["polyp(V0, V1) :- - generousity(V1), - due(V0, V1, V4), cheerfulness(V0, V1, V4), week(V1, V3, V4).","polyp(V0, V1) :- - generousity(V1), - due(V0, V1, V4), - travel_hundred_miles_day(V1, V3, V4), - cider(V1, V4)."],"b":["- due(V0, V1, V4) :- - travel_hundred_miles_day(V1, V3, V4), painting_picture(V1, V2), guinea_hen(V0, V1, V4), not -week(V1, V3, V4), polyp(V0, V1).","- cinnamon_bread(V1) :- pen(V0, V1, V4), polyp(V0, V1)."],"c":["pen(V0, V1, V4) :- - generousity(V1), - due(V0, V1, V4), - travel_hundred_miles_day(V1, V3, V4), not -guinea_hen(V0, V1, V4), not -v_neck(V0, V1, V4).","week(V1, V0, V4) :- - due(V0, V1, V4)."],"d":["guinea_hen(V0, V1, V4) :- cheerfulness(V0, V1, V4), not organic_machines(V0, V1, V4).","south_dakotan(V1) :- - generousity(V1), cheerfulness(V0, V1, V4), not chest_presses(V0, V1, V4)."],"e":["- year(V1, V3) :- - eating_in_restaurant(V0, V3), carinate(V2, V3), kindness(V2, V4), aluminum(V1, V2, V3).","- saddle_horn(V0, V3, V4) :- - slept(V3), - test(V0, V1), spending_free_time(V1, V2, V3), - japan(V2, V3, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_17_9_12_10_11_0.5_1.0_3_3_4","seed":17,"num_facts":11,"num_rules":13,"num_related_predicates":24,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" drinks(\"Brandi\", \"William\", \"Wendy\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- one_of_boys(\"Brandi\", \"William\").","- delusion(\"William\", \"Benjamin\").","powhatan(\"William\", \"Benjamin\").","feeding_tykes(\"William\", \"Benjamin\").","system(\"William\", \"Benjamin\").","- middle(\"William\", \"Benjamin\", \"Natalie\").","give_information(\"William\", \"Natalie\").","chaja(\"Wendy\", \"Natalie\").","moving(\"Brandi\", \"William\", \"Benjamin\").","throw(\"William\", \"Wendy\", \"Natalie\").","- rock_and."],"noisy_facts":["- dairy_product(\"Brandi\", \"Benjamin\").","- scrambled(\"William\", \"Benjamin\", \"Wendy\").","- layer(\"William\", \"Benjamin\", \"Wendy\").","- na_dene(\"Brandi\", \"William\", \"Benjamin\").","nose(\"Brandi\", \"Natalie\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- drinks(V0, V1, V3) :- - charis(V2, V3), satisfying_appetite(V0, V1, V4), not aunt(V0, V2, V4).","- charis(V2, V3) :- - one_of_boys(V0, V1), moving(V0, V1, V2), throw(V1, V3, V4).","- play_chess_on(V1, V2) :- - one_of_boys(V0, V1), moving(V0, V1, V2), throw(V1, V3, V4).","- brood(V1, V4) :- - one_of_boys(V0, V1), moving(V0, V1, V2), throw(V1, V3, V4).","- hold_peanuts(V1, V2) :- - one_of_boys(V0, V1), moving(V0, V1, V2), throw(V1, V3, V4).","satisfying_appetite(V0, V1, V4) :- - pine_nut(V0, V4), give_information(V1, V4), chaja(V3, V4).","- pine_nut(V1, V2) :- - play_chess_on(V1, V2), not delusion(V1, V2), not -powhatan(V1, V2).","- finger(V2) :- - play_chess_on(V1, V2), not delusion(V1, V2), not -powhatan(V1, V2).","- aunt(V0, V2, V4) :- fearful(V0, V3), afternoon(V0, V1, V2), - middle(V1, V2, V4).","fearful(V0, V0) :- - kid(V0, V1, V2), not -moving(V0, V1, V2).","afternoon(V4, V1, V4) :- - brood(V1, V4), not ai(V1, V4).","- kid(V3, V3, V3) :- - finger(V3), not rock_and.","- ai(V1, V2) :- - hold_peanuts(V1, V2), not -feeding_tykes(V1, V2), not -system(V1, V2)."],"noisy_rules":{"a":["drinks(V0, V1, V3) :- - satisfying_appetite(V0, V1, V4), pine_nut(V0, V4), finger(V3).","drinks(V1, V1, V1) :- hold_peanuts(V1, V2)."],"b":["- system(V1, V1) :- pine_nut(V0, V4), drinks(V0, V1, V3).","finger(V3) :- drinks(V0, V1, V3)."],"c":["middle(V1, V2, V0) :- play_chess_on(V1, V2), kid(V0, V1, V2).","- system(V4, V2) :- aunt(V0, V2, V4)."],"d":["ai(V1, V1) :- finger(V3), - afternoon(V0, V1, V2), - na_dene(V0, V1, V2).","- satisfying_appetite(V0, V3, V4) :- not -pine_nut(V0, V4), finger(V3), nose(V0, V4)."],"e":["flowing(V1, V2) :- - scrambled(V1, V2, V3).","center_for_disease_control_and_prevention(V1, V2) :- - dairy_product(V0, V2), - layer(V1, V2, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_13_6_8_8_10_0.5_1.0_5_3_4","seed":13,"num_facts":11,"num_rules":9,"num_related_predicates":20,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.4,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"autopsy(\"Aaron\", \"Amanda\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- captain_boat(\"Louis\", \"Amanda\").","- elections(\"Amanda\").","- blastema(\"Aaron\", \"Amanda\").","- black_gold(\"Aaron\", \"Amanda\").","- popular_sport(\"Bianca\", \"Louis\").","- california_quail(\"Aaron\", \"Bianca\", \"Amanda\").","legging(\"Aaron\", \"Amanda\").","lactation(\"Bianca\", \"Louis\").","article(\"Bianca\", \"Amanda\").","- stone(\"Louis\", \"Amanda\").","- instrument."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["autopsy(V0, V4) :- - water_sprite(V0, V4), - anomaly(V2, V3), roundelay(V3, V4), chocolate_kiss(V0, V1, V2), not -cute(V2, V3, V4).","- water_sprite(V0, V4) :- body_armor(V4), - happiness(V0, V3), - black_gold(V0, V4), - popular_sport(V1, V3), not california_quail(V0, V1, V4).","- anomaly(V4, V3) :- roundelay(V3, V4), not captain_boat(V3, V4).","roundelay(V3, V4) :- - elections(V4), legging(V0, V4), lactation(V1, V3), not -article(V1, V4), not stone(V3, V4).","body_armor(V4) :- - elections(V4), legging(V0, V4), lactation(V1, V3), not -article(V1, V4), not stone(V3, V4).","snowflake(V4) :- - elections(V4), legging(V0, V4), lactation(V1, V3), not -article(V1, V4), not stone(V3, V4).","chocolate_kiss(V4, V4, V4) :- snowflake(V4), not instrument.","cute(V4, V4, V4) :- - blastema(V0, V4), not black_gold(V0, V4).","- happiness(V0, V0) :- - blastema(V0, V4), not black_gold(V0, V4)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_32_10_15_15_17_0.5_1.0_5_3_4","seed":32,"num_facts":20,"num_rules":16,"num_related_predicates":36,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":13,"target_query":"P15(\"Megan\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P16(\"Francis\").","P17(\"Deborah\").","- P18(\"Deborah\", \"Megan\", \"Susan\").","- P19(\"Deborah\", \"Francis\", \"Susan\").","- P20(\"Megan\", \"Richard\").","P21(\"Deborah\", \"Megan\", \"Susan\").","P22(\"Deborah\").","P23(\"Megan\", \"Richard\").","P24(\"Richard\", \"Susan\").","P25(\"Francis\", \"Megan\", \"Susan\").","P26(\"Francis\", \"Richard\", \"Susan\").","- P27(\"Susan\").","P28(\"Deborah\", \"Francis\", \"Richard\").","P29(\"Francis\", \"Megan\", \"Susan\").","P30(\"Francis\", \"Richard\", \"Susan\").","- P31(\"Deborah\", \"Francis\", \"Richard\").","P32(\"Deborah\", \"Francis\", \"Richard\").","- P33(\"Deborah\", \"Francis\", \"Susan\").","- P34(\"Francis\", \"Megan\", \"Susan\").","P35(\"Deborah\", \"Megan\", \"Susan\")."],"noisy_facts":["- P37(\"Francis\").","P42(\"Francis\", \"Megan\", \"Susan\").","- P40(\"Richard\", \"Susan\").","P36(\"Francis\", \"Megan\", \"Richard\").","- P38(\"Francis\", \"Susan\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["P15(V2) :- P0(V1), P8(V1, V4), - P10(V0, V2, V3), not P12(V1, V2, V3).","P0(V1) :- P16(V1), P23(V2, V3), P24(V3, V4), not -P25(V1, V2, V4), not -P26(V1, V3, V4).","P1(V3, V4) :- P16(V1), P23(V2, V3), P24(V3, V4), not -P25(V1, V2, V4), not -P26(V1, V3, V4).","P2(V1, V4) :- P16(V1), P23(V2, V3), P24(V3, V4), not -P25(V1, V2, V4), not -P26(V1, V3, V4).","P3(V1, V3, V4) :- P17(V0), - P27(V4), P28(V0, V1, V3), P29(V1, V2, V4), not -P30(V1, V3, V4).","- P4(V0, V2, V4) :- P17(V0), - P27(V4), P28(V0, V1, V3), P29(V1, V2, V4), not -P30(V1, V3, V4).","- P5(V1, V2) :- P17(V0), - P27(V4), P28(V0, V1, V3), P29(V1, V2, V4), not -P30(V1, V3, V4).","P6(V0, V2) :- - P4(V0, V2, V4), not P18(V0, V2, V4), not -P35(V0, V2, V4).","- P7(V0, V2, V4) :- - P4(V0, V2, V4), not P18(V0, V2, V4), not -P35(V0, V2, V4).","P8(V1, V4) :- - P19(V0, V1, V4).","- P9(V0) :- - P19(V0, V1, V4).","- P10(V0, V0, V3) :- P6(V0, V3), not -P11(V0, V3), not -P13(V0, V3).","P11(V3, V3) :- P1(V3, V4), P3(V1, V3, V4).","- P12(V2, V2, V2) :- - P4(V0, V2, V4), not P7(V0, V2, V4), not -P14(V0, V2, V4), not -P21(V0, V2, V4).","P13(V0, V3) :- - P20(V2, V3), - P31(V0, V1, V3), P32(V0, V1, V3), - P33(V0, V1, V4), not P34(V1, V2, V4).","P14(V0, V2, V4) :- P2(V1, V4), - P5(V1, V2), - P9(V0), not -P21(V0, V2, V4), not -P22(V0)."],"noisy_rules":{"a":["- P15(V2) :- P5(V1, V2), not -P7(V0, V2, V4), not P8(V1, V4), - P14(V0, V2, V4).","- P15(V3) :- not P1(V3, V4), - P8(V1, V4), - P13(V0, V3)."],"b":["- P6(V0, V3) :- - P2(V1, V4), - P3(V1, V3, V4), - P6(V0, V3), not -P12(V1, V2, V3), - P15(V2).","P12(V1, V2, V2) :- P5(V1, V2), P9(V0), - P14(V0, V2, V4), - P15(V2)."],"c":["- P22(V0) :- - P0(V1), - P6(V0, V3), - P8(V1, V4), P9(V0).","- P24(V3, V0) :- - P6(V0, V3)."],"d":["P5(V1, V2) :- - P2(V1, V4), not P3(V1, V3, V4), not P8(V1, V4), not -P12(V1, V2, V3), P36(V1, V2, V3).","- P25(V1, V4, V4) :- - P0(V1), - P1(V3, V4), not P37(V1)."],"e":["P39(V4) :- - P38(V1, V4), - P40(V3, V4).","P41(V1, V2, V4) :- P42(V1, V2, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_65_6_6_5_7_0.5_1.0_5_3_4","seed":65,"num_facts":9,"num_rules":7,"num_related_predicates":16,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" P6(\"Scott\", \"Chelsea\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P7(\"Bobby\", \"Stacey\", \"Scott\").","P8(\"Bobby\", \"Stacey\").","P9(\"Bobby\", \"Stacey\", \"Matthew\").","P10(\"Stacey\", \"Scott\").","P11(\"Scott\", \"Matthew\").","- P12(\"Scott\", \"Chelsea\").","- P13(\"Stacey\", \"Scott\", \"Chelsea\").","- P14(\"Scott\", \"Matthew\", \"Chelsea\").","- P15(\"Stacey\", \"Matthew\", \"Chelsea\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- P6(V2, V4) :- - P3(V1, V3), P5(V2, V3, V4).","- P0(V1, V2) :- - P7(V0, V1, V2).","- P1(V3, V4) :- P8(V0, V1), P11(V2, V3), - P12(V2, V4), not P13(V1, V2, V4), not P14(V2, V3, V4).","- P2(V0, V4) :- P9(V0, V1, V3), - P15(V1, V3, V4).","- P3(V1, V2) :- - P0(V1, V2), not -P10(V1, V2).","P4(V2, V1) :- - P0(V1, V2), not -P10(V1, V2).","P5(V2, V3, V4) :- - P0(V1, V2), - P1(V3, V4), - P2(V0, V4), not -P4(V2, V4), not P7(V0, V1, V2)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_57_6_7_3_6_0.5_1.0_3_1_2","seed":57,"num_facts":6,"num_rules":8,"num_related_predicates":14,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"P7(\"Kimberly\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P8(\"Mary\").","P9.","P10.","P11.","- P12.","- P13(\"Mary\")."],"noisy_facts":["P20(\"Larry\").","P15(\"Kimberly\").","P17(\"Kimberly\").","P14(\"Kimberly\").","- P18(\"Kimberly\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["P7(V0) :- - P1(V0), not P5(V0), not P6(V0).","- P0(V2) :- P8(V2), not P13(V2).","- P1(V0) :- P2(V0), not P4(V0), not P6(V0).","P2(V2) :- P8(V2), not -P9.","P3(V2) :- P8(V2), not -P9.","- P4(V2) :- - P0(V2), not -P3(V2), not -P11.","- P5(V2) :- P10, - P12, - P13(V2).","- P6(V2) :- P10, - P12, - P13(V2)."],"noisy_rules":{"a":["- P7(V0) :- - P3(V2), P4(V0).","- P7(V2) :- - P3(V2)."],"b":["- P8(V0) :- - P7(V0).","P1(V0) :- - P7(V0)."],"c":["- P2(V2) :- - P3(V2).","- P10(V0) :- P0(V2), P1(V0), not -P5(V0)."],"d":["P4(V0) :- P14(V0).","- P2(V0) :- P1(V0), P5(V0), P15(V0)."],"e":["P16(V0) :- P17(V0), - P18(V0).","- P19(V1) :- P20(V1)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_33_7_10_5_8_0.5_1.0_3_3_4","seed":33,"num_facts":7,"num_rules":11,"num_related_predicates":18,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"P10(\"Vicki\", \"Rebecca\", \"Maureen\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P11(\"Vicki\", \"Maureen\", \"Kristen\").","- P12(\"Vicki\").","P13(\"Lindsay\", \"Kristen\").","P14(\"Vicki\", \"Lindsay\", \"Maureen\").","P15(\"Vicki\", \"Maureen\", \"Kristen\").","- P16(\"Vicki\", \"Maureen\", \"Kristen\").","P17(\"Vicki\", \"Maureen\")."],"noisy_facts":["P18(\"Vicki\", \"Maureen\").","P22(\"Maureen\", \"Kristen\").","P24(\"Vicki\", \"Maureen\", \"Kristen\").","P19(\"Vicki\", \"Maureen\").","P20(\"Vicki\", \"Kristen\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["P10(V0, V2, V3) :- - P0(V0, V2), - P2(V0, V2), P3(V1, V2, V3).","- P0(V0, V2) :- - P2(V0, V2), not P4(V0, V2), not P6(V0, V2).","P1(V0, V3) :- P7(V0, V3), - P16(V0, V3, V4).","- P2(V2, V2) :- P3(V1, V2, V3), not P5(V1, V2, V3), not P8(V1, V2, V3).","P3(V3, V3, V3) :- P1(V0, V3), not -P9(V0, V3), not -P17(V0, V3).","- P4(V0, V3) :- P1(V0, V3), not -P9(V0, V3), not -P17(V0, V3).","- P5(V3, V0, V3) :- P1(V0, V3), not -P9(V0, V3), not -P17(V0, V3).","- P6(V0, V0) :- P11(V0, V3, V4), not -P15(V0, V3, V4), not P16(V0, V3, V4).","P7(V0, V3) :- P11(V0, V3, V4), not -P15(V0, V3, V4), not P16(V0, V3, V4).","- P8(V3, V4, V3) :- P11(V0, V3, V4), not -P15(V0, V3, V4), not P16(V0, V3, V4).","P9(V0, V3) :- - P12(V0), P13(V1, V4), P14(V0, V1, V3)."],"noisy_rules":{"a":["- P10(V0, V2, V2) :- P4(V0, V2).","- P10(V2, V2, V3) :- P5(V1, V2, V3)."],"b":["P6(V0, V2) :- P6(V0, V2), not P9(V0, V3), - P10(V0, V2, V3).","- P13(V2, V3) :- - P7(V0, V3), - P10(V0, V2, V3)."],"c":["P12(V0) :- P2(V0, V2), P4(V0, V2).","P16(V0, V3, V3) :- - P1(V0, V3)."],"d":["- P1(V0, V3) :- P5(V1, V2, V3), - P7(V0, V3), not -P18(V0, V3).","P4(V0, V0) :- - P1(V0, V3), - P7(V0, V3), not -P19(V0, V3)."],"e":["P21(V0, V3, V4) :- P20(V0, V4), P22(V3, V4).","P23(V0, V4) :- P24(V0, V3, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_60_10_15_3_6_0.5_1.0_5_3_4","seed":60,"num_facts":8,"num_rules":16,"num_related_predicates":24,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.4444444444444446,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"meal(\"Stacie\", \"Anita\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["egg(\"Leonard\", \"Stacie\", \"Madison\").","- evening(\"Stacie\", \"Anita\", \"John\").","- break(\"Leonard\", \"Stacie\", \"Anita\").","- animal(\"Stacie\", \"John\", \"Madison\").","great_time_for_socialization(\"Stacie\", \"John\", \"Madison\").","morning(\"Stacie\", \"Anita\", \"John\").","- birthday(\"Stacie\", \"Anita\", \"John\").","- date(\"Stacie\", \"Anita\", \"John\")."],"noisy_facts":["hen_rooster(\"Anita\", \"John\").","clock(\"Leonard\", \"Stacie\", \"Anita\").","giving_gift(\"Leonard\", \"John\", \"Madison\").","monday(\"Anita\").","mime(\"Leonard\", \"Stacie\", \"John\").","- creating_joy_in_ones_fellow_humans(\"Leonard\", \"Madison\").","yummy(\"Stacie\", \"John\").","- neckpiece(\"Leonard\", \"Anita\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["meal(V1, V2) :- flying(V4), week(V4), night(V0, V3), - dinner(V0, V1, V2), not -stove_bolt(V1, V3, V4).","flying(V4) :- bird(V4), - chicken(V0, V2), wings(V1, V4), not time(V0, V1, V2).","bird(V4) :- egg(V0, V1, V4), morning(V1, V2, V3).","soup(V1, V3, V4) :- egg(V0, V1, V4), morning(V1, V2, V3).","- breakfast(V2) :- egg(V0, V1, V4), morning(V1, V2, V3).","- chicken(V1, V4) :- soup(V1, V3, V4), not -hen(V1, V3, V4), not -rooster(V1, V3, V4).","week(V0) :- - breakfast(V2), day(V0, V1, V2), not time(V0, V1, V2).","wings(V1, V0) :- - breakfast(V2), day(V0, V1, V2), not time(V0, V1, V2).","night(V1, V3) :- - evening(V1, V2, V3), not -morning(V1, V2, V3), not birthday(V1, V2, V3), not date(V1, V2, V3).","day(V2, V1, V2) :- - evening(V1, V2, V3), not -morning(V1, V2, V3), not birthday(V1, V2, V3), not date(V1, V2, V3).","- time(V0, V1, V2) :- day(V0, V1, V2), not break(V0, V1, V2).","- supper(V1, V2, V0) :- day(V0, V1, V2), not break(V0, V1, V2).","- dinner(V4, V1, V2) :- - supper(V1, V2, V4).","hen(V1, V4, V4) :- - supper(V1, V2, V4).","stove_bolt(V1, V3, V4) :- - animal(V1, V3, V4).","rooster(V1, V3, V4) :- great_time_for_socialization(V1, V3, V4)."],"noisy_rules":{"a":["- meal(V1, V2) :- - soup(V1, V3, V4), not -breakfast(V2), chicken(V0, V2), - week(V4), not -dinner(V0, V1, V2).","- meal(V1, V2) :- dinner(V0, V1, V2)."],"b":["evening(V1, V2, V1) :- - meal(V1, V2).","- wings(V1, V2) :- - meal(V1, V2)."],"c":["- great_time_for_socialization(V1, V0, V2) :- breakfast(V2), dinner(V0, V1, V2).","animal(V1, V3, V4) :- - bird(V4), - night(V0, V3), - stove_bolt(V1, V3, V4)."],"d":["evening(V2, V2, V2) :- breakfast(V2), not -monday(V2).","time(V0, V1, V2) :- clock(V0, V1, V2)."],"e":["- schizocarp(V0, V2, V3) :- - neckpiece(V0, V2), giving_gift(V0, V3, V4).","queen(V0, V4) :- - creating_joy_in_ones_fellow_humans(V0, V4), yummy(V1, V3), hen_rooster(V2, V3), mime(V0, V1, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_61_10_14_13_14_0.5_1.0_3_2_3","seed":61,"num_facts":15,"num_rules":15,"num_related_predicates":30,"max_depth_of_rule_graph":7,"average_depth_of_rule_graph":3.7777777777777777,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":"veal(\"Mallory\", \"Paul\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- supporting_chess_pieces(\"Scott\", \"Isabel\").","- calendar_year(\"Isabel\").","sound(\"Scott\", \"Paul\").","poker(\"Mallory\", \"Isabel\").","getting_to_work_on_time(\"Mallory\", \"Isabel\").","- toaster(\"Paul\", \"Isabel\").","chestnut(\"Mallory\", \"Paul\").","- moisture(\"Mallory\", \"Paul\").","north.","- take_plane.","amastia(\"Mallory\", \"Isabel\").","cut(\"Paul\", \"Isabel\").","- ctenophore(\"Scott\", \"Paul\").","- automobile_horn(\"Scott\", \"Paul\").","- producing_children(\"Paul\", \"Isabel\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["veal(V1, V2) :- - snail(V1), - watering_can(V1, V3), passionate(V2, V3).","- sleep_furniture(V1, V3) :- underground(V2), behavior(V1, V2), - toaster(V2, V3).","- taller_than_other(V0, V2) :- - tolerance(V2), sleeve(V0, V2), - furnish_home(V2, V3).","- tolerance(V2) :- - supporting_chess_pieces(V0, V3), - moisture(V1, V2), not producing_children(V2, V3).","- ride(V0, V2) :- - supporting_chess_pieces(V0, V3), - moisture(V1, V2), not producing_children(V2, V3).","- snail(V1) :- - sleep_furniture(V1, V3), not -poker(V1, V3), not -getting_to_work_on_time(V1, V3).","sleeve(V2, V2) :- - bur(V1, V2), not -chestnut(V1, V2), not moisture(V1, V2).","underground(V2) :- - taller_than_other(V0, V2), not -outfit(V0, V2), not -sound(V0, V2).","- watering_can(V1, V3) :- - calendar_year(V3), amastia(V1, V3), cut(V2, V3).","passionate(V2, V2) :- - ride(V0, V2), not ctenophore(V0, V2), not automobile_horn(V0, V2).","behavior(V0, V2) :- - ride(V0, V2), not ctenophore(V0, V2), not automobile_horn(V0, V2).","- bur(V2, V2) :- - ride(V0, V2), not ctenophore(V0, V2), not automobile_horn(V0, V2).","misleader(V0) :- - ride(V0, V2), not ctenophore(V0, V2), not automobile_horn(V0, V2).","- furnish_home(V1, V1) :- misleader(V1), not -north, not take_plane.","outfit(V1, V1) :- misleader(V1), not -north, not take_plane."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_65_10_14_12_14_0.5_1.0_5_2_3","seed":65,"num_facts":14,"num_rules":15,"num_related_predicates":29,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":2.888888888888889,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"cross_bay(\"Cassidy\", \"Thomas\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- dew(\"Thomas\").","squid(\"Abigail\", \"Casey\").","- bevatron(\"Cassidy\", \"Casey\").","being_early(\"Cassidy\", \"Thomas\").","secret(\"Abigail\", \"Thomas\").","bill_of_entry(\"Abigail\", \"Thomas\").","explosive(\"Abigail\", \"Thomas\").","dogs_and_birds(\"Abigail\", \"Thomas\").","- hammer(\"Abigail\", \"Thomas\").","- produce_fruit(\"Cassidy\", \"Abigail\").","rake(\"Cassidy\", \"Casey\").","pothead(\"Cassidy\", \"Casey\").","- religionist(\"Cassidy\", \"Thomas\").","bulbul."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["cross_bay(V0, V3) :- kill_mice(V1), - tea(V0, V2), - hot_air_balloon(V0, V3), not kook(V1, V2).","kill_mice(V1) :- - dwelling(V1), - resting_on(V1), - bevatron(V0, V2), being_early(V0, V3), not -secret(V1, V3).","- tea(V3, V3) :- - drive_on(V3), not -bulbul.","- dwelling(V3) :- - drive_on(V3), not -bulbul.","mouth(V3, V3) :- - drive_on(V3), not -bulbul.","- drive_on(V3) :- - hide(V1, V2), - norfolk_jacket(V1, V3).","- hot_air_balloon(V0, V3) :- - temperament(V0, V3).","- hide(V1, V2) :- - dew(V3), - produce_fruit(V0, V1), rake(V0, V2), not -pothead(V0, V2), not religionist(V0, V3).","likes_nuts(V1, V3) :- - dew(V3), - produce_fruit(V0, V1), rake(V0, V2), not -pothead(V0, V2), not religionist(V0, V3).","- kook(V1, V2) :- squid(V1, V2).","- norfolk_jacket(V1, V3) :- likes_nuts(V1, V3), not -bill_of_entry(V1, V3), not -explosive(V1, V3), not -dogs_and_birds(V1, V3), not hammer(V1, V3).","gymnastics(V3, V3) :- likes_nuts(V1, V3), not -bill_of_entry(V1, V3), not -explosive(V1, V3), not -dogs_and_birds(V1, V3), not hammer(V1, V3).","- temperament(V0, V3) :- gymnastics(V0, V3), - bevatron(V0, V2).","catsup(V0, V2) :- gymnastics(V0, V3), - bevatron(V0, V2).","- resting_on(V1) :- mouth(V1, V3), gymnastics(V0, V3), not -catsup(V0, V1)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_66_8_10_10_11_0.5_1.0_5_1_2","seed":66,"num_facts":13,"num_rules":11,"num_related_predicates":24,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5714285714285716,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" P10(\"Andrew\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P11(\"Kevin\").","- P12.","- P13(\"Michael\").","P14.","P15.","P16(\"Andrew\").","- P17.","- P18(\"Michael\").","P19(\"Michael\").","P20(\"Michael\").","P21(\"Michael\").","- P22.","P23."],"noisy_facts":["P27.","- P30(\"Kevin\").","- P29(\"Kevin\").","- P26.","- P25.","P32(\"Kevin\").","P33(\"Kevin\").","P24."],"min_fact_dicts_for_query":[],"noiseless_rules":["- P10(V0) :- P1(V0), not P8(V0), not P9(V0), not -P16(V0).","P0(V1) :- P11(V1).","P1(V2) :- P5(V2), not P6(V2), not P22, not -P23.","P2(V2) :- P5(V2), not P6(V2), not P22, not -P23.","- P3(V0) :- - P12, P14, P15, P16(V0), not P17.","- P4(V0) :- - P12, P14, P15, P16(V0), not P17.","P5(V2) :- - P13(V2), not P18(V2), not -P19(V2), not -P20(V2), not -P21(V2).","- P6(V1) :- P0(V1), not P3(V1).","P7(V1) :- P0(V1), not P3(V1).","- P8(V1) :- - P4(V1).","- P9(V1) :- P2(V1), not -P7(V1)."],"noisy_rules":{"a":["P10(V0) :- not -P3(V1), P4(V1), - P5(V2), P8(V0).","P10(V0) :- not P0(V1), - P1(V0), - P2(V1), - P5(V2), P6(V2)."],"b":["- P20(V2) :- not P1(V0), - P5(V2), not -P6(V2), P8(V0), P10(V0).","- P23(V0) :- - P1(V0), P3(V1), - P7(V1), not -P10(V0)."],"c":["- P19(V2) :- not P1(V0), - P5(V2), P6(V2), P8(V0), not -P9(V0).","P17(V1) :- - P0(V1), not P2(V1), - P5(V2)."],"d":["- P1(V1) :- - P2(V1), P24.","- P11(V2) :- - P5(V2), - P25, - P26, P27."],"e":["P28(V1) :- not P29(V1), - P30(V1).","P31(V1) :- P32(V1), P33(V1)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_80_8_12_9_12_0.5_1.0_5_2_3","seed":80,"num_facts":12,"num_rules":13,"num_related_predicates":25,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.857142857142857,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" occasions(\"George\", \"Kathleen\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["admiral(\"George\", \"Erica\").","look(\"George\", \"Kathleen\").","human_nature(\"George\", \"Erica\").","article(\"George\").","feed_babies(\"George\", \"Erica\").","army_brat(\"George\").","- journey_into_space(\"George\").","siamese(\"Kathleen\", \"Erica\").","anaplasia(\"George\", \"Deborah\").","- pepsi(\"George\", \"Deborah\").","abstraction(\"Kathleen\", \"Erica\").","- wheel(\"Kathleen\", \"Deborah\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- occasions(V0, V1) :- departing_and_returning_flights(V1), - twelve(V0, V2), not -old_people(V1, V2), not trinidad_and_tobago_dollar(V1, V2), not cliffhanger(V1, V2).","departing_and_returning_flights(V1) :- plainness(V2), - bipeds(V3), conscience_money(V0, V3), abstraction(V1, V2), not wheel(V1, V3).","- twelve(V0, V2) :- admiral(V0, V2).","old_people(V1, V2) :- look(V0, V1), siamese(V1, V2).","plainness(V2) :- look(V0, V1), siamese(V1, V2).","oak(V0, V2) :- look(V0, V1), siamese(V1, V2).","- trinidad_and_tobago_dollar(V2, V2) :- oak(V0, V2).","transgression(V0, V0) :- oak(V0, V2).","- cliffhanger(V2, V2) :- - twelve(V0, V2), not -human_nature(V0, V2), not -feed_babies(V0, V2).","- bipeds(V0) :- - twelve(V0, V2), not -human_nature(V0, V2), not -feed_babies(V0, V2).","- bathhouse(V0, V0) :- - twelve(V0, V2), not -human_nature(V0, V2), not -feed_babies(V0, V2).","seat_belts(V0) :- transgression(V1, V3), - bathhouse(V0, V3), siamese(V1, V2), not -anaplasia(V0, V3), not pepsi(V0, V3).","conscience_money(V0, V0) :- seat_belts(V0), article(V0), feed_babies(V0, V2), not -army_brat(V0), not journey_into_space(V0)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_67_7_9_4_5_0.5_1.0_3_2_3","seed":67,"num_facts":6,"num_rules":10,"num_related_predicates":16,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" deity(\"Veronica\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["pea_soup.","opinion(\"Danielle\", \"Benjamin\").","- lunar(\"Veronica\", \"Paul\").","water_butt(\"Veronica\", \"Paul\").","- suffragism(\"Veronica\", \"Benjamin\").","- spiritualism(\"Paul\", \"Benjamin\")."],"noisy_facts":["ticket.","breathing(\"Danielle\", \"Benjamin\").","- yellowbelly_marmot(\"Danielle\", \"Benjamin\").","- crest(\"Paul\", \"Benjamin\").","- groundhog(\"Danielle\", \"Paul\").","cliffhanger(\"Veronica\", \"Benjamin\")."],"min_fact_dicts_for_query":["opinion(\"Danielle\", \"Benjamin\").","- suffragism(\"Veronica\", \"Benjamin\").","- spiritualism(\"Paul\", \"Benjamin\")."],"noiseless_rules":["- deity(V1) :- chinese_deity(V1), persian_deity(V3), not egyptian_deity(V1, V3).","- soup(V1, V1) :- chinese_deity(V1), not -pea_soup.","spiritual_being(V1, V1) :- chinese_deity(V1), not -pea_soup.","dish(V0, V3) :- - soup(V0, V3), not celtic_deity(V0, V3).","norse_deity(V3, V3) :- dish(V0, V3), not belief(V0, V3).","chinese_deity(V1) :- opinion(V0, V3), - suffragism(V1, V3), - spiritualism(V2, V3).","- belief(V0, V3) :- opinion(V0, V3), - suffragism(V1, V3), - spiritualism(V2, V3).","persian_deity(V3) :- norse_deity(V2, V3).","- egyptian_deity(V1, V1) :- spiritual_being(V1, V2), not lunar(V1, V2), not -water_butt(V1, V2).","- celtic_deity(V1, V2) :- spiritual_being(V1, V2), not lunar(V1, V2), not -water_butt(V1, V2)."],"noisy_rules":{"a":["deity(V0) :- celtic_deity(V0, V3).","deity(V1) :- - norse_deity(V2, V3), - chinese_deity(V1), egyptian_deity(V1, V3)."],"b":["- spiritual_being(V1, V0) :- celtic_deity(V0, V3), deity(V1).","belief(V2, V1) :- - spiritual_being(V1, V2), not -deity(V1)."],"c":["- pea_soup(V1) :- - dish(V0, V3), - persian_deity(V3), egyptian_deity(V1, V3).","- pea_soup(V1) :- egyptian_deity(V1, V3)."],"d":["celtic_deity(V2, V3) :- - norse_deity(V2, V3), not crest(V2, V3).","- opinion(V1, V1) :- - chinese_deity(V1), ticket."],"e":["- staying_alive(V0, V3) :- breathing(V0, V3), cliffhanger(V1, V3).","marmot(V0, V3) :- - groundhog(V0, V2), - yellowbelly_marmot(V0, V3)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_43_6_9_5_6_0.5_1.0_3_2_3","seed":43,"num_facts":7,"num_rules":10,"num_related_predicates":17,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"watch_game(\"Chelsea\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["second_joint(\"Anthony\").","smoke(\"Chelsea\", \"Madison\").","bird_of_prey(\"Anthony\").","poultry(\"Chelsea\", \"Joshua\").","dark_meat(\"Chelsea\", \"Anthony\").","cutting(\"Joshua\", \"Madison\").","columbiform_bird(\"Anthony\", \"Madison\")."],"noisy_facts":[],"min_fact_dicts_for_query":["second_joint(\"Anthony\").","smoke(\"Chelsea\", \"Madison\").","bird_of_prey(\"Anthony\").","poultry(\"Chelsea\", \"Joshua\").","dark_meat(\"Chelsea\", \"Anthony\").","cutting(\"Joshua\", \"Madison\").","columbiform_bird(\"Anthony\", \"Madison\")."],"noiseless_rules":["watch_game(V0) :- P3(V3), do_in_gym(V0, V1), gallinaceous_bird(V0, V3).","bird(V2) :- second_joint(V2), poultry(V0, V1), dark_meat(V0, V2).","domestic_fowl(V1, V2) :- second_joint(V2), poultry(V0, V1), dark_meat(V0, V2).","helping(V0, V2) :- second_joint(V2), poultry(V0, V1), dark_meat(V0, V2).","P3(V2) :- bird(V2), beak(V2), bird_of_prey(V2).","do_in_gym(V0, V1) :- smoke(V0, V3), cutting(V1, V3), columbiform_bird(V2, V3).","cere(V2, V3) :- smoke(V0, V3), cutting(V1, V3), columbiform_bird(V2, V3).","gallinaceous_bird(V3, V3) :- domestic_fowl(V1, V2), columbiform_bird(V2, V3).","ophiurida(V2, V3) :- domestic_fowl(V1, V2), columbiform_bird(V2, V3).","beak(V2) :- helping(V0, V2), cere(V2, V3), ophiurida(V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_20_9_11_3_6_0.5_1.0_5_3_4","seed":20,"num_facts":7,"num_rules":12,"num_related_predicates":19,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" screwdriver(\"Nicholas\", \"Barbara\", \"Kenneth\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["kitchen(\"Alexandria\", \"Andrew\", \"Barbara\").","contain_food(\"Alexandria\", \"Andrew\", \"Barbara\").","catholic(\"Alexandria\", \"Andrew\", \"Barbara\").","horn(\"Alexandria\", \"Nicholas\", \"Barbara\").","paste(\"Alexandria\", \"Barbara\").","bulldog_ant(\"Alexandria\", \"Barbara\").","sparer(\"Alexandria\", \"Barbara\")."],"noisy_facts":[],"min_fact_dicts_for_query":["kitchen(\"Alexandria\", \"Andrew\", \"Barbara\").","contain_food(\"Alexandria\", \"Andrew\", \"Barbara\").","catholic(\"Alexandria\", \"Andrew\", \"Barbara\").","horn(\"Alexandria\", \"Nicholas\", \"Barbara\").","paste(\"Alexandria\", \"Barbara\").","bulldog_ant(\"Alexandria\", \"Barbara\").","sparer(\"Alexandria\", \"Barbara\")."],"noiseless_rules":["screwdriver(V1, V3, V4) :- emulsion(V2), lacrimation(V2, V4), topper(V0, V1, V3), mapping(V0, V3, V4).","emulsion(V2) :- lacrimation(V2, V4), down_payment(V2, V4).","lacrimation(V2, V4) :- korea(V2), style(V1, V4), earthquake(V3, V4), carrying_clothing(V1, V2, V3).","korea(V2) :- kitchen(V0, V2, V3).","microsome(V0, V3) :- kitchen(V0, V2, V3).","style(V3, V2) :- kitchen(V0, V2, V3), contain_food(V0, V2, V3), catholic(V0, V2, V3).","marble(V0, V2, V2) :- kitchen(V0, V2, V3), contain_food(V0, V2, V3), catholic(V0, V2, V3).","earthquake(V3, V3) :- catholic(V0, V2, V3).","down_payment(V2, V0) :- marble(V0, V1, V2).","topper(V0, V1, V3) :- horn(V0, V1, V3).","mapping(V0, V3, V3) :- microsome(V0, V3), paste(V0, V3), bulldog_ant(V0, V3), sparer(V0, V3).","carrying_clothing(V3, V0, V3) :- microsome(V0, V3), paste(V0, V3), bulldog_ant(V0, V3), sparer(V0, V3)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_32_7_8_3_5_0.5_1.0_5_2_3","seed":32,"num_facts":6,"num_rules":9,"num_related_predicates":15,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.3333333333333333,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"center(\"Stacey\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["- flank_steak(\"Larry\", \"Sylvia\").","- gaggle(\"Larry\", \"Stacey\").","repairing_umbrella(\"Larry\", \"Stacey\").","- storage(\"Larry\").","garden(\"Larry\", \"Sylvia\").","plastic_art(\"Larry\")."],"noisy_facts":["cross(\"Sylvia\").","- morgan_le_fay(\"Larry\").","- furcation(\"Larry\", \"Stacey\").","- swing_set(\"Sylvia\", \"Kaitlyn\").","beryl(\"Larry\", \"Sylvia\").","- drive(\"Larry\", \"Sylvia\").","personal_letter(\"Larry\", \"Sylvia\").","jacket(\"Larry\", \"Kaitlyn\").","- bumf(\"Sylvia\", \"Kaitlyn\").","- music_group(\"Kaitlyn\").","- tortoiseshell(\"Larry\", \"Stacey\").","- hotel(\"Stacey\", \"Sylvia\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["center(V1) :- hoodoo(V1), importance(V0, V2), barge(V0, V3), not dagger(V1, V3).","drink(V2) :- - flank_steak(V0, V2), not -garden(V0, V2).","hoodoo(V1) :- - gaggle(V0, V1).","importance(V2, V2) :- drink(V2), not -flea(V2).","flea(V0) :- - gaggle(V0, V1), not -repairing_umbrella(V0, V1).","- corn(V0) :- - gaggle(V0, V1), not -repairing_umbrella(V0, V1).","- two_legged(V0) :- - gaggle(V0, V1), not -repairing_umbrella(V0, V1).","barge(V0, V2) :- - corn(V0), - storage(V0), garden(V0, V2), not -plastic_art(V0).","- dagger(V0, V0) :- - two_legged(V0)."],"noisy_rules":{"a":["- center(V2) :- - flea(V2).","- center(V1) :- - drink(V2), dagger(V1, V3)."],"b":["two_legged(V0) :- - drink(V2), - flea(V2), not -corn(V0), two_legged(V0), - center(V1).","- flea(V2) :- - drink(V2), dagger(V1, V3), - center(V1)."],"c":["dagger(V2, V2) :- not drink(V2), - flea(V2).","- importance(V0, V2) :- - flea(V2), corn(V0)."],"d":["- capital(V0) :- not drink(V2), - importance(V0, V2), not flea(V2), not -beryl(V0, V2), - drive(V0, V2).","- drink(V2) :- - flea(V2), not -corn(V0), not -two_legged(V0), - morgan_le_fay(V0)."],"e":["- olive(V0, V1) :- - tortoiseshell(V0, V1), not -personal_letter(V0, V2), jacket(V0, V3), - swing_set(V2, V3).","not_all_mammals(V3) :- cross(V2), - music_group(V3), - furcation(V0, V1), not hotel(V1, V2), not bumf(V2, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_4_6_9_9_12_0.5_1.0_5_2_3","seed":4,"num_facts":12,"num_rules":10,"num_related_predicates":22,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" personal_property(\"Theresa\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["parent(\"Samuel\").","- ex_spouse(\"Christopher\", \"Theresa\").","- arrears(\"Christopher\", \"Theresa\").","- travel_and_then_return_back_home(\"Christopher\", \"Theresa\").","- prickly_edged_leaf(\"Christopher\", \"Theresa\").","japan(\"Christopher\", \"Theresa\").","- atom_bomb(\"Christopher\", \"Theresa\").","- cloth_covering(\"Theresa\").","- teaching_students(\"Christopher\", \"Perry\").","- help_sick_person(\"Samuel\", \"Perry\").","- getting(\"Perry\", \"Theresa\").","- hand(\"Samuel\", \"Theresa\")."],"noisy_facts":[],"min_fact_dicts_for_query":["parent(\"Samuel\").","- ex_spouse(\"Christopher\", \"Theresa\").","- cloth_covering(\"Theresa\").","- teaching_students(\"Christopher\", \"Perry\").","- hand(\"Samuel\", \"Theresa\")."],"noiseless_rules":["- personal_property(V3) :- kingdom(V1), - post_office(V0, V1), - hickory_nut(V0, V3), not -locker(V1, V3), not lap_top_computer(V1, V3).","kingdom(V1) :- parent(V1), - cloth_covering(V3), - teaching_students(V0, V2), not help_sick_person(V1, V2), not getting(V2, V3).","oriental(V0, V2) :- parent(V1), - cloth_covering(V3), - teaching_students(V0, V2), not help_sick_person(V1, V2), not getting(V2, V3).","low_explosive(V3) :- parent(V1), - cloth_covering(V3), - teaching_students(V0, V2), not help_sick_person(V1, V2), not getting(V2, V3).","- post_office(V0, V1) :- - ex_spouse(V0, V3), - hand(V1, V3).","- go_from_place_to_place(V0, V3) :- - ex_spouse(V0, V3), - hand(V1, V3).","- hickory_nut(V0, V3) :- - ex_spouse(V0, V3), not arrears(V0, V3), not prickly_edged_leaf(V0, V3), not -japan(V0, V3).","cotswold(V0, V3) :- - ex_spouse(V0, V3), not arrears(V0, V3), not prickly_edged_leaf(V0, V3), not -japan(V0, V3).","locker(V1, V3) :- oriental(V0, V2), - go_from_place_to_place(V0, V3), cotswold(V0, V1).","- lap_top_computer(V0, V3) :- low_explosive(V3), - travel_and_then_return_back_home(V0, V3), not prickly_edged_leaf(V0, V3), not -japan(V0, V3), not atom_bomb(V0, V3)."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_36_9_11_4_7_0.5_1.0_5_2_3","seed":36,"num_facts":6,"num_rules":12,"num_related_predicates":18,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.375,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" place(\"Joshua\", \"John\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["chicken(\"Lisa\").","living_place(\"Joshua\", \"April\").","bird(\"Joshua\", \"Lisa\").","desk(\"Joshua\", \"John\").","seat(\"Lisa\", \"April\").","armchair(\"John\", \"April\")."],"noisy_facts":["setting(\"Lisa\").","- free_fall(\"John\").","duck(\"Joshua\").","- on_face(\"Joshua\", \"John\").","- somatic_cell(\"Joshua\", \"Lisa\").","city(\"Joshua\").","- cell(\"John\", \"April\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- place(V0, V2) :- - nest(V0), - funiture(V0, V2).","bed(V0) :- - mattress(V0, V2), not funiture(V0, V2).","- nest(V0) :- - home(V0, V1), location(V0, V3).","- home(V0, V0) :- bed(V0).","house(V0) :- bed(V0).","building(V1) :- house(V1), not chair(V1).","location(V0, V0) :- building(V0), not -dwelling(V0), not -legs(V0).","- mattress(V0, V2) :- chicken(V1), bird(V0, V1), desk(V0, V2), seat(V1, V3), not -armchair(V2, V3).","- chair(V1) :- chicken(V1), bird(V0, V1), desk(V0, V2), seat(V1, V3), not -armchair(V2, V3).","dwelling(V0) :- living_place(V0, V3).","- funiture(V1, V1) :- - chair(V1), not -chicken(V1).","legs(V1) :- - chair(V1), not -chicken(V1)."],"noisy_rules":{"a":["place(V0, V1) :- nest(V0), not -home(V0, V1), - house(V1), not -chair(V1), not legs(V0).","place(V0, V0) :- - bed(V0), not -nest(V0)."],"b":["- location(V0, V1) :- nest(V0), - house(V1), place(V0, V2).","- legs(V0) :- - location(V0, V3), chair(V1), place(V0, V2)."],"c":["- dwelling(V0) :- home(V0, V1), - house(V1).","chair(V1) :- nest(V0), home(V0, V1)."],"d":["- living_place(V0, V3) :- - location(V0, V3), not dwelling(V0), not -city(V0).","- bird(V0, V1) :- nest(V0), home(V0, V1), - location(V0, V3), not -chair(V1), duck(V0)."],"e":["bidder(V0) :- - free_fall(V2), - somatic_cell(V0, V1), - on_face(V0, V2), - cell(V2, V3).","- rolled_tobacco(V1) :- setting(V1)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_91_6_9_2_4_0.5_1.0_5_2_3","seed":91,"num_facts":4,"num_rules":10,"num_related_predicates":14,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" birthday_dessert(\"Tiffany\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["- water_vapor(\"Tony\", \"Robert\").","- bird(\"Brett\", \"Tony\").","riding(\"Brett\", \"Tony\").","- horse(\"Tiffany\", \"Tony\")."],"noisy_facts":["- wheel(\"Tiffany\", \"Tony\").","body_bag(\"Tony\").","cudgel(\"Brett\", \"Robert\").","predator(\"Tiffany\", \"Tony\").","sick_bag(\"Tony\").","book_bag(\"Tiffany\", \"Tony\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- birthday_dessert(V1) :- - cake(V1, V2), racing(V1, V2), living(V1, V3).","nest(V2) :- - water_vapor(V2, V3).","- toy_car(V2) :- - water_vapor(V2, V3).","- cake(V2, V2) :- nest(V2), not animal(V2).","- short_staple_cotton(V2, V2) :- nest(V2), not animal(V2).","- home(V2, V2) :- nest(V2), not animal(V2).","- animal(V2) :- - bird(V0, V2), riding(V0, V2), - horse(V1, V2).","racing(V1, V2) :- - toy_car(V2), - short_staple_cotton(V1, V2), not bicycle(V1, V2), not horse(V1, V2).","living(V1, V2) :- - home(V1, V2), not animal(V2).","- bicycle(V1, V2) :- - home(V1, V2), not animal(V2)."],"noisy_rules":{"a":["birthday_dessert(V1) :- cake(V1, V2).","birthday_dessert(V1) :- cake(V1, V2), short_staple_cotton(V1, V2), - living(V1, V3), not -bicycle(V1, V2)."],"b":["- racing(V1, V2) :- toy_car(V2), birthday_dessert(V1).","bicycle(V1, V2) :- animal(V2), not racing(V1, V2), not -bicycle(V1, V2), birthday_dessert(V1)."],"c":["- riding(V1, V2) :- not -cake(V1, V2), short_staple_cotton(V1, V2), bicycle(V1, V2).","bicycle(V1, V2) :- not nest(V2), short_staple_cotton(V1, V2)."],"d":["- racing(V1, V2) :- - nest(V2), home(V1, V2), not -animal(V2), - living(V1, V3), not -predator(V1, V2).","bicycle(V1, V2) :- not -cake(V1, V2), animal(V2), - racing(V1, V2), not wheel(V1, V2)."],"e":["- bag(V2) :- sick_bag(V2), body_bag(V2), book_bag(V1, V2).","- endowment(V0, V3) :- cudgel(V0, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_78_10_14_2_5_0.5_1.0_5_3_4","seed":78,"num_facts":7,"num_rules":15,"num_related_predicates":22,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" P14(\"Valerie\", \"Julia\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P15(\"Valerie\").","- P16.","P17.","P18(\"Valerie\", \"Julia\", \"Richard\").","- P19(\"Patrick\", \"Richard\", \"Emily\").","P20(\"Patrick\", \"Julia\", \"Emily\").","- P21(\"Julia\", \"Richard\", \"Emily\")."],"noisy_facts":["- P23(\"Valerie\", \"Emily\").","- P27(\"Valerie\", \"Patrick\", \"Emily\").","- P26(\"Emily\").","- P25(\"Valerie\").","- P31(\"Valerie\", \"Emily\").","- P28(\"Valerie\", \"Julia\", \"Richard\").","- P22(\"Valerie\", \"Julia\").","- P32(\"Patrick\", \"Julia\", \"Emily\").","- P30(\"Emily\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- P14(V0, V2) :- - P3(V0), - P6(V0, V2, V3), - P12(V0, V3, V4), P20(V1, V2, V4), not P21(V2, V3, V4).","- P0(V1, V2) :- - P4(V0, V2, V4), - P7(V0, V3, V4), P13(V1, V3, V4).","P1(V1, V3, V4) :- P5(V0, V2, V3), P8(V1, V3, V4).","- P2(V0, V4) :- P5(V0, V2, V3), P8(V1, V3, V4).","- P3(V0) :- P15(V0).","- P4(V0, V0, V0) :- - P3(V0), not P16.","P5(V0, V0, V0) :- - P3(V0), not P16.","- P6(V3, V2, V3) :- - P0(V1, V2), P1(V1, V3, V4), not -P9(V1, V2).","- P7(V0, V0, V0) :- - P3(V0), not -P17.","P8(V0, V0, V0) :- - P3(V0), not -P17.","P9(V0, V0) :- - P3(V0), not -P17.","- P10(V0, V0, V0) :- - P3(V0), not -P17.","P11(V2, V3) :- P18(V0, V2, V3).","- P12(V0, V3, V4) :- - P2(V0, V4), - P10(V0, V3, V4), P11(V2, V3), not -P18(V0, V2, V3).","P13(V1, V3, V4) :- - P19(V1, V3, V4)."],"noisy_rules":{"a":["P14(V0, V2) :- - P1(V1, V3, V4), P4(V0, V2, V4).","P14(V0, V2) :- P6(V0, V2, V3), P10(V0, V3, V4)."],"b":["P0(V1, V2) :- P2(V0, V4), P3(V0), - P11(V2, V3), - P13(V1, V3, V4), not -P14(V0, V2).","- P11(V2, V1) :- P0(V1, V2), P3(V0), not -P14(V0, V2)."],"c":["P4(V0, V2, V4) :- - P9(V1, V2), P10(V0, V3, V4), - P11(V2, V3).","P0(V1, V2) :- not -P2(V0, V4), P4(V0, V2, V4), P6(V0, V2, V3), - P8(V1, V3, V4), - P11(V2, V3)."],"d":["- P17(V0, V2) :- - P22(V0, V2).","- P13(V0, V4, V4) :- P2(V0, V4), - P23(V0, V4)."],"e":["P24(V1, V2, V3) :- - P25(V0), - P26(V4), - P27(V0, V1, V4), - P28(V0, V2, V3).","P29(V0, V4) :- - P30(V4), - P31(V0, V4), - P32(V1, V2, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_96_10_14_11_11_0.5_1.0_3_2_3","seed":96,"num_facts":14,"num_rules":15,"num_related_predicates":29,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.6666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" white_liquid(\"Jimmy\", \"Jeremy\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["track(\"Jeremy\").","toning_muscles(\"Jimmy\", \"Patricia\").","partridge(\"Linda\").","kerb_crawler(\"Jimmy\").","often_home_to_mice(\"Jimmy\").","salmon(\"Jeremy\", \"Patricia\").","playing(\"Jimmy\", \"Jeremy\").","copper(\"Jeremy\", \"Patricia\").","poisonous_plant(\"Jimmy\", \"Linda\").","hazel_mouse(\"Linda\", \"Patricia\").","mine(\"Jimmy\", \"Patricia\").","pause(\"Jimmy\", \"Patricia\").","endowment(\"Linda\", \"Jeremy\").","having_fast_meal(\"Jeremy\", \"Patricia\")."],"noisy_facts":[],"min_fact_dicts_for_query":["track(\"Jeremy\").","toning_muscles(\"Jimmy\", \"Patricia\").","partridge(\"Linda\").","kerb_crawler(\"Jimmy\").","often_home_to_mice(\"Jimmy\").","salmon(\"Jeremy\", \"Patricia\").","playing(\"Jimmy\", \"Jeremy\").","copper(\"Jeremy\", \"Patricia\").","poisonous_plant(\"Jimmy\", \"Linda\").","hazel_mouse(\"Linda\", \"Patricia\").","mine(\"Jimmy\", \"Patricia\").","pause(\"Jimmy\", \"Patricia\").","endowment(\"Linda\", \"Jeremy\").","having_fast_meal(\"Jeremy\", \"Patricia\")."],"noiseless_rules":["white_liquid(V0, V2) :- scissors(V3), sable_antelope(V0, V2), zambian(V0, V3).","barcarole(V0, V3) :- track(V2), playing(V0, V2), copper(V2, V3).","scissors(V3) :- talk_to_each_other(V1), read_book(V0, V1), purchase(V1, V3).","sable_antelope(V0, V2) :- beefsteak(V0, V3), driving_belt(V1, V3), salmon(V2, V3).","talk_to_each_other(V1) :- flask(V1, V2).","beefsteak(V0, V3) :- barcarole(V0, V3), cash_bar(V0, V3), organic_computors(V0, V3).","flask(V1, V2) :- toning_muscles(V0, V3), endowment(V1, V2), having_fast_meal(V2, V3).","zambian(V0, V3) :- partridge(V1), poisonous_plant(V0, V1), hazel_mouse(V1, V3).","cash_bar(V0, V3) :- partridge(V1), poisonous_plant(V0, V1), hazel_mouse(V1, V3).","area(V0) :- partridge(V1), poisonous_plant(V0, V1), hazel_mouse(V1, V3).","read_book(V0, V0) :- area(V0), kerb_crawler(V0), often_home_to_mice(V0).","peacock(V0, V0) :- area(V0), kerb_crawler(V0), often_home_to_mice(V0).","purchase(V3, V3) :- peacock(V0, V3), mine(V0, V3), pause(V0, V3).","driving_belt(V3, V3) :- peacock(V0, V3), mine(V0, V3), pause(V0, V3).","organic_computors(V0, V3) :- peacock(V0, V3), mine(V0, V3), pause(V0, V3)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_96_7_10_3_4_0.5_1.0_5_2_3","seed":96,"num_facts":6,"num_rules":11,"num_related_predicates":17,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.8333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"P10(\"Erica\", \"Katrina\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["- P11(\"Katrina\", \"Jonathan\").","- P12(\"Erica\", \"Brianna\").","P13.","- P14(\"Erica\", \"Katrina\").","- P15(\"Katrina\", \"Jonathan\").","P16(\"Katrina\", \"Jonathan\")."],"noisy_facts":["P17(\"Erica\", \"Katrina\").","- P21(\"Erica\", \"Brianna\").","P22(\"Brianna\", \"Jonathan\").","P19.","- P24(\"Brianna\", \"Katrina\")."],"min_fact_dicts_for_query":["- P11(\"Katrina\", \"Jonathan\").","- P12(\"Erica\", \"Brianna\").","- P14(\"Erica\", \"Katrina\").","- P15(\"Katrina\", \"Jonathan\")."],"noiseless_rules":["P10(V0, V2) :- P1(V3), P5(V0, V2), not -P7(V0, V3).","P0(V0, V3) :- - P2(V2), P6(V0, V2), - P8(V2, V3).","P1(V3) :- - P11(V2, V3).","- P2(V2) :- - P11(V2, V3).","- P3(V0, V2) :- - P12(V0, V1), - P14(V0, V2), - P15(V2, V3), not -P16(V2, V3).","P4(V0) :- - P12(V0, V1), - P14(V0, V2), - P15(V2, V3), not -P16(V2, V3).","P5(V0, V2) :- - P3(V0, V2), not -P9(V0, V2).","P6(V0, V2) :- - P3(V0, V2), not -P9(V0, V2).","P7(V0, V3) :- P0(V0, V3), not -P4(V0).","- P8(V2, V2) :- - P2(V2), not -P13.","P9(V2, V2) :- - P2(V2), not -P13."],"noisy_rules":{"a":["- P10(V0, V2) :- P3(V0, V2), - P5(V0, V2), - P6(V0, V2).","- P10(V0, V2) :- - P5(V0, V2), not P6(V0, V2)."],"b":["P8(V2, V3) :- P2(V2), P8(V2, V3), - P10(V0, V2).","- P7(V0, V3) :- - P5(V0, V2), P8(V2, V3), - P10(V0, V2)."],"c":["P15(V2, V3) :- P8(V2, V3).","- P4(V3) :- - P1(V3)."],"d":["P18(V0, V2) :- - P5(V0, V2), - P7(V0, V3), P17(V0, V2).","- P7(V2, V2) :- P2(V2), P19."],"e":["- P20(V0, V3) :- - P21(V0, V1), P22(V1, V3).","P23(V1) :- - P24(V1, V2)."]}},"num_min_facts_for_query":4,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_71_8_8_8_11_0.5_1.0_5_3_4","seed":71,"num_facts":12,"num_rules":9,"num_related_predicates":21,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.5714285714285714,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" optical_sensor_for_living_beings(\"Tom\", \"Christine\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- testees(\"Tom\").","conversation(\"Caitlin\", \"Christine\").","teaching_children_how_food_grown(\"Caitlin\", \"Christine\").","- no_mans_land(\"Caitlin\", \"Christine\").","game(\"Colin\", \"Joan\").","- sphenopsida(\"Tom\", \"Caitlin\").","- loop(\"Tom\", \"Christine\", \"Joan\").","respondent(\"Tom\", \"Christine\", \"Joan\").","roller(\"Caitlin\", \"Christine\").","- drill(\"Caitlin\", \"Christine\").","- funny_wagon(\"Caitlin\", \"Christine\").","- pommel_horse(\"Caitlin\", \"Christine\")."],"noisy_facts":["molten_core(\"Colin\", \"Tom\").","ectoplasm(\"Colin\").","- ram(\"Colin\", \"Tom\", \"Joan\").","continental_breakfast(\"Tom\", \"Caitlin\", \"Joan\").","- early_day(\"Tom\", \"Caitlin\", \"Christine\").","- farm_corn(\"Caitlin\").","- elf(\"Colin\", \"Tom\", \"Joan\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- optical_sensor_for_living_beings(V1, V3) :- hull(V1, V4), durian(V1, V4), - nerds(V1, V2, V3), not table_linen(V1, V2, V3).","- growing(V2, V3) :- - testees(V1), game(V0, V4), - sphenopsida(V1, V2), - loop(V1, V3, V4), not -respondent(V1, V3, V4).","hull(V3, V3) :- - growing(V2, V3), not -roller(V2, V3), not drill(V2, V3), not funny_wagon(V2, V3), not pommel_horse(V2, V3).","cooking(V3, V2) :- conversation(V2, V3), not drill(V2, V3).","master_bedroom(V2, V3, V3) :- - growing(V2, V3), not -teaching_children_how_food_grown(V2, V3).","durian(V0, V4) :- cooking(V0, V4).","- nerds(V2, V2, V3) :- - no_mans_land(V2, V3), not pommel_horse(V2, V3).","bull(V2, V2) :- - no_mans_land(V2, V3), not pommel_horse(V2, V3).","- table_linen(V1, V1, V3) :- master_bedroom(V1, V3, V4), bull(V0, V1)."],"noisy_rules":{"a":["optical_sensor_for_living_beings(V1, V3) :- growing(V2, V3), - hull(V1, V4), - cooking(V0, V4), not durian(V1, V4).","optical_sensor_for_living_beings(V1, V3) :- - hull(V1, V4), - cooking(V0, V4), - master_bedroom(V1, V3, V4), - bull(V0, V1)."],"b":["no_mans_land(V2, V3) :- not -growing(V2, V3), nerds(V1, V2, V3), - bull(V0, V1), optical_sensor_for_living_beings(V1, V3).","- durian(V1, V4) :- growing(V2, V3), - hull(V1, V4), - cooking(V0, V4), not master_bedroom(V1, V3, V4), not -optical_sensor_for_living_beings(V1, V3)."],"c":["growing(V4, V0) :- - cooking(V0, V4), - durian(V1, V4).","loop(V1, V3, V4) :- growing(V2, V3), - cooking(V0, V4), table_linen(V1, V2, V3)."],"d":["- teaching_children_how_food_grown(V2, V3) :- nerds(V1, V2, V3), - bull(V0, V1), table_linen(V1, V2, V3), molten_core(V0, V1).","- master_bedroom(V1, V3, V1) :- not -growing(V2, V3), nerds(V1, V2, V3), table_linen(V1, V2, V3), - early_day(V1, V2, V3)."],"e":["breast_drill(V0, V2, V4) :- ectoplasm(V0), - farm_corn(V2), - elf(V0, V1, V4), not -continental_breakfast(V1, V2, V4).","- vicar(V0, V4) :- - ram(V0, V1, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_25_9_13_13_15_0.5_1.0_5_3_4","seed":25,"num_facts":14,"num_rules":14,"num_related_predicates":28,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"P13(\"Anita\", \"Judith\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P14(\"Jeanette\", \"Tony\", \"Laurie\").","P15(\"Tony\", \"Laurie\").","- P16(\"Tony\", \"Laurie\").","P17(\"Tony\", \"Laurie\").","- P18(\"Tony\", \"Laurie\").","P19(\"Jeanette\", \"Judith\", \"Laurie\").","P20(\"Tony\", \"Anita\", \"Judith\").","- P21(\"Tony\", \"Judith\", \"Laurie\").","- P22(\"Anita\", \"Judith\", \"Laurie\").","- P23(\"Jeanette\", \"Judith\", \"Laurie\").","P24(\"Jeanette\", \"Judith\", \"Laurie\").","- P25(\"Jeanette\", \"Judith\", \"Laurie\").","P26(\"Jeanette\", \"Judith\", \"Laurie\").","- P27(\"Jeanette\", \"Tony\", \"Laurie\")."],"noisy_facts":["- P35(\"Tony\", \"Judith\", \"Laurie\").","- P37(\"Tony\", \"Anita\", \"Laurie\").","- P34(\"Jeanette\", \"Anita\", \"Laurie\").","P31(\"Anita\").","P33(\"Jeanette\", \"Tony\").","P28(\"Jeanette\").","- P29(\"Tony\", \"Laurie\").","P32(\"Laurie\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["P13(V2, V3) :- - P7(V0, V3), P10(V0, V1, V4), - P12(V0, V2, V4), not -P19(V0, V3, V4), not -P20(V1, V2, V3).","- P0(V4) :- - P1(V0), P8(V0), - P11(V0, V4), - P21(V1, V3, V4), - P22(V2, V3, V4).","- P1(V0) :- - P14(V0, V1, V4).","P2(V1, V4) :- - P14(V0, V1, V4).","P3(V0) :- - P14(V0, V1, V4).","P4(V1, V1, V4) :- P2(V1, V4), not -P15(V1, V4), not P16(V1, V4), not -P17(V1, V4), not P18(V1, V4).","- P5(V1, V4, V4) :- P2(V1, V4), not -P15(V1, V4), not P16(V1, V4), not -P17(V1, V4), not P18(V1, V4).","P6(V4, V1, V4) :- P2(V1, V4), not -P15(V1, V4), not P16(V1, V4), not -P17(V1, V4), not P18(V1, V4).","- P7(V4, V4) :- - P0(V4).","P8(V0) :- P2(V1, V4), P4(V0, V1, V2), not P14(V0, V1, V4).","P9(V0) :- P2(V1, V4), P4(V0, V1, V2), not P14(V0, V1, V4).","P10(V0, V0, V0) :- P3(V0), not -P9(V0).","- P11(V0, V4) :- - P5(V0, V3, V4), not P23(V0, V3, V4), not -P24(V0, V3, V4), not P25(V0, V3, V4), not -P26(V0, V3, V4).","- P12(V0, V1, V4) :- P6(V0, V1, V4), not P27(V0, V1, V4)."],"noisy_rules":{"a":["- P13(V0, V0) :- - P8(V0).","- P13(V2, V4) :- P12(V0, V2, V4)."],"b":["P14(V0, V0, V4) :- P5(V0, V3, V4), P7(V0, V3), - P13(V2, V3).","P0(V4) :- P5(V0, V3, V4), P7(V0, V3), - P9(V0), - P13(V2, V3)."],"c":["P7(V0, V4) :- - P6(V0, V1, V4).","- P15(V1, V4) :- P5(V0, V3, V4), - P6(V0, V1, V4), - P8(V0)."],"d":["- P10(V0, V1, V4) :- - P3(V0), - P6(V0, V1, V4), not -P28(V0).","- P3(V1) :- P0(V4), - P2(V1, V4), not P29(V1, V4)."],"e":["- P30(V0) :- P31(V2), P32(V4), P33(V0, V1), - P34(V0, V2, V4), - P35(V1, V3, V4).","P36(V1, V2) :- - P37(V1, V2, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_30_8_9_8_11_0.5_1.0_5_3_4","seed":30,"num_facts":11,"num_rules":10,"num_related_predicates":21,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"peanut(\"Ryan\", \"Jeff\", \"Matthew\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["meals(\"Ryan\", \"Matthew\").","- pat(\"Ryan\", \"Olivia\").","rubber_stamp(\"Ryan\", \"Olivia\", \"Matthew\").","- playoff(\"Ryan\", \"Olivia\", \"Matthew\").","alcid(\"Ryan\", \"Olivia\").","tideway(\"Ryan\", \"Olivia\").","- elementary_particle(\"Jeff\", \"Olivia\", \"Maria\").","nod(\"Jeff\", \"Olivia\", \"Maria\").","- compact(\"Ryan\", \"Olivia\", \"Matthew\").","- lacrimal_bone(\"Ryan\", \"Olivia\", \"Matthew\").","- down(\"Ryan\", \"Olivia\", \"Matthew\")."],"noisy_facts":["- scoffer(\"Jeff\", \"Olivia\", \"Matthew\").","- north(\"Jeff\", \"Maria\", \"Matthew\").","tusk(\"Ryan\", \"Jeff\", \"Matthew\").","tongue(\"Ryan\", \"Olivia\", \"Matthew\").","common_dolphin(\"Jeff\", \"Olivia\", \"Maria\").","- wall_covering(\"Ryan\", \"Jeff\", \"Matthew\").","fantasy(\"Ryan\", \"Jeff\", \"Matthew\")."],"min_fact_dicts_for_query":["meals(\"Ryan\", \"Matthew\").","- pat(\"Ryan\", \"Olivia\").","- playoff(\"Ryan\", \"Olivia\", \"Matthew\").","alcid(\"Ryan\", \"Olivia\").","tideway(\"Ryan\", \"Olivia\").","- elementary_particle(\"Jeff\", \"Olivia\", \"Maria\")."],"noiseless_rules":["peanut(V0, V1, V4) :- - gun_projectile(V4), - vessel(V0, V1), - wheelchair(V0, V4), colloid(V1, V3), - playoff(V0, V2, V4).","- impromptu(V0, V2, V4) :- - great_mass_of_water(V2), - lacrimal_bone(V0, V2, V4).","- gun_projectile(V4) :- - wheelchair(V0, V4), not in_georgia(V0, V4).","- vessel(V0, V1) :- - roll(V0, V1, V3).","- wheelchair(V0, V4) :- meals(V0, V4).","colloid(V1, V3) :- - pat(V0, V2), alcid(V0, V2), tideway(V0, V2), - elementary_particle(V1, V2, V3), not -nod(V1, V2, V3).","- roll(V0, V1, V3) :- - pat(V0, V2), alcid(V0, V2), tideway(V0, V2), - elementary_particle(V1, V2, V3), not -nod(V1, V2, V3).","- in_georgia(V0, V4) :- - impromptu(V0, V2, V4), not -half_crown(V0, V2, V4), not compact(V0, V2, V4), not lacrimal_bone(V0, V2, V4), not down(V0, V2, V4).","- great_mass_of_water(V2) :- rubber_stamp(V0, V2, V4), not compact(V0, V2, V4).","half_crown(V0, V2, V4) :- rubber_stamp(V0, V2, V4), not compact(V0, V2, V4)."],"noisy_rules":{"a":["- peanut(V0, V1, V4) :- impromptu(V0, V2, V4), gun_projectile(V4), - colloid(V1, V3), not -roll(V0, V1, V3), - half_crown(V0, V2, V4).","- peanut(V0, V4, V4) :- impromptu(V0, V2, V4), not -wheelchair(V0, V4), in_georgia(V0, V4), not half_crown(V0, V2, V4)."],"b":["great_mass_of_water(V1) :- - peanut(V0, V1, V4).","wheelchair(V0, V4) :- gun_projectile(V4), wheelchair(V0, V4), - colloid(V1, V3), - half_crown(V0, V2, V4), - peanut(V0, V1, V4)."],"c":["great_mass_of_water(V2) :- impromptu(V0, V2, V4), roll(V0, V1, V3).","- nod(V1, V2, V2) :- vessel(V0, V1), great_mass_of_water(V2)."],"d":["roll(V0, V4, V0) :- not -wheelchair(V0, V4), not -in_georgia(V0, V4), not -great_mass_of_water(V2), - half_crown(V0, V2, V4), not -tongue(V0, V2, V4).","compact(V0, V0, V4) :- wheelchair(V0, V4)."],"e":["document(V1, V2) :- - wall_covering(V0, V1, V4), fantasy(V0, V1, V4), tusk(V0, V1, V4), common_dolphin(V1, V2, V3), - scoffer(V1, V2, V4).","proturan(V1, V3, V4) :- - north(V1, V3, V4)."]}},"num_min_facts_for_query":6,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_93_6_8_5_6_0.5_1.0_5_3_4","seed":93,"num_facts":8,"num_rules":9,"num_related_predicates":17,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.4,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" farm_bill(\"Ruth\", \"Jeffrey\", \"Howard\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- relatives(\"Ruth\", \"Emily\", \"Jared\").","- rap(\"Jeffrey\").","coelenterate.","gold(\"Ruth\", \"Howard\").","- weeb(\"Jeffrey\", \"Jared\").","fur(\"Ruth\", \"Emily\", \"Jared\").","condiment(\"Jeffrey\", \"Howard\", \"Jared\").","- form_of_currency(\"Jeffrey\", \"Howard\", \"Jared\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- farm_bill(V0, V1, V2) :- - vinyard(V1, V4), - affirmative(V3, V4), race_on_tracks(V0, V1, V4), - amazon(V0, V2, V4), not emotional(V1, V2, V3).","- vinyard(V1, V4) :- - relatives(V0, V3, V4), - form_of_currency(V1, V2, V4).","- affirmative(V3, V4) :- - rap(V1), gold(V0, V2), - weeb(V1, V4), fur(V0, V3, V4), not -condiment(V1, V2, V4).","tear(V1, V4) :- - rap(V1), gold(V0, V2), - weeb(V1, V4), fur(V0, V3, V4), not -condiment(V1, V2, V4).","race_on_tracks(V3, V3, V4) :- - affirmative(V3, V4), not -coelenterate.","consenting_adults(V4) :- - affirmative(V3, V4), not -coelenterate.","- habit(V3, V4) :- - affirmative(V3, V4), not -coelenterate.","- amazon(V2, V2, V2) :- consenting_adults(V2).","- emotional(V1, V1, V4) :- tear(V1, V4), not habit(V1, V4)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_80_9_10_6_8_0.5_1.0_3_3_4","seed":80,"num_facts":10,"num_rules":11,"num_related_predicates":21,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.375,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"P10(\"Kevin\", \"Heather\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P11(\"Monique\", \"Anthony\").","P12(\"Kristina\", \"Anthony\", \"Heather\").","P13(\"Kristina\").","P14(\"Kevin\", \"Kristina\", \"Heather\").","P15(\"Anthony\", \"Heather\").","- P16(\"Kristina\", \"Monique\", \"Anthony\").","- P17(\"Kevin\", \"Anthony\", \"Heather\").","P18(\"Kevin\", \"Anthony\", \"Heather\").","- P19(\"Kristina\", \"Heather\").","P20(\"Kevin\", \"Kristina\", \"Heather\")."],"noisy_facts":["P21(\"Kristina\", \"Monique\", \"Heather\").","P24(\"Kevin\", \"Heather\").","- P23(\"Monique\", \"Anthony\", \"Heather\").","- P25(\"Kevin\", \"Kristina\", \"Heather\").","P27(\"Kevin\", \"Monique\", \"Anthony\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["P10(V0, V4) :- P0(V0, V4), - P4(V2, V3), - P7(V1, V3, V4).","P0(V0, V4) :- P8(V2, V3), - P17(V0, V3, V4), not -P18(V0, V3, V4).","- P1(V3, V2, V2) :- P8(V2, V3), not P11(V2, V3).","P2(V1, V4) :- P12(V1, V3, V4).","P3(V1, V4) :- P12(V1, V3, V4).","- P4(V2, V3) :- P13(V1), P15(V3, V4), - P16(V1, V2, V3).","- P5(V1, V4) :- P13(V1), P15(V3, V4), - P16(V1, V2, V3).","P6(V1, V1, V4) :- P2(V1, V4), not P5(V1, V4), not P19(V1, V4).","- P7(V1, V4, V4) :- - P1(V1, V2, V4), not -P3(V1, V4), not P9(V1, V2, V4).","P8(V4, V0) :- P6(V0, V1, V4), not -P20(V0, V1, V4).","- P9(V1, V0, V4) :- P6(V0, V1, V4), not -P14(V0, V1, V4)."],"noisy_rules":{"a":["- P10(V1, V4) :- P4(V2, V3), P7(V1, V3, V4).","- P10(V4, V4) :- - P2(V1, V4), - P8(V2, V3)."],"b":["- P12(V0, V0, V4) :- - P10(V0, V4).","P9(V0, V0, V4) :- - P10(V0, V4)."],"c":["- P13(V1) :- - P3(V1, V4), - P6(V0, V1, V4).","P9(V1, V2, V4) :- P1(V1, V2, V4), - P2(V1, V4), - P8(V2, V3)."],"d":["P4(V2, V3) :- - P8(V2, V3).","P4(V2, V3) :- - P8(V2, V3), P9(V1, V2, V4), not -P21(V1, V2, V4)."],"e":["P22(V2, V3) :- - P23(V2, V3, V4).","- P26(V1, V4) :- P24(V0, V4), - P25(V0, V1, V4), P27(V0, V2, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_13_6_9_8_11_0.5_1.0_5_3_4","seed":13,"num_facts":10,"num_rules":10,"num_related_predicates":20,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"sensing(\"Jacob\", \"Courtney\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- shrub(\"Jacob\", \"Jeremiah\", \"Angela\").","- auscultation(\"Jeremiah\").","- stiffening(\"Jeremiah\", \"Rachel\", \"Courtney\").","fingerprinting(\"Jeremiah\", \"Rachel\", \"Courtney\").","routine(\"Jeremiah\", \"Angela\", \"Courtney\").","- thermography(\"Angela\", \"Courtney\").","mammography(\"Jacob\", \"Rachel\", \"Angela\").","electromyography(\"Jacob\", \"Rachel\", \"Courtney\").","- relistening(\"Jeremiah\", \"Rachel\", \"Courtney\").","- second_wind."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["sensing(V0, V4) :- procedure(V1, V2), - leverage(V0, V1, V3), listening(V0, V1, V4), not breathing(V0, V2, V3), not tall_oil(V1, V2, V3).","procedure(V1, V2) :- diagnostic_procedure(V0, V1), emergency_procedure(V0, V3), - stiffening(V1, V2, V4), not -fingerprinting(V1, V2, V4), not -routine(V1, V3, V4).","- leverage(V0, V1, V3) :- - shrub(V0, V1, V3).","listening(V0, V1, V4) :- - auscultation(V1), - thermography(V3, V4), mammography(V0, V2, V3), not -electromyography(V0, V2, V4), not relistening(V1, V2, V4).","diagnostic_procedure(V0, V1) :- - auscultation(V1), - thermography(V3, V4), mammography(V0, V2, V3), not -electromyography(V0, V2, V4), not relistening(V1, V2, V4).","- artificial_respiration(V1, V4) :- - auscultation(V1), - thermography(V3, V4), mammography(V0, V2, V3), not -electromyography(V0, V2, V4), not relistening(V1, V2, V4).","- breathing(V4, V1, V4) :- - artificial_respiration(V1, V4), not second_wind.","heimlich_maneuver(V1, V1, V4) :- - artificial_respiration(V1, V4), not second_wind.","- tall_oil(V1, V2, V3) :- - artificial_respiration(V1, V4), heimlich_maneuver(V0, V1, V2), routine(V1, V3, V4), not -mammography(V0, V2, V3).","emergency_procedure(V0, V3) :- - artificial_respiration(V1, V4), heimlich_maneuver(V0, V1, V2), routine(V1, V3, V4), not -mammography(V0, V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_33_7_8_3_5_0.5_1.0_5_0_1","seed":33,"num_facts":5,"num_rules":9,"num_related_predicates":14,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"consumer.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- find_downtown.","tablemate.","- mouth.","gobbler.","scoffer."],"noisy_facts":["form.","- demonstration.","butcher.","- beldam.","- personal_holiday.","appendage.","- crown.","- baker."],"min_fact_dicts_for_query":["- find_downtown."],"noiseless_rules":["consumer :- cutter, not -eater.","cutter :- - glutton, not -tablemate.","- dunker :- building.","- glutton :- - dunker, not -basketball_player, not mycophagist.","eater :- - dunker, not diner, not mouth, not -gobbler, not -scoffer.","basketball_player :- - dunker, not diner, not mouth, not -gobbler, not -scoffer.","building :- - find_downtown.","- mycophagist :- - find_downtown.","- diner :- tablemate."],"noisy_rules":{"a":["- consumer :- glutton, not -diner.","- consumer :- - cutter, not -glutton, mycophagist, diner."],"b":["diner :- not cutter, - basketball_player, not building, - consumer.","- gobbler :- - building, diner, - consumer."],"c":["- eater :- dunker.","- eater :- not -glutton, - basketball_player, not -mycophagist."],"d":["- skilled_worker :- - cutter, not -mycophagist, not -butcher, - baker, form.","glutton :- - eater, not building, not -diner, - demonstration."],"e":["jewelry :- - crown.","- black_tailed_deer :- not personal_holiday, not beldam, appendage."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_61_8_8_7_10_0.5_1.0_5_1_2","seed":61,"num_facts":11,"num_rules":9,"num_related_predicates":20,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.7142857142857142,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" birthday(\"Caitlyn\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- giving_good_time(\"Caitlyn\").","species(\"Caitlyn\").","- fruit(\"Caitlyn\").","ice_cream_truck(\"Caitlyn\").","cliffhanger.","- measure_weight(\"Caitlyn\").","- rain_on_parade.","- places_to_go.","- oblate_spheroid(\"Caitlyn\").","- wood(\"Caitlyn\").","- drill(\"Caitlyn\")."],"noisy_facts":["- new_york_bay(\"Nathan\").","- moo(\"Caitlyn\").","sense_sound(\"Caitlyn\").","- rerebrace(\"Nathan\").","mcintosh.","feed_chickens(\"Caitlyn\").","communicate(\"Caitlyn\").","case(\"Caitlyn\").","- cut_of_mutton(\"Nathan\")."],"min_fact_dicts_for_query":["ice_cream_truck(\"Caitlyn\")."],"noiseless_rules":["- birthday(V1) :- commissioned_officer(V1), not bay(V1), not -don(V1), not -cell_phone(V1).","commissioned_officer(V1) :- - exoneration(V1), not measure_weight(V1).","- bay(V1) :- - giving_good_time(V1), not oblate_spheroid(V1), not wood(V1), not drill(V1).","don(V1) :- council(V1), not -cell_phone(V1), not uncle(V1), not fruit(V1).","council(V1) :- species(V1).","cell_phone(V1) :- - fruit(V1), not -cliffhanger, not measure_weight(V1), not rain_on_parade, not places_to_go.","steak(V1) :- - fruit(V1), not -cliffhanger, not measure_weight(V1), not rain_on_parade, not places_to_go.","- uncle(V2) :- steak(V2).","- exoneration(V1) :- ice_cream_truck(V1)."],"noisy_rules":{"a":["birthday(V1) :- - commissioned_officer(V1).","birthday(V1) :- - don(V1), - steak(V2)."],"b":["- commissioned_officer(V1) :- birthday(V1).","oblate_spheroid(V1) :- - commissioned_officer(V1), birthday(V1)."],"c":["drill(V1) :- not commissioned_officer(V1), bay(V1), - cell_phone(V1), not -uncle(V1).","- council(V1) :- - commissioned_officer(V1), not cell_phone(V1), not -exoneration(V1)."],"d":["- species(V1) :- bay(V1), not don(V1), exoneration(V1), - moo(V1).","clamshell(V1) :- bay(V1), not don(V1), mcintosh."],"e":["piste(V2) :- - rerebrace(V2), not new_york_bay(V2), not cut_of_mutton(V2).","- oldster(V1) :- case(V1), not -sense_sound(V1), not -communicate(V1), not -feed_chickens(V1)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_76_6_8_6_7_0.5_1.0_5_1_2","seed":76,"num_facts":9,"num_rules":9,"num_related_predicates":18,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" breathing_device(\"Martha\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- sports_team_from_chicago(\"Martha\").","- living_quarters(\"Martha\").","gold(\"Martha\").","blue(\"Martha\").","employment(\"Martha\").","- small_change(\"Martha\").","- silicon(\"Martha\").","- grow_plants_in(\"Martha\").","cloud_judgement(\"Martha\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- sports_team_from_chicago(\"Martha\")."],"noiseless_rules":["- breathing_device(V1) :- music_group(V1), not crime(V1), not weigh_objects(V1), not date(V1), not silicon(V1).","music_group(V1) :- guinea_pig(V1), not sandwich(V1).","guinea_pig(V1) :- - saltwater_fish(V1), not aisle(V1), not -blue(V1), not -employment(V1), not small_change(V1).","- crime(V1) :- - sports_team_from_chicago(V1).","- saltwater_fish(V1) :- - sports_team_from_chicago(V1).","- weigh_objects(V1) :- - living_quarters(V1), not -employment(V1).","- sandwich(V1) :- - living_quarters(V1), not -employment(V1).","- aisle(V1) :- - living_quarters(V1), not -employment(V1).","- date(V1) :- gold(V1), not grow_plants_in(V1), not -cloud_judgement(V1)."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_37_10_15_10_13_0.5_1.0_5_1_2","seed":37,"num_facts":13,"num_rules":16,"num_related_predicates":29,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.4444444444444446,"num_noise_rules_per_type":2,"num_rules_with_default_negation":12,"target_query":" steel_mill(\"William\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["morceau(\"William\").","- deliverable(\"William\").","flying_in(\"William\").","echoencephalography(\"William\").","brunei_dollar(\"William\").","exode(\"William\").","factory(\"William\").","- horses(\"William\").","- bowl(\"William\").","plaything(\"William\").","layer(\"William\").","- structure(\"William\").","end_product(\"William\")."],"noisy_facts":["excrete(\"William\").","- chocolate(\"William\").","- ladybug(\"William\").","smell_fear(\"William\").","firefly(\"William\").","thread(\"William\").","- teaching(\"William\").","leaf_beetle(\"William\").","- bicycles(\"William\").","carpet_beetle(\"William\").","bitter_end(\"William\")."],"min_fact_dicts_for_query":["morceau(\"William\")."],"noiseless_rules":["- steel_mill(V2) :- piece(V2), not cool_and_can_jump_and_stuff(V2), not weight_train(V2), not -artifact(V2), not -white(V2).","piece(V2) :- afterpiece(V2), not -morceau(V2).","- production_line(V2) :- afterpiece(V2), not -morceau(V2).","- cool_and_can_jump_and_stuff(V2) :- morceau(V2), not -exode(V2), not -factory(V2), not horses(V2), not bowl(V2).","afterpiece(V2) :- morceau(V2), not -exode(V2), not -factory(V2), not horses(V2), not bowl(V2).","- weight_train(V2) :- - deliverable(V2), not -end_product(V2).","- product(V2) :- - deliverable(V2), not -end_product(V2).","- book(V1) :- - product(V1).","artifact(V2) :- - line(V2), not -creation(V2), not -plaything(V2), not -layer(V2), not structure(V2).","- classic(V2) :- - deliverable(V2), not -flying_in(V2), not -end_product(V2).","- line(V2) :- - production_line(V2), not copy(V2), not movie(V2), not -echoencephalography(V2), not -brunei_dollar(V2).","white(V2) :- - book(V2), not -paste(V2).","- copy(V2) :- - book(V2), not -paste(V2).","creation(V2) :- - classic(V2).","- movie(V2) :- - classic(V2).","paste(V2) :- - classic(V2)."],"noisy_rules":{"a":["steel_mill(V2) :- - piece(V2), - paste(V2).","steel_mill(V2) :- weight_train(V2), not -classic(V2), - paste(V2)."],"b":["- echoencephalography(V2) :- cool_and_can_jump_and_stuff(V2), book(V2), steel_mill(V2).","- factory(V2) :- production_line(V2), product(V1), not -line(V2), not -steel_mill(V2)."],"c":["product(V2) :- not -production_line(V2), book(V2), movie(V2).","- creation(V2) :- - piece(V2), product(V1), - artifact(V2)."],"d":["- afterpiece(V2) :- book(V2), not chocolate(V2).","horses(V2) :- - artifact(V2)."],"e":["- extremity(V2) :- - teaching(V2), not -bitter_end(V2), not bicycles(V2), smell_fear(V2), not -thread(V2).","- beetle(V2) :- not ladybug(V2), not -leaf_beetle(V2), not -firefly(V2), carpet_beetle(V2), not -excrete(V2)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_69_6_6_5_8_0.5_1.0_3_2_3","seed":69,"num_facts":6,"num_rules":7,"num_related_predicates":13,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"ligature(\"Heather\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["honker(\"Heather\").","- training_in_mental_and_physical_toughness(\"Heather\").","stall(\"Heather\").","australia(\"Arthur\").","- powerful_legs(\"Heather\", \"Arthur\").","deeper_voice_than_soprano(\"Heather\", \"Arthur\")."],"noisy_facts":[],"min_fact_dicts_for_query":["honker(\"Heather\").","- powerful_legs(\"Heather\", \"Arthur\")."],"noiseless_rules":["ligature(V0) :- rocker(V0), seigneury(V0, V3).","- hold_cream(V2) :- honker(V0), - powerful_legs(V0, V2), not -deeper_voice_than_soprano(V0, V2).","rocker(V0) :- honker(V0), - powerful_legs(V0, V2), not -deeper_voice_than_soprano(V0, V2).","seigneury(V0, V3) :- - cabbage(V0, V3).","- cabbage(V0, V0) :- rocker(V0), not -perspiration(V0), not -honker(V0).","perspiration(V2) :- - hold_cream(V2), not histocompatibility_complex(V2), not -australia(V2).","- histocompatibility_complex(V0) :- rocker(V0), not training_in_mental_and_physical_toughness(V0), not -stall(V0)."],"noisy_rules":{}},"num_min_facts_for_query":2,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_77_9_12_11_12_0.5_1.0_5_3_4","seed":77,"num_facts":15,"num_rules":13,"num_related_predicates":28,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.125,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P12(\"Sarah\", \"Johnathan\").","target_query_in_answerset":true,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P13(\"Arthur\", \"Megan\").","P14(\"Deborah\", \"Arthur\", \"Johnathan\").","P15(\"Sarah\").","- P16(\"Sarah\", \"Megan\").","- P17(\"Sarah\", \"Arthur\").","P18(\"Sarah\", \"Arthur\").","P19(\"Sarah\", \"Arthur\").","- P20(\"Sarah\", \"Arthur\").","P21(\"Sarah\", \"Arthur\").","- P22(\"Deborah\", \"Arthur\").","- P23(\"Deborah\", \"Megan\").","- P24(\"Deborah\", \"Arthur\", \"Johnathan\").","- P25(\"Sarah\", \"Arthur\", \"Megan\").","- P26(\"Sarah\", \"Arthur\", \"Johnathan\").","P27(\"Sarah\", \"Megan\", \"Johnathan\")."],"noisy_facts":[],"min_fact_dicts_for_query":["P13(\"Arthur\", \"Megan\").","P15(\"Sarah\").","- P16(\"Sarah\", \"Megan\").","P21(\"Sarah\", \"Arthur\").","- P22(\"Deborah\", \"Arthur\").","- P23(\"Deborah\", \"Megan\").","- P24(\"Deborah\", \"Arthur\", \"Johnathan\").","- P25(\"Sarah\", \"Arthur\", \"Megan\").","- P26(\"Sarah\", \"Arthur\", \"Johnathan\")."],"noiseless_rules":["P12(V0, V4) :- - P0(V4), P2(V0, V2), - P5(V0, V2), P10(V0, V3), not P11(V2, V3, V4).","- P0(V4) :- P13(V2, V3), - P25(V0, V2, V3), - P26(V0, V2, V4), not -P27(V0, V3, V4).","P1(V0, V2) :- P13(V2, V3), - P25(V0, V2, V3), - P26(V0, V2, V4), not -P27(V0, V3, V4).","P2(V0, V2) :- P1(V0, V2), not P17(V0, V2), not -P18(V0, V2), not -P19(V0, V2), not P20(V0, V2).","- P3(V0, V2) :- P1(V0, V2), not P17(V0, V2), not -P18(V0, V2), not -P19(V0, V2), not P20(V0, V2).","P4(V1, V2, V4) :- P14(V1, V2, V4).","- P5(V0, V2) :- P6(V0, V2, V4), not -P9(V0, V2, V4).","P6(V0, V2, V4) :- P15(V0), P21(V0, V2), - P22(V1, V2), - P23(V1, V3), - P24(V1, V2, V4).","P7(V3, V4) :- P15(V0), P21(V0, V2), - P22(V1, V2), - P23(V1, V3), - P24(V1, V2, V4).","- P8(V1, V3, V4) :- P15(V0), P21(V0, V2), - P22(V1, V2), - P23(V1, V3), - P24(V1, V2, V4).","P9(V4, V1, V4) :- - P3(V1, V4), P7(V3, V4), not P23(V1, V3).","P10(V0, V3) :- - P16(V0, V3).","- P11(V2, V3, V4) :- P4(V1, V2, V4), - P8(V1, V3, V4)."],"noisy_rules":{}},"num_min_facts_for_query":9,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_0_10_15_7_10_0.5_1.0_5_0_1","seed":0,"num_facts":11,"num_rules":16,"num_related_predicates":27,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":" belief.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["wing.","withers.","- comedian.","small.","- bird.","- preparing_meal.","- fairy.","organelle.","- foot.","- lobe.","- taret_organ."],"noisy_facts":["fur.","money.","band.","- legging.","beak.","- river.","- fly.","- robbery.","- account."],"min_fact_dicts_for_query":["- comedian."],"noiseless_rules":["- belief :- opinion, not -suffragism, not organ, not -spiritual_being, not foot.","opinion :- - actor.","sodium_cyanide :- - actor.","- spiritualism :- - pennon, not theory, not body_part, not bird, not preparing_meal.","spirit :- - pennon, not theory, not body_part, not bird, not preparing_meal.","suffragism :- sodium_cyanide, not deer.","- pennon :- sodium_cyanide, not deer.","- organ :- wing, not -organelle, not foot, not lobe, not taret_organ.","- angel :- wing, not -organelle, not foot, not lobe, not taret_organ.","- theory :- withers.","- deity :- withers.","- eon :- - spiritualism.","- actor :- - comedian.","spiritual_being :- spirit, not angel, not deity, not eon, not fairy.","- body_part :- withers, not -small, not lobe.","- deer :- withers, not -small, not lobe."],"noisy_rules":{"a":["belief :- not opinion, not suffragism, organ, not spiritual_being.","belief :- not -spiritualism, not spirit, - suffragism, theory, not -deer."],"b":["fairy :- belief.","- spirit :- pennon, organ, deity, not -deer, not -belief."],"c":["foot :- body_part.","- wing :- - spirit, not -pennon, - spiritual_being, not -body_part, deer."],"d":["- wing :- deity.","bird :- - spirit, not -pennon, not -deity, not spiritual_being, not -beak."],"e":["- garment :- - fly, - legging, fur, band.","- banks :- money, - river, - account, not robbery."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_46_10_13_12_13_0.5_1.0_5_0_1","seed":46,"num_facts":16,"num_rules":14,"num_related_predicates":30,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.2222222222222223,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" storing_soup.","target_query_in_answerset":false,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["human_activity.","cone.","getaway.","excavation.","hurt_people.","goose.","shake_ground.","sodium.","genius_loci.","post_horse.","chicken_meat.","smoke_cigar.","parnaiba.","garambulla.","disposition.","scared."],"noisy_facts":[],"min_fact_dicts_for_query":["human_activity.","cone.","getaway.","excavation.","hurt_people.","goose.","shake_ground.","sodium.","genius_loci.","post_horse.","chicken_meat.","smoke_cigar.","parnaiba.","garambulla.","disposition.","scared."],"noiseless_rules":["storing_soup :- stew, pick, cankerworm, selling_tickets, gusset.","hell :- human_activity.","lead_chromate :- human_activity.","kea :- human_activity.","factorial :- hell.","pick_carrot :- hell.","stew :- lead_chromate, robin.","pick :- factorial, sodium, genius_loci, post_horse, chicken_meat.","creation :- factorial, sodium, genius_loci, post_horse, chicken_meat.","cankerworm :- kea, modern.","selling_tickets :- cone.","modern :- cone, getaway, scared.","gusset :- excavation, smoke_cigar, parnaiba, garambulla, disposition.","robin :- pick_carrot, creation, hurt_people, goose, shake_ground."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"random_word"}
{"id":"symtex_dict_fact_query_77_9_10_8_8_0.5_1.0_5_0_1","seed":77,"num_facts":13,"num_rules":11,"num_related_predicates":24,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"making_love.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- nest.","rerebrace.","sleeping.","bar.","prostitute.","- sleep.","- hypodermis.","guide_blind_person.","spot_mice.","- member.","home.","- house.","- farm."],"noisy_facts":["cat.","water.","- heliosphere.","merit_badge."],"min_fact_dicts_for_query":["- nest."],"noiseless_rules":["making_love :- - bed, not -going_to_bed, not dance, not sex, not -symbol.","- bed :- - nest.","going_to_bed :- rerebrace, not sleep, not hypodermis, not -guide_blind_person, not -spot_mice.","nose :- sleeping.","- dance :- club, not -twist.","club :- bar, not member, not -home, not house, not farm.","- place :- bar, not member, not -home, not house, not farm.","drinking :- bar, not member, not -home, not house, not farm.","twist :- - place.","- sex :- prostitute.","symbol :- nose, not -drinking."],"noisy_rules":{"a":["- making_love :- dance, place, not -sex.","- making_love :- not nose, not -dance, not club, not -place, - symbol."],"b":["- sleeping :- bed, not nose, not -place, not -sex, - making_love.","- nose :- - making_love."],"c":["farm :- not going_to_bed, not -place, - drinking, sex, - symbol.","dance :- not -bed, place, - drinking, not -sex, not symbol."],"d":["sleep :- bed, not nose, not twist, not -cat.","- quenching_thirst :- - drinking, water."],"e":["spot :- merit_badge.","aileron :- - heliosphere."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_3_10_13_2_4_0.5_1.0_5_0_1","seed":3,"num_facts":5,"num_rules":14,"num_related_predicates":19,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":" hold_mush.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- fresh.","- peach.","blood_group.","morning_time_when.","- roll_over."],"noisy_facts":["- keeping_excess_weight_off.","being.","- quoter.","transfer_malaria_while_stinging_persons.","- front_bench.","gunboat.","macintosh.","judgment_day."],"min_fact_dicts_for_query":["- fresh."],"noiseless_rules":["- hold_mush :- south_america.","peach_scented :- tent_caterpillar_moth.","south_america :- peach_scented, not rudder, not take_turns_on_equipment.","- rudder :- - fresh, not -morning_time_when, not roll_over.","explosion :- - fresh, not -morning_time_when, not roll_over.","tapestry :- - fresh, not -morning_time_when, not roll_over.","- hockey_coach :- - account, not peach.","- brome :- - account, not peach.","- cardboard :- - account, not peach.","- account :- - butcher.","- take_turns_on_equipment :- explosion, not hockey_coach, not governador_valadares.","- governador_valadares :- - brome, not cardboard.","- butcher :- blood_group.","tent_caterpillar_moth :- tapestry, not cardboard, not account."],"noisy_rules":{"a":["hold_mush :- account, take_turns_on_equipment.","hold_mush :- - peach_scented, not south_america, not tapestry, cardboard, not -take_turns_on_equipment."],"b":["- tapestry :- account, not -hold_mush.","- south_america :- not tapestry, hold_mush."],"c":["- tent_caterpillar_moth :- not -rudder, not -brome, not -cardboard, governador_valadares, not -butcher.","fresh :- not tapestry, governador_valadares, not tent_caterpillar_moth."],"d":["sea :- hockey_coach, account, not -governador_valadares, - tent_caterpillar_moth, not -transfer_malaria_while_stinging_persons.","- hoot_owl :- brome, not -butcher, not tent_caterpillar_moth, not keeping_excess_weight_off."],"e":["- lodge :- - front_bench.","- willow_oak :- being, not quoter, not -gunboat, judgment_day, macintosh."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_62_6_9_3_4_0.5_1.0_3_0_1","seed":62,"num_facts":5,"num_rules":10,"num_related_predicates":15,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"crash.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- fly.","road.","- oil.","race.","birth_anniversary."],"noisy_facts":[],"min_fact_dicts_for_query":["- fly."],"noiseless_rules":["crash :- - planes, not -drive_on, not cars.","- departmental_highway :- - cars, not -black.","- planes :- - fly, not -birth_anniversary.","- bird :- - fly, not -birth_anniversary.","- street :- - bird, not -fuel.","drive_on :- - departmental_highway, not street, not highway.","- cars :- road, not oil, not -race.","black :- road, not oil, not -race.","fuel :- road, not oil, not -race.","- highway :- road, not oil, not -race."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_54_10_12_2_4_0.5_1.0_3_0_1","seed":54,"num_facts":6,"num_rules":13,"num_related_predicates":19,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.4444444444444446,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" location.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- down.","- cell.","heliosphere.","accelerator.","east_coast.","- whereabouts."],"noisy_facts":["- electron_gun.","shell_bean.","course_of_study.","broad_bean.","- shoulder_flash.","coatee."],"min_fact_dicts_for_query":["heliosphere."],"noiseless_rules":["- location :- - southeast, not space, not whereabouts.","east :- region, not appalachians, not -east_coast.","- northeast :- - down.","pass :- car, not cell.","compartment :- car, not cell.","region :- heliosphere.","west :- heliosphere.","- appalachians :- pass, not -west.","- southeast :- east, not northeast, not -south.","south :- car.","- space :- compartment, not -outer_space.","car :- accelerator, not -east_coast.","outer_space :- accelerator, not -east_coast."],"noisy_rules":{"a":["location :- - pass, not west, not outer_space.","location :- - east, - region, not south."],"b":["- east :- northeast, not -southeast, location.","- east :- location."],"c":["- west :- appalachians.","- outer_space :- not -northeast, - region."],"d":["northeast :- - pass, - car, not electron_gun.","- south :- - car, - shoulder_flash."],"e":["- bean :- broad_bean, course_of_study, shell_bean.","coat :- coatee."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_18_7_6_6_7_0.5_1.0_5_0_1","seed":18,"num_facts":8,"num_rules":7,"num_related_predicates":15,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.8333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":" tall.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- electrical_discharge.","desireable.","- core_drill.","lancashire.","- suit.","calymmatobacterium.","rider.","feel_textures."],"noisy_facts":[],"min_fact_dicts_for_query":["desireable."],"noiseless_rules":["- tall :- explode.","hoatzin :- - mole, not electrical_discharge.","honey_eater :- desireable.","explode :- hoatzin, not -preamble.","popular_form_of_transport :- honey_eater, not core_drill, not -lancashire, not suit, not -calymmatobacterium.","preamble :- - mole.","- mole :- popular_form_of_transport, not -rider, not -feel_textures."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_30_9_14_1_3_0.5_1.0_3_0_1","seed":30,"num_facts":4,"num_rules":15,"num_related_predicates":19,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"P14.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P15.","P16.","P17.","P18."],"noisy_facts":["P21.","- P22.","- P24.","P25.","P20."],"min_fact_dicts_for_query":["P16."],"noiseless_rules":["P14 :- P4, not -P10, not -P12.","P0 :- P15, not -P18.","- P1 :- P15, not -P18.","- P2 :- P16.","P3 :- P16.","P4 :- - P2, not P6, not P9.","P5 :- P0, not -P3, not P7.","- P6 :- P17.","- P7 :- P17.","P8 :- P17.","- P9 :- P5, not -P13.","P10 :- P3, not -P17.","- P11 :- P3, not -P17.","P12 :- - P1, not -P8, not P11.","P13 :- - P1, not -P8, not P11."],"noisy_rules":{"a":["- P14 :- - P4.","- P14 :- not P10, P11."],"b":["- P0 :- P6, not P8, - P14.","- P3 :- - P14."],"c":["- P3 :- P2.","- P17 :- - P4, P9."],"d":["- P5 :- P1.","- P15 :- P2."],"e":["- P19 :- P20, not -P21, not P22.","P23 :- - P24, P25."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_80_9_13_2_2_0.5_1.0_5_0_1","seed":80,"num_facts":6,"num_rules":14,"num_related_predicates":20,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.375,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"pheasant.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["peruvian_cotton.","jamaican_dollar.","- ewe.","- eating_dinner.","tuareg.","- sierra_leonean."],"noisy_facts":[],"min_fact_dicts_for_query":["- ewe."],"noiseless_rules":["pheasant :- peafowl, not afropavo, not african, not -monetary_unit, not -shrub.","peafowl :- - cross_over_body_of_water.","- afropavo :- peruvian_cotton.","cotton :- peruvian_cotton.","dollar :- jamaican_dollar.","- craniometric_point :- jamaican_dollar.","- african :- - ewe, not -tuareg, not sierra_leonean.","snuffle :- - ewe, not -tuareg, not sierra_leonean.","- bridge :- - ewe, not -tuareg, not sierra_leonean.","monetary_unit :- dollar, not -snuffle.","- breathing :- dollar, not -snuffle.","shrub :- cotton, not craniometric_point, not -socializing_with_friends_or_family.","- cross_over_body_of_water :- - bridge, not breathing.","socializing_with_friends_or_family :- - eating_dinner."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_81_10_10_6_6_0.5_1.0_3_0_1","seed":81,"num_facts":10,"num_rules":11,"num_related_predicates":21,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" P10.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P11.","P12.","P13.","- P14.","- P15.","P16.","- P17.","- P18.","P19.","P20."],"noisy_facts":[],"min_fact_dicts_for_query":["P13."],"noiseless_rules":["- P10 :- - P0, not -P3, not -P7.","- P0 :- - P1.","- P1 :- - P4, not -P6, not P17.","- P2 :- P5, not P9.","P3 :- P11, not -P20.","- P4 :- P8.","P5 :- P8.","P6 :- - P2.","P7 :- P12, not P15, not -P16.","P8 :- P13, not P18, not -P19.","- P9 :- - P14."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_50_5_4_1_1_0.5_1.0_5_1_2","seed":50,"num_facts":4,"num_rules":5,"num_related_predicates":9,"max_depth_of_rule_graph":2,"average_depth_of_rule_graph":1.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":3,"target_query":" rye(\"Michael\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":2,"asp_program_dlv2":{"noiseless_facts":["retrenchment(\"Michael\").","- penthouse(\"Michael\").","bear(\"Michael\").","neuron(\"Michael\")."],"noisy_facts":[],"min_fact_dicts_for_query":["retrenchment(\"Michael\")."],"noiseless_rules":["- rye(V1) :- pigeon_guillemot(V1), not -michael(V1).","pigeon_guillemot(V1) :- - trotter(V1), not -importance(V1).","- trotter(V1) :- retrenchment(V1).","importance(V1) :- - penthouse(V1), not -neuron(V1).","michael(V1) :- bear(V1)."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"random_word"}
{"id":"symtex_dict_fact_query_19_8_8_5_7_0.5_1.0_5_0_1","seed":19,"num_facts":8,"num_rules":9,"num_related_predicates":17,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.2857142857142856,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P8.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P9.","P10.","- P11.","P12.","- P13.","- P14.","- P15.","- P16."],"noisy_facts":["- P22.","P17.","- P20.","- P18.","P26.","P21.","P23.","- P25.","- P27.","P28."],"min_fact_dicts_for_query":["P9."],"noiseless_rules":["P8 :- P2.","- P0 :- P9, not -P12, not P13, not P14, not P15.","- P1 :- P9, not -P12, not P13, not P14, not P15.","P2 :- - P0, not -P4.","P3 :- P7.","P4 :- P3, not -P6, not P16.","P5 :- - P1, not -P10.","P6 :- P9, not P11.","P7 :- - P1, not -P5."],"noisy_rules":{"a":["- P8 :- P1.","- P8 :- P1, not P4, not P7."],"b":["- P9 :- not -P1, - P6, not P8.","- P6 :- - P8."],"c":["- P2 :- P0, not P4, not P6, not P7.","- P5 :- not -P1, not P2, - P3, - P6, - P7."],"d":["P15 :- not P3, - P4, - P7, P17.","- P3 :- - P6, not P18."],"e":["- P19 :- not P20, not -P21, - P22, P23.","P24 :- - P25, not -P26, not P27, P28."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_9_8_7_7_10_0.5_1.0_3_2_3","seed":9,"num_facts":12,"num_rules":8,"num_related_predicates":20,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"P7(\"Kenneth\", \"Kristin\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["P8(\"Kristin\").","P9(\"Kenneth\", \"Kristin\").","- P10(\"Nicole\").","P11(\"Kenneth\", \"Kristin\").","P12(\"Kenneth\", \"Kristin\").","P13(\"Kenneth\", \"Kristin\").","- P14(\"Kenneth\", \"Kristin\").","- P15(\"Kenneth\", \"Kristin\").","- P16(\"Kenneth\", \"Kristin\").","P17(\"Jamie\", \"Kristin\").","P18(\"Kenneth\", \"Kristin\").","P19(\"Kristin\", \"Nicole\")."],"noisy_facts":["- P25(\"Kenneth\", \"Nicole\").","- P21(\"Kenneth\", \"Kristin\").","P27(\"Jamie\").","- P28(\"Jamie\").","- P24(\"Jamie\", \"Nicole\").","- P23(\"Jamie\").","- P29(\"Jamie\", \"Kristin\").","P20(\"Kenneth\", \"Kristin\")."],"min_fact_dicts_for_query":["- P10(\"Nicole\").","P11(\"Kenneth\", \"Kristin\").","- P16(\"Kenneth\", \"Kristin\")."],"noiseless_rules":["P7(V1, V2) :- - P1(V0, V2), - P4(V1, V2), not -P9(V1, V2).","P0(V0, V2) :- P8(V2), P17(V0, V2), P18(V1, V2).","- P1(V2, V2) :- - P3(V1, V2), not -P6(V1, V2), not -P9(V1, V2).","P2(V2) :- P9(V1, V2), not -P13(V1, V2), not P14(V1, V2).","- P3(V1, V2) :- - P10(V3), - P16(V1, V2), not -P19(V2, V3).","- P4(V1, V2) :- P11(V1, V2), not P15(V1, V2), not P16(V1, V2).","P5(V1, V2) :- P12(V1, V2).","P6(V1, V2) :- P0(V0, V2), P2(V2), P5(V1, V2)."],"noisy_rules":{"a":["- P7(V1, V2) :- - P5(V1, V2).","- P7(V2, V2) :- P1(V0, V2)."],"b":["- P6(V1, V2) :- - P7(V1, V2).","P4(V1, V2) :- - P7(V1, V2)."],"c":["P14(V0, V2) :- P1(V0, V2).","- P11(V1, V2) :- P1(V0, V2), - P5(V1, V2)."],"d":["P3(V1, V2) :- not P2(V2), - P5(V1, V2), not -P20(V1, V2).","- P17(V2, V2) :- not P5(V1, V2), - P21(V1, V2)."],"e":["- P22(V0, V1) :- - P23(V0), not P24(V0, V3), - P25(V1, V3).","- P26(V2) :- not -P27(V0), - P28(V0), - P29(V0, V2)."]}},"num_min_facts_for_query":3,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_4_10_9_6_9_0.5_1.0_5_1_2","seed":4,"num_facts":11,"num_rules":10,"num_related_predicates":21,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.111111111111111,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":" pool(\"Elizabeth\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["diving(\"Elizabeth\").","- ducks(\"Elizabeth\").","- empty(\"Elizabeth\").","- trout(\"Elizabeth\").","- going_to_sleep(\"Elizabeth\").","grizzly(\"Elizabeth\").","- flare(\"Elizabeth\").","- rice_rat(\"Elizabeth\").","- find_outside(\"Elizabeth\").","- crappie(\"Elizabeth\").","- hold_mush(\"Elizabeth\")."],"noisy_facts":["- city(\"Elizabeth\").","harp(\"Elizabeth\").","- star_in_film(\"Michael\").","- person(\"Megan\").","- chicken(\"Elizabeth\").","people(\"Megan\").","computer(\"Megan\")."],"min_fact_dicts_for_query":["- empty(\"Elizabeth\")."],"noiseless_rules":["- pool(V0) :- pond(V0), not -bass(V0), not rest(V0).","ocean(V0) :- diving(V0).","pond(V0) :- - heaven(V0), not -swimming_pool(V0).","bass(V0) :- fish(V0), not -grizzly(V0), not flare(V0), not rice_rat(V0), not find_outside(V0).","- playing_harp(V0) :- - ducks(V0).","- relaxation(V0) :- - playing_harp(V0), not rest(V0), not -diving(V0).","- heaven(V0) :- - empty(V0).","swimming_pool(V0) :- ocean(V0), not relaxation(V0), not find_outside(V0).","fish(V0) :- - trout(V0), not crappie(V0), not hold_mush(V0).","- rest(V0) :- - going_to_sleep(V0)."],"noisy_rules":{"a":["pool(V0) :- - pond(V0), not -relaxation(V0).","pool(V0) :- - pond(V0)."],"b":["- diving(V0) :- - ocean(V0), not -playing_harp(V0), not -relaxation(V0), not swimming_pool(V0), not -pool(V0).","rest(V0) :- pool(V0)."],"c":["- diving(V0) :- relaxation(V0), heaven(V0).","- fish(V0) :- - ocean(V0), not pond(V0), not bass(V0), not -playing_harp(V0), rest(V0)."],"d":["angels(V0) :- not -playing_harp(V0), heaven(V0), not city(V0), harp(V0).","ducks(V0) :- not pond(V0), - chicken(V0)."],"e":["- chicken_roundworm(V2) :- - star_in_film(V2).","- believe_in_god(V1) :- not -people(V1), not person(V1), computer(V1)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_35_9_14_7_7_0.5_1.0_5_0_1","seed":35,"num_facts":10,"num_rules":15,"num_related_predicates":25,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.25,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" P14.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P15.","- P16.","- P17.","P18.","P19.","- P20.","- P21.","- P22.","- P23.","P24."],"noisy_facts":[],"min_fact_dicts_for_query":["- P17."],"noiseless_rules":["- P14 :- - P0, not P7, not P9.","- P0 :- - P8, not -P10.","- P1 :- - P8, not -P10.","P2 :- P15.","- P3 :- P15.","- P4 :- - P16, not P22, not P23, not -P24.","P5 :- - P16, not P22, not P23, not -P24.","- P6 :- - P1, not -P2, not P4, not -P11, not -P12.","- P7 :- - P6, not -P13.","- P8 :- - P17.","- P9 :- P5.","P10 :- P5.","P11 :- P5.","P12 :- - P3, not -P18, not -P19, not P20, not P21.","P13 :- - P3, not -P18, not -P19, not P20, not P21."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_26_8_12_9_11_0.5_1.0_5_0_1","seed":26,"num_facts":11,"num_rules":13,"num_related_predicates":24,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.142857142857143,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":"bureau.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["friend.","humans.","plants.","escape.","slope.","legs.","nest.","squirrel.","stick.","paper.","halide."],"noisy_facts":[],"min_fact_dicts_for_query":["friend.","humans.","plants.","escape.","slope.","legs.","nest.","squirrel.","stick.","paper.","halide."],"noiseless_rules":["bureau :- branches, run, living.","branches :- rely_on, catch_mouse, tree.","leaves :- rely_on, catch_mouse, tree.","rely_on :- friend, legs.","dog :- friend, legs.","run :- humans, plants, escape, slope, legs.","catch_mouse :- cat, bird, halide.","living :- leaves, animal, bark.","cat :- dog.","animal :- dog.","bark :- dog.","tree :- bark, nest, squirrel, stick, paper.","bird :- bark, nest, squirrel, stick, paper."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_58_6_9_2_5_0.5_1.0_5_0_1","seed":58,"num_facts":3,"num_rules":10,"num_related_predicates":13,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"badge.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":4,"asp_program_dlv2":{"noiseless_facts":["- going_to_zoo.","- pressure_dome.","- area."],"noisy_facts":[],"min_fact_dicts_for_query":["- going_to_zoo."],"noiseless_rules":["badge :- - blue_ribbon, not -insignia.","- governador_valadares :- - going_to_zoo.","- wapiti :- - going_to_zoo.","- insignia_of_rank :- - going_to_zoo.","- caduceus :- - going_to_zoo.","shoulder_flash :- - governador_valadares, not brazil.","- blue_ribbon :- - wapiti, not pressure_dome, not area.","insignia :- - insignia_of_rank, not caduceus, not -shoulder_flash, not -wings.","- brazil :- - governador_valadares, not caduceus, not blue_ribbon.","wings :- - governador_valadares, not caduceus, not blue_ribbon."],"noisy_rules":{}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"positive","source_type":"related_word"}
{"id":"symtex_dict_fact_query_72_6_6_6_9_0.5_1.0_3_0_1","seed":72,"num_facts":8,"num_rules":7,"num_related_predicates":15,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P6.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P7.","- P8.","- P9.","P10.","P11.","P12.","- P13.","P14."],"noisy_facts":["- P21.","P18.","- P15.","- P20."],"min_fact_dicts_for_query":["- P7."],"noiseless_rules":["P6 :- - P1, not P3, not P5.","P0 :- - P7, not -P10, not P13.","- P1 :- P0, not P13, not -P14.","- P2 :- P0, not P13, not -P14.","- P3 :- - P8, not -P11, not -P12.","- P4 :- - P2, not -P10.","- P5 :- - P4, not P9, not -P10."],"noisy_rules":{"a":["- P6 :- P4.","- P6 :- not -P2, P4, not -P5."],"b":["P2 :- P5, not P6.","P8 :- - P6."],"c":["P9 :- P2.","P4 :- P2, P5."],"d":["- P11 :- P1, not -P2, not P15.","- P16 :- P5."],"e":["- P17 :- P18.","P19 :- not P20, - P21."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"positive","source_type":"P_style"}
{"id":"symtex_dict_fact_query_61_10_12_9_11_0.5_1.0_5_0_1","seed":61,"num_facts":12,"num_rules":13,"num_related_predicates":25,"max_depth_of_rule_graph":7,"average_depth_of_rule_graph":3.7777777777777777,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" P12.","target_query_in_answerset":true,"max_ary_for_predicates":0,"max_idx_for_variables":1,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P13.","- P14.","P15.","P16.","P17.","- P18.","P19.","P20.","P21.","- P22.","P23.","P24."],"noisy_facts":["P27.","P25.","P28.","- P26.","- P31."],"min_fact_dicts_for_query":["- P13."],"noiseless_rules":["- P12 :- P4, not P7.","P0 :- P5, not P6, not -P8.","- P1 :- P2, not -P5, not -P10.","P2 :- - P13.","P3 :- - P13.","P4 :- P0, not -P16, not -P17, not P18, not -P19.","P5 :- - P9.","- P6 :- - P1, not -P11, not -P24.","- P7 :- - P14, not -P20, not -P21, not P22, not -P23.","P8 :- P3, not -P15.","- P9 :- P3, not -P15.","P10 :- P15.","P11 :- P15."],"noisy_rules":{"a":["P12 :- - P2, not P3, not P5, not P8.","P12 :- not -P1, not -P6, P7."],"b":["- P23 :- P1, - P2, - P5, not P10, P12.","- P24 :- not P5, P7, not -P12."],"c":["P14 :- - P0, not P2, - P3, not P10.","- P0 :- - P2, not P3, P7."],"d":["P1 :- - P8, not -P25.","P22 :- not P4, - P26."],"e":["P29 :- P27, not -P28.","P30 :- - P31."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"P_style"}
{"id":"symtex_dict_fact_query_68_6_8_5_6_0.5_1.0_3_1_2","seed":68,"num_facts":7,"num_rules":9,"num_related_predicates":16,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" biological_group(\"Ashley\").","target_query_in_answerset":true,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- catholic_church(\"Ashley\").","- unification_church(\"Ashley\").","pride(\"Ashley\").","flock(\"Ashley\").","ear(\"Ashley\").","- college(\"Ashley\").","- goshawk(\"Ashley\")."],"noisy_facts":["mother_of_pearl(\"Ashley\").","- crested_screamer(\"Kristen\").","udder(\"Kristen\").","preventing_pregnancy(\"Ashley\").","horned_screamer(\"Kristen\").","poodle(\"Ashley\").","methylene_chloride(\"Ashley\").","- crater(\"Ashley\").","drama(\"Ashley\")."],"min_fact_dicts_for_query":["- catholic_church(\"Ashley\")."],"noiseless_rules":["- biological_group(V2) :- church(V2), not body(V2), not -ear(V2).","church(V2) :- - catholic_church(V2), not unification_church(V2).","plantation(V2) :- - catholic_church(V2), not unification_church(V2).","- brood(V2) :- - catholic_church(V2), not unification_church(V2).","- body(V2) :- - colony(V2), not animal_group(V2), not college(V2).","- colony(V2) :- plantation(V2), not writing_style(V2), not congregation(V2).","- writing_style(V2) :- - unification_church(V2), not goshawk(V2).","- animal_group(V2) :- - brood(V2), not -pride(V2), not -flock(V2).","- congregation(V2) :- - brood(V2), not -pride(V2), not -flock(V2)."],"noisy_rules":{"a":["biological_group(V2) :- brood(V2), colony(V2), not -animal_group(V2).","biological_group(V2) :- not -brood(V2), not -colony(V2), congregation(V2)."],"b":["brood(V2) :- colony(V2), animal_group(V2), not -biological_group(V2).","goshawk(V2) :- biological_group(V2)."],"c":["body(V2) :- not church(V2), colony(V2), not -congregation(V2).","unification_church(V2) :- writing_style(V2)."],"d":["writing_style(V2) :- - plantation(V2), not -mother_of_pearl(V2), not -drama(V2).","- religion(V2) :- - church(V2), not -body(V2), not -methylene_chloride(V2)."],"e":["- breed_of_toy_dogs(V2) :- not -poodle(V2), - crater(V2), preventing_pregnancy(V2).","- screamer(V1) :- - crested_screamer(V1), horned_screamer(V1), not -udder(V1)."]}},"num_min_facts_for_query":1,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_8_10_12_7_10_0.5_1.0_5_2_3","seed":8,"num_facts":11,"num_rules":13,"num_related_predicates":24,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.2222222222222223,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"P12(\"Thomas\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["P13(\"Katherine\", \"Thomas\").","P14(\"Katherine\", \"Thomas\").","P15(\"Tina\").","- P16(\"Wendy\", \"Thomas\").","P17(\"Wendy\", \"Thomas\").","- P18(\"Katherine\", \"Thomas\").","P19(\"Wendy\", \"Thomas\").","- P20(\"Thomas\").","- P21(\"Wendy\", \"Katherine\").","P22(\"Tina\", \"Katherine\").","P23(\"Katherine\", \"Thomas\")."],"noisy_facts":["P28(\"Wendy\").","P25(\"Wendy\", \"Katherine\").","P31(\"Thomas\").","P30(\"Katherine\", \"Thomas\").","P26(\"Wendy\", \"Katherine\").","P24(\"Wendy\", \"Katherine\").","- P29(\"Wendy\", \"Thomas\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["P12(V3) :- P0(V3), - P3(V0, V2), P6(V1, V2), not P18(V2, V3).","P0(V3) :- P13(V2, V3).","P1(V2) :- P14(V2, V3).","P2(V3) :- P14(V2, V3).","- P3(V3, V3) :- P2(V3), not P4(V3), not -P8(V3), not -P11(V3).","- P4(V3) :- P15(V1), - P20(V3), - P21(V0, V2), not -P22(V1, V2), not -P23(V2, V3).","P5(V2) :- P15(V1), - P20(V3), - P21(V0, V2), not -P22(V1, V2), not -P23(V2, V3).","P6(V2, V2) :- P1(V2), not -P10(V2).","P7(V3, V3) :- P0(V3), not -P2(V3).","P8(V3) :- - P16(V0, V3).","P9(V0) :- - P16(V0, V3).","P10(V2) :- P5(V2), P7(V0, V3), not -P17(V0, V3), not P18(V2, V3), not -P19(V0, V3).","P11(V0) :- P9(V0)."],"noisy_rules":{"a":["- P12(V1) :- - P5(V2), - P6(V1, V2).","- P12(V3) :- - P2(V3)."],"b":["P21(V0, V2) :- - P0(V3), - P7(V0, V3), - P10(V2), not P12(V3).","P16(V3, V3) :- - P12(V3)."],"c":["- P17(V0, V3) :- - P6(V1, V2), - P7(V0, V3), - P11(V3).","P20(V3) :- - P0(V3), - P1(V2), - P5(V2), - P6(V1, V2)."],"d":["- P23(V2, V3) :- P3(V0, V2), - P8(V3), - P10(V2), - P11(V3), P24(V0, V2).","P18(V2, V3) :- - P0(V3), P3(V0, V2), not P8(V3), not -P25(V0, V2), not -P26(V0, V2)."],"e":["- P27(V0, V3) :- P28(V0), - P29(V0, V3), P30(V2, V3).","P32(V3) :- P31(V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_69_9_14_1_4_0.5_1.0_5_3_4","seed":69,"num_facts":4,"num_rules":15,"num_related_predicates":19,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.75,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" leicester(\"Sandra\", \"Frederick\", \"Dawn\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- sexual_relationship(\"David\", \"Frederick\", \"Dawn\").","screamer(\"Frederick\", \"Dawn\").","suction_cup(\"David\", \"Dawn\", \"Donald\").","return_ticket(\"Frederick\", \"Dawn\")."],"noisy_facts":["longboat(\"David\", \"Donald\").","goat(\"David\", \"Dawn\", \"Donald\").","written_symbol(\"Sandra\", \"Frederick\", \"Donald\").","- electron(\"Sandra\").","- dumbbell(\"Dawn\").","- club_moss(\"David\").","- bacteroid(\"Sandra\", \"Dawn\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- leicester(V1, V2, V3) :- fig_leaf(V0, V3), - extra_comfort(V1, V2), not sexual_relationship(V0, V2, V3).","- loon(V0, V0) :- - sexual_relationship(V0, V2, V3).","posset(V2, V3) :- - sexual_relationship(V0, V2, V3).","change(V2) :- posset(V2, V3), not -screamer(V2, V3), not -return_ticket(V2, V3).","- communicable_disease(V3, V2) :- posset(V2, V3), not -screamer(V2, V3), not -return_ticket(V2, V3).","football(V2, V3) :- posset(V2, V3), not -screamer(V2, V3), not -return_ticket(V2, V3).","- equine(V2, V3) :- posset(V2, V3), not -screamer(V2, V3), not -return_ticket(V2, V3).","cotton_rat(V0) :- suction_cup(V0, V3, V4).","rewarding_good_behavior(V0, V4) :- - loon(V0, V4), not -change(V0).","siberian_husky(V4, V0, V0) :- - loon(V0, V4), not -change(V0).","fig_leaf(V0, V2) :- - communicable_disease(V0, V2), cotton_rat(V0), rewarding_good_behavior(V0, V4), not -lepidopterous_insect(V0), not -yurt(V0).","lepidopterous_insect(V0) :- football(V0, V3), cotton_rat(V0), siberian_husky(V1, V2, V3), not large_stream(V0).","- large_stream(V3) :- - equine(V2, V3).","- extra_comfort(V3, V2) :- posset(V2, V3).","yurt(V2) :- posset(V2, V3)."],"noisy_rules":{"a":["leicester(V1, V2, V3) :- - posset(V2, V3), - siberian_husky(V1, V2, V3), - fig_leaf(V0, V3), not lepidopterous_insect(V0), large_stream(V0).","leicester(V4, V4, V4) :- not change(V0), not cotton_rat(V0), - rewarding_good_behavior(V0, V4), not -large_stream(V0)."],"b":["- yurt(V0) :- - fig_leaf(V0, V3), - yurt(V0), leicester(V1, V2, V3).","loon(V2, V1) :- leicester(V1, V2, V3)."],"c":["- rewarding_good_behavior(V0, V4) :- loon(V0, V4).","equine(V2, V3) :- loon(V0, V4), communicable_disease(V0, V2), - football(V0, V3), extra_comfort(V1, V2), - yurt(V0)."],"d":["- return_ticket(V0, V3) :- - football(V0, V3), not lepidopterous_insect(V0), not -large_stream(V0), - club_moss(V0).","- sitting(V0) :- - change(V0), - fig_leaf(V0, V3), not -large_stream(V0)."],"e":["- improvisation(V3) :- not electron(V1), not dumbbell(V3), longboat(V0, V4), - bacteroid(V1, V3), not -goat(V0, V3, V4).","bottle(V1, V2) :- written_symbol(V1, V2, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_60_6_8_8_8_0.5_1.0_3_2_3","seed":60,"num_facts":10,"num_rules":9,"num_related_predicates":19,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.8,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"P8(\"Samantha\", \"Michael\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P9(\"Michael\").","- P10(\"Samantha\", \"Rebecca\").","- P11(\"Jasmin\", \"Rebecca\").","P12(\"Samantha\", \"Michael\").","P13(\"Michael\", \"Rebecca\").","P14(\"Jasmin\").","P15(\"Michael\", \"Jasmin\").","P16(\"Michael\", \"Jasmin\").","- P17(\"Michael\", \"Jasmin\").","- P18(\"Jasmin\", \"Rebecca\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["P8(V0, V1) :- P0(V2), P1(V0, V1), not -P16(V1, V2).","P0(V2) :- - P4(V0, V3), P5(V2, V3), not P11(V2, V3).","P1(V0, V1) :- - P3(V0, V1), P6(V0, V3), P15(V1, V2).","P2(V2) :- - P3(V0, V1), P6(V0, V3), P15(V1, V2).","- P3(V0, V1) :- - P9(V1), P12(V0, V1), P13(V1, V3).","- P4(V2, V2) :- P2(V2), not -P7(V2), not -P14(V2).","P5(V2, V3) :- - P10(V0, V3), - P17(V1, V2), not P18(V2, V3).","P6(V0, V3) :- - P10(V0, V3), - P17(V1, V2), not P18(V2, V3).","P7(V2) :- - P10(V0, V3), - P17(V1, V2), not P18(V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_69_10_10_7_8_0.5_1.0_3_1_2","seed":69,"num_facts":11,"num_rules":11,"num_related_predicates":22,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.7777777777777777,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"P10(\"Stephen\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P11(\"Kevin\").","- P12(\"Kevin\").","P13(\"Kevin\").","- P14(\"Karen\").","- P15.","P16.","P17(\"Karen\").","P18(\"Karen\").","P19(\"Kevin\").","- P20(\"Kevin\").","- P21."],"noisy_facts":["P28(\"Stephen\").","P25(\"Kevin\").","- P24(\"Kevin\").","- P29(\"Stephen\").","- P23.","P22(\"Stephen\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["P10(V2) :- - P5(V2).","- P0(V0) :- - P11(V0), not -P19(V0), not P20(V0).","P1(V0) :- - P12(V0), not -P13(V0).","P2(V0) :- - P0(V0), not P21.","- P3(V0) :- - P0(V0), not P21.","P4(V1) :- P8(V1), not -P17(V1), not -P18(V1).","- P5(V1) :- P2(V1), not -P4(V1), not -P6(V1).","P6(V2) :- - P3(V2), not -P7(V2), not -P9(V2).","P7(V0) :- P13(V0), not P15, not -P16.","P8(V1) :- - P14(V1).","P9(V0) :- P1(V0)."],"noisy_rules":{"a":["- P10(V1) :- P0(V0), - P1(V0), - P2(V1).","- P10(V2) :- - P6(V1), - P7(V2)."],"b":["- P13(V0) :- - P1(V0), - P10(V2).","- P4(V2) :- - P10(V2)."],"c":["- P17(V1) :- - P1(V0), P3(V2), - P8(V1).","- P2(V0) :- - P1(V0)."],"d":["- P16(V2) :- P22(V2).","P21(V2) :- - P4(V1), - P7(V2), - P23."],"e":["- P26(V0) :- - P24(V0), not -P25(V0).","P27(V2) :- P28(V2), - P29(V2)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_69_10_10_9_9_0.5_1.0_5_1_2","seed":69,"num_facts":13,"num_rules":11,"num_related_predicates":24,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.7777777777777777,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"crucifer(\"Madison\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- coffee_mug(\"Joseph\").","- equator(\"Joseph\").","nest(\"Madison\").","- auk(\"James\").","- head_cabbage.","kale.","chinese_cabbage.","tank.","brent(\"James\").","- beryl(\"James\").","- heather(\"James\").","- thistle(\"James\").","unreality(\"Joseph\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["crucifer(V2) :- - P5(V2).","- bok_choy(V0) :- - coffee_mug(V0).","fricassee(V0) :- - equator(V0), not -unreality(V0).","cabbage(V0) :- - bok_choy(V0), not head_cabbage, not -kale, not -chinese_cabbage, not -tank.","- containerful(V0) :- - bok_choy(V0), not head_cabbage, not -kale, not -chinese_cabbage, not -tank.","bit(V1) :- north_sea_oilfield(V1).","- P5(V1) :- cabbage(V1), not -bit(V1), not -P6(V1).","P6(V2) :- - containerful(V2), not -birds(V2), not -stew(V2).","birds(V2) :- nest(V2).","north_sea_oilfield(V1) :- - auk(V1), not -brent(V1), not beryl(V1), not heather(V1), not thistle(V1).","stew(V0) :- fricassee(V0)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_61_10_11_10_13_0.5_1.0_5_3_4","seed":61,"num_facts":14,"num_rules":12,"num_related_predicates":26,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.5555555555555554,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":"abstraction(\"Dalton\", \"Valerie\", \"Benjamin\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["note(\"Valerie\", \"Jordan\", \"Kelsey\").","carving(\"Dalton\", \"Valerie\", \"Benjamin\").","brown(\"Valerie\", \"Jordan\", \"Kelsey\").","home(\"Valerie\", \"Jordan\", \"Kelsey\").","boarding_train(\"Dalton\", \"Valerie\", \"Jordan\").","- asset(\"Dalton\", \"Valerie\", \"Jordan\").","copulating(\"Dalton\", \"Valerie\", \"Jordan\").","- shingle_oak(\"Dalton\", \"Valerie\", \"Kelsey\").","award(\"Dalton\", \"Valerie\", \"Kelsey\").","- bitter_end(\"Dalton\", \"Valerie\", \"Kelsey\").","structure(\"Dalton\", \"Valerie\", \"Kelsey\").","- horror_movies(\"Jordan\", \"Kelsey\").","- measure(\"Dalton\", \"Valerie\", \"Benjamin\").","- water(\"Dalton\", \"Valerie\", \"Jordan\")."],"noisy_facts":["- vegetarian(\"Valerie\", \"Benjamin\", \"Kelsey\").","fiber(\"Dalton\", \"Valerie\", \"Jordan\").","- magenta(\"Jordan\").","- cup_breast(\"Dalton\", \"Benjamin\", \"Kelsey\").","- erythroblast(\"Dalton\", \"Valerie\", \"Jordan\").","meat(\"Dalton\", \"Jordan\", \"Kelsey\").","boy(\"Dalton\", \"Valerie\", \"Kelsey\").","- great_mass_of_water(\"Valerie\", \"Benjamin\").","plutonium_trigger(\"Valerie\", \"Jordan\", \"Kelsey\").","yolk(\"Dalton\", \"Valerie\", \"Kelsey\").","- take_people_away_from_planet_earth(\"Jordan\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["abstraction(V0, V1, V2) :- season_stew(V0, V2), - edam(V0, V1, V2).","rambler(V0, V1, V4) :- follow_published_games(V0, V3), - sleeping_on(V1, V2), - horror_movies(V3, V4), not measure(V0, V1, V2), not water(V0, V1, V3).","cirrus(V0, V1, V3) :- - groundhogs(V1), small_house_sometimes(V3), - hole(V0, V1, V4), not -brown(V1, V3, V4).","- groundhogs(V1) :- note(V1, V3, V4).","season_stew(V0, V4) :- rambler(V0, V1, V4), not shingle_oak(V0, V1, V4), not -award(V0, V1, V4), not bitter_end(V0, V1, V4), not -structure(V0, V1, V4).","small_house_sometimes(V3) :- television(V1, V3, V4), not -note(V1, V3, V4).","follow_published_games(V0, V3) :- cirrus(V0, V1, V3), not -fizz(V0, V1, V3), not -boarding_train(V0, V1, V3), not asset(V0, V1, V3), not -copulating(V0, V1, V3).","- edam(V0, V1, V2) :- carving(V0, V1, V2).","- sleeping_on(V1, V1) :- brown(V1, V3, V4), not -home(V1, V3, V4).","television(V1, V3, V4) :- brown(V1, V3, V4), not -home(V1, V3, V4).","- hole(V1, V1, V4) :- home(V1, V3, V4).","fizz(V4, V1, V3) :- home(V1, V3, V4)."],"noisy_rules":{"a":["- abstraction(V0, V1, V2) :- - follow_published_games(V0, V3), edam(V0, V1, V2).","- abstraction(V1, V1, V1) :- groundhogs(V1)."],"b":["bitter_end(V0, V1, V4) :- - rambler(V0, V1, V4), sleeping_on(V1, V2), not -hole(V0, V1, V4), not abstraction(V0, V1, V2).","- boarding_train(V0, V1, V0) :- - abstraction(V0, V1, V2)."],"c":["asset(V0, V1, V3) :- edam(V0, V1, V2), not -sleeping_on(V1, V2), - fizz(V0, V1, V3).","- award(V0, V1, V4) :- - rambler(V0, V1, V4), - cirrus(V0, V1, V3), - follow_published_games(V0, V3), edam(V0, V1, V2)."],"d":["horror_movies(V3, V4) :- - season_stew(V0, V2), - television(V1, V3, V4), not -hole(V0, V1, V4), - fizz(V0, V1, V3), fiber(V0, V1, V3).","- copulating(V0, V1, V3) :- - rambler(V0, V1, V4), - season_stew(V0, V2), - small_house_sometimes(V3), not follow_published_games(V0, V3), boy(V0, V1, V4)."],"e":["- caddy(V0, V1, V4) :- - take_people_away_from_planet_earth(V3), - erythroblast(V0, V1, V3), yolk(V0, V1, V4), not -meat(V0, V3, V4).","- mozambican(V1, V3) :- - magenta(V3), - great_mass_of_water(V1, V2), - cup_breast(V0, V2, V4), - vegetarian(V1, V2, V4), not -plutonium_trigger(V1, V3, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_7_9_14_13_15_0.5_1.0_5_2_3","seed":7,"num_facts":17,"num_rules":15,"num_related_predicates":32,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"P14(\"Brittany\", \"Sara\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- P15(\"Brittany\").","P16(\"Brittany\", \"Jennifer\").","P17.","- P18(\"Zachary\").","- P19(\"Brittany\", \"Jennifer\").","P20(\"Brittany\", \"Jennifer\").","P21(\"Brittany\", \"Jennifer\").","- P22(\"Brittany\", \"Jennifer\").","- P23(\"Zachary\").","- P24(\"Zachary\").","P25(\"Zachary\").","- P26(\"Brittany\", \"Jennifer\").","- P27(\"Brittany\", \"Zachary\").","P28(\"Sara\").","- P29(\"Brittany\", \"Zachary\").","P30(\"Zachary\", \"Sara\").","- P31(\"Sara\", \"Jennifer\")."],"noisy_facts":["P39(\"Zachary\", \"Jennifer\").","- P40(\"Sara\", \"Jennifer\").","- P36(\"Brittany\", \"Jennifer\").","P34(\"Brittany\", \"Zachary\").","- P38(\"Brittany\", \"Sara\").","- P33."],"min_fact_dicts_for_query":[],"noiseless_rules":["P14(V0, V2) :- P0(V0), - P7(V0, V1), P12(V0, V1), P13(V0, V2), - P26(V0, V3).","P0(V0) :- - P15(V0), P21(V0, V3).","- P1(V0, V3) :- - P15(V0), P21(V0, V3).","- P2(V3) :- P16(V0, V3), not P19(V0, V3), not -P20(V0, V3), not -P21(V0, V3), not P22(V0, V3).","P3(V3, V3) :- P16(V0, V3), not P19(V0, V3), not -P20(V0, V3), not -P21(V0, V3), not P22(V0, V3).","- P4(V0, V0) :- - P15(V0), not -P17.","P5(V0, V0) :- - P15(V0), not -P17.","P6(V0) :- - P15(V0), not -P17.","- P7(V1, V1) :- - P2(V1), not P8(V1).","- P8(V1) :- - P18(V1), P28(V2), - P29(V0, V1), P30(V1, V2), - P31(V2, V3).","- P9(V0, V1) :- - P18(V1), P28(V2), - P29(V0, V1), P30(V1, V2), - P31(V2, V3).","P10(V1) :- P3(V1, V3), - P4(V2, V3).","- P11(V1, V2) :- P3(V1, V3), - P4(V2, V3).","P12(V3, V1) :- P5(V1, V3), not -P10(V1), not P23(V1), not P24(V1), not -P25(V1).","P13(V0, V2) :- - P1(V0, V3), P6(V3), - P9(V0, V1), - P11(V1, V2), not P27(V0, V1)."],"noisy_rules":{"a":["- P14(V0, V2) :- P4(V2, V3), P7(V0, V1), - P13(V0, V2).","- P14(V0, V2) :- P4(V2, V3), - P10(V1), P11(V1, V2), - P13(V0, V2)."],"b":["P22(V0, V0) :- P2(V1), P11(V1, V2), - P14(V0, V2).","P29(V0, V0) :- - P14(V0, V2)."],"c":["P15(V0) :- P4(V2, V3), P9(V0, V1), not P10(V1), P11(V1, V2).","P11(V1, V0) :- P7(V0, V1)."],"d":["P32(V1, V3) :- not -P2(V1), - P5(V1, V3), not P6(V3), not -P8(V1), not P33.","P7(V0, V1) :- not -P8(V1), not -P9(V0, V1), not P12(V0, V1), P34(V0, V1)."],"e":["P35(V0, V3) :- - P36(V0, V3).","- P37(V1) :- - P38(V0, V2), P39(V1, V3), - P40(V2, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_33_9_14_14_15_0.5_1.0_5_2_3","seed":33,"num_facts":16,"num_rules":15,"num_related_predicates":31,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" switzerland(\"Angela\", \"Savannah\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["night_terror(\"Amanda\", \"Angela\").","robbery(\"Amanda\", \"Brittany\").","- garlic_bread(\"Brittany\", \"Angela\").","sheep(\"Brittany\", \"Angela\").","- heat_house(\"Brittany\", \"Angela\").","become_wet(\"Brittany\", \"Savannah\").","anger(\"Amanda\", \"Savannah\").","- maid(\"Amanda\", \"Savannah\").","joining_army(\"Brittany\", \"Savannah\").","- night(\"Amanda\", \"Angela\").","creel(\"Amanda\", \"Savannah\").","u2(\"Amanda\", \"Savannah\").","- mirror_carp(\"Angela\", \"Savannah\").","- monad(\"Brittany\", \"Savannah\").","students_to_socialize_in(\"Brittany\", \"Savannah\").","chestnut(\"Brittany\", \"Savannah\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- switzerland(V2, V3) :- sao_tome_and_principe(V2), adult(V0, V3), not benthos(V2, V3).","- push_button(V3) :- - sail(V0, V1), - boarding_train(V0, V2), anger(V0, V3), not maid(V0, V3), not -joining_army(V1, V3).","sao_tome_and_principe(V2) :- night_terror(V0, V2), - garlic_bread(V1, V2), sheep(V1, V2), - heat_house(V1, V2), become_wet(V1, V3).","ballet(V0, V1) :- night_terror(V0, V2), - garlic_bread(V1, V2), sheep(V1, V2), - heat_house(V1, V2), become_wet(V1, V3).","- makeing_music(V1, V2) :- night_terror(V0, V2), - garlic_bread(V1, V2), sheep(V1, V2), - heat_house(V1, V2), become_wet(V1, V3).","- drying_oil(V1, V3) :- night_terror(V0, V2), - garlic_bread(V1, V2), sheep(V1, V2), - heat_house(V1, V2), become_wet(V1, V3).","- universe(V1) :- ballet(V0, V1).","- play_house(V1, V0) :- ballet(V0, V1).","- mancalline(V1, V2) :- - makeing_music(V1, V2), not universe(V2), not host(V1, V2), not track(V1, V2).","- sail(V0, V1) :- ballet(V0, V1), - play_house(V2, V3), not mancalline(V1, V3).","- host(V1, V2) :- robbery(V0, V1), - night(V0, V2), creel(V0, V3), not -u2(V0, V3), not mirror_carp(V2, V3).","adult(V3, V3) :- - push_button(V3).","- benthos(V3, V3) :- - drying_oil(V1, V3), not monad(V1, V3), not -students_to_socialize_in(V1, V3), not -chestnut(V1, V3).","- boarding_train(V3, V1) :- - drying_oil(V1, V3), not monad(V1, V3), not -students_to_socialize_in(V1, V3), not -chestnut(V1, V3).","- track(V1, V3) :- - drying_oil(V1, V3), not monad(V1, V3), not -students_to_socialize_in(V1, V3), not -chestnut(V1, V3)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_66_7_8_8_8_0.5_1.0_3_2_3","seed":66,"num_facts":12,"num_rules":9,"num_related_predicates":21,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.1666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":" dougout(\"Lauren\").","target_query_in_answerset":true,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- form_of_transportation(\"Chris\").","- daughter(\"Lauren\").","fly(\"Chris\").","- sheep(\"Charles\", \"Chris\").","- steam(\"Chris\").","stove(\"Charles\", \"Chris\").","mother(\"Charles\", \"Chris\").","sister(\"Lauren\", \"Chris\").","- machiavellian(\"Lauren\", \"Chris\").","- skinnerian(\"Deborah\", \"Chris\").","flea(\"Lauren\", \"Deborah\").","ant(\"Lauren\", \"Chris\")."],"noisy_facts":[],"min_fact_dicts_for_query":["- form_of_transportation(\"Chris\").","fly(\"Chris\").","- steam(\"Chris\").","stove(\"Charles\", \"Chris\").","flea(\"Lauren\", \"Deborah\")."],"noiseless_rules":["- dougout(V1) :- boiling_water(V3), - insect(V1, V2), not clothing(V1, V3).","boiling_water(V3) :- - form_of_transportation(V3), - steam(V3), stove(V0, V3).","formalwear(V0, V3) :- - form_of_transportation(V3), - steam(V3), stove(V0, V3).","attire(V1, V1) :- formalwear(V0, V3), small_insect(V1, V3).","- relative(V0, V1) :- - daughter(V1), mother(V0, V3), not -sister(V1, V3).","- insect(V1, V2) :- fly(V3), flea(V1, V2), not -ant(V1, V3).","small_insect(V1, V3) :- fly(V3), flea(V1, V2), not -ant(V1, V3).","- clothing(V1, V0) :- attire(V1, V2), - relative(V0, V1), not -follower(V0, V1).","follower(V0, V1) :- - sheep(V0, V3), - machiavellian(V1, V3), - skinnerian(V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":5,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"negative","source_type":"related_word"}
{"id":"symtex_dict_fact_query_47_9_11_11_12_0.5_1.0_5_1_2","seed":47,"num_facts":14,"num_rules":12,"num_related_predicates":26,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.875,"num_noise_rules_per_type":2,"num_rules_with_default_negation":10,"target_query":" entering(\"Samantha\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["house.","grinding(\"Samantha\").","nest(\"Todd\").","grain(\"Samantha\").","underworld(\"Samantha\").","projectile(\"Samantha\").","fig_leaf(\"Samantha\").","window.","handle.","gate(\"Todd\").","doorknob.","squirrel(\"Todd\").","forest(\"Todd\").","stick(\"Todd\")."],"noisy_facts":[],"min_fact_dicts_for_query":["house.","grinding(\"Samantha\").","nest(\"Todd\").","grain(\"Samantha\").","underworld(\"Samantha\").","projectile(\"Samantha\").","fig_leaf(\"Samantha\").","window.","handle.","gate(\"Todd\").","doorknob.","squirrel(\"Todd\").","forest(\"Todd\").","stick(\"Todd\")."],"noiseless_rules":["entering(V1) :- entrance(V1), entryway(V1), entranceway(V1).","entrance(V1) :- door(V1), door_knobs(V1).","branches(V2) :- carrying_things(V2), trees(V2), gate(V2).","door(V2) :- house, window, handle, gate(V2), doorknob.","carrying_things(V2) :- house, window, handle, gate(V2), doorknob.","doors(V2) :- house, window, handle, gate(V2), doorknob.","atom(V1) :- grinding(V1), grain(V1), underworld(V1), projectile(V1), fig_leaf(V1).","trees(V2) :- nest(V2), squirrel(V2), forest(V2), stick(V2).","many_trees(V2) :- nest(V2), squirrel(V2), forest(V2), stick(V2).","door_knobs(V2) :- doors(V2).","entryway(V2) :- branches(V2), many_trees(V2).","entranceway(V1) :- atom(V1)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_36_9_11_11_12_0.5_1.0_3_2_3","seed":36,"num_facts":13,"num_rules":12,"num_related_predicates":25,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.375,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" break(\"Alexandra\", \"Anna\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["pond(\"Alexandra\", \"Brenda\").","vapor(\"Brenda\", \"Anna\").","aegospotami(\"Alexandra\").","seyhan(\"Alexandra\").","bed(\"Alexandra\", \"Brenda\").","chair(\"Alexandra\", \"Andrew\").","feelings(\"Alexandra\").","- pleasure_of_growing(\"Alexandra\").","- bass(\"Alexandra\", \"Brenda\").","trout(\"Alexandra\", \"Andrew\").","- ducks(\"Alexandra\", \"Andrew\").","- animals(\"Alexandra\", \"Andrew\").","escape(\"Brenda\", \"Anna\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- break(V0, V2) :- - rest(V0), - bones(V0, V1), escape(V1, V2).","sleep_in(V0) :- - hotel(V3), bed(V0, V1), not -chair(V0, V3).","- rest(V3) :- - going_to_sleep(V3), not -hotel_room(V3), not hotel(V3).","- going_to_sleep(V0) :- sleep_in(V0), not -feelings(V0), not pleasure_of_growing(V0).","tigris(V0) :- sleep_in(V0), not -feelings(V0), not pleasure_of_growing(V0).","turkey(V0) :- tigris(V0), not -aegospotami(V0), not -seyhan(V0).","hotel_room(V2) :- turkey(V2), not -higher_voice_than_tenor(V2), not -animal(V2).","- hotel(V3) :- pond(V0, V1), - bass(V0, V1), trout(V0, V3).","- fish(V0, V3) :- pond(V0, V1), - bass(V0, V1), trout(V0, V3).","higher_voice_than_tenor(V2) :- vapor(V1, V2).","- bones(V0, V3) :- - fish(V0, V3), not ducks(V0, V3), not animals(V0, V3).","animal(V0) :- - fish(V0, V3), not ducks(V0, V3), not animals(V0, V3)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_19_8_12_5_7_0.5_1.0_3_2_3","seed":19,"num_facts":7,"num_rules":13,"num_related_predicates":20,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.7142857142857144,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"plaything(\"Joshua\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["alps(\"Allison\").","edible_nut(\"Joshua\", \"Scott\").","vintner(\"Scott\", \"Alexander\").","muscle(\"Allison\", \"Alexander\").","pod(\"Scott\", \"Allison\").","bicycle(\"Scott\", \"Alexander\").","spirit(\"Joshua\", \"Alexander\")."],"noisy_facts":[],"min_fact_dicts_for_query":["alps(\"Allison\").","edible_nut(\"Joshua\", \"Scott\").","vintner(\"Scott\", \"Alexander\").","muscle(\"Allison\", \"Alexander\").","pod(\"Scott\", \"Allison\").","bicycle(\"Scott\", \"Alexander\").","spirit(\"Joshua\", \"Alexander\")."],"noiseless_rules":["plaything(V0) :- breakthrough(V0, V2), machine_translation(V0, V3), spirit(V0, V3).","siskin(V1) :- alps(V2), pod(V1, V2), bicycle(V1, V3).","synchrotron(V1, V3) :- alps(V2), pod(V1, V2), bicycle(V1, V3).","breakthrough(V1, V1) :- siskin(V1), noon(V1), interest(V1).","photosynthesis(V0, V2) :- centrum(V0, V2).","noon(V2) :- photosynthesis(V0, V2), design(V0, V2), having_pleasant_curry_meal(V0, V2).","sporting_dog(V2) :- edible_nut(V0, V1), vintner(V1, V3), muscle(V2, V3).","machine_translation(V0, V3) :- edible_nut(V0, V1), vintner(V1, V3), muscle(V2, V3).","design(V2, V2) :- sporting_dog(V2), alps(V2).","vegetarians(V2) :- sporting_dog(V2), alps(V2).","interest(V1) :- synchrotron(V1, V3), machine_translation(V0, V3), vegetarians(V1).","centrum(V0, V1) :- synchrotron(V1, V3), machine_translation(V0, V3), vegetarians(V1).","having_pleasant_curry_meal(V0, V1) :- synchrotron(V1, V3), machine_translation(V0, V3), vegetarians(V1)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":true,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_88_8_11_2_5_0.5_1.0_3_2_3","seed":88,"num_facts":5,"num_rules":12,"num_related_predicates":17,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.5714285714285716,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" cylinder(\"James\", \"Jody\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["record(\"James\", \"Amy\").","opening_business(\"James\", \"Amy\").","stew(\"Amy\").","chick(\"Amy\", \"Shelly\").","nest(\"Amy\", \"Shelly\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- cylinder(V0, V3) :- - liquid_food(V2), bird(V0, V2), comb(V0, V3).","- bowl(V0, V2) :- soup(V1), - plate(V0, V2), not hen(V1, V2).","soup(V1) :- record(V0, V1).","- pea_flour(V0) :- record(V0, V1).","- plate(V0, V0) :- rooster(V0, V1), not -record(V0, V1), not -opening_business(V0, V1).","- liquid_food(V1) :- soup(V1), not -stew(V1).","- chicken(V1, V1) :- soup(V1), not -stew(V1).","bird(V2, V2) :- - chicken(V1, V2), not -chick(V1, V2), not -nest(V1, V2).","- hen(V1, V2) :- - chicken(V1, V2), not -chick(V1, V2), not -nest(V1, V2).","rooster(V2, V1) :- - chicken(V1, V2), not -chick(V1, V2), not -nest(V1, V2).","- meal(V0) :- - pea_flour(V0).","comb(V0, V0) :- - bowl(V0, V2), rooster(V0, V1), not meal(V1)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_38_10_11_8_11_0.5_1.0_3_3_4","seed":38,"num_facts":14,"num_rules":12,"num_related_predicates":26,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":" bear_cub(\"Carolyn\", \"Diane\", \"Daniel\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["asiatic_black_bear(\"Michael\", \"Daniel\").","- cub(\"Wanda\", \"Daniel\").","horse(\"Michael\", \"Daniel\").","reynard(\"Diane\", \"Daniel\").","- kit_fox(\"Diane\", \"Daniel\").","- beige(\"Michael\", \"Daniel\").","cheque(\"Carolyn\", \"Wanda\", \"Daniel\").","brownish_yellow(\"Carolyn\", \"Diane\", \"Daniel\").","alaskan_brown_bear(\"Michael\").","baby(\"Michael\", \"Diane\").","fawn(\"Diane\", \"Daniel\").","sussex_spaniel(\"Diane\", \"Daniel\").","- cocker_spaniel(\"Diane\", \"Daniel\").","- saddle(\"Michael\", \"Daniel\")."],"noisy_facts":["sister(\"Michael\", \"Diane\", \"Daniel\").","supplying_body_with_vitamins(\"Michael\", \"Diane\", \"Daniel\").","- paper(\"Wanda\", \"Daniel\").","- hold_cream(\"Daniel\").","musteline_mammal(\"Carolyn\", \"Michael\").","daughter(\"Wanda\", \"Michael\", \"Diane\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- bear_cub(V0, V3, V4) :- - young_mammal(V2, V4), brown_bear(V0, V1, V4), - lion_cub(V1, V2, V3).","bear(V2, V4) :- asiatic_black_bear(V2, V4).","syrian_bear(V2) :- - canine(V0, V2), riding_horses(V1, V3), - spaniel(V1, V2, V4).","- young_mammal(V2, V4) :- - cub(V1, V4), baby(V2, V3), not -fawn(V3, V4).","brown_bear(V2, V2, V2) :- syrian_bear(V2), not -grizzly(V2), not -alaskan_brown_bear(V2).","- canine(V2, V2) :- bear(V2, V4), not riding_animal(V2, V4), not fox(V2, V4).","- lion_cub(V4, V2, V2) :- bear(V2, V4), not -horse(V2, V4), not saddle(V2, V4).","riding_horses(V2, V4) :- bear(V2, V4), not -horse(V2, V4), not saddle(V2, V4).","- riding_animal(V2, V4) :- bear(V2, V4), not -horse(V2, V4), not saddle(V2, V4).","- fox(V4, V4) :- reynard(V3, V4), not kit_fox(V3, V4), not -fawn(V3, V4).","- spaniel(V4, V3, V4) :- - kit_fox(V3, V4), not -sussex_spaniel(V3, V4), not cocker_spaniel(V3, V4).","grizzly(V2) :- - beige(V2, V4), cheque(V0, V1, V4), brownish_yellow(V0, V3, V4)."],"noisy_rules":{"a":["bear_cub(V2, V3, V3) :- lion_cub(V1, V2, V3).","bear_cub(V0, V2, V4) :- young_mammal(V2, V4), canine(V0, V2), not -riding_animal(V2, V4)."],"b":["- bear(V1, V4) :- - brown_bear(V0, V1, V4), bear_cub(V0, V3, V4).","cub(V1, V4) :- lion_cub(V1, V2, V3), - grizzly(V2), bear_cub(V0, V3, V4)."],"c":["- cheque(V0, V1, V4) :- - syrian_bear(V2), - brown_bear(V0, V1, V4), not -spaniel(V1, V2, V4).","- grizzly(V2) :- canine(V0, V2)."],"d":["- carnivore(V0, V4, V4) :- - bear(V2, V4), canine(V0, V2), musteline_mammal(V0, V2).","- reynard(V2, V2) :- - syrian_bear(V2)."],"e":["brother(V2, V4) :- daughter(V1, V2, V3), sister(V2, V3, V4).","- writing_material(V1, V3, V4) :- - hold_cream(V4), - paper(V1, V4), supplying_body_with_vitamins(V2, V3, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_94_9_13_10_11_0.5_1.0_3_2_3","seed":94,"num_facts":12,"num_rules":14,"num_related_predicates":26,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.5,"num_noise_rules_per_type":2,"num_rules_with_default_negation":8,"target_query":"engine(\"Christina\", \"Cassandra\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- giving_gift(\"Richard\").","- airfoil(\"Madison\", \"Cassandra\").","- instrument(\"Madison\", \"Cassandra\").","power(\"Madison\", \"Cassandra\").","- aquatic_bird(\"Richard\", \"Christina\").","nest(\"Christina\").","squirrel(\"Christina\").","- carrot(\"Richard\", \"Christina\").","bark(\"Richard\", \"Christina\").","- buying_presents(\"Richard\", \"Christina\").","- ornament(\"Christina\", \"Cassandra\").","- latex(\"Richard\", \"Christina\")."],"noisy_facts":["- bedspread(\"Christina\", \"Cassandra\").","prison_room(\"Madison\", \"Cassandra\").","- P31(\"Richard\", \"Madison\").","- use_trampoline(\"Richard\", \"Madison\").","- seabird(\"Christina\").","loop.","soup(\"Christina\").","- potpie(\"Richard\", \"Christina\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["engine(V1, V3) :- currency(V1), heat_engine(V1, V3), - auxiliary_engine(V2, V3).","christmas(V1) :- - giving_gift(V0), - buying_presents(V0, V1), - ornament(V1, V3).","aircraft_engine(V0, V1) :- - giving_gift(V0), - buying_presents(V0, V1), - ornament(V1, V3).","- celebrating_birthday(V0, V1) :- - giving_gift(V0), - buying_presents(V0, V1), - ornament(V1, V3).","- decorating(V0, V3) :- - giving_gift(V0), - buying_presents(V0, V1), - ornament(V1, V3).","- prevalence(V1, V1) :- currency(V1), not -gearing(V1), not root(V1).","currency(V1) :- christmas(V1), not -nest(V1), not -squirrel(V1).","tree(V1, V1) :- christmas(V1), not -nest(V1), not -squirrel(V1).","- device(V2, V3) :- - airfoil(V2, V3), not instrument(V2, V3), not -power(V2, V3).","heat_engine(V1, V3) :- aircraft_engine(V0, V1), - prevalence(V1, V2), - device(V2, V3).","gearing(V1) :- - celebrating_birthday(V0, V1), not latex(V0, V1).","- moo(V0, V1) :- - celebrating_birthday(V0, V1), not latex(V0, V1).","- root(V1) :- - moo(V0, V1), not carrot(V0, V1), not -bark(V0, V1).","- auxiliary_engine(V1, V3) :- - decorating(V0, V3), tree(V0, V1), not aquatic_bird(V0, V1)."],"noisy_rules":{"a":["- engine(V1, V1) :- - gearing(V1).","- engine(V1, V0) :- - aircraft_engine(V0, V1), not currency(V1)."],"b":["instrument(V1, V3) :- - engine(V1, V3).","- power(V0, V3) :- moo(V0, V1), not -root(V1), - engine(V1, V3)."],"c":["- heat_engine(V1, V3) :- celebrating_birthday(V0, V1), auxiliary_engine(V2, V3).","- heat_engine(V1, V3) :- celebrating_birthday(V0, V1), decorating(V0, V3), device(V2, V3)."],"d":["auxiliary_engine(V1, V1) :- not gearing(V1), root(V1), loop.","aquatic_bird(V1, V1) :- - currency(V1), not seabird(V1)."],"e":["dish(V0, V1) :- soup(V1), - potpie(V0, V1), - P31(V0, V2).","- bedclothes(V0, V1) :- - use_trampoline(V0, V2), - bedspread(V1, V3), prison_room(V2, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_39_10_12_12_13_0.5_1.0_3_2_3","seed":39,"num_facts":16,"num_rules":13,"num_related_predicates":29,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.2222222222222223,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" P12(\"Heather\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P13(\"Joseph\").","P14(\"Mary\").","- P15.","- P16(\"Mary\").","- P17(\"Mary\").","P18(\"Mary\", \"Heather\").","P19(\"Mary\").","P20(\"Mary\", \"Joseph\").","P21(\"Mary\", \"Heather\").","P22(\"Mary\", \"Daniel\").","P23(\"Mary\", \"Daniel\").","- P24(\"Mary\", \"Heather\").","- P25(\"Mary\", \"Heather\").","- P26(\"Joseph\", \"Heather\").","P27(\"Joseph\", \"Heather\").","P28(\"Joseph\", \"Heather\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- P12(V3) :- - P2(V3), P4(V0, V2), not P25(V0, V3).","- P0(V0, V3) :- - P3(V2), - P6(V0, V2), - P24(V0, V3).","P1(V0) :- - P3(V2), - P6(V0, V2), - P24(V0, V3).","- P2(V3) :- - P13(V2), P27(V2, V3), not -P28(V2, V3).","- P3(V2) :- - P13(V2), P27(V2, V3), not -P28(V2, V3).","P4(V0, V3) :- - P0(V0, V3), not P8(V0, V3), not -P10(V0, V3).","- P5(V2, V3) :- P14(V0), P20(V0, V2), P21(V0, V3).","- P6(V2, V2) :- - P13(V2), not P15.","- P7(V2, V2) :- - P13(V2), not P15.","- P8(V2, V3) :- - P5(V2, V3), not -P9(V2, V3), not P26(V2, V3).","P9(V0, V0) :- P1(V0), not -P11(V0), not -P19(V0).","P10(V0, V1) :- - P7(V0, V1), not -P22(V0, V1), not -P23(V0, V1).","P11(V0) :- - P16(V0), - P17(V0), P18(V0, V3)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_81_10_14_12_12_0.5_1.0_5_3_4","seed":81,"num_facts":15,"num_rules":15,"num_related_predicates":30,"max_depth_of_rule_graph":6,"average_depth_of_rule_graph":3.6666666666666665,"num_noise_rules_per_type":2,"num_rules_with_default_negation":11,"target_query":" eurasia(\"Sarah\", \"Patrick\", \"Luke\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- baseball(\"Sarah\", \"Patrick\").","sleep(\"Sarah\", \"Patrick\", \"Gary\").","- egg(\"Sarah\", \"Luke\", \"Sara\").","- kyrgyzstan(\"Patrick\", \"Sara\").","nepal(\"Sarah\", \"Patrick\", \"Gary\").","yemen(\"Sarah\", \"Patrick\", \"Luke\").","- kuwait(\"Sarah\", \"Luke\", \"Sara\").","young(\"Sarah\", \"Patrick\").","canary(\"Sarah\", \"Patrick\").","- mouth(\"Sarah\", \"Patrick\").","- voice(\"Sarah\", \"Patrick\").","- noctuid_moth(\"Patrick\", \"Gary\", \"Luke\").","- toy(\"Sarah\", \"Gary\", \"Sara\").","bowling(\"Sarah\", \"Luke\", \"Sara\").","- soccer(\"Patrick\", \"Luke\", \"Sara\")."],"noisy_facts":["underground_animal(\"Gary\", \"Sara\").","good_nutrition(\"Sarah\", \"Patrick\").","- acorn(\"Gary\", \"Luke\").","- seed(\"Luke\", \"Sara\").","- crafts(\"Sarah\", \"Gary\").","- juniper_berry(\"Patrick\", \"Gary\", \"Sara\").","limited_company(\"Sarah\", \"Luke\").","- changing_appearance(\"Gary\").","- prickly_edged_leaf(\"Gary\", \"Luke\", \"Sara\").","edible_fruit(\"Gary\", \"Sara\").","flight_line(\"Sarah\").","pod(\"Sarah\", \"Patrick\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["- eurasia(V0, V1, V3) :- - asia(V0, V3), child(V1, V4), - singing(V2, V3), not -activity(V0, V1, V2), not noctuid_moth(V1, V2, V3).","- asia(V0, V3) :- - bangladesh(V1, V2), - kyrgyzstan(V1, V4), nepal(V0, V1, V2), yemen(V0, V1, V3), not kuwait(V0, V3, V4).","- bangladesh(V1, V2) :- - game(V1, V4), little(V0, V1, V2), not hipline(V1, V2, V4).","- chick(V0, V1) :- small(V0, V3, V4), baby(V1, V3, V4).","child(V1, V4) :- - baseball(V0, V1), - toy(V0, V2, V4), bowling(V0, V3, V4), not soccer(V1, V3, V4).","- game(V1, V4) :- - baseball(V0, V1), - toy(V0, V2, V4), bowling(V0, V3, V4), not soccer(V1, V3, V4).","children(V0, V3, V4) :- - baseball(V0, V1), - toy(V0, V2, V4), bowling(V0, V3, V4), not soccer(V1, V3, V4).","entertainment(V2, V4) :- - baseball(V0, V1), - toy(V0, V2, V4), bowling(V0, V3, V4), not soccer(V1, V3, V4).","little(V0, V4, V4) :- children(V0, V3, V4), not -chicken(V0, V3, V4).","small(V0, V3, V4) :- children(V0, V3, V4), not -chicken(V0, V3, V4).","- singing(V0, V0) :- - chick(V0, V1), not -young(V0, V1), not -canary(V0, V1), not mouth(V0, V1), not voice(V0, V1).","- hipline(V1, V1, V0) :- - chick(V0, V1), not -young(V0, V1), not -canary(V0, V1), not mouth(V0, V1), not voice(V0, V1).","activity(V0, V1, V2) :- sleep(V0, V1, V2).","chicken(V0, V3, V4) :- - egg(V0, V3, V4).","baby(V4, V2, V4) :- entertainment(V2, V4)."],"noisy_rules":{"a":["eurasia(V0, V1, V3) :- not children(V0, V3, V4), - little(V0, V1, V2), - small(V0, V3, V4), not -hipline(V1, V2, V4), not baby(V1, V3, V4).","eurasia(V0, V1, V3) :- not -asia(V0, V3), - child(V1, V4), not -game(V1, V4), not children(V0, V3, V4), - chicken(V0, V3, V4)."],"b":["- children(V0, V3, V4) :- - entertainment(V2, V4), not chicken(V0, V3, V4), eurasia(V0, V1, V3).","kyrgyzstan(V1, V1) :- eurasia(V0, V1, V3)."],"c":["- activity(V0, V1, V2) :- game(V1, V4), singing(V2, V3), - chicken(V0, V3, V4).","- young(V0, V1) :- chick(V0, V1), - child(V1, V4), not -game(V1, V4), - baby(V1, V3, V4)."],"d":["voice(V2, V2) :- - entertainment(V2, V4), not -underground_animal(V2, V4).","- company(V0, V3) :- asia(V0, V3), not -limited_company(V0, V3)."],"e":["fruit(V0, V1, V4) :- pod(V0, V1), - acorn(V2, V3), edible_fruit(V2, V4), not seed(V3, V4), - juniper_berry(V1, V2, V4).","fun_artistic_activities(V0, V1, V2) :- flight_line(V0), - changing_appearance(V2), good_nutrition(V0, V1), - crafts(V0, V2), - prickly_edged_leaf(V2, V3, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_86_8_8_6_6_0.5_1.0_3_1_2","seed":86,"num_facts":10,"num_rules":9,"num_related_predicates":19,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.8571428571428572,"num_noise_rules_per_type":2,"num_rules_with_default_negation":7,"target_query":" visual(\"Michelle\").","target_query_in_answerset":false,"max_ary_for_predicates":1,"max_idx_for_variables":2,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["body_covering(\"Kevin\").","musteline_mammal(\"Kevin\").","update(\"Kevin\").","banks(\"Michelle\").","- mental_health(\"Michelle\").","wormian_bone(\"Michelle\").","- shell(\"Kevin\").","- P16(\"Kevin\").","can.","- white(\"Kevin\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- visual(V0) :- - indefinite_quantity(V0), not -natural_object(V0), not -plural_form_of_bank(V0).","- covering(V2) :- body_covering(V2), not shell(V2), not P16(V2).","- indefinite_quantity(V0) :- containerful(V0), not mental_health(V0), not -wormian_bone(V0).","carpet(V2) :- musteline_mammal(V2), not white(V2).","- bucket(V2) :- musteline_mammal(V2), not white(V2).","- dish(V2) :- update(V2).","natural_object(V2) :- - covering(V2), not -carpet(V2).","containerful(V2) :- - bucket(V2), not dish(V2), not -can.","plural_form_of_bank(V0) :- banks(V0)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_19_6_8_8_9_0.5_1.0_3_3_4","seed":19,"num_facts":9,"num_rules":9,"num_related_predicates":18,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":3.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":5,"target_query":"P8(\"Brian\", \"David\", \"Carol\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P9(\"Brian\", \"John\").","- P10(\"Craig\", \"Brian\").","- P11(\"David\", \"Carol\").","P12(\"Craig\", \"Carol\", \"John\").","P13(\"Craig\", \"Brian\", \"John\").","P14(\"David\", \"Carol\", \"John\").","- P15(\"Carol\").","- P16(\"Carol\").","- P17(\"Craig\", \"Brian\", \"John\")."],"noisy_facts":["P20(\"Craig\", \"Brian\").","P24(\"Craig\", \"Brian\", \"John\").","- P18(\"Carol\").","P22(\"Craig\", \"Brian\", \"Carol\").","- P26(\"Brian\", \"Carol\").","- P21(\"Brian\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["P8(V1, V2, V3) :- P2(V0, V1, V4), P13(V0, V1, V4), P14(V2, V3, V4).","- P0(V0, V1) :- - P9(V1, V4), - P11(V2, V3), P12(V0, V3, V4).","- P1(V0, V1, V4) :- - P9(V1, V4), - P11(V2, V3), P12(V0, V3, V4).","P2(V0, V1, V4) :- P3(V0, V1, V2), P5(V0, V1, V3), P6(V2, V3, V4).","P3(V0, V1, V0) :- - P0(V0, V1), not P7(V0, V1), not P10(V0, V1).","- P4(V0) :- - P0(V0, V1), not P7(V0, V1), not P10(V0, V1).","P5(V3, V3, V3) :- - P4(V3), not P15(V3), not P16(V3).","P6(V0, V4, V4) :- - P1(V0, V1, V4), not P9(V1, V4), not P17(V0, V1, V4).","- P7(V0, V1) :- - P1(V0, V1, V4), not P9(V1, V4), not P17(V0, V1, V4)."],"noisy_rules":{"a":["- P8(V4, V2, V3) :- - P6(V2, V3, V4).","- P8(V1, V2, V3) :- P4(V3), - P5(V0, V1, V3), - P6(V2, V3, V4)."],"b":["P1(V2, V1, V3) :- - P8(V1, V2, V3).","P11(V2, V3) :- - P8(V1, V2, V3)."],"c":["- P2(V0, V1, V1) :- P0(V0, V1), P7(V0, V1).","P0(V0, V1) :- - P5(V0, V1, V3), - P6(V2, V3, V4), not -P7(V0, V1)."],"d":["P10(V3, V3) :- P4(V3), not P18(V3).","P19(V0, V1, V1) :- not -P0(V0, V1), P20(V0, V1)."],"e":["- P23(V0, V3, V4) :- - P21(V1), P22(V0, V1, V3), P24(V0, V1, V4).","P25(V3) :- - P26(V1, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_61_9_13_13_15_0.5_1.0_5_3_4","seed":61,"num_facts":15,"num_rules":14,"num_related_predicates":29,"max_depth_of_rule_graph":5,"average_depth_of_rule_graph":2.625,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":" cabbage(\"Diane\", \"Amy\", \"Nathan\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- piece(\"Katelyn\").","hardtop(\"Amy\", \"Nathan\", \"Katelyn\").","eating_things(\"Amy\", \"Nathan\", \"Dustin\").","tree_cotton(\"Dustin\").","- trampoline(\"Katelyn\", \"Dustin\").","quandong_nut(\"Diane\", \"Amy\", \"Katelyn\").","shovel(\"Nathan\", \"Katelyn\", \"Dustin\").","horned_puffin(\"Diane\", \"Dustin\").","- cream_cheese(\"Diane\", \"Dustin\").","steamer(\"Diane\", \"Dustin\").","mattress_cover(\"Diane\", \"Dustin\").","plaster(\"Dustin\").","- black_gold(\"Dustin\").","- cornea(\"Dustin\").","- italy(\"Dustin\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["- cabbage(V0, V1, V2) :- bulldog_ant(V3), restoration(V0, V1, V2), - golden_retriever(V0, V1, V4), not -cash_crop(V0, V3, V4), not -eating_things(V1, V2, V4).","bulldog_ant(V0) :- restoration(V0, V1, V2), not barge(V0, V1, V2), not -dardanelles(V0, V1, V2).","- giving_information(V1, V2, V3) :- - piece(V3), tree_cotton(V4), - trampoline(V3, V4), quandong_nut(V0, V1, V3), shovel(V2, V3, V4).","sugar_candy(V4) :- - piece(V3), tree_cotton(V4), - trampoline(V3, V4), quandong_nut(V0, V1, V3), shovel(V2, V3, V4).","virginia_deer(V1, V3) :- - piece(V3), tree_cotton(V4), - trampoline(V3, V4), quandong_nut(V0, V1, V3), shovel(V2, V3, V4).","restoration(V2, V1, V2) :- - giving_information(V1, V2, V3), not -hardtop(V1, V2, V3).","lunar_crater(V1, V2, V3) :- - giving_information(V1, V2, V3), not -hardtop(V1, V2, V3).","- namibian(V2, V2) :- - giving_information(V1, V2, V3), not -hardtop(V1, V2, V3).","- barge(V2, V1, V2) :- - giving_information(V1, V2, V3), not -lunar_crater(V1, V2, V3), not -clerical_collar(V1, V2, V3).","clerical_collar(V1, V2, V3) :- - many_windows(V1, V2, V3).","- golden_retriever(V4, V4, V4) :- sugar_candy(V4), not -plaster(V4), not black_gold(V4), not cornea(V4), not italy(V4).","dardanelles(V4, V4, V4) :- sugar_candy(V4), not -plaster(V4), not black_gold(V4), not cornea(V4), not italy(V4).","cash_crop(V0, V0, V4) :- - namibian(V0, V4), not -horned_puffin(V0, V4), not cream_cheese(V0, V4), not -steamer(V0, V4), not -mattress_cover(V0, V4).","- many_windows(V1, V1, V3) :- virginia_deer(V1, V3)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_81_6_6_6_7_0.5_1.0_3_3_4","seed":81,"num_facts":8,"num_rules":7,"num_related_predicates":15,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":1.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"body(\"Donald\", \"Jeffrey\", \"David\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["duck(\"Donald\", \"David\", \"Todd\").","eye(\"Adrian\", \"David\", \"Todd\").","- bird(\"Donald\", \"Jeffrey\", \"Adrian\").","- chicken(\"Donald\", \"Jeffrey\", \"Adrian\").","find_outside(\"Jeffrey\", \"Adrian\", \"Todd\").","hair(\"Adrian\", \"David\", \"Todd\").","bodily_fluid(\"Jeffrey\", \"Adrian\", \"Todd\").","- ducks(\"Jeffrey\", \"David\", \"Todd\")."],"noisy_facts":["money_order(\"Donald\", \"Jeffrey\", \"Adrian\").","quack(\"Jeffrey\", \"David\", \"Todd\").","check(\"Donald\", \"Adrian\", \"Todd\").","seat(\"Donald\", \"Todd\").","nest(\"Jeffrey\", \"Todd\").","- home(\"David\", \"Todd\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["body(V0, V1, V3) :- - geese(V3, V4), - feet(V0, V3, V4), - lake(V1, V2, V4).","- geese(V3, V4) :- orb(V1, V3, V4).","- feet(V0, V3, V4) :- duck(V0, V3, V4), bodily_fluid(V1, V2, V4), not ducks(V1, V3, V4).","- lake(V1, V2, V4) :- animal(V1, V4), find_outside(V1, V2, V4), hair(V2, V3, V4).","orb(V2, V3, V4) :- eye(V2, V3, V4), not -hair(V2, V3, V4).","- head(V3, V4, V2) :- eye(V2, V3, V4), not -hair(V2, V3, V4).","animal(V1, V2) :- - head(V0, V1, V2), not bird(V0, V1, V2), not chicken(V0, V1, V2)."],"noisy_rules":{"a":["- body(V0, V1, V3) :- feet(V0, V3, V4), head(V0, V1, V2), not animal(V1, V4).","- body(V0, V1, V3) :- lake(V1, V2, V4), - orb(V1, V3, V4), head(V0, V1, V2)."],"b":["chicken(V0, V1, V1) :- - orb(V1, V3, V4), - body(V0, V1, V3).","chicken(V0, V1, V1) :- - body(V0, V1, V3)."],"c":["lake(V4, V4, V4) :- feet(V0, V3, V4).","- animal(V1, V4) :- feet(V0, V3, V4), - orb(V1, V3, V4), head(V0, V1, V2)."],"d":["lake(V3, V4, V4) :- geese(V3, V4).","ducks(V1, V3, V4) :- geese(V3, V4), not orb(V1, V3, V4), quack(V1, V3, V4)."],"e":["- place(V3, V4) :- seat(V0, V4), nest(V1, V4), - home(V3, V4).","- draft(V0, V1, V4) :- money_order(V0, V1, V2), check(V0, V2, V4)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":false,"label":"unknown","source_type":"related_word"}
{"id":"symtex_dict_fact_query_80_6_6_6_7_0.5_1.0_3_3_4","seed":80,"num_facts":8,"num_rules":7,"num_related_predicates":15,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.6,"num_noise_rules_per_type":2,"num_rules_with_default_negation":4,"target_query":"P6(\"Gary\", \"Amy\").","target_query_in_answerset":false,"max_ary_for_predicates":3,"max_idx_for_variables":4,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- P7(\"Gary\", \"Todd\", \"Debra\").","P8(\"Doris\", \"Debra\").","- P9(\"Todd\", \"Doris\", \"Amy\").","P10(\"Gary\", \"Todd\", \"Amy\").","- P11(\"Gary\", \"Doris\", \"Debra\").","P12(\"Todd\", \"Doris\", \"Amy\").","P13(\"Gary\", \"Todd\", \"Debra\").","P14(\"Gary\", \"Todd\", \"Debra\")."],"noisy_facts":["P17(\"Gary\", \"Debra\", \"Amy\").","- P23(\"Gary\", \"Todd\", \"Debra\").","P15(\"Gary\", \"Debra\", \"Amy\").","P22(\"Todd\", \"Amy\").","P20(\"Todd\", \"Doris\", \"Amy\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["P6(V0, V4) :- P0(V1, V4), - P7(V0, V1, V3).","P0(V1, V4) :- - P1(V2, V3), - P4(V1, V2, V4), not -P12(V1, V2, V4).","- P1(V2, V3) :- P2(V1, V2), - P5(V0, V3, V4), not P9(V1, V2, V4).","P2(V1, V1) :- - P7(V0, V1, V3), not -P13(V0, V1, V3), not -P14(V0, V1, V3).","P3(V1, V4) :- P8(V2, V3), P10(V0, V1, V4), not P11(V0, V2, V3).","- P4(V1, V4, V4) :- P3(V1, V4).","- P5(V1, V4, V4) :- P3(V1, V4)."],"noisy_rules":{"a":["- P6(V0, V4) :- - P0(V1, V4), P1(V2, V3), P5(V0, V3, V4).","- P6(V4, V4) :- not P3(V1, V4), P4(V1, V2, V4)."],"b":["P7(V0, V4, V0) :- - P6(V0, V4).","P4(V0, V2, V4) :- P1(V2, V3), - P6(V0, V4)."],"c":["- P12(V3, V0, V4) :- P5(V0, V3, V4).","P7(V1, V1, V4) :- P4(V1, V2, V4)."],"d":["- P16(V0, V4) :- P5(V0, V3, V4), P15(V0, V3, V4), not -P17(V0, V3, V4).","P18(V0, V1, V4) :- - P2(V1, V2), P5(V0, V3, V4)."],"e":["- P19(V1, V2, V4) :- P20(V1, V2, V4).","- P21(V1, V4) :- P22(V1, V4), - P23(V0, V1, V3)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"P_style"}
{"id":"symtex_dict_fact_query_55_10_12_10_10_0.5_1.0_3_2_3","seed":55,"num_facts":13,"num_rules":13,"num_related_predicates":26,"max_depth_of_rule_graph":4,"average_depth_of_rule_graph":2.3333333333333335,"num_noise_rules_per_type":2,"num_rules_with_default_negation":9,"target_query":"twelve(\"Robert\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":3,"asp_program_dlv2":{"noiseless_facts":["- board_passengers(\"Susan\").","walls(\"Robert\").","workshop(\"Adrian\", \"Susan\").","- pilot_boat(\"Sarah\", \"Adrian\").","- slinger_ring(\"Robert\", \"Susan\").","double_salt(\"Sarah\", \"Adrian\").","end_organ(\"Robert\", \"Adrian\").","teaching_other_people(\"Sarah\", \"Susan\").","hooves(\"Adrian\", \"Susan\").","good_way_to_learn(\"Robert\").","quarter(\"Robert\").","- tie_knots(\"Sarah\", \"Robert\").","- macintosh(\"Sarah\", \"Robert\")."],"noisy_facts":["- stylist(\"Sarah\", \"Robert\").","partridge(\"Adrian\").","- negative(\"Adrian\", \"Susan\").","past(\"Adrian\").","- turbot(\"Susan\")."],"min_fact_dicts_for_query":[],"noiseless_rules":["twelve(V1) :- - guinea_worm(V1), pooping(V1, V3), not slinger_ring(V1, V3).","profession(V2) :- - board_passengers(V3), teaching_other_people(V0, V3), hooves(V2, V3).","sony(V1) :- walls(V1), double_salt(V0, V2), not -end_organ(V1, V2).","- bahai(V2) :- walls(V1), double_salt(V0, V2), not -end_organ(V1, V2).","candy(V0, V1) :- walls(V1), double_salt(V0, V2), not -end_organ(V1, V2).","- water_body(V1, V1) :- sony(V1), not -good_way_to_learn(V1), not -quarter(V1).","- winter_holiday(V1, V1) :- sony(V1), not -good_way_to_learn(V1), not -quarter(V1).","lover(V0, V0) :- - bahai(V2), - water_body(V0, V2), not pilot_boat(V0, V2).","- spread_oleo_on_toast(V1, V3) :- - pack_riding(V1, V2), - cough(V2, V3).","- pack_riding(V1, V0) :- candy(V0, V1), not tie_knots(V0, V1), not macintosh(V0, V1).","- guinea_worm(V2) :- profession(V2).","pooping(V1, V3) :- - winter_holiday(V1, V2), lover(V0, V3), not spread_oleo_on_toast(V1, V3).","- cough(V2, V3) :- workshop(V2, V3)."],"noisy_rules":{"a":["- twelve(V1) :- - candy(V0, V1).","- twelve(V3) :- cough(V2, V3)."],"b":["cough(V1, V1) :- - twelve(V1).","slinger_ring(V1, V3) :- - lover(V0, V3), - twelve(V1)."],"c":["pack_riding(V1, V2) :- - profession(V2), - candy(V0, V1), not -guinea_worm(V1).","spread_oleo_on_toast(V1, V1) :- - sony(V1), not -guinea_worm(V1)."],"d":["- walls(V1) :- winter_holiday(V1, V2).","- double_salt(V2, V2) :- bahai(V2), not -partridge(V2)."],"e":["cut(V3) :- past(V2), - turbot(V3), not negative(V2, V3).","- bedroom(V0, V1) :- - stylist(V0, V1)."]}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":false,"is_stratified":false,"label":"unknown","source_type":"random_word"}
{"id":"symtex_dict_fact_query_30_5_7_2_4_0.5_1.0_5_2_3","seed":30,"num_facts":4,"num_rules":8,"num_related_predicates":12,"max_depth_of_rule_graph":3,"average_depth_of_rule_graph":2.0,"num_noise_rules_per_type":2,"num_rules_with_default_negation":6,"target_query":"sweet_lemon(\"Lisa\", \"Joy\").","target_query_in_answerset":false,"max_ary_for_predicates":2,"max_idx_for_variables":3,"max_predicates_per_rule":5,"asp_program_dlv2":{"noiseless_facts":["- chessman(\"Lisa\", \"Maurice\").","- egyptian_deity(\"Lisa\", \"Maurice\").","- computer_to_crash(\"Lisa\", \"Maurice\").","control(\"Lisa\", \"Maurice\")."],"noisy_facts":[],"min_fact_dicts_for_query":[],"noiseless_rules":["sweet_lemon(V1, V3) :- - lumberjack(V1, V2), hanging_door(V1, V2), bid(V1, V3), not fat(V1, V3), not -getting_share_of_food(V1, V3).","- lumberjack(V1, V2) :- - chessman(V1, V2).","hanging_door(V1, V2) :- - chessman(V1, V2).","bid(V1, V2) :- hanging_door(V1, V2), not computer_to_crash(V1, V2).","authoritarian_regime(V2, V1) :- hanging_door(V1, V2), not computer_to_crash(V1, V2).","- fat(V1, V2) :- - egyptian_deity(V1, V2), not computer_to_crash(V1, V2), not -control(V1, V2).","- pelagic_bird(V2, V2) :- - egyptian_deity(V1, V2), not computer_to_crash(V1, V2), not -control(V1, V2).","getting_share_of_food(V2, V3) :- authoritarian_regime(V2, V3), not pelagic_bird(V2, V3)."],"noisy_rules":{}},"num_min_facts_for_query":0,"is_positive":false,"is_tight":true,"is_stratified":true,"label":"unknown","source_type":"random_word"}
